function _mergeNamespaces(n, m) {
    m.forEach(function (e) {
        e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {
            if (k !== 'default' && !(k in n)) {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    });
    return Object.freeze(n);
}

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var f = n.default;
	if (typeof f == "function") {
		var a = function a () {
			if (this instanceof a) {
				var args = [null];
				args.push.apply(args, arguments);
				var Ctor = Function.bind.apply(f, args);
				return new Ctor();
			}
			return f.apply(this, arguments);
		};
		a.prototype = f.prototype;
  } else a = {};
  Object.defineProperty(a, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

var clientsdkClientcore_jsExports = {};
var clientsdkClientcore_js = {
  get exports(){ return clientsdkClientcore_jsExports; },
  set exports(v){ clientsdkClientcore_jsExports = v; },
};

var kotlinKotlinStdlibExports = {};
var kotlinKotlinStdlib = {
  get exports(){ return kotlinKotlinStdlibExports; },
  set exports(v){ kotlinKotlinStdlibExports = v; },
};

var hasRequiredKotlinKotlinStdlib;

function requireKotlinKotlinStdlib () {
	if (hasRequiredKotlinKotlinStdlib) return kotlinKotlinStdlibExports;
	hasRequiredKotlinKotlinStdlib = 1;
	(function (module, exports) {
		//region block: polyfills
		(function () {
		  if (typeof globalThis === 'object')
		    return;
		  Object.defineProperty(Object.prototype, '__magic__', {get: function () {
		    return this;
		  }, configurable: true});
		  __magic__.globalThis = __magic__;
		  delete Object.prototype.__magic__;
		}());
		if (typeof Math.imul === 'undefined') {
		  Math.imul = function imul(a, b) {
		    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
		  };
		}
		if (typeof ArrayBuffer.isView === 'undefined') {
		  ArrayBuffer.isView = function (a) {
		    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
		  };
		}
		if (typeof Array.prototype.fill === 'undefined') {
		  // Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill#Polyfill
		  Object.defineProperty(Array.prototype, 'fill', {value: function (value) {
		    // Steps 1-2.
		    if (this == null) {
		      throw new TypeError('this is null or not defined');
		    }
		    var O = Object(this); // Steps 3-5.
		    var len = O.length >>> 0; // Steps 6-7.
		    var start = arguments[1];
		    var relativeStart = start >> 0; // Step 8.
		    var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.
		    var end = arguments[2];
		    var relativeEnd = end === undefined ? len : end >> 0; // Step 11.
		    var finalValue = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.
		    while (k < finalValue) {
		      O[k] = value;
		      k++;
		    }
		    return O;
		  }});
		}
		[Int8Array, Int16Array, Uint16Array, Int32Array, Float32Array, Float64Array].forEach(function (TypedArray) {
		  if (typeof TypedArray.prototype.fill === 'undefined') {
		    Object.defineProperty(TypedArray.prototype, 'fill', {value: Array.prototype.fill});
		  }
		});
		if (typeof Math.clz32 === 'undefined') {
		  Math.clz32 = function (log, LN2) {
		    return function (x) {
		      var asUint = x >>> 0;
		      if (asUint === 0) {
		        return 32;
		      }
		      return 31 - (log(asUint) / LN2 | 0) | 0; // the "| 0" acts like math.floor
		    };
		  }(Math.log, Math.LN2);
		}
		if (typeof String.prototype.startsWith === 'undefined') {
		  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
		    position = position || 0;
		    return this.lastIndexOf(searchString, position) === position;
		  }});
		}
		//endregion
		(function (root, factory) {
		  factory(module.exports);
		}(globalThis, function (_) {
		  //region block: imports
		  var imul = Math.imul;
		  var isView = ArrayBuffer.isView;
		  var clz32 = Math.clz32;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForInterface(CharSequence, 'CharSequence');
		  initMetadataForClass(Number_0, 'Number');
		  initMetadataForObject(Unit, 'Unit');
		  initMetadataForClass(_no_name_provided__qut3iv);
		  initMetadataForCompanion(Companion);
		  initMetadataForClass(Char, 'Char');
		  initMetadataForInterface(Collection, 'Collection');
		  initMetadataForInterface(KtList, 'List', VOID, VOID, [Collection]);
		  initMetadataForInterface(KtSet, 'Set', VOID, VOID, [Collection]);
		  initMetadataForInterface(Entry, 'Entry');
		  initMetadataForInterface(KtMap, 'Map');
		  initMetadataForInterface(KtMutableList, 'MutableList', VOID, VOID, [KtList, Collection]);
		  initMetadataForInterface(KtMutableSet, 'MutableSet', VOID, VOID, [KtSet, Collection]);
		  initMetadataForInterface(KtMutableMap, 'MutableMap', VOID, VOID, [KtMap]);
		  initMetadataForCompanion(Companion_0);
		  initMetadataForClass(Enum, 'Enum');
		  initMetadataForCompanion(Companion_1);
		  initMetadataForClass(Long, 'Long', VOID, Number_0);
		  initMetadataForClass(arrayIterator$1);
		  initMetadataForObject(ByteCompanionObject, 'ByteCompanionObject');
		  initMetadataForObject(ShortCompanionObject, 'ShortCompanionObject');
		  initMetadataForObject(IntCompanionObject, 'IntCompanionObject');
		  initMetadataForObject(FloatCompanionObject, 'FloatCompanionObject');
		  initMetadataForObject(DoubleCompanionObject, 'DoubleCompanionObject');
		  initMetadataForObject(StringCompanionObject, 'StringCompanionObject');
		  initMetadataForObject(BooleanCompanionObject, 'BooleanCompanionObject');
		  initMetadataForObject(Digit, 'Digit');
		  initMetadataForObject(Letter, 'Letter');
		  initMetadataForObject(OtherLowercase, 'OtherLowercase');
		  initMetadataForClass(AbstractCollection, 'AbstractCollection', VOID, VOID, [Collection]);
		  initMetadataForClass(AbstractMutableCollection, 'AbstractMutableCollection', VOID, AbstractCollection, [AbstractCollection, Collection]);
		  initMetadataForClass(IteratorImpl, 'IteratorImpl');
		  initMetadataForClass(AbstractMutableList, 'AbstractMutableList', VOID, AbstractMutableCollection, [AbstractMutableCollection, KtMutableList]);
		  initMetadataForClass(AbstractMap, 'AbstractMap', VOID, VOID, [KtMap]);
		  initMetadataForClass(AbstractMutableMap, 'AbstractMutableMap', VOID, AbstractMap, [AbstractMap, KtMutableMap]);
		  initMetadataForClass(AbstractMutableSet, 'AbstractMutableSet', VOID, AbstractMutableCollection, [AbstractMutableCollection, KtMutableSet]);
		  initMetadataForCompanion(Companion_2);
		  initMetadataForClass(ArrayList, 'ArrayList', ArrayList_init_$Create$, AbstractMutableList, [AbstractMutableList, KtMutableList]);
		  initMetadataForClass(HashMap, 'HashMap', HashMap_init_$Create$, AbstractMutableMap, [AbstractMutableMap, KtMutableMap]);
		  initMetadataForClass(HashMapKeys, 'HashMapKeys', VOID, AbstractMutableSet, [KtMutableSet, AbstractMutableSet]);
		  initMetadataForClass(HashMapValues, 'HashMapValues', VOID, AbstractMutableCollection, [Collection, AbstractMutableCollection]);
		  initMetadataForClass(HashMapEntrySetBase, 'HashMapEntrySetBase', VOID, AbstractMutableSet, [KtMutableSet, AbstractMutableSet]);
		  initMetadataForClass(HashMapEntrySet, 'HashMapEntrySet', VOID, HashMapEntrySetBase);
		  initMetadataForClass(HashMapKeysDefault$iterator$1);
		  initMetadataForClass(HashMapKeysDefault, 'HashMapKeysDefault', VOID, AbstractMutableSet);
		  initMetadataForClass(HashMapValuesDefault$iterator$1);
		  initMetadataForClass(HashMapValuesDefault, 'HashMapValuesDefault', VOID, AbstractMutableCollection);
		  initMetadataForClass(HashSet, 'HashSet', HashSet_init_$Create$, AbstractMutableSet, [AbstractMutableSet, KtMutableSet]);
		  initMetadataForCompanion(Companion_3);
		  initMetadataForClass(Itr, 'Itr');
		  initMetadataForClass(KeysItr, 'KeysItr', VOID, Itr);
		  initMetadataForClass(ValuesItr, 'ValuesItr', VOID, Itr);
		  initMetadataForClass(EntriesItr, 'EntriesItr', VOID, Itr);
		  initMetadataForClass(EntryRef, 'EntryRef', VOID, VOID, [Entry]);
		  function containsAllEntries(m) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var tmp;
		      if (isInterface(m, Collection)) {
		        tmp = m.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = m.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.InternalMap.containsAllEntries.<anonymous>' call
		        // Inline function 'kotlin.js.unsafeCast' call
		        // Inline function 'kotlin.js.asDynamic' call
		        var entry = element;
		        var tmp_0;
		        if (!(entry == null) ? isInterface(entry, Entry) : false) {
		          tmp_0 = this.m7(entry);
		        } else {
		          tmp_0 = false;
		        }
		        if (!tmp_0) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  }
		  initMetadataForInterface(InternalMap, 'InternalMap');
		  initMetadataForClass(InternalHashMap, 'InternalHashMap', InternalHashMap_init_$Create$, VOID, [InternalMap]);
		  initMetadataForClass(LinkedHashMap, 'LinkedHashMap', LinkedHashMap_init_$Create$, HashMap, [HashMap, KtMutableMap]);
		  initMetadataForClass(LinkedHashSet, 'LinkedHashSet', LinkedHashSet_init_$Create$, HashSet, [HashSet, KtMutableSet]);
		  initMetadataForInterface(Continuation, 'Continuation');
		  initMetadataForClass(InterceptedCoroutine, 'InterceptedCoroutine', VOID, VOID, [Continuation]);
		  initMetadataForClass(CoroutineImpl, 'CoroutineImpl', VOID, InterceptedCoroutine, [InterceptedCoroutine, Continuation]);
		  initMetadataForObject(CompletedContinuation, 'CompletedContinuation', VOID, VOID, [Continuation]);
		  initMetadataForClass(Exception, 'Exception', Exception_init_$Create$, Error);
		  initMetadataForClass(RuntimeException, 'RuntimeException', RuntimeException_init_$Create$, Exception);
		  initMetadataForClass(IllegalArgumentException, 'IllegalArgumentException', IllegalArgumentException_init_$Create$, RuntimeException);
		  initMetadataForClass(IndexOutOfBoundsException, 'IndexOutOfBoundsException', IndexOutOfBoundsException_init_$Create$, RuntimeException);
		  initMetadataForClass(IllegalStateException, 'IllegalStateException', IllegalStateException_init_$Create$, RuntimeException);
		  initMetadataForClass(UnsupportedOperationException, 'UnsupportedOperationException', UnsupportedOperationException_init_$Create$, RuntimeException);
		  initMetadataForClass(NoSuchElementException, 'NoSuchElementException', NoSuchElementException_init_$Create$, RuntimeException);
		  initMetadataForClass(Error_0, 'Error', Error_init_$Create$, Error);
		  initMetadataForClass(AssertionError, 'AssertionError', AssertionError_init_$Create$, Error_0);
		  initMetadataForClass(ConcurrentModificationException, 'ConcurrentModificationException', ConcurrentModificationException_init_$Create$, RuntimeException);
		  initMetadataForClass(NumberFormatException, 'NumberFormatException', NumberFormatException_init_$Create$, IllegalArgumentException);
		  initMetadataForClass(ArithmeticException, 'ArithmeticException', ArithmeticException_init_$Create$, RuntimeException);
		  initMetadataForClass(ClassCastException, 'ClassCastException', ClassCastException_init_$Create$, RuntimeException);
		  initMetadataForClass(NullPointerException, 'NullPointerException', NullPointerException_init_$Create$, RuntimeException);
		  initMetadataForClass(NoWhenBranchMatchedException, 'NoWhenBranchMatchedException', NoWhenBranchMatchedException_init_$Create$, RuntimeException);
		  initMetadataForClass(UninitializedPropertyAccessException, 'UninitializedPropertyAccessException', UninitializedPropertyAccessException_init_$Create$, RuntimeException);
		  initMetadataForInterface(KClass, 'KClass');
		  initMetadataForClass(KClassImpl, 'KClassImpl', VOID, VOID, [KClass]);
		  initMetadataForObject(NothingKClassImpl, 'NothingKClassImpl', VOID, KClassImpl);
		  initMetadataForClass(ErrorKClass, 'ErrorKClass', ErrorKClass, VOID, [KClass]);
		  initMetadataForClass(PrimitiveKClassImpl, 'PrimitiveKClassImpl', VOID, KClassImpl);
		  initMetadataForClass(SimpleKClassImpl, 'SimpleKClassImpl', VOID, KClassImpl);
		  initMetadataForInterface(KProperty1, 'KProperty1');
		  initMetadataForClass(KTypeImpl, 'KTypeImpl');
		  initMetadataForObject(PrimitiveClasses, 'PrimitiveClasses');
		  initMetadataForClass(StringBuilder, 'StringBuilder', StringBuilder_init_$Create$_0, VOID, [CharSequence]);
		  initMetadataForCompanion(Companion_4);
		  initMetadataForClass(Regex, 'Regex');
		  initMetadataForClass(ExceptionTraceBuilder, 'ExceptionTraceBuilder', ExceptionTraceBuilder);
		  initMetadataForClass(DurationUnit, 'DurationUnit', VOID, Enum);
		  initMetadataForCompanion(Companion_5);
		  initMetadataForClass(AbstractMap$keys$1$iterator$1);
		  initMetadataForClass(AbstractMap$values$1$iterator$1);
		  initMetadataForCompanion(Companion_6);
		  initMetadataForClass(AbstractSet, 'AbstractSet', VOID, AbstractCollection, [AbstractCollection, KtSet]);
		  initMetadataForClass(AbstractMap$keys$1, VOID, VOID, AbstractSet);
		  initMetadataForClass(AbstractMap$values$1, VOID, VOID, AbstractCollection);
		  initMetadataForCompanion(Companion_7);
		  initMetadataForObject(EmptyList, 'EmptyList', VOID, VOID, [KtList]);
		  initMetadataForObject(EmptyIterator, 'EmptyIterator');
		  initMetadataForClass(ArrayAsCollection, 'ArrayAsCollection', VOID, VOID, [Collection]);
		  initMetadataForClass(IndexedValue, 'IndexedValue');
		  initMetadataForClass(IndexingIterable, 'IndexingIterable');
		  initMetadataForClass(IndexingIterator, 'IndexingIterator');
		  initMetadataForInterface(MapWithDefault, 'MapWithDefault', VOID, VOID, [KtMap]);
		  initMetadataForObject(EmptyMap, 'EmptyMap', VOID, VOID, [KtMap]);
		  initMetadataForClass(IntIterator, 'IntIterator');
		  initMetadataForClass(TransformingSequence$iterator$1);
		  initMetadataForClass(TransformingSequence, 'TransformingSequence');
		  initMetadataForObject(EmptySet, 'EmptySet', VOID, VOID, [KtSet]);
		  initMetadataForObject(Key, 'Key');
		  initMetadataForInterface(ContinuationInterceptor, 'ContinuationInterceptor');
		  initMetadataForObject(EmptyCoroutineContext, 'EmptyCoroutineContext');
		  initMetadataForClass(CoroutineSingletons, 'CoroutineSingletons', VOID, Enum);
		  initMetadataForClass(Random, 'Random');
		  initMetadataForObject(Default, 'Default', VOID, Random);
		  initMetadataForCompanion(Companion_8);
		  initMetadataForClass(XorWowRandom, 'XorWowRandom', VOID, Random);
		  initMetadataForCompanion(Companion_9);
		  initMetadataForClass(IntProgression, 'IntProgression');
		  initMetadataForClass(IntRange, 'IntRange', VOID, IntProgression);
		  initMetadataForClass(IntProgressionIterator, 'IntProgressionIterator', VOID, IntIterator);
		  initMetadataForCompanion(Companion_10);
		  initMetadataForInterface(KTypeParameter, 'KTypeParameter');
		  initMetadataForClass(DelimitedRangesSequence$iterator$1);
		  initMetadataForClass(DelimitedRangesSequence, 'DelimitedRangesSequence');
		  initMetadataForCompanion(Companion_11);
		  initMetadataForClass(Duration, 'Duration');
		  initMetadataForClass(DeepRecursiveScope, 'DeepRecursiveScope', VOID, VOID, VOID, [1]);
		  initMetadataForClass(DeepRecursiveFunction, 'DeepRecursiveFunction');
		  initMetadataForClass(DeepRecursiveScopeImpl, 'DeepRecursiveScopeImpl', VOID, DeepRecursiveScope, [DeepRecursiveScope, Continuation], [1]);
		  initMetadataForClass(LazyThreadSafetyMode, 'LazyThreadSafetyMode', VOID, Enum);
		  initMetadataForClass(UnsafeLazyImpl, 'UnsafeLazyImpl');
		  initMetadataForObject(UNINITIALIZED_VALUE, 'UNINITIALIZED_VALUE');
		  initMetadataForCompanion(Companion_12);
		  initMetadataForClass(Failure, 'Failure');
		  initMetadataForClass(Result, 'Result');
		  initMetadataForClass(NotImplementedError, 'NotImplementedError', NotImplementedError, Error_0);
		  initMetadataForClass(Pair, 'Pair');
		  initMetadataForClass(Triple, 'Triple');
		  initMetadataForCompanion(Companion_13);
		  initMetadataForClass(UByte, 'UByte');
		  initMetadataForClass(Iterator, 'Iterator');
		  initMetadataForClass(UByteArray, 'UByteArray', VOID, VOID, [Collection]);
		  initMetadataForCompanion(Companion_14);
		  initMetadataForClass(UInt, 'UInt');
		  initMetadataForClass(Iterator_0, 'Iterator');
		  initMetadataForClass(UIntArray, 'UIntArray', VOID, VOID, [Collection]);
		  initMetadataForCompanion(Companion_15);
		  initMetadataForClass(ULong, 'ULong');
		  initMetadataForClass(Iterator_1, 'Iterator');
		  initMetadataForClass(ULongArray, 'ULongArray', VOID, VOID, [Collection]);
		  initMetadataForCompanion(Companion_16);
		  initMetadataForClass(UShort, 'UShort');
		  initMetadataForClass(Iterator_2, 'Iterator');
		  initMetadataForClass(UShortArray, 'UShortArray', VOID, VOID, [Collection]);
		  //endregion
		  function CharSequence() {
		  }
		  function Number_0() {
		  }
		  function Unit() {
		  }
		  protoOf(Unit).toString = function () {
		    return 'kotlin.Unit';
		  };
		  var Unit_instance;
		  function toList(_this__u8e3s4) {
		    switch (_this__u8e3s4.length) {
		      case 0:
		        return emptyList();
		      case 1:
		        return listOf(_this__u8e3s4[0]);
		      default:
		        return toMutableList(_this__u8e3s4);
		    }
		  }
		  function withIndex(_this__u8e3s4) {
		    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
		  }
		  function get_indices(_this__u8e3s4) {
		    return new IntRange(0, get_lastIndex(_this__u8e3s4));
		  }
		  function get_indices_0(_this__u8e3s4) {
		    return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
		  }
		  function contains(_this__u8e3s4, element) {
		    return indexOf_0(_this__u8e3s4, element) >= 0;
		  }
		  function contains_0(_this__u8e3s4, element) {
		    return indexOf_1(_this__u8e3s4, element) >= 0;
		  }
		  function contains_1(_this__u8e3s4, element) {
		    return indexOf_2(_this__u8e3s4, element) >= 0;
		  }
		  function contains_2(_this__u8e3s4, element) {
		    return indexOf_3(_this__u8e3s4, element) >= 0;
		  }
		  function indexOf(_this__u8e3s4, element) {
		    if (element == null) {
		      var inductionVariable = 0;
		      var last = _this__u8e3s4.length - 1 | 0;
		      if (inductionVariable <= last)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          if (_this__u8e3s4[index] == null) {
		            return index;
		          }
		        }
		         while (inductionVariable <= last);
		    } else {
		      var inductionVariable_0 = 0;
		      var last_0 = _this__u8e3s4.length - 1 | 0;
		      if (inductionVariable_0 <= last_0)
		        do {
		          var index_0 = inductionVariable_0;
		          inductionVariable_0 = inductionVariable_0 + 1 | 0;
		          if (equals(element, _this__u8e3s4[index_0])) {
		            return index_0;
		          }
		        }
		         while (inductionVariable_0 <= last_0);
		    }
		    return -1;
		  }
		  function toSet(_this__u8e3s4) {
		    switch (_this__u8e3s4.length) {
		      case 0:
		        return emptySet();
		      case 1:
		        return setOf(_this__u8e3s4[0]);
		      default:
		        return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
		    }
		  }
		  function single(_this__u8e3s4) {
		    var tmp;
		    switch (_this__u8e3s4.length) {
		      case 0:
		        throw NoSuchElementException_init_$Create$_0('Array is empty.');
		      case 1:
		        tmp = _this__u8e3s4[0];
		        break;
		      default:
		        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
		    }
		    return tmp;
		  }
		  function toMutableList(_this__u8e3s4) {
		    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
		  }
		  function get_lastIndex(_this__u8e3s4) {
		    return _this__u8e3s4.length - 1 | 0;
		  }
		  function get_lastIndex_0(_this__u8e3s4) {
		    return _this__u8e3s4.length - 1 | 0;
		  }
		  function indexOf_0(_this__u8e3s4, element) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (element.equals(_this__u8e3s4[index])) {
		          return index;
		        }
		      }
		       while (inductionVariable <= last);
		    return -1;
		  }
		  function indexOf_1(_this__u8e3s4, element) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (element === _this__u8e3s4[index]) {
		          return index;
		        }
		      }
		       while (inductionVariable <= last);
		    return -1;
		  }
		  function indexOf_2(_this__u8e3s4, element) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (element === _this__u8e3s4[index]) {
		          return index;
		        }
		      }
		       while (inductionVariable <= last);
		    return -1;
		  }
		  function indexOf_3(_this__u8e3s4, element) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (element === _this__u8e3s4[index]) {
		          return index;
		        }
		      }
		       while (inductionVariable <= last);
		    return -1;
		  }
		  function toCollection(_this__u8e3s4, destination) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length;
		    while (inductionVariable < last) {
		      var item = _this__u8e3s4[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      destination.d(item);
		    }
		    return destination;
		  }
		  function get_lastIndex_1(_this__u8e3s4) {
		    return _this__u8e3s4.length - 1 | 0;
		  }
		  function contains_3(_this__u8e3s4, element) {
		    return indexOf(_this__u8e3s4, element) >= 0;
		  }
		  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
		    separator = separator === VOID ? ', ' : separator;
		    prefix = prefix === VOID ? '' : prefix;
		    postfix = postfix === VOID ? '' : postfix;
		    limit = limit === VOID ? -1 : limit;
		    truncated = truncated === VOID ? '...' : truncated;
		    transform = transform === VOID ? null : transform;
		    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
		  }
		  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
		    separator = separator === VOID ? ', ' : separator;
		    prefix = prefix === VOID ? '' : prefix;
		    postfix = postfix === VOID ? '' : postfix;
		    limit = limit === VOID ? -1 : limit;
		    truncated = truncated === VOID ? '...' : truncated;
		    transform = transform === VOID ? null : transform;
		    buffer.e(prefix);
		    var count = 0;
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length;
		    $l$loop: while (inductionVariable < last) {
		      var element = _this__u8e3s4[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      count = count + 1 | 0;
		      if (count > 1) {
		        buffer.e(separator);
		      }
		      if (limit < 0 || count <= limit) {
		        appendElement(buffer, element, transform);
		      } else
		        break $l$loop;
		    }
		    if (limit >= 0 && count > limit) {
		      buffer.e(truncated);
		    }
		    buffer.e(postfix);
		    return buffer;
		  }
		  function reversed(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.isEmpty' call
		    if (_this__u8e3s4.length === 0)
		      return emptyList();
		    var list = toMutableList(_this__u8e3s4);
		    reverse(list);
		    return list;
		  }
		  function filterNotNull(_this__u8e3s4) {
		    return filterNotNullTo(_this__u8e3s4, ArrayList_init_$Create$());
		  }
		  function filterNotNullTo(_this__u8e3s4, destination) {
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length;
		    while (inductionVariable < last) {
		      var element = _this__u8e3s4[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      if (!(element == null)) {
		        destination.d(element);
		      }
		    }
		    return destination;
		  }
		  function distinct(_this__u8e3s4) {
		    return toList_0(toMutableSet(_this__u8e3s4));
		  }
		  function zip(_this__u8e3s4, other) {
		    // Inline function 'kotlin.collections.zip' call
		    // Inline function 'kotlin.comparisons.minOf' call
		    var a = _this__u8e3s4.length;
		    var b = other.length;
		    var size = Math.min(a, b);
		    var list = ArrayList_init_$Create$_0(size);
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.collections.zip.<anonymous>' call
		        var t1 = _this__u8e3s4[i];
		        var t2 = other[i];
		        var tmp$ret$1 = to(t1, t2);
		        list.d(tmp$ret$1);
		      }
		       while (inductionVariable < size);
		    return list;
		  }
		  function toMutableSet(_this__u8e3s4) {
		    return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
		  }
		  function withIndex$lambda($this_withIndex) {
		    return function () {
		      return arrayIterator($this_withIndex);
		    };
		  }
		  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
		    separator = separator === VOID ? ', ' : separator;
		    prefix = prefix === VOID ? '' : prefix;
		    postfix = postfix === VOID ? '' : postfix;
		    limit = limit === VOID ? -1 : limit;
		    truncated = truncated === VOID ? '...' : truncated;
		    transform = transform === VOID ? null : transform;
		    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
		  }
		  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
		    separator = separator === VOID ? ', ' : separator;
		    prefix = prefix === VOID ? '' : prefix;
		    postfix = postfix === VOID ? '' : postfix;
		    limit = limit === VOID ? -1 : limit;
		    truncated = truncated === VOID ? '...' : truncated;
		    transform = transform === VOID ? null : transform;
		    buffer.e(prefix);
		    var count = 0;
		    var tmp0_iterator = _this__u8e3s4.i();
		    $l$loop: while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      count = count + 1 | 0;
		      if (count > 1) {
		        buffer.e(separator);
		      }
		      if (limit < 0 || count <= limit) {
		        appendElement(buffer, element, transform);
		      } else
		        break $l$loop;
		    }
		    if (limit >= 0 && count > limit) {
		      buffer.e(truncated);
		    }
		    buffer.e(postfix);
		    return buffer;
		  }
		  function toHashSet(_this__u8e3s4) {
		    return toCollection_0(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
		  }
		  function toBooleanArray(_this__u8e3s4) {
		    var result = booleanArray(_this__u8e3s4.l());
		    var index = 0;
		    var tmp0_iterator = _this__u8e3s4.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      var tmp1 = index;
		      index = tmp1 + 1 | 0;
		      result[tmp1] = element;
		    }
		    return result;
		  }
		  function toCollection_0(_this__u8e3s4, destination) {
		    var tmp0_iterator = _this__u8e3s4.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      destination.d(item);
		    }
		    return destination;
		  }
		  function toList_0(_this__u8e3s4) {
		    if (isInterface(_this__u8e3s4, Collection)) {
		      var tmp;
		      switch (_this__u8e3s4.l()) {
		        case 0:
		          tmp = emptyList();
		          break;
		        case 1:
		          var tmp_0;
		          if (isInterface(_this__u8e3s4, KtList)) {
		            tmp_0 = _this__u8e3s4.m(0);
		          } else {
		            tmp_0 = _this__u8e3s4.i().k();
		          }

		          tmp = listOf(tmp_0);
		          break;
		        default:
		          tmp = toMutableList_0(_this__u8e3s4);
		          break;
		      }
		      return tmp;
		    }
		    return optimizeReadOnlyList(toMutableList_1(_this__u8e3s4));
		  }
		  function last(_this__u8e3s4) {
		    if (_this__u8e3s4.n())
		      throw NoSuchElementException_init_$Create$_0('List is empty.');
		    return _this__u8e3s4.m(get_lastIndex_2(_this__u8e3s4));
		  }
		  function singleOrNull(_this__u8e3s4) {
		    return _this__u8e3s4.l() === 1 ? _this__u8e3s4.m(0) : null;
		  }
		  function filterNotNull_0(_this__u8e3s4) {
		    return filterNotNullTo_0(_this__u8e3s4, ArrayList_init_$Create$());
		  }
		  function single_0(_this__u8e3s4) {
		    if (isInterface(_this__u8e3s4, KtList))
		      return single_1(_this__u8e3s4);
		    else {
		      var iterator = _this__u8e3s4.i();
		      if (!iterator.j())
		        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
		      var single = iterator.k();
		      if (iterator.j())
		        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
		      return single;
		    }
		  }
		  function toMutableList_0(_this__u8e3s4) {
		    return ArrayList_init_$Create$_1(_this__u8e3s4);
		  }
		  function toMutableList_1(_this__u8e3s4) {
		    if (isInterface(_this__u8e3s4, Collection))
		      return toMutableList_0(_this__u8e3s4);
		    return toCollection_0(_this__u8e3s4, ArrayList_init_$Create$());
		  }
		  function filterNotNullTo_0(_this__u8e3s4, destination) {
		    var tmp0_iterator = _this__u8e3s4.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      if (!(element == null)) {
		        destination.d(element);
		      }
		    }
		    return destination;
		  }
		  function single_1(_this__u8e3s4) {
		    var tmp;
		    switch (_this__u8e3s4.l()) {
		      case 0:
		        throw NoSuchElementException_init_$Create$_0('List is empty.');
		      case 1:
		        tmp = _this__u8e3s4.m(0);
		        break;
		      default:
		        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
		    }
		    return tmp;
		  }
		  function toSet_0(_this__u8e3s4) {
		    if (isInterface(_this__u8e3s4, Collection)) {
		      var tmp;
		      switch (_this__u8e3s4.l()) {
		        case 0:
		          tmp = emptySet();
		          break;
		        case 1:
		          var tmp_0;
		          if (isInterface(_this__u8e3s4, KtList)) {
		            tmp_0 = _this__u8e3s4.m(0);
		          } else {
		            tmp_0 = _this__u8e3s4.i().k();
		          }

		          tmp = setOf(tmp_0);
		          break;
		        default:
		          tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.l())));
		          break;
		      }
		      return tmp;
		    }
		    return optimizeReadOnlySet(toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$()));
		  }
		  function lastOrNull(_this__u8e3s4) {
		    return _this__u8e3s4.n() ? null : _this__u8e3s4.m(_this__u8e3s4.l() - 1 | 0);
		  }
		  function minOrNull(_this__u8e3s4) {
		    var iterator = _this__u8e3s4.i();
		    if (!iterator.j())
		      return null;
		    var min = iterator.k();
		    while (iterator.j()) {
		      var e = iterator.k();
		      if (compareTo(min, e) > 0)
		        min = e;
		    }
		    return min;
		  }
		  function titlecaseImpl(_this__u8e3s4) {
		    // Inline function 'kotlin.text.uppercase' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var uppercase = toString(_this__u8e3s4).toUpperCase();
		    if (uppercase.length > 1) {
		      var tmp;
		      if (_this__u8e3s4 === _Char___init__impl__6a9atx(329)) {
		        tmp = uppercase;
		      } else {
		        // Inline function 'kotlin.text.plus' call
		        var this_0 = charSequenceGet(uppercase, 0);
		        // Inline function 'kotlin.text.lowercase' call
		        // Inline function 'kotlin.text.substring' call
		        // Inline function 'kotlin.js.asDynamic' call
		        // Inline function 'kotlin.js.asDynamic' call
		        var other = uppercase.substring(1).toLowerCase();
		        tmp = toString(this_0) + other;
		      }
		      return tmp;
		    }
		    return toString(titlecaseChar(_this__u8e3s4));
		  }
		  function until(_this__u8e3s4, to) {
		    if (to <= -2147483648)
		      return Companion_getInstance_9().o_1;
		    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
		  }
		  function step(_this__u8e3s4, step) {
		    checkStepIsPositive(step > 0, step);
		    return Companion_instance_10.s(_this__u8e3s4.p_1, _this__u8e3s4.q_1, _this__u8e3s4.r_1 > 0 ? step : -step | 0);
		  }
		  function coerceAtLeast(_this__u8e3s4, minimumValue) {
		    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
		  }
		  function random(_this__u8e3s4, random) {
		    try {
		      return nextInt(random, _this__u8e3s4);
		    } catch ($p) {
		      if ($p instanceof IllegalArgumentException) {
		        var e = $p;
		        throw NoSuchElementException_init_$Create$_0(e.message);
		      } else {
		        throw $p;
		      }
		    }
		  }
		  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
		    if (minimumValue.v(maximumValue) > 0)
		      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue.toString() + ' is less than minimum ' + minimumValue.toString() + '.');
		    if (_this__u8e3s4.v(minimumValue) < 0)
		      return minimumValue;
		    if (_this__u8e3s4.v(maximumValue) > 0)
		      return maximumValue;
		    return _this__u8e3s4;
		  }
		  function coerceAtMost(_this__u8e3s4, maximumValue) {
		    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
		  }
		  function downTo(_this__u8e3s4, to) {
		    return Companion_instance_10.s(_this__u8e3s4, to, -1);
		  }
		  function coerceIn_0(_this__u8e3s4, minimumValue, maximumValue) {
		    if (minimumValue > maximumValue)
		      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
		    if (_this__u8e3s4 < minimumValue)
		      return minimumValue;
		    if (_this__u8e3s4 > maximumValue)
		      return maximumValue;
		    return _this__u8e3s4;
		  }
		  function asIterable(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.Iterable' call
		    return new _no_name_provided__qut3iv(_this__u8e3s4);
		  }
		  function map(_this__u8e3s4, transform) {
		    return new TransformingSequence(_this__u8e3s4, transform);
		  }
		  function toList_1(_this__u8e3s4) {
		    var it = _this__u8e3s4.i();
		    if (!it.j())
		      return emptyList();
		    var element = it.k();
		    if (!it.j())
		      return listOf(element);
		    var dst = ArrayList_init_$Create$();
		    dst.d(element);
		    while (it.j()) {
		      dst.d(it.k());
		    }
		    return dst;
		  }
		  function _no_name_provided__qut3iv($this_asIterable) {
		    this.w_1 = $this_asIterable;
		  }
		  protoOf(_no_name_provided__qut3iv).i = function () {
		    // Inline function 'kotlin.sequences.asIterable.<anonymous>' call
		    return this.w_1.i();
		  };
		  function plus(_this__u8e3s4, elements) {
		    var tmp0_safe_receiver = collectionSizeOrNull(elements);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.collections.plus.<anonymous>' call
		      tmp = _this__u8e3s4.l() + tmp0_safe_receiver | 0;
		    }
		    var tmp1_elvis_lhs = tmp;
		    var result = LinkedHashSet_init_$Create$_1(mapCapacity(tmp1_elvis_lhs == null ? imul(_this__u8e3s4.l(), 2) : tmp1_elvis_lhs));
		    result.x(_this__u8e3s4);
		    addAll(result, elements);
		    return result;
		  }
		  function last_0(_this__u8e3s4) {
		    // Inline function 'kotlin.text.isEmpty' call
		    if (charSequenceLength(_this__u8e3s4) === 0)
		      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
		    return charSequenceGet(_this__u8e3s4, get_lastIndex_3(_this__u8e3s4));
		  }
		  function drop(_this__u8e3s4, n) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(n >= 0)) {
		      // Inline function 'kotlin.text.drop.<anonymous>' call
		      var message = 'Requested character count ' + n + ' is less than zero.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'kotlin.text.substring' call
		    var startIndex = coerceAtMost(n, _this__u8e3s4.length);
		    // Inline function 'kotlin.js.asDynamic' call
		    return _this__u8e3s4.substring(startIndex);
		  }
		  function single_2(_this__u8e3s4) {
		    var tmp;
		    switch (charSequenceLength(_this__u8e3s4)) {
		      case 0:
		        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
		      case 1:
		        tmp = charSequenceGet(_this__u8e3s4, 0);
		        break;
		      default:
		        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
		    }
		    return tmp;
		  }
		  function slice(_this__u8e3s4, indices) {
		    if (indices.n())
		      return '';
		    return substring(_this__u8e3s4, indices);
		  }
		  function dropLast(_this__u8e3s4, n) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(n >= 0)) {
		      // Inline function 'kotlin.text.dropLast.<anonymous>' call
		      var message = 'Requested character count ' + n + ' is less than zero.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return take(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.length - n | 0, 0));
		  }
		  function take(_this__u8e3s4, n) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(n >= 0)) {
		      // Inline function 'kotlin.text.take.<anonymous>' call
		      var message = 'Requested character count ' + n + ' is less than zero.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'kotlin.text.substring' call
		    var endIndex = coerceAtMost(n, _this__u8e3s4.length);
		    // Inline function 'kotlin.js.asDynamic' call
		    return _this__u8e3s4.substring(0, endIndex);
		  }
		  function _Char___init__impl__6a9atx(value) {
		    return value;
		  }
		  function _get_value__a43j40($this) {
		    return $this;
		  }
		  function _Char___init__impl__6a9atx_0(code) {
		    // Inline function 'kotlin.UShort.toInt' call
		    var tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
		    return _Char___init__impl__6a9atx(tmp$ret$0);
		  }
		  function Char__compareTo_impl_ypi4mb($this, other) {
		    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
		  }
		  function Char__compareTo_impl_ypi4mb_0($this, other) {
		    return Char__compareTo_impl_ypi4mb($this.b1_1, other instanceof Char ? other.b1_1 : THROW_CCE());
		  }
		  function Char__minus_impl_a2frrh($this, other) {
		    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
		  }
		  function Char__toInt_impl_vasixd($this) {
		    return _get_value__a43j40($this);
		  }
		  function toString($this) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    return String.fromCharCode(_get_value__a43j40($this));
		  }
		  function Char__equals_impl_x6719k($this, other) {
		    if (!(other instanceof Char))
		      return false;
		    return _get_value__a43j40($this) === _get_value__a43j40(other.b1_1);
		  }
		  function Char__hashCode_impl_otmys($this) {
		    return _get_value__a43j40($this);
		  }
		  function Companion() {
		    Companion_instance = this;
		    this.c1_1 = _Char___init__impl__6a9atx(0);
		    this.d1_1 = _Char___init__impl__6a9atx(65535);
		    this.e1_1 = _Char___init__impl__6a9atx(55296);
		    this.f1_1 = _Char___init__impl__6a9atx(56319);
		    this.g1_1 = _Char___init__impl__6a9atx(56320);
		    this.h1_1 = _Char___init__impl__6a9atx(57343);
		    this.i1_1 = _Char___init__impl__6a9atx(55296);
		    this.j1_1 = _Char___init__impl__6a9atx(57343);
		    this.k1_1 = 2;
		    this.l1_1 = 16;
		  }
		  var Companion_instance;
		  function Companion_getInstance() {
		    if (Companion_instance == null)
		      new Companion();
		    return Companion_instance;
		  }
		  function Char(value) {
		    Companion_getInstance();
		    this.b1_1 = value;
		  }
		  protoOf(Char).m1 = function (other) {
		    return Char__compareTo_impl_ypi4mb(this.b1_1, other);
		  };
		  protoOf(Char).n1 = function (other) {
		    return Char__compareTo_impl_ypi4mb_0(this, other);
		  };
		  protoOf(Char).toString = function () {
		    return toString(this.b1_1);
		  };
		  protoOf(Char).equals = function (other) {
		    return Char__equals_impl_x6719k(this.b1_1, other);
		  };
		  protoOf(Char).hashCode = function () {
		    return Char__hashCode_impl_otmys(this.b1_1);
		  };
		  function KtList() {
		  }
		  function Collection() {
		  }
		  function KtSet() {
		  }
		  function Entry() {
		  }
		  function KtMap() {
		  }
		  function KtMutableList() {
		  }
		  function KtMutableSet() {
		  }
		  function KtMutableMap() {
		  }
		  function Companion_0() {
		  }
		  function Enum(name, ordinal) {
		    this.d2_1 = name;
		    this.e2_1 = ordinal;
		  }
		  protoOf(Enum).f2 = function () {
		    return this.d2_1;
		  };
		  protoOf(Enum).g2 = function () {
		    return this.e2_1;
		  };
		  protoOf(Enum).h2 = function (other) {
		    return compareTo(this.e2_1, other.e2_1);
		  };
		  protoOf(Enum).n1 = function (other) {
		    return this.h2(other instanceof Enum ? other : THROW_CCE());
		  };
		  protoOf(Enum).equals = function (other) {
		    return this === other;
		  };
		  protoOf(Enum).hashCode = function () {
		    return identityHashCode(this);
		  };
		  protoOf(Enum).toString = function () {
		    return this.d2_1;
		  };
		  function arrayOf(elements) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return elements;
		  }
		  function toString_0(_this__u8e3s4) {
		    var tmp1_elvis_lhs = _this__u8e3s4 == null ? null : toString_1(_this__u8e3s4);
		    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
		  }
		  function plus_0(_this__u8e3s4, other) {
		    var tmp3_elvis_lhs = _this__u8e3s4 == null ? null : toString_1(_this__u8e3s4);
		    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
		    var tmp1_elvis_lhs = other == null ? null : toString_1(other);
		    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
		  }
		  function Companion_1() {
		    Companion_instance_1 = this;
		    this.i2_1 = new Long(0, -2147483648);
		    this.j2_1 = new Long(-1, 2147483647);
		    this.k2_1 = 8;
		    this.l2_1 = 64;
		  }
		  var Companion_instance_1;
		  function Companion_getInstance_1() {
		    if (Companion_instance_1 == null)
		      new Companion_1();
		    return Companion_instance_1;
		  }
		  function Long(low, high) {
		    Companion_getInstance_1();
		    Number_0.call(this);
		    this.t_1 = low;
		    this.u_1 = high;
		  }
		  protoOf(Long).v = function (other) {
		    return compare(this, other);
		  };
		  protoOf(Long).n1 = function (other) {
		    return this.v(other instanceof Long ? other : THROW_CCE());
		  };
		  protoOf(Long).m2 = function (other) {
		    return add(this, other);
		  };
		  protoOf(Long).n2 = function (other) {
		    return subtract(this, other);
		  };
		  protoOf(Long).o2 = function (other) {
		    return multiply(this, other);
		  };
		  protoOf(Long).p2 = function (other) {
		    return divide(this, other);
		  };
		  protoOf(Long).q2 = function (other) {
		    return modulo(this, other);
		  };
		  protoOf(Long).r2 = function () {
		    return this.s2().m2(new Long(1, 0));
		  };
		  protoOf(Long).t2 = function (bitCount) {
		    return shiftLeft(this, bitCount);
		  };
		  protoOf(Long).u2 = function (bitCount) {
		    return shiftRight(this, bitCount);
		  };
		  protoOf(Long).v2 = function (bitCount) {
		    return shiftRightUnsigned(this, bitCount);
		  };
		  protoOf(Long).w2 = function (other) {
		    return new Long(this.t_1 & other.t_1, this.u_1 & other.u_1);
		  };
		  protoOf(Long).x2 = function (other) {
		    return new Long(this.t_1 | other.t_1, this.u_1 | other.u_1);
		  };
		  protoOf(Long).y2 = function (other) {
		    return new Long(this.t_1 ^ other.t_1, this.u_1 ^ other.u_1);
		  };
		  protoOf(Long).s2 = function () {
		    return new Long(~this.t_1, ~this.u_1);
		  };
		  protoOf(Long).z2 = function () {
		    return toByte(this.t_1);
		  };
		  protoOf(Long).a3 = function () {
		    return toShort(this.t_1);
		  };
		  protoOf(Long).b3 = function () {
		    return this.t_1;
		  };
		  protoOf(Long).c3 = function () {
		    return toNumber(this);
		  };
		  protoOf(Long).toString = function () {
		    return toStringImpl(this, 10);
		  };
		  protoOf(Long).equals = function (other) {
		    var tmp;
		    if (other instanceof Long) {
		      tmp = equalsLong(this, other);
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(Long).hashCode = function () {
		    return hashCode_0(this);
		  };
		  protoOf(Long).valueOf = function () {
		    return this.c3();
		  };
		  function implement(interfaces) {
		    var maxSize = 1;
		    var masks = [];
		    var inductionVariable = 0;
		    var last = interfaces.length;
		    while (inductionVariable < last) {
		      var i = interfaces[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      var currentSize = maxSize;
		      var tmp1_elvis_lhs = i.prototype.$imask$;
		      var imask = tmp1_elvis_lhs == null ? i.$imask$ : tmp1_elvis_lhs;
		      if (!(imask == null)) {
		        masks.push(imask);
		        currentSize = imask.length;
		      }
		      var iid = i.$metadata$.iid;
		      var tmp;
		      if (iid == null) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'kotlin.js.implement.<anonymous>' call
		        tmp = bitMaskWith(iid);
		      }
		      var iidImask = tmp;
		      if (!(iidImask == null)) {
		        masks.push(iidImask);
		        currentSize = Math.max(currentSize, iidImask.length);
		      }
		      if (currentSize > maxSize) {
		        maxSize = currentSize;
		      }
		    }
		    return compositeBitMask(maxSize, masks);
		  }
		  function bitMaskWith(activeBit) {
		    var numberIndex = activeBit >> 5;
		    var intArray = new Int32Array(numberIndex + 1 | 0);
		    var positionInNumber = activeBit & 31;
		    var numberWithSettledBit = 1 << positionInNumber;
		    intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;
		    return intArray;
		  }
		  function compositeBitMask(capacity, masks) {
		    var tmp = 0;
		    var tmp_0 = new Int32Array(capacity);
		    while (tmp < capacity) {
		      var tmp_1 = tmp;
		      var result = 0;
		      var inductionVariable = 0;
		      var last = masks.length;
		      while (inductionVariable < last) {
		        var mask = masks[inductionVariable];
		        inductionVariable = inductionVariable + 1 | 0;
		        if (tmp_1 < mask.length) {
		          result = result | mask[tmp_1];
		        }
		      }
		      tmp_0[tmp_1] = result;
		      tmp = tmp + 1 | 0;
		    }
		    return tmp_0;
		  }
		  function isBitSet(_this__u8e3s4, possibleActiveBit) {
		    var numberIndex = possibleActiveBit >> 5;
		    if (numberIndex > _this__u8e3s4.length)
		      return false;
		    var positionInNumber = possibleActiveBit & 31;
		    var numberWithSettledBit = 1 << positionInNumber;
		    return !((_this__u8e3s4[numberIndex] & numberWithSettledBit) === 0);
		  }
		  function fillArrayVal(array, initValue) {
		    var inductionVariable = 0;
		    var last = array.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        array[i] = initValue;
		      }
		       while (!(i === last));
		    return array;
		  }
		  function arrayIterator(array) {
		    return new arrayIterator$1(array);
		  }
		  function booleanArray(size) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'withType' call
		    var type = 'BooleanArray';
		    var array = fillArrayVal(Array(size), false);
		    array.$type$ = type;
		    return array;
		  }
		  function charArray(size) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'withType' call
		    var type = 'CharArray';
		    var array = new Uint16Array(size);
		    array.$type$ = type;
		    return array;
		  }
		  function longArray(size) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'withType' call
		    var type = 'LongArray';
		    var array = fillArrayVal(Array(size), new Long(0, 0));
		    array.$type$ = type;
		    return array;
		  }
		  function charArrayOf(arr) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'withType' call
		    var type = 'CharArray';
		    var array = new Uint16Array(arr);
		    array.$type$ = type;
		    return array;
		  }
		  function arrayIterator$1($array) {
		    this.e3_1 = $array;
		    this.d3_1 = 0;
		  }
		  protoOf(arrayIterator$1).j = function () {
		    return !(this.d3_1 === this.e3_1.length);
		  };
		  protoOf(arrayIterator$1).k = function () {
		    var tmp;
		    if (!(this.d3_1 === this.e3_1.length)) {
		      var tmp1 = this.d3_1;
		      this.d3_1 = tmp1 + 1 | 0;
		      tmp = this.e3_1[tmp1];
		    } else {
		      throw NoSuchElementException_init_$Create$_0('' + this.d3_1);
		    }
		    return tmp;
		  };
		  function get_buf() {
		    _init_properties_bitUtils_kt__nfcg4k();
		    return buf;
		  }
		  var buf;
		  function get_bufFloat64() {
		    _init_properties_bitUtils_kt__nfcg4k();
		    return bufFloat64;
		  }
		  var bufFloat64;
		  function get_bufInt32() {
		    _init_properties_bitUtils_kt__nfcg4k();
		    return bufInt32;
		  }
		  var bufInt32;
		  function get_lowIndex() {
		    _init_properties_bitUtils_kt__nfcg4k();
		    return lowIndex;
		  }
		  var lowIndex;
		  function get_highIndex() {
		    _init_properties_bitUtils_kt__nfcg4k();
		    return highIndex;
		  }
		  var highIndex;
		  function getNumberHashCode(obj) {
		    _init_properties_bitUtils_kt__nfcg4k();
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.jsBitwiseOr' call
		    // Inline function 'kotlin.js.asDynamic' call
		    if ((obj | 0) === obj) {
		      return numberToInt(obj);
		    }
		    get_bufFloat64()[0] = obj;
		    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
		  }
		  var properties_initialized_bitUtils_kt_i2bo3e;
		  function _init_properties_bitUtils_kt__nfcg4k() {
		    if (!properties_initialized_bitUtils_kt_i2bo3e) {
		      properties_initialized_bitUtils_kt_i2bo3e = true;
		      buf = new ArrayBuffer(8);
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      bufFloat64 = new Float64Array(get_buf());
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      new Float32Array(get_buf());
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      bufInt32 = new Int32Array(get_buf());
		      // Inline function 'kotlin.run' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.js.lowIndex.<anonymous>' call
		      get_bufFloat64()[0] = -1.0;
		      lowIndex = !(get_bufInt32()[0] === 0) ? 1 : 0;
		      highIndex = 1 - get_lowIndex() | 0;
		    }
		  }
		  function charSequenceGet(a, index) {
		    var tmp;
		    if (isString(a)) {
		      // Inline function 'kotlin.Char' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var code = a.charCodeAt(index);
		      var tmp_0;
		      // Inline function 'kotlin.code' call
		      var this_0 = _Char___init__impl__6a9atx(0);
		      if (code < Char__toInt_impl_vasixd(this_0)) {
		        tmp_0 = true;
		      } else {
		        // Inline function 'kotlin.code' call
		        var this_1 = _Char___init__impl__6a9atx(65535);
		        tmp_0 = code > Char__toInt_impl_vasixd(this_1);
		      }
		      if (tmp_0) {
		        throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + code);
		      }
		      tmp = numberToChar(code);
		    } else {
		      tmp = a.b(index);
		    }
		    return tmp;
		  }
		  function isString(a) {
		    return typeof a === 'string';
		  }
		  function charSequenceLength(a) {
		    var tmp;
		    if (isString(a)) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = a.length;
		    } else {
		      tmp = a.a();
		    }
		    return tmp;
		  }
		  function charSequenceSubSequence(a, startIndex, endIndex) {
		    var tmp;
		    if (isString(a)) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = a.substring(startIndex, endIndex);
		    } else {
		      tmp = a.c(startIndex, endIndex);
		    }
		    return tmp;
		  }
		  function arrayToString(array) {
		    return joinToString(array, ', ', '[', ']', VOID, VOID, arrayToString$lambda);
		  }
		  function contentEqualsInternal(_this__u8e3s4, other) {
		    // Inline function 'kotlin.js.asDynamic' call
		    var a = _this__u8e3s4;
		    // Inline function 'kotlin.js.asDynamic' call
		    var b = other;
		    if (a === b)
		      return true;
		    if (a == null || b == null || !isArrayish(b) || a.length != b.length)
		      return false;
		    var inductionVariable = 0;
		    var last = a.length;
		    if (inductionVariable < last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (!equals(a[i], b[i])) {
		          return false;
		        }
		      }
		       while (inductionVariable < last);
		    return true;
		  }
		  function contentHashCodeInternal(_this__u8e3s4) {
		    // Inline function 'kotlin.js.asDynamic' call
		    var a = _this__u8e3s4;
		    if (a == null)
		      return 0;
		    var result = 1;
		    var inductionVariable = 0;
		    var last = a.length;
		    if (inductionVariable < last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        result = imul(result, 31) + hashCode(a[i]) | 0;
		      }
		       while (inductionVariable < last);
		    return result;
		  }
		  function arrayToString$lambda(it) {
		    return toString_1(it);
		  }
		  function compareTo(a, b) {
		    var tmp;
		    switch (typeof a) {
		      case 'number':
		        var tmp_0;
		        if (typeof b === 'number') {
		          tmp_0 = doubleCompareTo(a, b);
		        } else {
		          if (b instanceof Long) {
		            tmp_0 = doubleCompareTo(a, b.c3());
		          } else {
		            tmp_0 = primitiveCompareTo(a, b);
		          }
		        }

		        tmp = tmp_0;
		        break;
		      case 'string':
		      case 'boolean':
		        tmp = primitiveCompareTo(a, b);
		        break;
		      default:
		        tmp = compareToDoNotIntrinsicify(a, b);
		        break;
		    }
		    return tmp;
		  }
		  function doubleCompareTo(a, b) {
		    var tmp;
		    if (a < b) {
		      tmp = -1;
		    } else if (a > b) {
		      tmp = 1;
		    } else if (a === b) {
		      var tmp_0;
		      if (a !== 0) {
		        tmp_0 = 0;
		      } else {
		        // Inline function 'kotlin.js.asDynamic' call
		        var ia = 1 / a;
		        var tmp_1;
		        // Inline function 'kotlin.js.asDynamic' call
		        if (ia === 1 / b) {
		          tmp_1 = 0;
		        } else {
		          if (ia < 0) {
		            tmp_1 = -1;
		          } else {
		            tmp_1 = 1;
		          }
		        }
		        tmp_0 = tmp_1;
		      }
		      tmp = tmp_0;
		    } else if (a !== a) {
		      tmp = b !== b ? 0 : 1;
		    } else {
		      tmp = -1;
		    }
		    return tmp;
		  }
		  function primitiveCompareTo(a, b) {
		    return a < b ? -1 : a > b ? 1 : 0;
		  }
		  function compareToDoNotIntrinsicify(a, b) {
		    return a.n1(b);
		  }
		  function identityHashCode(obj) {
		    return getObjectHashCode(obj);
		  }
		  function getObjectHashCode(obj) {
		    // Inline function 'kotlin.js.jsIn' call
		    if (!('kotlinHashCodeValue$' in obj)) {
		      var hash = calculateRandomHash();
		      var descriptor = new Object();
		      descriptor.value = hash;
		      descriptor.enumerable = false;
		      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
		    }
		    // Inline function 'kotlin.js.unsafeCast' call
		    return obj['kotlinHashCodeValue$'];
		  }
		  function calculateRandomHash() {
		    // Inline function 'kotlin.js.jsBitwiseOr' call
		    return Math.random() * 4.294967296E9 | 0;
		  }
		  function objectCreate(proto) {
		    proto = proto === VOID ? null : proto;
		    return Object.create(proto);
		  }
		  function defineProp(obj, name, getter, setter) {
		    return Object.defineProperty(obj, name, {configurable: true, get: getter, set: setter});
		  }
		  function toString_1(o) {
		    var tmp;
		    if (o == null) {
		      tmp = 'null';
		    } else if (isArrayish(o)) {
		      tmp = '[...]';
		    } else if (!(typeof o.toString === 'function')) {
		      tmp = anyToString(o);
		    } else {
		      // Inline function 'kotlin.js.unsafeCast' call
		      tmp = o.toString();
		    }
		    return tmp;
		  }
		  function equals(obj1, obj2) {
		    if (obj1 == null) {
		      return obj2 == null;
		    }
		    if (obj2 == null) {
		      return false;
		    }
		    if (typeof obj1 === 'object' && typeof obj1.equals === 'function') {
		      return obj1.equals(obj2);
		    }
		    if (obj1 !== obj1) {
		      return obj2 !== obj2;
		    }
		    if (typeof obj1 === 'number' && typeof obj2 === 'number') {
		      var tmp;
		      if (obj1 === obj2) {
		        var tmp_0;
		        if (obj1 !== 0) {
		          tmp_0 = true;
		        } else {
		          // Inline function 'kotlin.js.asDynamic' call
		          var tmp_1 = 1 / obj1;
		          // Inline function 'kotlin.js.asDynamic' call
		          tmp_0 = tmp_1 === 1 / obj2;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = false;
		      }
		      return tmp;
		    }
		    return obj1 === obj2;
		  }
		  function hashCode(obj) {
		    if (obj == null)
		      return 0;
		    var typeOf = typeof obj;
		    var tmp;
		    switch (typeOf) {
		      case 'object':
		        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
		        break;
		      case 'function':
		        tmp = getObjectHashCode(obj);
		        break;
		      case 'number':
		        tmp = getNumberHashCode(obj);
		        break;
		      case 'boolean':
		        // Inline function 'kotlin.js.unsafeCast' call

		        tmp = getBooleanHashCode(obj);
		        break;
		      case 'string':
		        tmp = getStringHashCode(String(obj));
		        break;
		      case 'bigint':
		        tmp = getBigIntHashCode(obj);
		        break;
		      case 'symbol':
		        tmp = getSymbolHashCode(obj);
		        break;
		      default:
		        tmp = function () {
		          throw new Error('Unexpected typeof `' + typeOf + '`');
		        }();
		        break;
		    }
		    return tmp;
		  }
		  function anyToString(o) {
		    return Object.prototype.toString.call(o);
		  }
		  function getBooleanHashCode(value) {
		    return value ? 1231 : 1237;
		  }
		  function getStringHashCode(str) {
		    var hash = 0;
		    var length = str.length;
		    var inductionVariable = 0;
		    var last = length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.js.asDynamic' call
		        var code = str.charCodeAt(i);
		        hash = imul(hash, 31) + code | 0;
		      }
		       while (!(i === last));
		    return hash;
		  }
		  function getBigIntHashCode(value) {
		    var shiftNumber = BigInt(32);
		    var MASK = BigInt(4.294967295E9);
		    var bigNumber = value < 0 ? -value : value;
		    var hashCode = 0;
		    var signum = value < 0 ? -1 : 1;
		    while (bigNumber != 0) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      var chunk = Number(bigNumber & MASK);
		      hashCode = imul(31, hashCode) + chunk | 0;
		      bigNumber = bigNumber >> shiftNumber;
		    }
		    return imul(hashCode, signum);
		  }
		  function getSymbolHashCode(value) {
		    var hashCodeMap = symbolIsSharable(value) ? getSymbolMap() : getSymbolWeakMap();
		    var cachedHashCode = hashCodeMap.get(value);
		    if (cachedHashCode !== VOID)
		      return cachedHashCode;
		    var hash = calculateRandomHash();
		    hashCodeMap.set(value, hash);
		    return hash;
		  }
		  function symbolIsSharable(symbol) {
		    return Symbol.keyFor(symbol) != VOID;
		  }
		  function getSymbolMap() {
		    if (symbolMap === VOID) {
		      symbolMap = new Map();
		    }
		    return symbolMap;
		  }
		  function getSymbolWeakMap() {
		    if (symbolWeakMap === VOID) {
		      symbolWeakMap = new WeakMap();
		    }
		    return symbolWeakMap;
		  }
		  var symbolMap;
		  var symbolWeakMap;
		  function captureStack(instance, constructorFunction) {
		    if (Error.captureStackTrace != null) {
		      Error.captureStackTrace(instance, constructorFunction);
		    } else {
		      // Inline function 'kotlin.js.asDynamic' call
		      instance.stack = (new Error()).stack;
		    }
		  }
		  function protoOf(constructor) {
		    return constructor.prototype;
		  }
		  function newThrowable(message, cause) {
		    var throwable = new Error();
		    var tmp;
		    if (isUndefined(message)) {
		      var tmp_0;
		      if (isUndefined(cause)) {
		        tmp_0 = message;
		      } else {
		        var tmp1_elvis_lhs = cause == null ? null : cause.toString();
		        tmp_0 = tmp1_elvis_lhs == null ? VOID : tmp1_elvis_lhs;
		      }
		      tmp = tmp_0;
		    } else {
		      tmp = message == null ? VOID : message;
		    }
		    throwable.message = tmp;
		    throwable.cause = cause;
		    throwable.name = 'Throwable';
		    // Inline function 'kotlin.js.unsafeCast' call
		    return throwable;
		  }
		  function isUndefined(value) {
		    return value === VOID;
		  }
		  function extendThrowable(this_, message, cause) {
		    Error.call(this_);
		    setPropertiesToThrowableInstance(this_, message, cause);
		  }
		  function setPropertiesToThrowableInstance(this_, message, cause) {
		    var errorInfo = calculateErrorInfo(Object.getPrototypeOf(this_));
		    if ((errorInfo & 1) === 0) {
		      var tmp;
		      if (message == null) {
		        var tmp_0;
		        if (!(message === null)) {
		          var tmp1_elvis_lhs = cause == null ? null : cause.toString();
		          tmp_0 = tmp1_elvis_lhs == null ? VOID : tmp1_elvis_lhs;
		        } else {
		          tmp_0 = VOID;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = message;
		      }
		      this_.message = tmp;
		    }
		    if ((errorInfo & 2) === 0) {
		      this_.cause = cause;
		    }
		    this_.name = Object.getPrototypeOf(this_).constructor.name;
		  }
		  function ensureNotNull(v) {
		    var tmp;
		    if (v == null) {
		      THROW_NPE();
		    } else {
		      tmp = v;
		    }
		    return tmp;
		  }
		  function THROW_NPE() {
		    throw NullPointerException_init_$Create$();
		  }
		  function noWhenBranchMatchedException() {
		    throw NoWhenBranchMatchedException_init_$Create$();
		  }
		  function THROW_CCE() {
		    throw ClassCastException_init_$Create$();
		  }
		  function throwUninitializedPropertyAccessException(name) {
		    throw UninitializedPropertyAccessException_init_$Create$_0('lateinit property ' + name + ' has not been initialized');
		  }
		  function THROW_IAE(msg) {
		    throw IllegalArgumentException_init_$Create$_0(msg);
		  }
		  function get_ZERO() {
		    _init_properties_longJs_kt__elc2w5();
		    return ZERO;
		  }
		  var ZERO;
		  function get_ONE() {
		    _init_properties_longJs_kt__elc2w5();
		    return ONE;
		  }
		  var ONE;
		  function get_NEG_ONE() {
		    _init_properties_longJs_kt__elc2w5();
		    return NEG_ONE;
		  }
		  var NEG_ONE;
		  function get_MAX_VALUE() {
		    _init_properties_longJs_kt__elc2w5();
		    return MAX_VALUE;
		  }
		  var MAX_VALUE;
		  function get_MIN_VALUE() {
		    _init_properties_longJs_kt__elc2w5();
		    return MIN_VALUE;
		  }
		  var MIN_VALUE;
		  function get_TWO_PWR_24_() {
		    _init_properties_longJs_kt__elc2w5();
		    return TWO_PWR_24_;
		  }
		  var TWO_PWR_24_;
		  function compare(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    if (equalsLong(_this__u8e3s4, other)) {
		      return 0;
		    }
		    var thisNeg = isNegative(_this__u8e3s4);
		    var otherNeg = isNegative(other);
		    return thisNeg && !otherNeg ? -1 : !thisNeg && otherNeg ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
		  }
		  function add(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    var a48 = _this__u8e3s4.u_1 >>> 16 | 0;
		    var a32 = _this__u8e3s4.u_1 & 65535;
		    var a16 = _this__u8e3s4.t_1 >>> 16 | 0;
		    var a00 = _this__u8e3s4.t_1 & 65535;
		    var b48 = other.u_1 >>> 16 | 0;
		    var b32 = other.u_1 & 65535;
		    var b16 = other.t_1 >>> 16 | 0;
		    var b00 = other.t_1 & 65535;
		    var c48 = 0;
		    var c32 = 0;
		    var c16 = 0;
		    var c00 = 0;
		    c00 = c00 + (a00 + b00 | 0) | 0;
		    c16 = c16 + (c00 >>> 16 | 0) | 0;
		    c00 = c00 & 65535;
		    c16 = c16 + (a16 + b16 | 0) | 0;
		    c32 = c32 + (c16 >>> 16 | 0) | 0;
		    c16 = c16 & 65535;
		    c32 = c32 + (a32 + b32 | 0) | 0;
		    c48 = c48 + (c32 >>> 16 | 0) | 0;
		    c32 = c32 & 65535;
		    c48 = c48 + (a48 + b48 | 0) | 0;
		    c48 = c48 & 65535;
		    return new Long(c16 << 16 | c00, c48 << 16 | c32);
		  }
		  function subtract(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return add(_this__u8e3s4, other.r2());
		  }
		  function multiply(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    if (isZero(_this__u8e3s4)) {
		      return get_ZERO();
		    } else if (isZero(other)) {
		      return get_ZERO();
		    }
		    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
		      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
		    } else if (equalsLong(other, get_MIN_VALUE())) {
		      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
		    }
		    if (isNegative(_this__u8e3s4)) {
		      var tmp;
		      if (isNegative(other)) {
		        tmp = multiply(negate(_this__u8e3s4), negate(other));
		      } else {
		        tmp = negate(multiply(negate(_this__u8e3s4), other));
		      }
		      return tmp;
		    } else if (isNegative(other)) {
		      return negate(multiply(_this__u8e3s4, negate(other)));
		    }
		    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) && lessThan(other, get_TWO_PWR_24_())) {
		      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
		    }
		    var a48 = _this__u8e3s4.u_1 >>> 16 | 0;
		    var a32 = _this__u8e3s4.u_1 & 65535;
		    var a16 = _this__u8e3s4.t_1 >>> 16 | 0;
		    var a00 = _this__u8e3s4.t_1 & 65535;
		    var b48 = other.u_1 >>> 16 | 0;
		    var b32 = other.u_1 & 65535;
		    var b16 = other.t_1 >>> 16 | 0;
		    var b00 = other.t_1 & 65535;
		    var c48 = 0;
		    var c32 = 0;
		    var c16 = 0;
		    var c00 = 0;
		    c00 = c00 + imul(a00, b00) | 0;
		    c16 = c16 + (c00 >>> 16 | 0) | 0;
		    c00 = c00 & 65535;
		    c16 = c16 + imul(a16, b00) | 0;
		    c32 = c32 + (c16 >>> 16 | 0) | 0;
		    c16 = c16 & 65535;
		    c16 = c16 + imul(a00, b16) | 0;
		    c32 = c32 + (c16 >>> 16 | 0) | 0;
		    c16 = c16 & 65535;
		    c32 = c32 + imul(a32, b00) | 0;
		    c48 = c48 + (c32 >>> 16 | 0) | 0;
		    c32 = c32 & 65535;
		    c32 = c32 + imul(a16, b16) | 0;
		    c48 = c48 + (c32 >>> 16 | 0) | 0;
		    c32 = c32 & 65535;
		    c32 = c32 + imul(a00, b32) | 0;
		    c48 = c48 + (c32 >>> 16 | 0) | 0;
		    c32 = c32 & 65535;
		    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
		    c48 = c48 & 65535;
		    return new Long(c16 << 16 | c00, c48 << 16 | c32);
		  }
		  function divide(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    if (isZero(other)) {
		      throw Exception_init_$Create$_0('division by zero');
		    } else if (isZero(_this__u8e3s4)) {
		      return get_ZERO();
		    }
		    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
		      if (equalsLong(other, get_ONE()) || equalsLong(other, get_NEG_ONE())) {
		        return get_MIN_VALUE();
		      } else if (equalsLong(other, get_MIN_VALUE())) {
		        return get_ONE();
		      } else {
		        var halfThis = shiftRight(_this__u8e3s4, 1);
		        var approx = shiftLeft(halfThis.p2(other), 1);
		        if (equalsLong(approx, get_ZERO())) {
		          return isNegative(other) ? get_ONE() : get_NEG_ONE();
		        } else {
		          var rem = subtract(_this__u8e3s4, multiply(other, approx));
		          return add(approx, rem.p2(other));
		        }
		      }
		    } else if (equalsLong(other, get_MIN_VALUE())) {
		      return get_ZERO();
		    }
		    if (isNegative(_this__u8e3s4)) {
		      var tmp;
		      if (isNegative(other)) {
		        tmp = negate(_this__u8e3s4).p2(negate(other));
		      } else {
		        tmp = negate(negate(_this__u8e3s4).p2(other));
		      }
		      return tmp;
		    } else if (isNegative(other)) {
		      return negate(_this__u8e3s4.p2(negate(other)));
		    }
		    var res = get_ZERO();
		    var rem_0 = _this__u8e3s4;
		    while (greaterThanOrEqual(rem_0, other)) {
		      var approxDouble = toNumber(rem_0) / toNumber(other);
		      var approx2 = Math.max(1.0, Math.floor(approxDouble));
		      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
		      var delta = log2 <= 48 ? 1.0 : Math.pow(2.0, log2 - 48);
		      var approxRes = fromNumber(approx2);
		      var approxRem = multiply(approxRes, other);
		      while (isNegative(approxRem) || greaterThan(approxRem, rem_0)) {
		        approx2 = approx2 - delta;
		        approxRes = fromNumber(approx2);
		        approxRem = multiply(approxRes, other);
		      }
		      if (isZero(approxRes)) {
		        approxRes = get_ONE();
		      }
		      res = add(res, approxRes);
		      rem_0 = subtract(rem_0, approxRem);
		    }
		    return res;
		  }
		  function modulo(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.p2(other), other));
		  }
		  function shiftLeft(_this__u8e3s4, numBits) {
		    _init_properties_longJs_kt__elc2w5();
		    var numBits_0 = numBits & 63;
		    if (numBits_0 === 0) {
		      return _this__u8e3s4;
		    } else {
		      if (numBits_0 < 32) {
		        return new Long(_this__u8e3s4.t_1 << numBits_0, _this__u8e3s4.u_1 << numBits_0 | (_this__u8e3s4.t_1 >>> (32 - numBits_0 | 0) | 0));
		      } else {
		        return new Long(0, _this__u8e3s4.t_1 << (numBits_0 - 32 | 0));
		      }
		    }
		  }
		  function shiftRight(_this__u8e3s4, numBits) {
		    _init_properties_longJs_kt__elc2w5();
		    var numBits_0 = numBits & 63;
		    if (numBits_0 === 0) {
		      return _this__u8e3s4;
		    } else {
		      if (numBits_0 < 32) {
		        return new Long(_this__u8e3s4.t_1 >>> numBits_0 | 0 | _this__u8e3s4.u_1 << (32 - numBits_0 | 0), _this__u8e3s4.u_1 >> numBits_0);
		      } else {
		        return new Long(_this__u8e3s4.u_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.u_1 >= 0 ? 0 : -1);
		      }
		    }
		  }
		  function shiftRightUnsigned(_this__u8e3s4, numBits) {
		    _init_properties_longJs_kt__elc2w5();
		    var numBits_0 = numBits & 63;
		    if (numBits_0 === 0) {
		      return _this__u8e3s4;
		    } else {
		      if (numBits_0 < 32) {
		        return new Long(_this__u8e3s4.t_1 >>> numBits_0 | 0 | _this__u8e3s4.u_1 << (32 - numBits_0 | 0), _this__u8e3s4.u_1 >>> numBits_0 | 0);
		      } else {
		        var tmp;
		        if (numBits_0 === 32) {
		          tmp = new Long(_this__u8e3s4.u_1, 0);
		        } else {
		          tmp = new Long(_this__u8e3s4.u_1 >>> (numBits_0 - 32 | 0) | 0, 0);
		        }
		        return tmp;
		      }
		    }
		  }
		  function toNumber(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.u_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
		  }
		  function toStringImpl(_this__u8e3s4, radix) {
		    _init_properties_longJs_kt__elc2w5();
		    if (radix < 2 || 36 < radix) {
		      throw Exception_init_$Create$_0('radix out of range: ' + radix);
		    }
		    if (isZero(_this__u8e3s4)) {
		      return '0';
		    }
		    if (isNegative(_this__u8e3s4)) {
		      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
		        var radixLong = fromInt(radix);
		        var div = _this__u8e3s4.p2(radixLong);
		        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).b3();
		        var tmp = toStringImpl(div, radix);
		        // Inline function 'kotlin.js.unsafeCast' call
		        // Inline function 'kotlin.js.asDynamic' call
		        return tmp + rem.toString(radix);
		      } else {
		        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
		      }
		    }
		    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
		    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
		    var rem_0 = _this__u8e3s4;
		    var result = '';
		    while (true) {
		      var remDiv = rem_0.p2(radixToPower);
		      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).b3();
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var digits = intval.toString(radix);
		      rem_0 = remDiv;
		      if (isZero(rem_0)) {
		        return digits + result;
		      } else {
		        while (digits.length < digitsPerTime) {
		          digits = '0' + digits;
		        }
		        result = digits + result;
		      }
		    }
		  }
		  function equalsLong(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.u_1 === other.u_1 && _this__u8e3s4.t_1 === other.t_1;
		  }
		  function hashCode_0(l) {
		    _init_properties_longJs_kt__elc2w5();
		    return l.t_1 ^ l.u_1;
		  }
		  function fromInt(value) {
		    _init_properties_longJs_kt__elc2w5();
		    return new Long(value, value < 0 ? -1 : 0);
		  }
		  function isNegative(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.u_1 < 0;
		  }
		  function isZero(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.u_1 === 0 && _this__u8e3s4.t_1 === 0;
		  }
		  function isOdd(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return (_this__u8e3s4.t_1 & 1) === 1;
		  }
		  function negate(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.r2();
		  }
		  function lessThan(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return compare(_this__u8e3s4, other) < 0;
		  }
		  function fromNumber(value) {
		    _init_properties_longJs_kt__elc2w5();
		    if (isNaN_0(value)) {
		      return get_ZERO();
		    } else if (value <= -9.223372036854776E18) {
		      return get_MIN_VALUE();
		    } else if (value + 1 >= 9.223372036854776E18) {
		      return get_MAX_VALUE();
		    } else if (value < 0) {
		      return negate(fromNumber(-value));
		    } else {
		      var twoPwr32 = 4.294967296E9;
		      // Inline function 'kotlin.js.jsBitwiseOr' call
		      var tmp = value % twoPwr32 | 0;
		      // Inline function 'kotlin.js.jsBitwiseOr' call
		      var tmp$ret$1 = value / twoPwr32 | 0;
		      return new Long(tmp, tmp$ret$1);
		    }
		  }
		  function greaterThan(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return compare(_this__u8e3s4, other) > 0;
		  }
		  function greaterThanOrEqual(_this__u8e3s4, other) {
		    _init_properties_longJs_kt__elc2w5();
		    return compare(_this__u8e3s4, other) >= 0;
		  }
		  function getLowBitsUnsigned(_this__u8e3s4) {
		    _init_properties_longJs_kt__elc2w5();
		    return _this__u8e3s4.t_1 >= 0 ? _this__u8e3s4.t_1 : 4.294967296E9 + _this__u8e3s4.t_1;
		  }
		  var properties_initialized_longJs_kt_4syf89;
		  function _init_properties_longJs_kt__elc2w5() {
		    if (!properties_initialized_longJs_kt_4syf89) {
		      properties_initialized_longJs_kt_4syf89 = true;
		      ZERO = fromInt(0);
		      ONE = fromInt(1);
		      NEG_ONE = fromInt(-1);
		      MAX_VALUE = new Long(-1, 2147483647);
		      MIN_VALUE = new Long(0, -2147483648);
		      TWO_PWR_24_ = fromInt(16777216);
		    }
		  }
		  function createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {
		    var undef = VOID;
		    var iid = kind === 'interface' ? generateInterfaceId() : VOID;
		    return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undef, defaultConstructor: defaultConstructor, iid: iid};
		  }
		  function generateInterfaceId() {
		    if (globalInterfaceId === VOID) {
		      globalInterfaceId = 0;
		    }
		    // Inline function 'kotlin.js.unsafeCast' call
		    globalInterfaceId = globalInterfaceId + 1 | 0;
		    // Inline function 'kotlin.js.unsafeCast' call
		    return globalInterfaceId;
		  }
		  var globalInterfaceId;
		  function initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
		    if (!(parent == null)) {
		      ctor.prototype = Object.create(parent.prototype);
		      ctor.prototype.constructor = ctor;
		    }
		    var metadata = createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);
		    ctor.$metadata$ = metadata;
		    if (!(interfaces == null)) {
		      var receiver = !equals(metadata.iid, VOID) ? ctor : ctor.prototype;
		      receiver.$imask$ = implement(interfaces);
		    }
		  }
		  function initMetadataForClass(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
		    var kind = 'class';
		    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
		  }
		  function initMetadataForObject(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
		    var kind = 'object';
		    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
		  }
		  function initMetadataForInterface(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
		    var kind = 'interface';
		    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
		  }
		  function initMetadataForLambda(ctor, parent, interfaces, suspendArity) {
		    initMetadataForClass(ctor, 'Lambda', VOID, parent, interfaces, suspendArity, VOID, VOID);
		  }
		  function initMetadataForCoroutine(ctor, parent, interfaces, suspendArity) {
		    initMetadataForClass(ctor, 'Coroutine', VOID, parent, interfaces, suspendArity, VOID, VOID);
		  }
		  function initMetadataForCompanion(ctor, parent, interfaces, suspendArity) {
		    initMetadataForObject(ctor, 'Companion', VOID, parent, interfaces, suspendArity, VOID, VOID);
		  }
		  function classMeta(name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {
		    return createMetadata('class', name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);
		  }
		  function arrayConcat(args) {
		    var len = args.length;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var typed = Array(len);
		    var inductionVariable = 0;
		    var last = len - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var arr = args[i];
		        if (!(!(arr == null) ? isArray(arr) : false)) {
		          typed[i] = [].slice.call(arr);
		        } else {
		          typed[i] = arr;
		        }
		      }
		       while (!(i === last));
		    return [].concat.apply([], typed);
		  }
		  function toByte(a) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    return a << 24 >> 24;
		  }
		  function numberToInt(a) {
		    var tmp;
		    if (a instanceof Long) {
		      tmp = a.b3();
		    } else {
		      tmp = doubleToInt(a);
		    }
		    return tmp;
		  }
		  function doubleToInt(a) {
		    var tmp;
		    if (a > 2147483647) {
		      tmp = 2147483647;
		    } else if (a < -2147483648) {
		      tmp = -2147483648;
		    } else {
		      // Inline function 'kotlin.js.jsBitwiseOr' call
		      tmp = a | 0;
		    }
		    return tmp;
		  }
		  function numberToDouble(a) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    return +a;
		  }
		  function toShort(a) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    return a << 16 >> 16;
		  }
		  function numberToLong(a) {
		    var tmp;
		    if (a instanceof Long) {
		      tmp = a;
		    } else {
		      tmp = fromNumber(a);
		    }
		    return tmp;
		  }
		  function numberToChar(a) {
		    // Inline function 'kotlin.toUShort' call
		    var this_0 = numberToInt(a);
		    var tmp$ret$0 = _UShort___init__impl__jigrne(toShort(this_0));
		    return _Char___init__impl__6a9atx_0(tmp$ret$0);
		  }
		  function toLong(a) {
		    return fromInt(a);
		  }
		  function ByteCompanionObject() {
		    this.MIN_VALUE = -128;
		    this.MAX_VALUE = 127;
		    this.SIZE_BYTES = 1;
		    this.SIZE_BITS = 8;
		  }
		  protoOf(ByteCompanionObject).f3 = function () {
		    return this.MIN_VALUE;
		  };
		  protoOf(ByteCompanionObject).g3 = function () {
		    return this.MAX_VALUE;
		  };
		  protoOf(ByteCompanionObject).h3 = function () {
		    return this.SIZE_BYTES;
		  };
		  protoOf(ByteCompanionObject).i3 = function () {
		    return this.SIZE_BITS;
		  };
		  var ByteCompanionObject_instance;
		  function ShortCompanionObject() {
		    this.MIN_VALUE = -32768;
		    this.MAX_VALUE = 32767;
		    this.SIZE_BYTES = 2;
		    this.SIZE_BITS = 16;
		  }
		  protoOf(ShortCompanionObject).f3 = function () {
		    return this.MIN_VALUE;
		  };
		  protoOf(ShortCompanionObject).g3 = function () {
		    return this.MAX_VALUE;
		  };
		  protoOf(ShortCompanionObject).h3 = function () {
		    return this.SIZE_BYTES;
		  };
		  protoOf(ShortCompanionObject).i3 = function () {
		    return this.SIZE_BITS;
		  };
		  var ShortCompanionObject_instance;
		  function IntCompanionObject() {
		    this.MIN_VALUE = -2147483648;
		    this.MAX_VALUE = 2147483647;
		    this.SIZE_BYTES = 4;
		    this.SIZE_BITS = 32;
		  }
		  protoOf(IntCompanionObject).f3 = function () {
		    return this.MIN_VALUE;
		  };
		  protoOf(IntCompanionObject).g3 = function () {
		    return this.MAX_VALUE;
		  };
		  protoOf(IntCompanionObject).h3 = function () {
		    return this.SIZE_BYTES;
		  };
		  protoOf(IntCompanionObject).i3 = function () {
		    return this.SIZE_BITS;
		  };
		  var IntCompanionObject_instance;
		  function FloatCompanionObject() {
		    this.MIN_VALUE = 1.4E-45;
		    this.MAX_VALUE = 3.4028235E38;
		    this.POSITIVE_INFINITY = Infinity;
		    this.NEGATIVE_INFINITY = -Infinity;
		    this.NaN = NaN;
		    this.SIZE_BYTES = 4;
		    this.SIZE_BITS = 32;
		  }
		  protoOf(FloatCompanionObject).f3 = function () {
		    return this.MIN_VALUE;
		  };
		  protoOf(FloatCompanionObject).g3 = function () {
		    return this.MAX_VALUE;
		  };
		  protoOf(FloatCompanionObject).j3 = function () {
		    return this.POSITIVE_INFINITY;
		  };
		  protoOf(FloatCompanionObject).k3 = function () {
		    return this.NEGATIVE_INFINITY;
		  };
		  protoOf(FloatCompanionObject).l3 = function () {
		    return this.NaN;
		  };
		  protoOf(FloatCompanionObject).h3 = function () {
		    return this.SIZE_BYTES;
		  };
		  protoOf(FloatCompanionObject).i3 = function () {
		    return this.SIZE_BITS;
		  };
		  var FloatCompanionObject_instance;
		  function DoubleCompanionObject() {
		    this.MIN_VALUE = 4.9E-324;
		    this.MAX_VALUE = 1.7976931348623157E308;
		    this.POSITIVE_INFINITY = Infinity;
		    this.NEGATIVE_INFINITY = -Infinity;
		    this.NaN = NaN;
		    this.SIZE_BYTES = 8;
		    this.SIZE_BITS = 64;
		  }
		  protoOf(DoubleCompanionObject).f3 = function () {
		    return this.MIN_VALUE;
		  };
		  protoOf(DoubleCompanionObject).g3 = function () {
		    return this.MAX_VALUE;
		  };
		  protoOf(DoubleCompanionObject).j3 = function () {
		    return this.POSITIVE_INFINITY;
		  };
		  protoOf(DoubleCompanionObject).k3 = function () {
		    return this.NEGATIVE_INFINITY;
		  };
		  protoOf(DoubleCompanionObject).l3 = function () {
		    return this.NaN;
		  };
		  protoOf(DoubleCompanionObject).h3 = function () {
		    return this.SIZE_BYTES;
		  };
		  protoOf(DoubleCompanionObject).i3 = function () {
		    return this.SIZE_BITS;
		  };
		  var DoubleCompanionObject_instance;
		  function StringCompanionObject() {
		  }
		  var StringCompanionObject_instance;
		  function BooleanCompanionObject() {
		  }
		  var BooleanCompanionObject_instance;
		  function numberRangeToNumber(start, endInclusive) {
		    return new IntRange(start, endInclusive);
		  }
		  function get_propertyRefClassMetadataCache() {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    return propertyRefClassMetadataCache;
		  }
		  var propertyRefClassMetadataCache;
		  function metadataObject() {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    return classMeta(VOID, VOID, VOID, VOID, VOID);
		  }
		  function getPropertyCallableRef(name, paramCount, superType, getter, setter) {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    getter.get = getter;
		    getter.set = setter;
		    getter.callableName = name;
		    // Inline function 'kotlin.js.unsafeCast' call
		    return getPropertyRefClass(getter, getKPropMetadata(paramCount, setter), getInterfaceMaskFor(getter, superType));
		  }
		  function getPropertyRefClass(obj, metadata, imask) {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    obj.$metadata$ = metadata;
		    obj.constructor = obj;
		    obj.$imask$ = imask;
		    return obj;
		  }
		  function getKPropMetadata(paramCount, setter) {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    return get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
		  }
		  function getInterfaceMaskFor(obj, superType) {
		    _init_properties_reflectRuntime_kt__5r4uu3();
		    var tmp0_elvis_lhs = obj.$imask$;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp$ret$2 = [superType];
		      tmp = implement(tmp$ret$2);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  var properties_initialized_reflectRuntime_kt_inkhwd;
		  function _init_properties_reflectRuntime_kt__5r4uu3() {
		    if (!properties_initialized_reflectRuntime_kt_inkhwd) {
		      properties_initialized_reflectRuntime_kt_inkhwd = true;
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp = [metadataObject(), metadataObject()];
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp_0 = [metadataObject(), metadataObject()];
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      propertyRefClassMetadataCache = [tmp, tmp_0, [metadataObject(), metadataObject()]];
		    }
		  }
		  function isArrayish(o) {
		    return isJsArray(o) || isView(o);
		  }
		  function isJsArray(obj) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    return Array.isArray(obj);
		  }
		  function isInterface(obj, iface) {
		    return isInterfaceImpl(obj, iface.$metadata$.iid);
		  }
		  function isInterfaceImpl(obj, iface) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp0_elvis_lhs = obj.$imask$;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return false;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var mask = tmp;
		    return isBitSet(mask, iface);
		  }
		  function isArray(obj) {
		    var tmp;
		    if (isJsArray(obj)) {
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = !obj.$type$;
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  }
		  function isSuspendFunction(obj, arity) {
		    var objTypeOf = typeof obj;
		    if (objTypeOf === 'function') {
		      // Inline function 'kotlin.js.unsafeCast' call
		      return obj.$arity === arity;
		    }
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp1_safe_receiver = obj == null ? null : obj.constructor;
		    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.$metadata$;
		    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.suspendArity;
		    var tmp;
		    if (tmp3_elvis_lhs == null) {
		      return false;
		    } else {
		      tmp = tmp3_elvis_lhs;
		    }
		    var suspendArity = tmp;
		    var result = false;
		    var inductionVariable = 0;
		    var last = suspendArity.length;
		    $l$loop: while (inductionVariable < last) {
		      var item = suspendArity[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      if (arity === item) {
		        result = true;
		        break $l$loop;
		      }
		    }
		    return result;
		  }
		  function isNumber(a) {
		    var tmp;
		    if (typeof a === 'number') {
		      tmp = true;
		    } else {
		      tmp = a instanceof Long;
		    }
		    return tmp;
		  }
		  function isCharSequence(value) {
		    return typeof value === 'string' || isInterface(value, CharSequence);
		  }
		  function isBooleanArray(a) {
		    return isJsArray(a) && a.$type$ === 'BooleanArray';
		  }
		  function isByteArray(a) {
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return a instanceof Int8Array;
		  }
		  function isShortArray(a) {
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return a instanceof Int16Array;
		  }
		  function isCharArray(a) {
		    var tmp;
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    if (a instanceof Uint16Array) {
		      tmp = a.$type$ === 'CharArray';
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  }
		  function isIntArray(a) {
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return a instanceof Int32Array;
		  }
		  function isFloatArray(a) {
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return a instanceof Float32Array;
		  }
		  function isLongArray(a) {
		    return isJsArray(a) && a.$type$ === 'LongArray';
		  }
		  function isDoubleArray(a) {
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return a instanceof Float64Array;
		  }
		  function jsIsType(obj, jsClass) {
		    if (jsClass === Object) {
		      return obj != null;
		    }
		    var objType = typeof obj;
		    var jsClassType = typeof jsClass;
		    if (obj == null || jsClass == null || (!(objType === 'object') && !(objType === 'function'))) {
		      return false;
		    }
		    var constructor = jsClassType === 'object' ? jsGetPrototypeOf(jsClass) : jsClass;
		    var klassMetadata = constructor.$metadata$;
		    if ((klassMetadata == null ? null : klassMetadata.kind) === 'interface') {
		      // Inline function 'kotlin.js.unsafeCast' call
		      var tmp1_elvis_lhs = klassMetadata.iid;
		      var tmp;
		      if (tmp1_elvis_lhs == null) {
		        return false;
		      } else {
		        tmp = tmp1_elvis_lhs;
		      }
		      var iid = tmp;
		      return isInterfaceImpl(obj, iid);
		    }
		    // Inline function 'kotlin.js.jsInstanceOf' call
		    return obj instanceof constructor;
		  }
		  function jsGetPrototypeOf(jsClass) {
		    return Object.getPrototypeOf(jsClass);
		  }
		  function calculateErrorInfo(proto) {
		    var tmp0_safe_receiver = proto.constructor;
		    var metadata = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.$metadata$;
		    var tmp2_safe_receiver = metadata == null ? null : metadata.errorInfo;
		    if (tmp2_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return tmp2_safe_receiver;
		    }
		    var result = 0;
		    if (hasProp(proto, 'message'))
		      result = result | 1;
		    if (hasProp(proto, 'cause'))
		      result = result | 2;
		    if (!(result === 3)) {
		      var parentProto = getPrototypeOf(proto);
		      if (parentProto != Error.prototype) {
		        result = result | calculateErrorInfo(parentProto);
		      }
		    }
		    if (!(metadata == null)) {
		      metadata.errorInfo = result;
		    }
		    return result;
		  }
		  function hasProp(proto, propName) {
		    return proto.hasOwnProperty(propName);
		  }
		  function getPrototypeOf(obj) {
		    return Object.getPrototypeOf(obj);
		  }
		  var VOID;
		  function fill(_this__u8e3s4, element, fromIndex, toIndex) {
		    fromIndex = fromIndex === VOID ? 0 : fromIndex;
		    toIndex = toIndex === VOID ? _this__u8e3s4.length : toIndex;
		    Companion_instance_5.n3(fromIndex, toIndex, _this__u8e3s4.length);
		    // Inline function 'kotlin.js.nativeFill' call
		    // Inline function 'kotlin.js.asDynamic' call
		    _this__u8e3s4.fill(element, fromIndex, toIndex);
		  }
		  function asList(_this__u8e3s4) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return new ArrayList(_this__u8e3s4);
		  }
		  function copyOf(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'withType' call
		    var type = 'CharArray';
		    var array = fillFrom(_this__u8e3s4, charArray(newSize));
		    array.$type$ = type;
		    return array;
		  }
		  function copyOf_0(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
		  }
		  function copyOf_1(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
		  }
		  function copyOf_2(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'withType' call
		    var type = 'LongArray';
		    var array = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
		    array.$type$ = type;
		    return array;
		  }
		  function copyOf_3(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
		  }
		  function copyOf_4(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
		  }
		  function copyOf_5(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
		  }
		  function copyOf_6(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'withType' call
		    var type = 'BooleanArray';
		    var array = arrayCopyResize(_this__u8e3s4, newSize, false);
		    array.$type$ = type;
		    return array;
		  }
		  function contentEquals(_this__u8e3s4, other) {
		    return contentEqualsInternal(_this__u8e3s4, other);
		  }
		  function contentHashCode(_this__u8e3s4) {
		    return contentHashCodeInternal(_this__u8e3s4);
		  }
		  function copyOf_7(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(newSize >= 0)) {
		      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
		      var message = 'Invalid new array size: ' + newSize + '.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return arrayCopyResize(_this__u8e3s4, newSize, null);
		  }
		  function contentToString(_this__u8e3s4) {
		    var tmp1_elvis_lhs = _this__u8e3s4 == null ? null : joinToString(_this__u8e3s4, ', ', '[', ']');
		    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
		  }
		  function decodeVarLenBase64(base64, fromBase64, resultLength) {
		    var result = new Int32Array(resultLength);
		    var index = 0;
		    var int = 0;
		    var shift = 0;
		    var inductionVariable = 0;
		    var last = base64.length;
		    while (inductionVariable < last) {
		      var char = charSequenceGet(base64, inductionVariable);
		      inductionVariable = inductionVariable + 1 | 0;
		      // Inline function 'kotlin.code' call
		      var sixBit = fromBase64[Char__toInt_impl_vasixd(char)];
		      int = int | (sixBit & 31) << shift;
		      if (sixBit < 32) {
		        var tmp1 = index;
		        index = tmp1 + 1 | 0;
		        result[tmp1] = int;
		        int = 0;
		        shift = 0;
		      } else {
		        shift = shift + 5 | 0;
		      }
		    }
		    return result;
		  }
		  function reverse(_this__u8e3s4) {
		    var midPoint = (_this__u8e3s4.l() / 2 | 0) - 1 | 0;
		    if (midPoint < 0)
		      return Unit_instance;
		    var reverseIndex = get_lastIndex_2(_this__u8e3s4);
		    var inductionVariable = 0;
		    if (inductionVariable <= midPoint)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var tmp = _this__u8e3s4.m(index);
		        _this__u8e3s4.z1(index, _this__u8e3s4.m(reverseIndex));
		        _this__u8e3s4.z1(reverseIndex, tmp);
		        reverseIndex = reverseIndex - 1 | 0;
		      }
		       while (!(index === midPoint));
		  }
		  function digitToIntImpl(_this__u8e3s4) {
		    // Inline function 'kotlin.code' call
		    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
		    var index = binarySearchRange(Digit_getInstance().o3_1, ch);
		    var diff = ch - Digit_getInstance().o3_1[index] | 0;
		    return diff < 10 ? diff : -1;
		  }
		  function binarySearchRange(array, needle) {
		    var bottom = 0;
		    var top = array.length - 1 | 0;
		    var middle = -1;
		    var value = 0;
		    while (bottom <= top) {
		      middle = (bottom + top | 0) / 2 | 0;
		      value = array[middle];
		      if (needle > value)
		        bottom = middle + 1 | 0;
		      else if (needle === value)
		        return middle;
		      else
		        top = middle - 1 | 0;
		    }
		    return middle - (needle < value ? 1 : 0) | 0;
		  }
		  function Digit() {
		    Digit_instance = this;
		    var tmp = this;
		    // Inline function 'kotlin.intArrayOf' call
		    tmp.o3_1 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
		  }
		  var Digit_instance;
		  function Digit_getInstance() {
		    if (Digit_instance == null)
		      new Digit();
		    return Digit_instance;
		  }
		  function isLowerCaseImpl(_this__u8e3s4) {
		    var tmp;
		    if (getLetterType(_this__u8e3s4) === 1) {
		      tmp = true;
		    } else {
		      // Inline function 'kotlin.code' call
		      var tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
		      tmp = isOtherLowercase(tmp$ret$0);
		    }
		    return tmp;
		  }
		  function getLetterType(_this__u8e3s4) {
		    // Inline function 'kotlin.code' call
		    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
		    var index = binarySearchRange(Letter_getInstance().p3_1, ch);
		    var rangeStart = Letter_getInstance().p3_1[index];
		    var rangeEnd = (rangeStart + Letter_getInstance().q3_1[index] | 0) - 1 | 0;
		    var code = Letter_getInstance().r3_1[index];
		    if (ch > rangeEnd) {
		      return 0;
		    }
		    var lastTwoBits = code & 3;
		    if (lastTwoBits === 0) {
		      var shift = 2;
		      var threshold = rangeStart;
		      var inductionVariable = 0;
		      if (inductionVariable <= 1)
		        do {
		          inductionVariable = inductionVariable + 1 | 0;
		          threshold = threshold + (code >> shift & 127) | 0;
		          if (threshold > ch) {
		            return 3;
		          }
		          shift = shift + 7 | 0;
		          threshold = threshold + (code >> shift & 127) | 0;
		          if (threshold > ch) {
		            return 0;
		          }
		          shift = shift + 7 | 0;
		        }
		         while (inductionVariable <= 1);
		      return 3;
		    }
		    if (code <= 7) {
		      return lastTwoBits;
		    }
		    var distance = ch - rangeStart | 0;
		    var shift_0 = code <= 31 ? distance % 2 | 0 : distance;
		    return code >> imul(2, shift_0) & 3;
		  }
		  function Letter() {
		    Letter_instance = this;
		    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
		    var fromBase64 = new Int32Array(128);
		    var inductionVariable = 0;
		    var last = charSequenceLength(toBase64) - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.code' call
		        var this_0 = charSequenceGet(toBase64, i);
		        fromBase64[Char__toInt_impl_vasixd(this_0)] = i;
		      }
		       while (inductionVariable <= last);
		    var rangeStartDiff = 'hCgBpCQGYHZH5BRpBPPPPPPRMP5BPPlCPP6BkEPPPPcPXPzBvBrB3BOiDoBHwD+E3DauCnFmBmB2D6E1BlBTiBmBlBP5BhBiBrBvBjBqBnBPRtBiCmCtBlB0BmB5BiB7BmBgEmChBZgCoEoGVpBSfRhBPqKQ2BwBYoFgB4CJuTiEvBuCuDrF5DgEgFlJ1DgFmBQtBsBRGsB+BPiBlD1EIjDPRPPPQPPPPPGQSQS/DxENVNU+B9zCwBwBPPCkDPNnBPqDYY1R8B7FkFgTgwGgwUwmBgKwBuBScmEP/BPPPPPPrBP8B7F1B/ErBqC6B7BiBmBfQsBUwCw/KwqIwLwETPcPjQgJxFgBlBsD';
		    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 222);
		    var start = new Int32Array(diff.length);
		    var inductionVariable_0 = 0;
		    var last_0 = diff.length - 1 | 0;
		    if (inductionVariable_0 <= last_0)
		      do {
		        var i_0 = inductionVariable_0;
		        inductionVariable_0 = inductionVariable_0 + 1 | 0;
		        if (i_0 === 0) {
		          start[i_0] = diff[i_0];
		        } else {
		          start[i_0] = start[i_0 - 1 | 0] + diff[i_0] | 0;
		        }
		      }
		       while (inductionVariable_0 <= last_0);
		    this.p3_1 = start;
		    var rangeLength = 'aaMBXHYH5BRpBPPPPPPRMP5BPPlCPPzBDOOPPcPXPzBvBjB3BOhDmBBpB7DoDYxB+EiBP1DoExBkBQhBekBPmBgBhBctBiBMWOOXhCsBpBkBUV3Ba4BkB0DlCgBXgBtD4FSdBfPhBPpKP0BvBXjEQ2CGsT8DhBtCqDpFvD1D3E0IrD2EkBJrBDOBsB+BPiBlB1EIjDPPPPPPPPPPPGPPMNLsBNPNPKCvBvBPPCkDPBmBPhDXXgD4B6FzEgDguG9vUtkB9JcuBSckEP/BPPPPPPBPf4FrBjEhBpC3B5BKaWPrBOwCk/KsCuLqDHPbPxPsFtEaaqDL';
		    this.q3_1 = decodeVarLenBase64(rangeLength, fromBase64, 222);
		    var rangeCategory = 'GFjgggUHGGFFZZZmzpz5qB6s6020B60ptltB6smt2sB60mz22B1+vv+8BZZ5s2850BW5q1ymtB506smzBF3q1q1qB1q1q1+Bgii4wDTm74g3KiggxqM60q1q1Bq1o1q1BF1qlrqrBZ2q5wprBGFZWWZGHFsjiooLowgmOowjkwCkgoiIk7ligGogiioBkwkiYkzj2oNoi+sbkwj04DghhkQ8wgiYkgoioDsgnkwC4gikQ//v+85BkwvoIsgoyI4yguI0whiwEowri4CoghsJowgqYowgm4DkwgsY/nwnzPowhmYkg6wI8yggZswikwHgxgmIoxgqYkwgk4DkxgmIkgoioBsgssoBgzgyI8g9gL8g9kI0wgwJoxgkoC0wgioFkw/wI0w53iF4gioYowjmgBHGq1qkgwBF1q1q8qBHwghuIwghyKk0goQkwgoQk3goQHGFHkyg0pBgxj6IoinkxDswno7Ikwhz9Bo0gioB8z48Rwli0xN0mpjoX8w78pDwltoqKHFGGwwgsIHFH3q1q16BFHWFZ1q10q1B2qlwq1B1q10q1B2q1yq1B6q1gq1Biq1qhxBir1qp1Bqt1q1qB1g1q1+B//3q16B///q1qBH/qlqq9Bholqq9B1i00a1q10qD1op1HkwmigEigiy6Cptogq1Bixo1kDq7/j00B2qgoBWGFm1lz50B6s5q1+BGWhggzhwBFFhgk4//Bo2jigE8wguI8wguI8wgugUog1qoB4qjmIwwi2KgkYHHH4lBgiFWkgIWoghssMmz5smrBZ3q1y50B5sm7gzBtz1smzB5smz50BqzqtmzB5sgzqzBF2/9//5BowgoIwmnkzPkwgk4C8ys65BkgoqI0wgy6FghquZo2giY0ghiIsgh24B4ghsQ8QF/v1q1OFs0O8iCHHF1qggz/B8wg6Iznv+//B08QgohsjK0QGFk7hsQ4gB';
		    this.r3_1 = decodeVarLenBase64(rangeCategory, fromBase64, 222);
		  }
		  var Letter_instance;
		  function Letter_getInstance() {
		    if (Letter_instance == null)
		      new Letter();
		    return Letter_instance;
		  }
		  function isOtherLowercase(_this__u8e3s4) {
		    var index = binarySearchRange(OtherLowercase_getInstance().s3_1, _this__u8e3s4);
		    return index >= 0 && _this__u8e3s4 < (OtherLowercase_getInstance().s3_1[index] + OtherLowercase_getInstance().t3_1[index] | 0);
		  }
		  function OtherLowercase() {
		    OtherLowercase_instance = this;
		    var tmp = this;
		    // Inline function 'kotlin.intArrayOf' call
		    tmp.s3_1 = new Int32Array([170, 186, 688, 704, 736, 837, 890, 7468, 7544, 7579, 8305, 8319, 8336, 8560, 9424, 11388, 42652, 42864, 43000, 43868]);
		    var tmp_0 = this;
		    // Inline function 'kotlin.intArrayOf' call
		    tmp_0.t3_1 = new Int32Array([1, 1, 9, 2, 5, 1, 1, 63, 1, 37, 1, 1, 13, 16, 26, 2, 2, 1, 2, 4]);
		  }
		  var OtherLowercase_instance;
		  function OtherLowercase_getInstance() {
		    if (OtherLowercase_instance == null)
		      new OtherLowercase();
		    return OtherLowercase_instance;
		  }
		  function titlecaseCharImpl(_this__u8e3s4) {
		    // Inline function 'kotlin.code' call
		    var code = Char__toInt_impl_vasixd(_this__u8e3s4);
		    if ((452 <= code ? code <= 460 : false) || (497 <= code ? code <= 499 : false)) {
		      return numberToChar(imul(3, (code + 1 | 0) / 3 | 0));
		    }
		    if ((4304 <= code ? code <= 4346 : false) || (4349 <= code ? code <= 4351 : false)) {
		      return _this__u8e3s4;
		    }
		    return uppercaseChar(_this__u8e3s4);
		  }
		  function isWhitespaceImpl(_this__u8e3s4) {
		    // Inline function 'kotlin.code' call
		    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
		    return (9 <= ch ? ch <= 13 : false) || (28 <= ch ? ch <= 32 : false) || ch === 160 || (ch > 4096 && (ch === 5760 || (8192 <= ch ? ch <= 8202 : false) || ch === 8232 || ch === 8233 || ch === 8239 || ch === 8287 || ch === 12288));
		  }
		  function isNaN_0(_this__u8e3s4) {
		    return !(_this__u8e3s4 === _this__u8e3s4);
		  }
		  function isInfinite(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 === Infinity) {
		      tmp = true;
		    } else {
		      tmp = _this__u8e3s4 === -Infinity;
		    }
		    return tmp;
		  }
		  function takeHighestOneBit(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 === 0) {
		      tmp = 0;
		    } else {
		      // Inline function 'kotlin.countLeadingZeroBits' call
		      tmp = 1 << (31 - clz32(_this__u8e3s4) | 0);
		    }
		    return tmp;
		  }
		  function isFinite(_this__u8e3s4) {
		    return !isInfinite(_this__u8e3s4) && !isNaN_0(_this__u8e3s4);
		  }
		  function isFinite_0(_this__u8e3s4) {
		    return !isInfinite_0(_this__u8e3s4) && !isNaN_1(_this__u8e3s4);
		  }
		  function isInfinite_0(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 === Infinity) {
		      tmp = true;
		    } else {
		      tmp = _this__u8e3s4 === -Infinity;
		    }
		    return tmp;
		  }
		  function isNaN_1(_this__u8e3s4) {
		    return !(_this__u8e3s4 === _this__u8e3s4);
		  }
		  function countTrailingZeroBits(_this__u8e3s4) {
		    var low = _this__u8e3s4.t_1;
		    return low === 0 ? 32 + countTrailingZeroBits_0(_this__u8e3s4.u_1) | 0 : countTrailingZeroBits_0(low);
		  }
		  function countTrailingZeroBits_0(_this__u8e3s4) {
		    // Inline function 'kotlin.countLeadingZeroBits' call
		    var this_0 = ~(_this__u8e3s4 | (-_this__u8e3s4 | 0));
		    return 32 - clz32(this_0) | 0;
		  }
		  function uintCompare(v1, v2) {
		    return compareTo(v1 ^ -2147483648, v2 ^ -2147483648);
		  }
		  function uintDivide(v1, v2) {
		    // Inline function 'kotlin.toUInt' call
		    // Inline function 'kotlin.UInt.toLong' call
		    // Inline function 'kotlin.uintToLong' call
		    var value = _UInt___get_data__impl__f0vqqw(v1);
		    var tmp = toLong(value).w2(new Long(-1, 0));
		    // Inline function 'kotlin.UInt.toLong' call
		    // Inline function 'kotlin.uintToLong' call
		    var value_0 = _UInt___get_data__impl__f0vqqw(v2);
		    var tmp$ret$3 = toLong(value_0).w2(new Long(-1, 0));
		    var this_0 = tmp.p2(tmp$ret$3);
		    return _UInt___init__impl__l7qpdl(this_0.b3());
		  }
		  function ulongCompare(v1, v2) {
		    return v1.y2(new Long(0, -2147483648)).v(v2.y2(new Long(0, -2147483648)));
		  }
		  function ulongDivide(v1, v2) {
		    // Inline function 'kotlin.ULong.toLong' call
		    var dividend = _ULong___get_data__impl__fggpzb(v1);
		    // Inline function 'kotlin.ULong.toLong' call
		    var divisor = _ULong___get_data__impl__fggpzb(v2);
		    if (divisor.v(new Long(0, 0)) < 0) {
		      var tmp;
		      // Inline function 'kotlin.ULong.compareTo' call
		      if (ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2)) < 0) {
		        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
		      } else {
		        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
		      }
		      return tmp;
		    }
		    if (dividend.v(new Long(0, 0)) >= 0) {
		      return _ULong___init__impl__c78o9k(dividend.p2(divisor));
		    }
		    var quotient = dividend.v2(1).p2(divisor).t2(1);
		    var rem = dividend.n2(quotient.o2(divisor));
		    // Inline function 'kotlin.Long.plus' call
		    var tmp_0;
		    // Inline function 'kotlin.ULong.compareTo' call
		    var this_0 = _ULong___init__impl__c78o9k(rem);
		    var other = _ULong___init__impl__c78o9k(divisor);
		    if (ulongCompare(_ULong___get_data__impl__fggpzb(this_0), _ULong___get_data__impl__fggpzb(other)) >= 0) {
		      tmp_0 = 1;
		    } else {
		      tmp_0 = 0;
		    }
		    var other_0 = tmp_0;
		    var tmp$ret$4 = quotient.m2(toLong(other_0));
		    return _ULong___init__impl__c78o9k(tmp$ret$4);
		  }
		  function ulongToString(value, base) {
		    if (value.v(new Long(0, 0)) >= 0)
		      return toString_2(value, base);
		    // Inline function 'kotlin.Long.div' call
		    var quotient = value.v2(1).p2(toLong(base)).t2(1);
		    // Inline function 'kotlin.Long.times' call
		    var tmp$ret$1 = quotient.o2(toLong(base));
		    var rem = value.n2(tmp$ret$1);
		    if (rem.v(toLong(base)) >= 0) {
		      // Inline function 'kotlin.Long.minus' call
		      rem = rem.n2(toLong(base));
		      // Inline function 'kotlin.Long.plus' call
		      quotient = quotient.m2(toLong(1));
		    }
		    return toString_2(quotient, base) + toString_2(rem, base);
		  }
		  function collectionToArray(collection) {
		    return collectionToArrayCommonImpl(collection);
		  }
		  function mapCapacity(expectedSize) {
		    return expectedSize;
		  }
		  function mapOf(pair) {
		    return hashMapOf([pair]);
		  }
		  function copyToArray(collection) {
		    var tmp;
		    // Inline function 'kotlin.js.asDynamic' call
		    if (collection.toArray !== undefined) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = collection.toArray();
		    } else {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = collectionToArray(collection);
		    }
		    return tmp;
		  }
		  function listOf(element) {
		    return arrayListOf([element]);
		  }
		  function setOf(element) {
		    return hashSetOf([element]);
		  }
		  function checkIndexOverflow(index) {
		    if (index < 0) {
		      throwIndexOverflow();
		    }
		    return index;
		  }
		  function AbstractMutableCollection() {
		    AbstractCollection.call(this);
		  }
		  protoOf(AbstractMutableCollection).y1 = function (element) {
		    this.u3();
		    var iterator = this.i();
		    while (iterator.j()) {
		      if (equals(iterator.k(), element)) {
		        iterator.v3();
		        return true;
		      }
		    }
		    return false;
		  };
		  protoOf(AbstractMutableCollection).x = function (elements) {
		    this.u3();
		    var modified = false;
		    var tmp0_iterator = elements.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      if (this.d(element))
		        modified = true;
		    }
		    return modified;
		  };
		  protoOf(AbstractMutableCollection).toJSON = function () {
		    return this.toArray();
		  };
		  protoOf(AbstractMutableCollection).u3 = function () {
		  };
		  function IteratorImpl($outer) {
		    this.y3_1 = $outer;
		    this.w3_1 = 0;
		    this.x3_1 = -1;
		  }
		  protoOf(IteratorImpl).j = function () {
		    return this.w3_1 < this.y3_1.l();
		  };
		  protoOf(IteratorImpl).k = function () {
		    if (!this.j())
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.w3_1;
		    this.w3_1 = tmp1 + 1 | 0;
		    tmp.x3_1 = tmp1;
		    return this.y3_1.m(this.x3_1);
		  };
		  protoOf(IteratorImpl).v3 = function () {
		    // Inline function 'kotlin.check' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!(this.x3_1 === -1)) {
		      // Inline function 'kotlin.collections.IteratorImpl.remove.<anonymous>' call
		      var message = 'Call next() or previous() before removing element from the iterator.';
		      throw IllegalStateException_init_$Create$_0(toString_1(message));
		    }
		    this.y3_1.a2(this.x3_1);
		    this.w3_1 = this.x3_1;
		    this.x3_1 = -1;
		  };
		  function AbstractMutableList() {
		    AbstractMutableCollection.call(this);
		    this.z3_1 = 0;
		  }
		  protoOf(AbstractMutableList).d = function (element) {
		    this.u3();
		    this.a4(this.l(), element);
		    return true;
		  };
		  protoOf(AbstractMutableList).i = function () {
		    return new IteratorImpl(this);
		  };
		  protoOf(AbstractMutableList).o1 = function (element) {
		    return this.b4(element) >= 0;
		  };
		  protoOf(AbstractMutableList).b4 = function (element) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.collections.indexOfFirst' call
		      var index = 0;
		      var tmp0_iterator = this.i();
		      while (tmp0_iterator.j()) {
		        var item = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractMutableList.indexOf.<anonymous>' call
		        if (equals(item, element)) {
		          tmp$ret$1 = index;
		          break $l$block;
		        }
		        index = index + 1 | 0;
		      }
		      tmp$ret$1 = -1;
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractMutableList).equals = function (other) {
		    if (other === this)
		      return true;
		    if (!(!(other == null) ? isInterface(other, KtList) : false))
		      return false;
		    return Companion_instance_5.c4(this, other);
		  };
		  protoOf(AbstractMutableList).hashCode = function () {
		    return Companion_instance_5.d4(this);
		  };
		  function AbstractMutableMap() {
		    AbstractMap.call(this);
		    this.g4_1 = null;
		    this.h4_1 = null;
		  }
		  protoOf(AbstractMutableMap).i4 = function () {
		    return new HashMapKeysDefault(this);
		  };
		  protoOf(AbstractMutableMap).j4 = function () {
		    return new HashMapValuesDefault(this);
		  };
		  protoOf(AbstractMutableMap).v1 = function () {
		    var tmp0_elvis_lhs = this.g4_1;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      // Inline function 'kotlin.also' call
		      var this_0 = this.i4();
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.collections.AbstractMutableMap.<get-keys>.<anonymous>' call
		      this.g4_1 = this_0;
		      tmp = this_0;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(AbstractMutableMap).w1 = function () {
		    var tmp0_elvis_lhs = this.h4_1;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      // Inline function 'kotlin.also' call
		      var this_0 = this.j4();
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.collections.AbstractMutableMap.<get-values>.<anonymous>' call
		      this.h4_1 = this_0;
		      tmp = this_0;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(AbstractMutableMap).c2 = function (key) {
		    this.u3();
		    var iter = this.x1().i();
		    while (iter.j()) {
		      var entry = iter.k();
		      var k = entry.q1();
		      if (equals(key, k)) {
		        var value = entry.r1();
		        iter.v3();
		        return value;
		      }
		    }
		    return null;
		  };
		  protoOf(AbstractMutableMap).u3 = function () {
		  };
		  function AbstractMutableSet() {
		    AbstractMutableCollection.call(this);
		  }
		  protoOf(AbstractMutableSet).equals = function (other) {
		    if (other === this)
		      return true;
		    if (!(!(other == null) ? isInterface(other, KtSet) : false))
		      return false;
		    return Companion_instance_7.n4(this, other);
		  };
		  protoOf(AbstractMutableSet).hashCode = function () {
		    return Companion_instance_7.o4(this);
		  };
		  function arrayOfUninitializedElements(capacity) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(capacity >= 0)) {
		      // Inline function 'kotlin.collections.arrayOfUninitializedElements.<anonymous>' call
		      var message = 'capacity must be non-negative.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.arrayOfNulls' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return fillArrayVal(Array(capacity), null);
		  }
		  function resetRange(_this__u8e3s4, fromIndex, toIndex) {
		    // Inline function 'kotlin.js.nativeFill' call
		    // Inline function 'kotlin.js.asDynamic' call
		    _this__u8e3s4.fill(null, fromIndex, toIndex);
		  }
		  function copyOfUninitializedElements(_this__u8e3s4, newSize) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return copyOf_7(_this__u8e3s4, newSize);
		  }
		  function resetAt(_this__u8e3s4, index) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    _this__u8e3s4[index] = null;
		  }
		  function Companion_2() {
		    Companion_instance_2 = this;
		    var tmp = this;
		    // Inline function 'kotlin.also' call
		    var this_0 = ArrayList_init_$Create$_0(0);
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.Companion.Empty.<anonymous>' call
		    this_0.h_1 = true;
		    tmp.p4_1 = this_0;
		  }
		  var Companion_instance_2;
		  function Companion_getInstance_2() {
		    if (Companion_instance_2 == null)
		      new Companion_2();
		    return Companion_instance_2;
		  }
		  function ArrayList_init_$Init$($this) {
		    // Inline function 'kotlin.emptyArray' call
		    var tmp$ret$0 = [];
		    ArrayList.call($this, tmp$ret$0);
		    return $this;
		  }
		  function ArrayList_init_$Create$() {
		    return ArrayList_init_$Init$(objectCreate(protoOf(ArrayList)));
		  }
		  function ArrayList_init_$Init$_0(initialCapacity, $this) {
		    // Inline function 'kotlin.emptyArray' call
		    var tmp$ret$0 = [];
		    ArrayList.call($this, tmp$ret$0);
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(initialCapacity >= 0)) {
		      // Inline function 'kotlin.collections.ArrayList.<init>.<anonymous>' call
		      var message = 'Negative initial capacity: ' + initialCapacity;
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return $this;
		  }
		  function ArrayList_init_$Create$_0(initialCapacity) {
		    return ArrayList_init_$Init$_0(initialCapacity, objectCreate(protoOf(ArrayList)));
		  }
		  function ArrayList_init_$Init$_1(elements, $this) {
		    // Inline function 'kotlin.collections.toTypedArray' call
		    var tmp$ret$0 = copyToArray(elements);
		    ArrayList.call($this, tmp$ret$0);
		    return $this;
		  }
		  function ArrayList_init_$Create$_1(elements) {
		    return ArrayList_init_$Init$_1(elements, objectCreate(protoOf(ArrayList)));
		  }
		  function increaseLength($this, amount) {
		    var previous = $this.l();
		    // Inline function 'kotlin.js.asDynamic' call
		    $this.g_1.length = $this.l() + amount | 0;
		    return previous;
		  }
		  function rangeCheck($this, index) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.ArrayList.rangeCheck.<anonymous>' call
		    Companion_instance_5.q4(index, $this.l());
		    return index;
		  }
		  function insertionRangeCheck($this, index) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.ArrayList.insertionRangeCheck.<anonymous>' call
		    Companion_instance_5.r4(index, $this.l());
		    return index;
		  }
		  function ArrayList(array) {
		    Companion_getInstance_2();
		    AbstractMutableList.call(this);
		    this.g_1 = array;
		    this.h_1 = false;
		  }
		  protoOf(ArrayList).s4 = function (minCapacity) {
		  };
		  protoOf(ArrayList).l = function () {
		    return this.g_1.length;
		  };
		  protoOf(ArrayList).m = function (index) {
		    var tmp = this.g_1[rangeCheck(this, index)];
		    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
		  };
		  protoOf(ArrayList).z1 = function (index, element) {
		    this.u3();
		    rangeCheck(this, index);
		    // Inline function 'kotlin.apply' call
		    var this_0 = this.g_1[index];
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.ArrayList.set.<anonymous>' call
		    this.g_1[index] = element;
		    var tmp = this_0;
		    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
		  };
		  protoOf(ArrayList).d = function (element) {
		    this.u3();
		    // Inline function 'kotlin.js.asDynamic' call
		    this.g_1.push(element);
		    this.z3_1 = this.z3_1 + 1 | 0;
		    return true;
		  };
		  protoOf(ArrayList).a4 = function (index, element) {
		    this.u3();
		    // Inline function 'kotlin.js.asDynamic' call
		    this.g_1.splice(insertionRangeCheck(this, index), 0, element);
		    this.z3_1 = this.z3_1 + 1 | 0;
		  };
		  protoOf(ArrayList).x = function (elements) {
		    this.u3();
		    if (elements.n())
		      return false;
		    var offset = increaseLength(this, elements.l());
		    // Inline function 'kotlin.collections.forEachIndexed' call
		    var index = 0;
		    var tmp0_iterator = elements.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'kotlin.collections.ArrayList.addAll.<anonymous>' call
		      var tmp1 = index;
		      index = tmp1 + 1 | 0;
		      var index_0 = checkIndexOverflow(tmp1);
		      this.g_1[offset + index_0 | 0] = item;
		    }
		    this.z3_1 = this.z3_1 + 1 | 0;
		    return true;
		  };
		  protoOf(ArrayList).a2 = function (index) {
		    this.u3();
		    rangeCheck(this, index);
		    this.z3_1 = this.z3_1 + 1 | 0;
		    var tmp;
		    if (index === get_lastIndex_2(this)) {
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = this.g_1.pop();
		    } else {
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = this.g_1.splice(index, 1)[0];
		    }
		    return tmp;
		  };
		  protoOf(ArrayList).y1 = function (element) {
		    this.u3();
		    var inductionVariable = 0;
		    var last = this.g_1.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (equals(this.g_1[index], element)) {
		          // Inline function 'kotlin.js.asDynamic' call
		          this.g_1.splice(index, 1);
		          this.z3_1 = this.z3_1 + 1 | 0;
		          return true;
		        }
		      }
		       while (inductionVariable <= last);
		    return false;
		  };
		  protoOf(ArrayList).b4 = function (element) {
		    return indexOf(this.g_1, element);
		  };
		  protoOf(ArrayList).toString = function () {
		    return arrayToString(this.g_1);
		  };
		  protoOf(ArrayList).t4 = function () {
		    return [].slice.call(this.g_1);
		  };
		  protoOf(ArrayList).toArray = function () {
		    return this.t4();
		  };
		  protoOf(ArrayList).u3 = function () {
		    if (this.h_1)
		      throw UnsupportedOperationException_init_$Create$();
		  };
		  function HashMap_init_$Init$(internalMap, $this) {
		    AbstractMutableMap.call($this);
		    HashMap.call($this);
		    $this.y4_1 = internalMap;
		    return $this;
		  }
		  function HashMap_init_$Init$_0($this) {
		    HashMap_init_$Init$(InternalHashMap_init_$Create$(), $this);
		    return $this;
		  }
		  function HashMap_init_$Create$() {
		    return HashMap_init_$Init$_0(objectCreate(protoOf(HashMap)));
		  }
		  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
		    HashMap_init_$Init$(InternalHashMap_init_$Create$_2(initialCapacity, loadFactor), $this);
		    return $this;
		  }
		  function HashMap_init_$Init$_2(initialCapacity, $this) {
		    HashMap_init_$Init$_1(initialCapacity, 1.0, $this);
		    return $this;
		  }
		  function HashMap_init_$Create$_0(initialCapacity) {
		    return HashMap_init_$Init$_2(initialCapacity, objectCreate(protoOf(HashMap)));
		  }
		  function HashMap_init_$Init$_3(original, $this) {
		    HashMap_init_$Init$(InternalHashMap_init_$Create$_1(original), $this);
		    return $this;
		  }
		  function HashMap_init_$Create$_1(original) {
		    return HashMap_init_$Init$_3(original, objectCreate(protoOf(HashMap)));
		  }
		  protoOf(HashMap).s1 = function (key) {
		    return this.y4_1.a5(key);
		  };
		  protoOf(HashMap).t1 = function (value) {
		    return this.y4_1.t1(value);
		  };
		  protoOf(HashMap).i4 = function () {
		    return new HashMapKeys(this.y4_1);
		  };
		  protoOf(HashMap).j4 = function () {
		    return new HashMapValues(this.y4_1);
		  };
		  protoOf(HashMap).x1 = function () {
		    var tmp0_elvis_lhs = this.z4_1;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      // Inline function 'kotlin.also' call
		      var this_0 = new HashMapEntrySet(this.y4_1);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.collections.HashMap.<get-entries>.<anonymous>' call
		      this.z4_1 = this_0;
		      tmp = this_0;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(HashMap).u1 = function (key) {
		    return this.y4_1.u1(key);
		  };
		  protoOf(HashMap).b2 = function (key, value) {
		    return this.y4_1.b2(key, value);
		  };
		  protoOf(HashMap).c2 = function (key) {
		    return this.y4_1.c2(key);
		  };
		  protoOf(HashMap).l = function () {
		    return this.y4_1.l();
		  };
		  function HashMap() {
		    this.z4_1 = null;
		  }
		  function HashMapKeys(backing) {
		    AbstractMutableSet.call(this);
		    this.b5_1 = backing;
		  }
		  protoOf(HashMapKeys).l = function () {
		    return this.b5_1.l();
		  };
		  protoOf(HashMapKeys).n = function () {
		    return this.b5_1.l() === 0;
		  };
		  protoOf(HashMapKeys).o1 = function (element) {
		    return this.b5_1.a5(element);
		  };
		  protoOf(HashMapKeys).d = function (element) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapKeys).x = function (elements) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapKeys).i = function () {
		    return this.b5_1.c5();
		  };
		  protoOf(HashMapKeys).u3 = function () {
		    return this.b5_1.d5();
		  };
		  function HashMapValues(backing) {
		    AbstractMutableCollection.call(this);
		    this.e5_1 = backing;
		  }
		  protoOf(HashMapValues).l = function () {
		    return this.e5_1.l();
		  };
		  protoOf(HashMapValues).n = function () {
		    return this.e5_1.l() === 0;
		  };
		  protoOf(HashMapValues).f5 = function (element) {
		    return this.e5_1.t1(element);
		  };
		  protoOf(HashMapValues).o1 = function (element) {
		    if (!(element == null ? true : !(element == null)))
		      return false;
		    return this.f5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapValues).g5 = function (element) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapValues).d = function (element) {
		    return this.g5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapValues).h5 = function (elements) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapValues).x = function (elements) {
		    return this.h5(elements);
		  };
		  protoOf(HashMapValues).i = function () {
		    return this.e5_1.i5();
		  };
		  protoOf(HashMapValues).u3 = function () {
		    return this.e5_1.d5();
		  };
		  function HashMapEntrySet(backing) {
		    HashMapEntrySetBase.call(this, backing);
		  }
		  protoOf(HashMapEntrySet).i = function () {
		    return this.k5_1.l5();
		  };
		  function HashMapEntrySetBase(backing) {
		    AbstractMutableSet.call(this);
		    this.k5_1 = backing;
		  }
		  protoOf(HashMapEntrySetBase).l = function () {
		    return this.k5_1.l();
		  };
		  protoOf(HashMapEntrySetBase).n = function () {
		    return this.k5_1.l() === 0;
		  };
		  protoOf(HashMapEntrySetBase).m5 = function (element) {
		    return this.k5_1.o5(element);
		  };
		  protoOf(HashMapEntrySetBase).o1 = function (element) {
		    if (!(!(element == null) ? isInterface(element, Entry) : false))
		      return false;
		    return this.m5((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
		  };
		  protoOf(HashMapEntrySetBase).n5 = function (element) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapEntrySetBase).d = function (element) {
		    return this.n5((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
		  };
		  protoOf(HashMapEntrySetBase).x = function (elements) {
		    throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(HashMapEntrySetBase).p1 = function (elements) {
		    return this.k5_1.p5(elements);
		  };
		  protoOf(HashMapEntrySetBase).u3 = function () {
		    return this.k5_1.d5();
		  };
		  function HashMapKeysDefault$iterator$1($entryIterator) {
		    this.q5_1 = $entryIterator;
		  }
		  protoOf(HashMapKeysDefault$iterator$1).j = function () {
		    return this.q5_1.j();
		  };
		  protoOf(HashMapKeysDefault$iterator$1).k = function () {
		    return this.q5_1.k().q1();
		  };
		  protoOf(HashMapKeysDefault$iterator$1).v3 = function () {
		    return this.q5_1.v3();
		  };
		  function HashMapKeysDefault(backingMap) {
		    AbstractMutableSet.call(this);
		    this.r5_1 = backingMap;
		  }
		  protoOf(HashMapKeysDefault).s5 = function (element) {
		    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
		  };
		  protoOf(HashMapKeysDefault).d = function (element) {
		    return this.s5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapKeysDefault).a5 = function (element) {
		    return this.r5_1.s1(element);
		  };
		  protoOf(HashMapKeysDefault).o1 = function (element) {
		    if (!(element == null ? true : !(element == null)))
		      return false;
		    return this.a5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapKeysDefault).i = function () {
		    var entryIterator = this.r5_1.x1().i();
		    return new HashMapKeysDefault$iterator$1(entryIterator);
		  };
		  protoOf(HashMapKeysDefault).l = function () {
		    return this.r5_1.l();
		  };
		  protoOf(HashMapKeysDefault).u3 = function () {
		    return this.r5_1.u3();
		  };
		  function HashMapValuesDefault$iterator$1($entryIterator) {
		    this.t5_1 = $entryIterator;
		  }
		  protoOf(HashMapValuesDefault$iterator$1).j = function () {
		    return this.t5_1.j();
		  };
		  protoOf(HashMapValuesDefault$iterator$1).k = function () {
		    return this.t5_1.k().r1();
		  };
		  protoOf(HashMapValuesDefault$iterator$1).v3 = function () {
		    return this.t5_1.v3();
		  };
		  function HashMapValuesDefault(backingMap) {
		    AbstractMutableCollection.call(this);
		    this.u5_1 = backingMap;
		  }
		  protoOf(HashMapValuesDefault).g5 = function (element) {
		    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
		  };
		  protoOf(HashMapValuesDefault).d = function (element) {
		    return this.g5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapValuesDefault).f5 = function (element) {
		    return this.u5_1.t1(element);
		  };
		  protoOf(HashMapValuesDefault).o1 = function (element) {
		    if (!(element == null ? true : !(element == null)))
		      return false;
		    return this.f5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(HashMapValuesDefault).i = function () {
		    var entryIterator = this.u5_1.x1().i();
		    return new HashMapValuesDefault$iterator$1(entryIterator);
		  };
		  protoOf(HashMapValuesDefault).l = function () {
		    return this.u5_1.l();
		  };
		  protoOf(HashMapValuesDefault).u3 = function () {
		    return this.u5_1.u3();
		  };
		  function HashSet_init_$Init$(map, $this) {
		    AbstractMutableSet.call($this);
		    HashSet.call($this);
		    $this.v5_1 = map;
		    return $this;
		  }
		  function HashSet_init_$Init$_0($this) {
		    HashSet_init_$Init$(InternalHashMap_init_$Create$(), $this);
		    return $this;
		  }
		  function HashSet_init_$Create$() {
		    return HashSet_init_$Init$_0(objectCreate(protoOf(HashSet)));
		  }
		  function HashSet_init_$Init$_1(elements, $this) {
		    HashSet_init_$Init$(InternalHashMap_init_$Create$_0(elements.l()), $this);
		    var tmp0_iterator = elements.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      $this.v5_1.b2(element, true);
		    }
		    return $this;
		  }
		  function HashSet_init_$Create$_0(elements) {
		    return HashSet_init_$Init$_1(elements, objectCreate(protoOf(HashSet)));
		  }
		  function HashSet_init_$Init$_2(initialCapacity, loadFactor, $this) {
		    HashSet_init_$Init$(InternalHashMap_init_$Create$_2(initialCapacity, loadFactor), $this);
		    return $this;
		  }
		  function HashSet_init_$Init$_3(initialCapacity, $this) {
		    HashSet_init_$Init$_2(initialCapacity, 1.0, $this);
		    return $this;
		  }
		  function HashSet_init_$Create$_1(initialCapacity) {
		    return HashSet_init_$Init$_3(initialCapacity, objectCreate(protoOf(HashSet)));
		  }
		  protoOf(HashSet).d = function (element) {
		    return this.v5_1.b2(element, true) == null;
		  };
		  protoOf(HashSet).o1 = function (element) {
		    return this.v5_1.a5(element);
		  };
		  protoOf(HashSet).n = function () {
		    return this.v5_1.l() === 0;
		  };
		  protoOf(HashSet).i = function () {
		    return this.v5_1.c5();
		  };
		  protoOf(HashSet).l = function () {
		    return this.v5_1.l();
		  };
		  function HashSet() {
		  }
		  function computeHashSize($this, capacity) {
		    return takeHighestOneBit(imul(coerceAtLeast(capacity, 1), 3));
		  }
		  function computeShift($this, hashSize) {
		    // Inline function 'kotlin.countLeadingZeroBits' call
		    return clz32(hashSize) + 1 | 0;
		  }
		  function InternalHashMap_init_$Init$($this) {
		    InternalHashMap_init_$Init$_0(8, $this);
		    return $this;
		  }
		  function InternalHashMap_init_$Create$() {
		    return InternalHashMap_init_$Init$(objectCreate(protoOf(InternalHashMap)));
		  }
		  function InternalHashMap_init_$Init$_0(initialCapacity, $this) {
		    InternalHashMap.call($this, arrayOfUninitializedElements(initialCapacity), null, new Int32Array(initialCapacity), new Int32Array(computeHashSize(Companion_instance_3, initialCapacity)), 2, 0);
		    return $this;
		  }
		  function InternalHashMap_init_$Create$_0(initialCapacity) {
		    return InternalHashMap_init_$Init$_0(initialCapacity, objectCreate(protoOf(InternalHashMap)));
		  }
		  function InternalHashMap_init_$Init$_1(original, $this) {
		    InternalHashMap_init_$Init$_0(original.l(), $this);
		    $this.g6(original);
		    return $this;
		  }
		  function InternalHashMap_init_$Create$_1(original) {
		    return InternalHashMap_init_$Init$_1(original, objectCreate(protoOf(InternalHashMap)));
		  }
		  function InternalHashMap_init_$Init$_2(initialCapacity, loadFactor, $this) {
		    InternalHashMap_init_$Init$_0(initialCapacity, $this);
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(loadFactor > 0)) {
		      // Inline function 'kotlin.collections.InternalHashMap.<init>.<anonymous>' call
		      var message = 'Non-positive load factor: ' + loadFactor;
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return $this;
		  }
		  function InternalHashMap_init_$Create$_2(initialCapacity, loadFactor) {
		    return InternalHashMap_init_$Init$_2(initialCapacity, loadFactor, objectCreate(protoOf(InternalHashMap)));
		  }
		  function _get_capacity__a9k9f3($this) {
		    return $this.w5_1.length;
		  }
		  function _get_hashSize__tftcho($this) {
		    return $this.z5_1.length;
		  }
		  function registerModification($this) {
		    $this.d6_1 = $this.d6_1 + 1 | 0;
		  }
		  function ensureExtraCapacity($this, n) {
		    if (shouldCompact($this, n)) {
		      rehash($this, _get_hashSize__tftcho($this));
		    } else {
		      ensureCapacity($this, $this.b6_1 + n | 0);
		    }
		  }
		  function shouldCompact($this, extraCapacity) {
		    var spareCapacity = _get_capacity__a9k9f3($this) - $this.b6_1 | 0;
		    var gaps = $this.b6_1 - $this.l() | 0;
		    return spareCapacity < extraCapacity && (gaps + spareCapacity | 0) >= extraCapacity && gaps >= (_get_capacity__a9k9f3($this) / 4 | 0);
		  }
		  function ensureCapacity($this, minCapacity) {
		    if (minCapacity < 0)
		      throw RuntimeException_init_$Create$_0('too many elements');
		    if (minCapacity > _get_capacity__a9k9f3($this)) {
		      var newSize = Companion_instance_5.h6(_get_capacity__a9k9f3($this), minCapacity);
		      $this.w5_1 = copyOfUninitializedElements($this.w5_1, newSize);
		      var tmp = $this;
		      var tmp0_safe_receiver = $this.x5_1;
		      tmp.x5_1 = tmp0_safe_receiver == null ? null : copyOfUninitializedElements(tmp0_safe_receiver, newSize);
		      $this.y5_1 = copyOf_3($this.y5_1, newSize);
		      var newHashSize = computeHashSize(Companion_instance_3, newSize);
		      if (newHashSize > _get_hashSize__tftcho($this)) {
		        rehash($this, newHashSize);
		      }
		    }
		  }
		  function allocateValuesArray($this) {
		    var curValuesArray = $this.x5_1;
		    if (!(curValuesArray == null))
		      return curValuesArray;
		    var newValuesArray = arrayOfUninitializedElements(_get_capacity__a9k9f3($this));
		    $this.x5_1 = newValuesArray;
		    return newValuesArray;
		  }
		  function hash($this, key) {
		    return key == null ? 0 : imul(hashCode(key), -1640531527) >>> $this.c6_1 | 0;
		  }
		  function compact($this) {
		    var i = 0;
		    var j = 0;
		    var valuesArray = $this.x5_1;
		    while (i < $this.b6_1) {
		      if ($this.y5_1[i] >= 0) {
		        $this.w5_1[j] = $this.w5_1[i];
		        if (!(valuesArray == null)) {
		          valuesArray[j] = valuesArray[i];
		        }
		        j = j + 1 | 0;
		      }
		      i = i + 1 | 0;
		    }
		    resetRange($this.w5_1, j, $this.b6_1);
		    if (valuesArray == null)
		      ;
		    else {
		      resetRange(valuesArray, j, $this.b6_1);
		    }
		    $this.b6_1 = j;
		  }
		  function rehash($this, newHashSize) {
		    registerModification($this);
		    if ($this.b6_1 > $this.e6_1) {
		      compact($this);
		    }
		    if (!(newHashSize === _get_hashSize__tftcho($this))) {
		      $this.z5_1 = new Int32Array(newHashSize);
		      $this.c6_1 = computeShift(Companion_instance_3, newHashSize);
		    } else {
		      fill($this.z5_1, 0, 0, _get_hashSize__tftcho($this));
		    }
		    var i = 0;
		    while (i < $this.b6_1) {
		      var tmp0 = i;
		      i = tmp0 + 1 | 0;
		      if (!putRehash($this, tmp0)) {
		        throw IllegalStateException_init_$Create$_0('This cannot happen with fixed magic multiplier and grow-only hash array. Have object hashCodes changed?');
		      }
		    }
		  }
		  function putRehash($this, i) {
		    var hash_0 = hash($this, $this.w5_1[i]);
		    var probesLeft = $this.a6_1;
		    while (true) {
		      var index = $this.z5_1[hash_0];
		      if (index === 0) {
		        $this.z5_1[hash_0] = i + 1 | 0;
		        $this.y5_1[i] = hash_0;
		        return true;
		      }
		      probesLeft = probesLeft - 1 | 0;
		      if (probesLeft < 0)
		        return false;
		      var tmp0 = hash_0;
		      hash_0 = tmp0 - 1 | 0;
		      if (tmp0 === 0)
		        hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
		    }
		  }
		  function findKey($this, key) {
		    var hash_0 = hash($this, key);
		    var probesLeft = $this.a6_1;
		    while (true) {
		      var index = $this.z5_1[hash_0];
		      if (index === 0)
		        return -1;
		      if (index > 0 && equals($this.w5_1[index - 1 | 0], key))
		        return index - 1 | 0;
		      probesLeft = probesLeft - 1 | 0;
		      if (probesLeft < 0)
		        return -1;
		      var tmp0 = hash_0;
		      hash_0 = tmp0 - 1 | 0;
		      if (tmp0 === 0)
		        hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
		    }
		  }
		  function findValue($this, value) {
		    var i = $this.b6_1;
		    $l$loop: while (true) {
		      i = i - 1 | 0;
		      if (!(i >= 0)) {
		        break $l$loop;
		      }
		      if ($this.y5_1[i] >= 0 && equals(ensureNotNull($this.x5_1)[i], value))
		        return i;
		    }
		    return -1;
		  }
		  function addKey($this, key) {
		    $this.d5();
		    retry: while (true) {
		      var hash_0 = hash($this, key);
		      var tentativeMaxProbeDistance = coerceAtMost(imul($this.a6_1, 2), _get_hashSize__tftcho($this) / 2 | 0);
		      var probeDistance = 0;
		      while (true) {
		        var index = $this.z5_1[hash_0];
		        if (index <= 0) {
		          if ($this.b6_1 >= _get_capacity__a9k9f3($this)) {
		            ensureExtraCapacity($this, 1);
		            continue retry;
		          }
		          var tmp1 = $this.b6_1;
		          $this.b6_1 = tmp1 + 1 | 0;
		          var putIndex = tmp1;
		          $this.w5_1[putIndex] = key;
		          $this.y5_1[putIndex] = hash_0;
		          $this.z5_1[hash_0] = putIndex + 1 | 0;
		          $this.e6_1 = $this.e6_1 + 1 | 0;
		          registerModification($this);
		          if (probeDistance > $this.a6_1)
		            $this.a6_1 = probeDistance;
		          return putIndex;
		        }
		        if (equals($this.w5_1[index - 1 | 0], key)) {
		          return -index | 0;
		        }
		        probeDistance = probeDistance + 1 | 0;
		        if (probeDistance > tentativeMaxProbeDistance) {
		          rehash($this, imul(_get_hashSize__tftcho($this), 2));
		          continue retry;
		        }
		        var tmp4 = hash_0;
		        hash_0 = tmp4 - 1 | 0;
		        if (tmp4 === 0)
		          hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
		      }
		    }
		  }
		  function removeEntryAt($this, index) {
		    resetAt($this.w5_1, index);
		    var tmp0_safe_receiver = $this.x5_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      resetAt(tmp0_safe_receiver, index);
		    }
		    removeHashAt($this, $this.y5_1[index]);
		    $this.y5_1[index] = -1;
		    $this.e6_1 = $this.e6_1 - 1 | 0;
		    registerModification($this);
		  }
		  function removeHashAt($this, removedHash) {
		    var hash_0 = removedHash;
		    var hole = removedHash;
		    var probeDistance = 0;
		    var patchAttemptsLeft = coerceAtMost(imul($this.a6_1, 2), _get_hashSize__tftcho($this) / 2 | 0);
		    while (true) {
		      var tmp0 = hash_0;
		      hash_0 = tmp0 - 1 | 0;
		      if (tmp0 === 0)
		        hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
		      probeDistance = probeDistance + 1 | 0;
		      if (probeDistance > $this.a6_1) {
		        $this.z5_1[hole] = 0;
		        return Unit_instance;
		      }
		      var index = $this.z5_1[hash_0];
		      if (index === 0) {
		        $this.z5_1[hole] = 0;
		        return Unit_instance;
		      }
		      if (index < 0) {
		        $this.z5_1[hole] = -1;
		        hole = hash_0;
		        probeDistance = 0;
		      } else {
		        var otherHash = hash($this, $this.w5_1[index - 1 | 0]);
		        if (((otherHash - hash_0 | 0) & (_get_hashSize__tftcho($this) - 1 | 0)) >= probeDistance) {
		          $this.z5_1[hole] = index;
		          $this.y5_1[index - 1 | 0] = hole;
		          hole = hash_0;
		          probeDistance = 0;
		        }
		      }
		      patchAttemptsLeft = patchAttemptsLeft - 1 | 0;
		      if (patchAttemptsLeft < 0) {
		        $this.z5_1[hole] = -1;
		        return Unit_instance;
		      }
		    }
		  }
		  function contentEquals_0($this, other) {
		    return $this.e6_1 === other.l() && $this.p5(other.x1());
		  }
		  function putEntry($this, entry) {
		    var index = addKey($this, entry.q1());
		    var valuesArray = allocateValuesArray($this);
		    if (index >= 0) {
		      valuesArray[index] = entry.r1();
		      return true;
		    }
		    var oldValue = valuesArray[(-index | 0) - 1 | 0];
		    if (!equals(entry.r1(), oldValue)) {
		      valuesArray[(-index | 0) - 1 | 0] = entry.r1();
		      return true;
		    }
		    return false;
		  }
		  function putAllEntries($this, from) {
		    if (from.n())
		      return false;
		    ensureExtraCapacity($this, from.l());
		    var it = from.i();
		    var updated = false;
		    while (it.j()) {
		      if (putEntry($this, it.k()))
		        updated = true;
		    }
		    return updated;
		  }
		  function Companion_3() {
		    this.i6_1 = -1640531527;
		    this.j6_1 = 8;
		    this.k6_1 = 2;
		    this.l6_1 = -1;
		  }
		  var Companion_instance_3;
		  function Itr(map) {
		    this.m6_1 = map;
		    this.n6_1 = 0;
		    this.o6_1 = -1;
		    this.p6_1 = this.m6_1.d6_1;
		    this.q6();
		  }
		  protoOf(Itr).q6 = function () {
		    while (this.n6_1 < this.m6_1.b6_1 && this.m6_1.y5_1[this.n6_1] < 0) {
		      this.n6_1 = this.n6_1 + 1 | 0;
		    }
		  };
		  protoOf(Itr).j = function () {
		    return this.n6_1 < this.m6_1.b6_1;
		  };
		  protoOf(Itr).v3 = function () {
		    this.r6();
		    // Inline function 'kotlin.check' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!(this.o6_1 === -1)) {
		      // Inline function 'kotlin.collections.Itr.remove.<anonymous>' call
		      var message = 'Call next() before removing element from the iterator.';
		      throw IllegalStateException_init_$Create$_0(toString_1(message));
		    }
		    this.m6_1.d5();
		    removeEntryAt(this.m6_1, this.o6_1);
		    this.o6_1 = -1;
		    this.p6_1 = this.m6_1.d6_1;
		  };
		  protoOf(Itr).r6 = function () {
		    if (!(this.m6_1.d6_1 === this.p6_1))
		      throw ConcurrentModificationException_init_$Create$();
		  };
		  function KeysItr(map) {
		    Itr.call(this, map);
		  }
		  protoOf(KeysItr).k = function () {
		    this.r6();
		    if (this.n6_1 >= this.m6_1.b6_1)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.n6_1;
		    this.n6_1 = tmp1 + 1 | 0;
		    tmp.o6_1 = tmp1;
		    var result = this.m6_1.w5_1[this.o6_1];
		    this.q6();
		    return result;
		  };
		  function ValuesItr(map) {
		    Itr.call(this, map);
		  }
		  protoOf(ValuesItr).k = function () {
		    this.r6();
		    if (this.n6_1 >= this.m6_1.b6_1)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.n6_1;
		    this.n6_1 = tmp1 + 1 | 0;
		    tmp.o6_1 = tmp1;
		    var result = ensureNotNull(this.m6_1.x5_1)[this.o6_1];
		    this.q6();
		    return result;
		  };
		  function EntriesItr(map) {
		    Itr.call(this, map);
		  }
		  protoOf(EntriesItr).k = function () {
		    this.r6();
		    if (this.n6_1 >= this.m6_1.b6_1)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.n6_1;
		    this.n6_1 = tmp1 + 1 | 0;
		    tmp.o6_1 = tmp1;
		    var result = new EntryRef(this.m6_1, this.o6_1);
		    this.q6();
		    return result;
		  };
		  protoOf(EntriesItr).e7 = function () {
		    if (this.n6_1 >= this.m6_1.b6_1)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.n6_1;
		    this.n6_1 = tmp1 + 1 | 0;
		    tmp.o6_1 = tmp1;
		    // Inline function 'kotlin.hashCode' call
		    var tmp0_safe_receiver = this.m6_1.w5_1[this.o6_1];
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
		    var tmp_0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
		    // Inline function 'kotlin.hashCode' call
		    var tmp0_safe_receiver_0 = ensureNotNull(this.m6_1.x5_1)[this.o6_1];
		    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
		    var result = tmp_0 ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0);
		    this.q6();
		    return result;
		  };
		  protoOf(EntriesItr).f7 = function (sb) {
		    if (this.n6_1 >= this.m6_1.b6_1)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this;
		    var tmp1 = this.n6_1;
		    this.n6_1 = tmp1 + 1 | 0;
		    tmp.o6_1 = tmp1;
		    var key = this.m6_1.w5_1[this.o6_1];
		    if (equals(key, this.m6_1)) {
		      sb.i7('(this Map)');
		    } else {
		      sb.h7(key);
		    }
		    sb.j7(_Char___init__impl__6a9atx(61));
		    var value = ensureNotNull(this.m6_1.x5_1)[this.o6_1];
		    if (equals(value, this.m6_1)) {
		      sb.i7('(this Map)');
		    } else {
		      sb.h7(value);
		    }
		    this.q6();
		  };
		  function EntryRef(map, index) {
		    this.k7_1 = map;
		    this.l7_1 = index;
		  }
		  protoOf(EntryRef).q1 = function () {
		    return this.k7_1.w5_1[this.l7_1];
		  };
		  protoOf(EntryRef).r1 = function () {
		    return ensureNotNull(this.k7_1.x5_1)[this.l7_1];
		  };
		  protoOf(EntryRef).equals = function (other) {
		    var tmp;
		    var tmp_0;
		    if (!(other == null) ? isInterface(other, Entry) : false) {
		      tmp_0 = equals(other.q1(), this.q1());
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      tmp = equals(other.r1(), this.r1());
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(EntryRef).hashCode = function () {
		    // Inline function 'kotlin.hashCode' call
		    var tmp0_safe_receiver = this.q1();
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
		    var tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
		    // Inline function 'kotlin.hashCode' call
		    var tmp0_safe_receiver_0 = this.r1();
		    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
		    return tmp ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0);
		  };
		  protoOf(EntryRef).toString = function () {
		    return toString_0(this.q1()) + '=' + toString_0(this.r1());
		  };
		  function InternalHashMap(keysArray, valuesArray, presenceArray, hashArray, maxProbeDistance, length) {
		    this.w5_1 = keysArray;
		    this.x5_1 = valuesArray;
		    this.y5_1 = presenceArray;
		    this.z5_1 = hashArray;
		    this.a6_1 = maxProbeDistance;
		    this.b6_1 = length;
		    this.c6_1 = computeShift(Companion_instance_3, _get_hashSize__tftcho(this));
		    this.d6_1 = 0;
		    this.e6_1 = 0;
		    this.f6_1 = false;
		  }
		  protoOf(InternalHashMap).l = function () {
		    return this.e6_1;
		  };
		  protoOf(InternalHashMap).t1 = function (value) {
		    return findValue(this, value) >= 0;
		  };
		  protoOf(InternalHashMap).u1 = function (key) {
		    var index = findKey(this, key);
		    if (index < 0)
		      return null;
		    return ensureNotNull(this.x5_1)[index];
		  };
		  protoOf(InternalHashMap).a5 = function (key) {
		    return findKey(this, key) >= 0;
		  };
		  protoOf(InternalHashMap).b2 = function (key, value) {
		    var index = addKey(this, key);
		    var valuesArray = allocateValuesArray(this);
		    if (index < 0) {
		      var oldValue = valuesArray[(-index | 0) - 1 | 0];
		      valuesArray[(-index | 0) - 1 | 0] = value;
		      return oldValue;
		    } else {
		      valuesArray[index] = value;
		      return null;
		    }
		  };
		  protoOf(InternalHashMap).g6 = function (from) {
		    this.d5();
		    putAllEntries(this, from.x1());
		  };
		  protoOf(InternalHashMap).c2 = function (key) {
		    this.d5();
		    var index = findKey(this, key);
		    if (index < 0)
		      return null;
		    var oldValue = ensureNotNull(this.x5_1)[index];
		    removeEntryAt(this, index);
		    return oldValue;
		  };
		  protoOf(InternalHashMap).equals = function (other) {
		    var tmp;
		    if (other === this) {
		      tmp = true;
		    } else {
		      var tmp_0;
		      if (!(other == null) ? isInterface(other, KtMap) : false) {
		        tmp_0 = contentEquals_0(this, other);
		      } else {
		        tmp_0 = false;
		      }
		      tmp = tmp_0;
		    }
		    return tmp;
		  };
		  protoOf(InternalHashMap).hashCode = function () {
		    var result = 0;
		    var it = this.l5();
		    while (it.j()) {
		      result = result + it.e7() | 0;
		    }
		    return result;
		  };
		  protoOf(InternalHashMap).toString = function () {
		    var sb = StringBuilder_init_$Create$(2 + imul(this.e6_1, 3) | 0);
		    sb.i7('{');
		    var i = 0;
		    var it = this.l5();
		    while (it.j()) {
		      if (i > 0) {
		        sb.i7(', ');
		      }
		      it.f7(sb);
		      i = i + 1 | 0;
		    }
		    sb.i7('}');
		    return sb.toString();
		  };
		  protoOf(InternalHashMap).d5 = function () {
		    if (this.f6_1)
		      throw UnsupportedOperationException_init_$Create$();
		  };
		  protoOf(InternalHashMap).o5 = function (entry) {
		    var index = findKey(this, entry.q1());
		    if (index < 0)
		      return false;
		    return equals(ensureNotNull(this.x5_1)[index], entry.r1());
		  };
		  protoOf(InternalHashMap).m7 = function (entry) {
		    return this.o5(isInterface(entry, Entry) ? entry : THROW_CCE());
		  };
		  protoOf(InternalHashMap).c5 = function () {
		    return new KeysItr(this);
		  };
		  protoOf(InternalHashMap).i5 = function () {
		    return new ValuesItr(this);
		  };
		  protoOf(InternalHashMap).l5 = function () {
		    return new EntriesItr(this);
		  };
		  function InternalMap() {
		  }
		  function LinkedHashMap_init_$Init$($this) {
		    HashMap_init_$Init$_0($this);
		    LinkedHashMap.call($this);
		    return $this;
		  }
		  function LinkedHashMap_init_$Create$() {
		    return LinkedHashMap_init_$Init$(objectCreate(protoOf(LinkedHashMap)));
		  }
		  function LinkedHashMap_init_$Init$_0(initialCapacity, $this) {
		    HashMap_init_$Init$_2(initialCapacity, $this);
		    LinkedHashMap.call($this);
		    return $this;
		  }
		  function LinkedHashMap_init_$Create$_0(initialCapacity) {
		    return LinkedHashMap_init_$Init$_0(initialCapacity, objectCreate(protoOf(LinkedHashMap)));
		  }
		  function LinkedHashMap_init_$Init$_1(original, $this) {
		    HashMap_init_$Init$_3(original, $this);
		    LinkedHashMap.call($this);
		    return $this;
		  }
		  function LinkedHashMap_init_$Create$_1(original) {
		    return LinkedHashMap_init_$Init$_1(original, objectCreate(protoOf(LinkedHashMap)));
		  }
		  protoOf(LinkedHashMap).u3 = function () {
		    return this.y4_1.d5();
		  };
		  function LinkedHashMap() {
		  }
		  function LinkedHashSet_init_$Init$($this) {
		    HashSet_init_$Init$_0($this);
		    LinkedHashSet.call($this);
		    return $this;
		  }
		  function LinkedHashSet_init_$Create$() {
		    return LinkedHashSet_init_$Init$(objectCreate(protoOf(LinkedHashSet)));
		  }
		  function LinkedHashSet_init_$Init$_0(elements, $this) {
		    HashSet_init_$Init$_1(elements, $this);
		    LinkedHashSet.call($this);
		    return $this;
		  }
		  function LinkedHashSet_init_$Create$_0(elements) {
		    return LinkedHashSet_init_$Init$_0(elements, objectCreate(protoOf(LinkedHashSet)));
		  }
		  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
		    HashSet_init_$Init$_2(initialCapacity, loadFactor, $this);
		    LinkedHashSet.call($this);
		    return $this;
		  }
		  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
		    LinkedHashSet_init_$Init$_1(initialCapacity, 1.0, $this);
		    return $this;
		  }
		  function LinkedHashSet_init_$Create$_1(initialCapacity) {
		    return LinkedHashSet_init_$Init$_2(initialCapacity, objectCreate(protoOf(LinkedHashSet)));
		  }
		  protoOf(LinkedHashSet).u3 = function () {
		    return this.v5_1.d5();
		  };
		  function LinkedHashSet() {
		  }
		  function CoroutineImpl(resultContinuation) {
		    InterceptedCoroutine.call(this);
		    this.v7_1 = resultContinuation;
		    this.w7_1 = 0;
		    this.x7_1 = 0;
		    this.y7_1 = null;
		    this.z7_1 = null;
		    this.a8_1 = null;
		    var tmp = this;
		    var tmp0_safe_receiver = this.v7_1;
		    tmp.b8_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c8();
		  }
		  protoOf(CoroutineImpl).c8 = function () {
		    return ensureNotNull(this.b8_1);
		  };
		  protoOf(CoroutineImpl).d8 = function (result) {
		    var current = this;
		    // Inline function 'kotlin.Result.getOrNull' call
		    var tmp;
		    if (_Result___get_isFailure__impl__jpiriv(result)) {
		      tmp = null;
		    } else {
		      var tmp_0 = _Result___get_value__impl__bjfvqg(result);
		      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
		    }
		    var currentResult = tmp;
		    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
		    while (true) {
		      // Inline function 'kotlin.with' call
		      // Inline function 'kotlin.contracts.contract' call
		      var $this$with = current;
		      if (currentException == null) {
		        $this$with.y7_1 = currentResult;
		      } else {
		        $this$with.w7_1 = $this$with.x7_1;
		        $this$with.z7_1 = currentException;
		      }
		      try {
		        var outcome = $this$with.e8();
		        if (outcome === get_COROUTINE_SUSPENDED())
		          return Unit_instance;
		        currentResult = outcome;
		        currentException = null;
		      } catch ($p) {
		        var exception = $p;
		        currentResult = null;
		        // Inline function 'kotlin.js.unsafeCast' call
		        currentException = exception;
		      }
		      $this$with.g8();
		      var completion = ensureNotNull($this$with.v7_1);
		      if (completion instanceof CoroutineImpl) {
		        current = completion;
		      } else {
		        if (!(currentException == null)) {
		          // Inline function 'kotlin.coroutines.resumeWithException' call
		          // Inline function 'kotlin.Companion.failure' call
		          var exception_0 = ensureNotNull(currentException);
		          var tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(exception_0));
		          completion.h8(tmp$ret$2);
		        } else {
		          // Inline function 'kotlin.coroutines.resume' call
		          // Inline function 'kotlin.Companion.success' call
		          var value = currentResult;
		          var tmp$ret$4 = _Result___init__impl__xyqfz8(value);
		          completion.h8(tmp$ret$4);
		        }
		        return Unit_instance;
		      }
		    }
		  };
		  protoOf(CoroutineImpl).h8 = function (result) {
		    return this.d8(result);
		  };
		  function CompletedContinuation() {
		  }
		  protoOf(CompletedContinuation).c8 = function () {
		    var message = 'This continuation is already complete';
		    throw IllegalStateException_init_$Create$_0(toString_1(message));
		  };
		  protoOf(CompletedContinuation).d8 = function (result) {
		    // Inline function 'kotlin.error' call
		    var message = 'This continuation is already complete';
		    throw IllegalStateException_init_$Create$_0(toString_1(message));
		  };
		  protoOf(CompletedContinuation).h8 = function (result) {
		    return this.d8(result);
		  };
		  protoOf(CompletedContinuation).toString = function () {
		    return 'This continuation is already complete';
		  };
		  var CompletedContinuation_instance;
		  function InterceptedCoroutine() {
		    this.f8_1 = null;
		  }
		  protoOf(InterceptedCoroutine).g8 = function () {
		    var intercepted = this.f8_1;
		    if (!(intercepted == null) && !(intercepted === this)) {
		      ensureNotNull(this.c8().i8(Key_instance)).j8(intercepted);
		    }
		    this.f8_1 = CompletedContinuation_instance;
		  };
		  function Exception_init_$Init$($this) {
		    extendThrowable($this);
		    Exception.call($this);
		    return $this;
		  }
		  function Exception_init_$Create$() {
		    var tmp = Exception_init_$Init$(objectCreate(protoOf(Exception)));
		    captureStack(tmp, Exception_init_$Create$);
		    return tmp;
		  }
		  function Exception_init_$Init$_0(message, $this) {
		    extendThrowable($this, message);
		    Exception.call($this);
		    return $this;
		  }
		  function Exception_init_$Create$_0(message) {
		    var tmp = Exception_init_$Init$_0(message, objectCreate(protoOf(Exception)));
		    captureStack(tmp, Exception_init_$Create$_0);
		    return tmp;
		  }
		  function Exception_init_$Init$_1(message, cause, $this) {
		    extendThrowable($this, message, cause);
		    Exception.call($this);
		    return $this;
		  }
		  function Exception_init_$Init$_2(cause, $this) {
		    extendThrowable($this, VOID, cause);
		    Exception.call($this);
		    return $this;
		  }
		  function Exception_init_$Create$_1(cause) {
		    var tmp = Exception_init_$Init$_2(cause, objectCreate(protoOf(Exception)));
		    captureStack(tmp, Exception_init_$Create$_1);
		    return tmp;
		  }
		  function Exception() {
		    captureStack(this, Exception);
		  }
		  function IllegalArgumentException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    IllegalArgumentException.call($this);
		    return $this;
		  }
		  function IllegalArgumentException_init_$Create$() {
		    var tmp = IllegalArgumentException_init_$Init$(objectCreate(protoOf(IllegalArgumentException)));
		    captureStack(tmp, IllegalArgumentException_init_$Create$);
		    return tmp;
		  }
		  function IllegalArgumentException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    IllegalArgumentException.call($this);
		    return $this;
		  }
		  function IllegalArgumentException_init_$Create$_0(message) {
		    var tmp = IllegalArgumentException_init_$Init$_0(message, objectCreate(protoOf(IllegalArgumentException)));
		    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
		    return tmp;
		  }
		  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
		    RuntimeException_init_$Init$_1(message, cause, $this);
		    IllegalArgumentException.call($this);
		    return $this;
		  }
		  function IllegalArgumentException_init_$Create$_1(message, cause) {
		    var tmp = IllegalArgumentException_init_$Init$_1(message, cause, objectCreate(protoOf(IllegalArgumentException)));
		    captureStack(tmp, IllegalArgumentException_init_$Create$_1);
		    return tmp;
		  }
		  function IllegalArgumentException_init_$Init$_2(cause, $this) {
		    RuntimeException_init_$Init$_2(cause, $this);
		    IllegalArgumentException.call($this);
		    return $this;
		  }
		  function IllegalArgumentException() {
		    captureStack(this, IllegalArgumentException);
		  }
		  function IndexOutOfBoundsException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    IndexOutOfBoundsException.call($this);
		    return $this;
		  }
		  function IndexOutOfBoundsException_init_$Create$() {
		    var tmp = IndexOutOfBoundsException_init_$Init$(objectCreate(protoOf(IndexOutOfBoundsException)));
		    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
		    return tmp;
		  }
		  function IndexOutOfBoundsException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    IndexOutOfBoundsException.call($this);
		    return $this;
		  }
		  function IndexOutOfBoundsException_init_$Create$_0(message) {
		    var tmp = IndexOutOfBoundsException_init_$Init$_0(message, objectCreate(protoOf(IndexOutOfBoundsException)));
		    captureStack(tmp, IndexOutOfBoundsException_init_$Create$_0);
		    return tmp;
		  }
		  function IndexOutOfBoundsException() {
		    captureStack(this, IndexOutOfBoundsException);
		  }
		  function IllegalStateException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    IllegalStateException.call($this);
		    return $this;
		  }
		  function IllegalStateException_init_$Create$() {
		    var tmp = IllegalStateException_init_$Init$(objectCreate(protoOf(IllegalStateException)));
		    captureStack(tmp, IllegalStateException_init_$Create$);
		    return tmp;
		  }
		  function IllegalStateException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    IllegalStateException.call($this);
		    return $this;
		  }
		  function IllegalStateException_init_$Create$_0(message) {
		    var tmp = IllegalStateException_init_$Init$_0(message, objectCreate(protoOf(IllegalStateException)));
		    captureStack(tmp, IllegalStateException_init_$Create$_0);
		    return tmp;
		  }
		  function IllegalStateException() {
		    captureStack(this, IllegalStateException);
		  }
		  function UnsupportedOperationException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    UnsupportedOperationException.call($this);
		    return $this;
		  }
		  function UnsupportedOperationException_init_$Create$() {
		    var tmp = UnsupportedOperationException_init_$Init$(objectCreate(protoOf(UnsupportedOperationException)));
		    captureStack(tmp, UnsupportedOperationException_init_$Create$);
		    return tmp;
		  }
		  function UnsupportedOperationException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    UnsupportedOperationException.call($this);
		    return $this;
		  }
		  function UnsupportedOperationException_init_$Create$_0(message) {
		    var tmp = UnsupportedOperationException_init_$Init$_0(message, objectCreate(protoOf(UnsupportedOperationException)));
		    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
		    return tmp;
		  }
		  function UnsupportedOperationException() {
		    captureStack(this, UnsupportedOperationException);
		  }
		  function RuntimeException_init_$Init$($this) {
		    Exception_init_$Init$($this);
		    RuntimeException.call($this);
		    return $this;
		  }
		  function RuntimeException_init_$Create$() {
		    var tmp = RuntimeException_init_$Init$(objectCreate(protoOf(RuntimeException)));
		    captureStack(tmp, RuntimeException_init_$Create$);
		    return tmp;
		  }
		  function RuntimeException_init_$Init$_0(message, $this) {
		    Exception_init_$Init$_0(message, $this);
		    RuntimeException.call($this);
		    return $this;
		  }
		  function RuntimeException_init_$Create$_0(message) {
		    var tmp = RuntimeException_init_$Init$_0(message, objectCreate(protoOf(RuntimeException)));
		    captureStack(tmp, RuntimeException_init_$Create$_0);
		    return tmp;
		  }
		  function RuntimeException_init_$Init$_1(message, cause, $this) {
		    Exception_init_$Init$_1(message, cause, $this);
		    RuntimeException.call($this);
		    return $this;
		  }
		  function RuntimeException_init_$Init$_2(cause, $this) {
		    Exception_init_$Init$_2(cause, $this);
		    RuntimeException.call($this);
		    return $this;
		  }
		  function RuntimeException() {
		    captureStack(this, RuntimeException);
		  }
		  function NoSuchElementException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    NoSuchElementException.call($this);
		    return $this;
		  }
		  function NoSuchElementException_init_$Create$() {
		    var tmp = NoSuchElementException_init_$Init$(objectCreate(protoOf(NoSuchElementException)));
		    captureStack(tmp, NoSuchElementException_init_$Create$);
		    return tmp;
		  }
		  function NoSuchElementException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    NoSuchElementException.call($this);
		    return $this;
		  }
		  function NoSuchElementException_init_$Create$_0(message) {
		    var tmp = NoSuchElementException_init_$Init$_0(message, objectCreate(protoOf(NoSuchElementException)));
		    captureStack(tmp, NoSuchElementException_init_$Create$_0);
		    return tmp;
		  }
		  function NoSuchElementException() {
		    captureStack(this, NoSuchElementException);
		  }
		  function Error_init_$Init$($this) {
		    extendThrowable($this);
		    Error_0.call($this);
		    return $this;
		  }
		  function Error_init_$Create$() {
		    var tmp = Error_init_$Init$(objectCreate(protoOf(Error_0)));
		    captureStack(tmp, Error_init_$Create$);
		    return tmp;
		  }
		  function Error_init_$Init$_0(message, $this) {
		    extendThrowable($this, message);
		    Error_0.call($this);
		    return $this;
		  }
		  function Error_0() {
		    captureStack(this, Error_0);
		  }
		  function AssertionError_init_$Init$($this) {
		    Error_init_$Init$($this);
		    AssertionError.call($this);
		    return $this;
		  }
		  function AssertionError_init_$Create$() {
		    var tmp = AssertionError_init_$Init$(objectCreate(protoOf(AssertionError)));
		    captureStack(tmp, AssertionError_init_$Create$);
		    return tmp;
		  }
		  function AssertionError_init_$Init$_0(message, $this) {
		    Error_init_$Init$_0(message, $this);
		    AssertionError.call($this);
		    return $this;
		  }
		  function AssertionError_init_$Create$_0(message) {
		    var tmp = AssertionError_init_$Init$_0(message, objectCreate(protoOf(AssertionError)));
		    captureStack(tmp, AssertionError_init_$Create$_0);
		    return tmp;
		  }
		  function AssertionError() {
		    captureStack(this, AssertionError);
		  }
		  function ConcurrentModificationException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    ConcurrentModificationException.call($this);
		    return $this;
		  }
		  function ConcurrentModificationException_init_$Create$() {
		    var tmp = ConcurrentModificationException_init_$Init$(objectCreate(protoOf(ConcurrentModificationException)));
		    captureStack(tmp, ConcurrentModificationException_init_$Create$);
		    return tmp;
		  }
		  function ConcurrentModificationException() {
		    captureStack(this, ConcurrentModificationException);
		  }
		  function NumberFormatException_init_$Init$($this) {
		    IllegalArgumentException_init_$Init$($this);
		    NumberFormatException.call($this);
		    return $this;
		  }
		  function NumberFormatException_init_$Create$() {
		    var tmp = NumberFormatException_init_$Init$(objectCreate(protoOf(NumberFormatException)));
		    captureStack(tmp, NumberFormatException_init_$Create$);
		    return tmp;
		  }
		  function NumberFormatException_init_$Init$_0(message, $this) {
		    IllegalArgumentException_init_$Init$_0(message, $this);
		    NumberFormatException.call($this);
		    return $this;
		  }
		  function NumberFormatException_init_$Create$_0(message) {
		    var tmp = NumberFormatException_init_$Init$_0(message, objectCreate(protoOf(NumberFormatException)));
		    captureStack(tmp, NumberFormatException_init_$Create$_0);
		    return tmp;
		  }
		  function NumberFormatException() {
		    captureStack(this, NumberFormatException);
		  }
		  function ArithmeticException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    ArithmeticException.call($this);
		    return $this;
		  }
		  function ArithmeticException_init_$Create$() {
		    var tmp = ArithmeticException_init_$Init$(objectCreate(protoOf(ArithmeticException)));
		    captureStack(tmp, ArithmeticException_init_$Create$);
		    return tmp;
		  }
		  function ArithmeticException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    ArithmeticException.call($this);
		    return $this;
		  }
		  function ArithmeticException_init_$Create$_0(message) {
		    var tmp = ArithmeticException_init_$Init$_0(message, objectCreate(protoOf(ArithmeticException)));
		    captureStack(tmp, ArithmeticException_init_$Create$_0);
		    return tmp;
		  }
		  function ArithmeticException() {
		    captureStack(this, ArithmeticException);
		  }
		  function ClassCastException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    ClassCastException.call($this);
		    return $this;
		  }
		  function ClassCastException_init_$Create$() {
		    var tmp = ClassCastException_init_$Init$(objectCreate(protoOf(ClassCastException)));
		    captureStack(tmp, ClassCastException_init_$Create$);
		    return tmp;
		  }
		  function ClassCastException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    ClassCastException.call($this);
		    return $this;
		  }
		  function ClassCastException_init_$Create$_0(message) {
		    var tmp = ClassCastException_init_$Init$_0(message, objectCreate(protoOf(ClassCastException)));
		    captureStack(tmp, ClassCastException_init_$Create$_0);
		    return tmp;
		  }
		  function ClassCastException() {
		    captureStack(this, ClassCastException);
		  }
		  function NullPointerException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    NullPointerException.call($this);
		    return $this;
		  }
		  function NullPointerException_init_$Create$() {
		    var tmp = NullPointerException_init_$Init$(objectCreate(protoOf(NullPointerException)));
		    captureStack(tmp, NullPointerException_init_$Create$);
		    return tmp;
		  }
		  function NullPointerException() {
		    captureStack(this, NullPointerException);
		  }
		  function NoWhenBranchMatchedException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    NoWhenBranchMatchedException.call($this);
		    return $this;
		  }
		  function NoWhenBranchMatchedException_init_$Create$() {
		    var tmp = NoWhenBranchMatchedException_init_$Init$(objectCreate(protoOf(NoWhenBranchMatchedException)));
		    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
		    return tmp;
		  }
		  function NoWhenBranchMatchedException() {
		    captureStack(this, NoWhenBranchMatchedException);
		  }
		  function UninitializedPropertyAccessException_init_$Init$($this) {
		    RuntimeException_init_$Init$($this);
		    UninitializedPropertyAccessException.call($this);
		    return $this;
		  }
		  function UninitializedPropertyAccessException_init_$Create$() {
		    var tmp = UninitializedPropertyAccessException_init_$Init$(objectCreate(protoOf(UninitializedPropertyAccessException)));
		    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
		    return tmp;
		  }
		  function UninitializedPropertyAccessException_init_$Init$_0(message, $this) {
		    RuntimeException_init_$Init$_0(message, $this);
		    UninitializedPropertyAccessException.call($this);
		    return $this;
		  }
		  function UninitializedPropertyAccessException_init_$Create$_0(message) {
		    var tmp = UninitializedPropertyAccessException_init_$Init$_0(message, objectCreate(protoOf(UninitializedPropertyAccessException)));
		    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$_0);
		    return tmp;
		  }
		  function UninitializedPropertyAccessException() {
		    captureStack(this, UninitializedPropertyAccessException);
		  }
		  function json(pairs) {
		    var res = {};
		    var inductionVariable = 0;
		    var last = pairs.length;
		    while (inductionVariable < last) {
		      var tmp1_loop_parameter = pairs[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      var name = tmp1_loop_parameter.o8();
		      var value = tmp1_loop_parameter.p8();
		      res[name] = value;
		    }
		    return res;
		  }
		  function lazy(mode, initializer) {
		    return new UnsafeLazyImpl(initializer);
		  }
		  function lazy_0(initializer) {
		    return new UnsafeLazyImpl(initializer);
		  }
		  function fillFrom(src, dst) {
		    var srcLen = src.length;
		    var dstLen = dst.length;
		    var index = 0;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var arr = dst;
		    while (index < srcLen && index < dstLen) {
		      var tmp = index;
		      var tmp0 = index;
		      index = tmp0 + 1 | 0;
		      arr[tmp] = src[tmp0];
		    }
		    return dst;
		  }
		  function arrayCopyResize(source, newSize, defaultValue) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    var result = source.slice(0, newSize);
		    // Inline function 'kotlin.copyArrayType' call
		    if (source.$type$ !== undefined) {
		      result.$type$ = source.$type$;
		    }
		    var index = source.length;
		    if (newSize > index) {
		      // Inline function 'kotlin.js.asDynamic' call
		      result.length = newSize;
		      while (index < newSize) {
		        var tmp0 = index;
		        index = tmp0 + 1 | 0;
		        result[tmp0] = defaultValue;
		      }
		    }
		    return result;
		  }
		  function roundToLong(_this__u8e3s4) {
		    var tmp;
		    if (isNaN_0(_this__u8e3s4)) {
		      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
		    } else if (_this__u8e3s4 > (new Long(-1, 2147483647)).c3()) {
		      tmp = new Long(-1, 2147483647);
		    } else if (_this__u8e3s4 < (new Long(0, -2147483648)).c3()) {
		      tmp = new Long(0, -2147483648);
		    } else {
		      tmp = numberToLong(Math.round(_this__u8e3s4));
		    }
		    return tmp;
		  }
		  function defaultPlatformRandom() {
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp$ret$0 = Math.random() * Math.pow(2, 32) | 0;
		    return Random_0(tmp$ret$0);
		  }
		  function get_js(_this__u8e3s4) {
		    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).r8();
		  }
		  function KClass() {
		  }
		  function KClassImpl(jClass) {
		    this.q8_1 = jClass;
		  }
		  protoOf(KClassImpl).r8 = function () {
		    return this.q8_1;
		  };
		  protoOf(KClassImpl).equals = function (other) {
		    var tmp;
		    if (other instanceof NothingKClassImpl) {
		      tmp = false;
		    } else {
		      if (other instanceof ErrorKClass) {
		        tmp = false;
		      } else {
		        if (other instanceof KClassImpl) {
		          tmp = equals(this.r8(), other.r8());
		        } else {
		          tmp = false;
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(KClassImpl).hashCode = function () {
		    var tmp0_safe_receiver = this.s8();
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
		    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
		  };
		  protoOf(KClassImpl).toString = function () {
		    return 'class ' + this.s8();
		  };
		  function NothingKClassImpl() {
		    NothingKClassImpl_instance = this;
		    KClassImpl.call(this, Object);
		    this.v8_1 = 'Nothing';
		  }
		  protoOf(NothingKClassImpl).s8 = function () {
		    return this.v8_1;
		  };
		  protoOf(NothingKClassImpl).t8 = function (value) {
		    return false;
		  };
		  protoOf(NothingKClassImpl).r8 = function () {
		    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
		  };
		  protoOf(NothingKClassImpl).equals = function (other) {
		    return other === this;
		  };
		  protoOf(NothingKClassImpl).hashCode = function () {
		    return 0;
		  };
		  var NothingKClassImpl_instance;
		  function NothingKClassImpl_getInstance() {
		    if (NothingKClassImpl_instance == null)
		      new NothingKClassImpl();
		    return NothingKClassImpl_instance;
		  }
		  function ErrorKClass() {
		  }
		  protoOf(ErrorKClass).s8 = function () {
		    var message = 'Unknown simpleName for ErrorKClass';
		    throw IllegalStateException_init_$Create$_0(toString_1(message));
		  };
		  protoOf(ErrorKClass).t8 = function (value) {
		    var message = "Can's check isInstance on ErrorKClass";
		    throw IllegalStateException_init_$Create$_0(toString_1(message));
		  };
		  protoOf(ErrorKClass).equals = function (other) {
		    return other === this;
		  };
		  protoOf(ErrorKClass).hashCode = function () {
		    return 0;
		  };
		  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
		    KClassImpl.call(this, jClass);
		    this.x8_1 = givenSimpleName;
		    this.y8_1 = isInstanceFunction;
		  }
		  protoOf(PrimitiveKClassImpl).equals = function (other) {
		    if (!(other instanceof PrimitiveKClassImpl))
		      return false;
		    return protoOf(KClassImpl).equals.call(this, other) && this.x8_1 === other.x8_1;
		  };
		  protoOf(PrimitiveKClassImpl).s8 = function () {
		    return this.x8_1;
		  };
		  protoOf(PrimitiveKClassImpl).t8 = function (value) {
		    return this.y8_1(value);
		  };
		  function SimpleKClassImpl(jClass) {
		    KClassImpl.call(this, jClass);
		    var tmp = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp0_safe_receiver = jClass.$metadata$;
		    tmp.a9_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
		  }
		  protoOf(SimpleKClassImpl).s8 = function () {
		    return this.a9_1;
		  };
		  protoOf(SimpleKClassImpl).t8 = function (value) {
		    return jsIsType(value, this.r8());
		  };
		  function KProperty1() {
		  }
		  function createKType(classifier, arguments_0, isMarkedNullable) {
		    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
		  }
		  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
		    this.b9_1 = classifier;
		    this.c9_1 = arguments_0;
		    this.d9_1 = isMarkedNullable;
		  }
		  protoOf(KTypeImpl).e9 = function () {
		    return this.b9_1;
		  };
		  protoOf(KTypeImpl).f9 = function () {
		    return this.c9_1;
		  };
		  protoOf(KTypeImpl).g9 = function () {
		    return this.d9_1;
		  };
		  protoOf(KTypeImpl).equals = function (other) {
		    var tmp;
		    var tmp_0;
		    var tmp_1;
		    if (other instanceof KTypeImpl) {
		      tmp_1 = equals(this.b9_1, other.b9_1);
		    } else {
		      tmp_1 = false;
		    }
		    if (tmp_1) {
		      tmp_0 = equals(this.c9_1, other.c9_1);
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      tmp = this.d9_1 === other.d9_1;
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(KTypeImpl).hashCode = function () {
		    return imul(imul(hashCode(this.b9_1), 31) + hashCode(this.c9_1) | 0, 31) + getBooleanHashCode(this.d9_1) | 0;
		  };
		  protoOf(KTypeImpl).toString = function () {
		    var tmp = this.b9_1;
		    var kClass = isInterface(tmp, KClass) ? tmp : null;
		    var classifierName = kClass == null ? toString_1(this.b9_1) : !(kClass.s8() == null) ? kClass.s8() : '(non-denotable type)';
		    var args = this.c9_1.n() ? '' : joinToString_0(this.c9_1, ', ', '<', '>');
		    var nullable = this.d9_1 ? '?' : '';
		    return plus_0(classifierName, args) + nullable;
		  };
		  function get_functionClasses() {
		    _init_properties_primitives_kt__3fums4();
		    return functionClasses;
		  }
		  var functionClasses;
		  function PrimitiveClasses$anyClass$lambda(it) {
		    return !(it == null);
		  }
		  function PrimitiveClasses$numberClass$lambda(it) {
		    return isNumber(it);
		  }
		  function PrimitiveClasses$booleanClass$lambda(it) {
		    return !(it == null) ? typeof it === 'boolean' : false;
		  }
		  function PrimitiveClasses$byteClass$lambda(it) {
		    return !(it == null) ? typeof it === 'number' : false;
		  }
		  function PrimitiveClasses$shortClass$lambda(it) {
		    return !(it == null) ? typeof it === 'number' : false;
		  }
		  function PrimitiveClasses$intClass$lambda(it) {
		    return !(it == null) ? typeof it === 'number' : false;
		  }
		  function PrimitiveClasses$floatClass$lambda(it) {
		    return !(it == null) ? typeof it === 'number' : false;
		  }
		  function PrimitiveClasses$doubleClass$lambda(it) {
		    return !(it == null) ? typeof it === 'number' : false;
		  }
		  function PrimitiveClasses$arrayClass$lambda(it) {
		    return !(it == null) ? isArray(it) : false;
		  }
		  function PrimitiveClasses$stringClass$lambda(it) {
		    return !(it == null) ? typeof it === 'string' : false;
		  }
		  function PrimitiveClasses$throwableClass$lambda(it) {
		    return it instanceof Error;
		  }
		  function PrimitiveClasses$booleanArrayClass$lambda(it) {
		    return !(it == null) ? isBooleanArray(it) : false;
		  }
		  function PrimitiveClasses$charArrayClass$lambda(it) {
		    return !(it == null) ? isCharArray(it) : false;
		  }
		  function PrimitiveClasses$byteArrayClass$lambda(it) {
		    return !(it == null) ? isByteArray(it) : false;
		  }
		  function PrimitiveClasses$shortArrayClass$lambda(it) {
		    return !(it == null) ? isShortArray(it) : false;
		  }
		  function PrimitiveClasses$intArrayClass$lambda(it) {
		    return !(it == null) ? isIntArray(it) : false;
		  }
		  function PrimitiveClasses$longArrayClass$lambda(it) {
		    return !(it == null) ? isLongArray(it) : false;
		  }
		  function PrimitiveClasses$floatArrayClass$lambda(it) {
		    return !(it == null) ? isFloatArray(it) : false;
		  }
		  function PrimitiveClasses$doubleArrayClass$lambda(it) {
		    return !(it == null) ? isDoubleArray(it) : false;
		  }
		  function PrimitiveClasses$functionClass$lambda($arity) {
		    return function (it) {
		      var tmp;
		      if (typeof it === 'function') {
		        // Inline function 'kotlin.js.asDynamic' call
		        tmp = it.length === $arity;
		      } else {
		        tmp = false;
		      }
		      return tmp;
		    };
		  }
		  function PrimitiveClasses() {
		    PrimitiveClasses_instance = this;
		    var tmp = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_0 = Object;
		    tmp.anyClass = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda);
		    var tmp_1 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_2 = Number;
		    tmp_1.numberClass = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda);
		    this.nothingClass = NothingKClassImpl_getInstance();
		    var tmp_3 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_4 = Boolean;
		    tmp_3.booleanClass = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda);
		    var tmp_5 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_6 = Number;
		    tmp_5.byteClass = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda);
		    var tmp_7 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_8 = Number;
		    tmp_7.shortClass = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda);
		    var tmp_9 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_10 = Number;
		    tmp_9.intClass = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda);
		    var tmp_11 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_12 = Number;
		    tmp_11.floatClass = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda);
		    var tmp_13 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_14 = Number;
		    tmp_13.doubleClass = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda);
		    var tmp_15 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_16 = Array;
		    tmp_15.arrayClass = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda);
		    var tmp_17 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_18 = String;
		    tmp_17.stringClass = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda);
		    var tmp_19 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_20 = Error;
		    tmp_19.throwableClass = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda);
		    var tmp_21 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_22 = Array;
		    tmp_21.booleanArrayClass = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda);
		    var tmp_23 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_24 = Uint16Array;
		    tmp_23.charArrayClass = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda);
		    var tmp_25 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_26 = Int8Array;
		    tmp_25.byteArrayClass = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda);
		    var tmp_27 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_28 = Int16Array;
		    tmp_27.shortArrayClass = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda);
		    var tmp_29 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_30 = Int32Array;
		    tmp_29.intArrayClass = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda);
		    var tmp_31 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_32 = Array;
		    tmp_31.longArrayClass = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda);
		    var tmp_33 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_34 = Float32Array;
		    tmp_33.floatArrayClass = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda);
		    var tmp_35 = this;
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp_36 = Float64Array;
		    tmp_35.doubleArrayClass = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda);
		  }
		  protoOf(PrimitiveClasses).h9 = function () {
		    return this.anyClass;
		  };
		  protoOf(PrimitiveClasses).i9 = function () {
		    return this.numberClass;
		  };
		  protoOf(PrimitiveClasses).j9 = function () {
		    return this.nothingClass;
		  };
		  protoOf(PrimitiveClasses).k9 = function () {
		    return this.booleanClass;
		  };
		  protoOf(PrimitiveClasses).l9 = function () {
		    return this.byteClass;
		  };
		  protoOf(PrimitiveClasses).m9 = function () {
		    return this.shortClass;
		  };
		  protoOf(PrimitiveClasses).n9 = function () {
		    return this.intClass;
		  };
		  protoOf(PrimitiveClasses).o9 = function () {
		    return this.floatClass;
		  };
		  protoOf(PrimitiveClasses).p9 = function () {
		    return this.doubleClass;
		  };
		  protoOf(PrimitiveClasses).q9 = function () {
		    return this.arrayClass;
		  };
		  protoOf(PrimitiveClasses).r9 = function () {
		    return this.stringClass;
		  };
		  protoOf(PrimitiveClasses).s9 = function () {
		    return this.throwableClass;
		  };
		  protoOf(PrimitiveClasses).t9 = function () {
		    return this.booleanArrayClass;
		  };
		  protoOf(PrimitiveClasses).u9 = function () {
		    return this.charArrayClass;
		  };
		  protoOf(PrimitiveClasses).v9 = function () {
		    return this.byteArrayClass;
		  };
		  protoOf(PrimitiveClasses).w9 = function () {
		    return this.shortArrayClass;
		  };
		  protoOf(PrimitiveClasses).x9 = function () {
		    return this.intArrayClass;
		  };
		  protoOf(PrimitiveClasses).y9 = function () {
		    return this.longArrayClass;
		  };
		  protoOf(PrimitiveClasses).z9 = function () {
		    return this.floatArrayClass;
		  };
		  protoOf(PrimitiveClasses).aa = function () {
		    return this.doubleArrayClass;
		  };
		  protoOf(PrimitiveClasses).functionClass = function (arity) {
		    var tmp0_elvis_lhs = get_functionClasses()[arity];
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      // Inline function 'kotlin.run' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.reflect.js.internal.PrimitiveClasses.functionClass.<anonymous>' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      var tmp_0 = Function;
		      var tmp_1 = 'Function' + arity;
		      var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
		      // Inline function 'kotlin.js.asDynamic' call
		      get_functionClasses()[arity] = result;
		      tmp = result;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  var PrimitiveClasses_instance;
		  function PrimitiveClasses_getInstance() {
		    if (PrimitiveClasses_instance == null)
		      new PrimitiveClasses();
		    return PrimitiveClasses_instance;
		  }
		  var properties_initialized_primitives_kt_jle18u;
		  function _init_properties_primitives_kt__3fums4() {
		    if (!properties_initialized_primitives_kt_jle18u) {
		      properties_initialized_primitives_kt_jle18u = true;
		      // Inline function 'kotlin.arrayOfNulls' call
		      functionClasses = fillArrayVal(Array(0), null);
		    }
		  }
		  function getKClass(jClass) {
		    var tmp;
		    if (Array.isArray(jClass)) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = getKClassM(jClass);
		    } else {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = getKClass1(jClass);
		    }
		    return tmp;
		  }
		  function getKClassM(jClasses) {
		    var tmp;
		    switch (jClasses.length) {
		      case 1:
		        tmp = getKClass1(jClasses[0]);
		        break;
		      case 0:
		        // Inline function 'kotlin.js.unsafeCast' call

		        // Inline function 'kotlin.js.asDynamic' call

		        tmp = NothingKClassImpl_getInstance();
		        break;
		      default:
		        // Inline function 'kotlin.js.unsafeCast' call

		        // Inline function 'kotlin.js.asDynamic' call

		        tmp = new ErrorKClass();
		        break;
		    }
		    return tmp;
		  }
		  function getKClass1(jClass) {
		    if (jClass === String) {
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      return PrimitiveClasses_getInstance().stringClass;
		    }
		    // Inline function 'kotlin.js.asDynamic' call
		    var metadata = jClass.$metadata$;
		    var tmp;
		    if (metadata != null) {
		      var tmp_0;
		      if (metadata.$kClass$ == null) {
		        var kClass = new SimpleKClassImpl(jClass);
		        metadata.$kClass$ = kClass;
		        tmp_0 = kClass;
		      } else {
		        tmp_0 = metadata.$kClass$;
		      }
		      tmp = tmp_0;
		    } else {
		      tmp = new SimpleKClassImpl(jClass);
		    }
		    return tmp;
		  }
		  function getKClassFromExpression(e) {
		    // Inline function 'kotlin.js.unsafeCast' call
		    var tmp;
		    switch (typeof e) {
		      case 'string':
		        tmp = PrimitiveClasses_getInstance().stringClass;
		        break;
		      case 'number':
		        var tmp_0;
		        // Inline function 'kotlin.js.asDynamic' call

		        // Inline function 'kotlin.js.jsBitwiseOr' call

		        if ((e | 0) === e) {
		          tmp_0 = PrimitiveClasses_getInstance().intClass;
		        } else {
		          tmp_0 = PrimitiveClasses_getInstance().doubleClass;
		        }

		        tmp = tmp_0;
		        break;
		      case 'boolean':
		        tmp = PrimitiveClasses_getInstance().booleanClass;
		        break;
		      case 'function':
		        var tmp_1 = PrimitiveClasses_getInstance();
		        // Inline function 'kotlin.js.asDynamic' call

		        tmp = tmp_1.functionClass(e.length);
		        break;
		      default:
		        var tmp_2;
		        if (isBooleanArray(e)) {
		          tmp_2 = PrimitiveClasses_getInstance().booleanArrayClass;
		        } else {
		          if (isCharArray(e)) {
		            tmp_2 = PrimitiveClasses_getInstance().charArrayClass;
		          } else {
		            if (isByteArray(e)) {
		              tmp_2 = PrimitiveClasses_getInstance().byteArrayClass;
		            } else {
		              if (isShortArray(e)) {
		                tmp_2 = PrimitiveClasses_getInstance().shortArrayClass;
		              } else {
		                if (isIntArray(e)) {
		                  tmp_2 = PrimitiveClasses_getInstance().intArrayClass;
		                } else {
		                  if (isLongArray(e)) {
		                    tmp_2 = PrimitiveClasses_getInstance().longArrayClass;
		                  } else {
		                    if (isFloatArray(e)) {
		                      tmp_2 = PrimitiveClasses_getInstance().floatArrayClass;
		                    } else {
		                      if (isDoubleArray(e)) {
		                        tmp_2 = PrimitiveClasses_getInstance().doubleArrayClass;
		                      } else {
		                        if (isInterface(e, KClass)) {
		                          tmp_2 = getKClass(KClass);
		                        } else {
		                          if (isArray(e)) {
		                            tmp_2 = PrimitiveClasses_getInstance().arrayClass;
		                          } else {
		                            var constructor = Object.getPrototypeOf(e).constructor;
		                            var tmp_3;
		                            if (constructor === Object) {
		                              tmp_3 = PrimitiveClasses_getInstance().anyClass;
		                            } else if (constructor === Error) {
		                              tmp_3 = PrimitiveClasses_getInstance().throwableClass;
		                            } else {
		                              var jsClass = constructor;
		                              tmp_3 = getKClass1(jsClass);
		                            }
		                            tmp_2 = tmp_3;
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }

		        tmp = tmp_2;
		        break;
		    }
		    // Inline function 'kotlin.js.asDynamic' call
		    return tmp;
		  }
		  function findAssociatedObject(_this__u8e3s4, annotationClass) {
		    var tmp;
		    var tmp_0;
		    if (_this__u8e3s4 instanceof KClassImpl) {
		      tmp_0 = annotationClass instanceof KClassImpl;
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp0_safe_receiver = annotationClass.r8().$metadata$;
		      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
		      var tmp_1;
		      if (tmp1_safe_receiver == null) {
		        tmp_1 = null;
		      } else {
		        // Inline function 'kotlin.js.unsafeCast' call
		        tmp_1 = tmp1_safe_receiver;
		      }
		      var tmp2_elvis_lhs = tmp_1;
		      var tmp_2;
		      if (tmp2_elvis_lhs == null) {
		        return null;
		      } else {
		        tmp_2 = tmp2_elvis_lhs;
		      }
		      var key = tmp_2;
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp3_safe_receiver = _this__u8e3s4.r8().$metadata$;
		      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
		      var tmp_3;
		      if (tmp4_elvis_lhs == null) {
		        return null;
		      } else {
		        tmp_3 = tmp4_elvis_lhs;
		      }
		      var map = tmp_3;
		      var tmp5_elvis_lhs = map[key];
		      var tmp_4;
		      if (tmp5_elvis_lhs == null) {
		        return null;
		      } else {
		        tmp_4 = tmp5_elvis_lhs;
		      }
		      var factory = tmp_4;
		      return factory();
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  }
		  function reset(_this__u8e3s4) {
		    _this__u8e3s4.lastIndex = 0;
		  }
		  function StringBuilder_init_$Init$(capacity, $this) {
		    StringBuilder_init_$Init$_0($this);
		    return $this;
		  }
		  function StringBuilder_init_$Create$(capacity) {
		    return StringBuilder_init_$Init$(capacity, objectCreate(protoOf(StringBuilder)));
		  }
		  function StringBuilder_init_$Init$_0($this) {
		    StringBuilder.call($this, '');
		    return $this;
		  }
		  function StringBuilder_init_$Create$_0() {
		    return StringBuilder_init_$Init$_0(objectCreate(protoOf(StringBuilder)));
		  }
		  function StringBuilder(content) {
		    this.g7_1 = !(content === undefined) ? content : '';
		  }
		  protoOf(StringBuilder).a = function () {
		    // Inline function 'kotlin.js.asDynamic' call
		    return this.g7_1.length;
		  };
		  protoOf(StringBuilder).b = function (index) {
		    // Inline function 'kotlin.text.getOrElse' call
		    var this_0 = this.g7_1;
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    if (0 <= index ? index <= (charSequenceLength(this_0) - 1 | 0) : false) {
		      tmp = charSequenceGet(this_0, index);
		    } else {
		      throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', length: ' + this.a() + '}');
		    }
		    return tmp;
		  };
		  protoOf(StringBuilder).c = function (startIndex, endIndex) {
		    // Inline function 'kotlin.text.substring' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return this.g7_1.substring(startIndex, endIndex);
		  };
		  protoOf(StringBuilder).j7 = function (value) {
		    this.g7_1 = this.g7_1 + toString(value);
		    return this;
		  };
		  protoOf(StringBuilder).e = function (value) {
		    this.g7_1 = this.g7_1 + toString_0(value);
		    return this;
		  };
		  protoOf(StringBuilder).ba = function (value, startIndex, endIndex) {
		    return this.ca(value == null ? 'null' : value, startIndex, endIndex);
		  };
		  protoOf(StringBuilder).h7 = function (value) {
		    this.g7_1 = this.g7_1 + toString_0(value);
		    return this;
		  };
		  protoOf(StringBuilder).da = function (value) {
		    return this.i7(value.toString());
		  };
		  protoOf(StringBuilder).ea = function (value) {
		    return this.i7(value.toString());
		  };
		  protoOf(StringBuilder).i7 = function (value) {
		    var tmp = this;
		    var tmp_0 = this.g7_1;
		    tmp.g7_1 = tmp_0 + (value == null ? 'null' : value);
		    return this;
		  };
		  protoOf(StringBuilder).fa = function (index, value) {
		    Companion_instance_5.r4(index, this.a());
		    var tmp = this;
		    // Inline function 'kotlin.text.substring' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp_0 = this.g7_1.substring(0, index) + toString(value);
		    // Inline function 'kotlin.text.substring' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.g7_1 = tmp_0 + this.g7_1.substring(index);
		    return this;
		  };
		  protoOf(StringBuilder).ga = function (newLength) {
		    if (newLength < 0) {
		      throw IllegalArgumentException_init_$Create$_0('Negative new length: ' + newLength + '.');
		    }
		    if (newLength <= this.a()) {
		      var tmp = this;
		      // Inline function 'kotlin.text.substring' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp.g7_1 = this.g7_1.substring(0, newLength);
		    } else {
		      var inductionVariable = this.a();
		      if (inductionVariable < newLength)
		        do {
		          inductionVariable = inductionVariable + 1 | 0;
		          this.g7_1 = this.g7_1 + toString(_Char___init__impl__6a9atx(0));
		        }
		         while (inductionVariable < newLength);
		    }
		  };
		  protoOf(StringBuilder).toString = function () {
		    return this.g7_1;
		  };
		  protoOf(StringBuilder).ha = function () {
		    this.g7_1 = '';
		    return this;
		  };
		  protoOf(StringBuilder).ca = function (value, startIndex, endIndex) {
		    var stringCsq = toString_1(value);
		    Companion_instance_5.ia(startIndex, endIndex, stringCsq.length);
		    var tmp = this;
		    var tmp_0 = this.g7_1;
		    // Inline function 'kotlin.text.substring' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.g7_1 = tmp_0 + stringCsq.substring(startIndex, endIndex);
		    return this;
		  };
		  function uppercaseChar(_this__u8e3s4) {
		    // Inline function 'kotlin.text.uppercase' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var uppercase = toString(_this__u8e3s4).toUpperCase();
		    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
		  }
		  function isWhitespace(_this__u8e3s4) {
		    return isWhitespaceImpl(_this__u8e3s4);
		  }
		  function isLowerCase(_this__u8e3s4) {
		    if (_Char___init__impl__6a9atx(97) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(122) : false) {
		      return true;
		    }
		    if (Char__compareTo_impl_ypi4mb(_this__u8e3s4, _Char___init__impl__6a9atx(128)) < 0) {
		      return false;
		    }
		    return isLowerCaseImpl(_this__u8e3s4);
		  }
		  function titlecaseChar(_this__u8e3s4) {
		    return titlecaseCharImpl(_this__u8e3s4);
		  }
		  function checkRadix(radix) {
		    if (!(2 <= radix ? radix <= 36 : false)) {
		      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
		    }
		    return radix;
		  }
		  function toString_2(_this__u8e3s4, radix) {
		    return toStringImpl(_this__u8e3s4, checkRadix(radix));
		  }
		  function toDouble(_this__u8e3s4) {
		    // Inline function 'kotlin.also' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var this_0 = +_this__u8e3s4;
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.text.toDouble.<anonymous>' call
		    if (isNaN_0(this_0) && !isNaN_2(_this__u8e3s4) || (this_0 === 0.0 && isBlank(_this__u8e3s4))) {
		      numberFormatError(_this__u8e3s4);
		    }
		    return this_0;
		  }
		  function toLong_0(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function digitOf(char, radix) {
		    // Inline function 'kotlin.let' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.text.digitOf.<anonymous>' call
		    var it = Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
		    return it >= radix ? -1 : it;
		  }
		  function isNaN_2(_this__u8e3s4) {
		    // Inline function 'kotlin.text.lowercase' call
		    // Inline function 'kotlin.js.asDynamic' call
		    switch (_this__u8e3s4.toLowerCase()) {
		      case 'nan':
		      case '+nan':
		      case '-nan':
		        return true;
		      default:
		        return false;
		    }
		  }
		  function toInt(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function toDoubleOrNull(_this__u8e3s4) {
		    // Inline function 'kotlin.takeIf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var this_0 = +_this__u8e3s4;
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    // Inline function 'kotlin.text.toDoubleOrNull.<anonymous>' call
		    if (!(isNaN_0(this_0) && !isNaN_2(_this__u8e3s4) || (this_0 === 0.0 && isBlank(_this__u8e3s4)))) {
		      tmp = this_0;
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  }
		  function Regex_init_$Init$(pattern, $this) {
		    Regex.call($this, pattern, emptySet());
		    return $this;
		  }
		  function Regex_init_$Create$(pattern) {
		    return Regex_init_$Init$(pattern, objectCreate(protoOf(Regex)));
		  }
		  function Companion_4() {
		    Companion_instance_4 = this;
		    this.ja_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
		    this.ka_1 = new RegExp('[\\\\$]', 'g');
		    this.la_1 = new RegExp('\\$', 'g');
		  }
		  protoOf(Companion_4).ma = function (literal) {
		    // Inline function 'kotlin.text.nativeReplace' call
		    var pattern = this.ja_1;
		    // Inline function 'kotlin.js.asDynamic' call
		    return literal.replace(pattern, '\\$&');
		  };
		  protoOf(Companion_4).na = function (literal) {
		    // Inline function 'kotlin.text.nativeReplace' call
		    var pattern = this.la_1;
		    // Inline function 'kotlin.js.asDynamic' call
		    return literal.replace(pattern, '$$$$');
		  };
		  var Companion_instance_4;
		  function Companion_getInstance_4() {
		    if (Companion_instance_4 == null)
		      new Companion_4();
		    return Companion_instance_4;
		  }
		  function Regex(pattern, options) {
		    Companion_getInstance_4();
		    this.oa_1 = pattern;
		    this.pa_1 = toSet_0(options);
		    this.qa_1 = new RegExp(pattern, toFlags(options, 'gu'));
		    this.ra_1 = null;
		    this.sa_1 = null;
		  }
		  protoOf(Regex).ta = function (input) {
		    reset(this.qa_1);
		    return this.qa_1.test(toString_1(input));
		  };
		  protoOf(Regex).toString = function () {
		    return this.qa_1.toString();
		  };
		  function toFlags(_this__u8e3s4, prepend) {
		    return joinToString_0(_this__u8e3s4, '', prepend, VOID, VOID, VOID, toFlags$lambda);
		  }
		  function toFlags$lambda(it) {
		    return it.wa_1;
		  }
		  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
		  }
		  function startsWith(_this__u8e3s4, prefix, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    if (!ignoreCase) {
		      // Inline function 'kotlin.text.nativeStartsWith' call
		      // Inline function 'kotlin.js.asDynamic' call
		      return _this__u8e3s4.startsWith(prefix, 0);
		    } else
		      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
		  }
		  function equals_0(_this__u8e3s4, other, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    if (_this__u8e3s4 == null)
		      return other == null;
		    if (other == null)
		      return false;
		    if (!ignoreCase)
		      return _this__u8e3s4 == other;
		    if (!(_this__u8e3s4.length === other.length))
		      return false;
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length;
		    if (inductionVariable < last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var thisChar = charSequenceGet(_this__u8e3s4, index);
		        var otherChar = charSequenceGet(other, index);
		        if (!equals_1(thisChar, otherChar, ignoreCase)) {
		          return false;
		        }
		      }
		       while (inductionVariable < last);
		    return true;
		  }
		  function replaceFirst(_this__u8e3s4, oldValue, newValue, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    // Inline function 'kotlin.text.nativeReplace' call
		    var pattern = new RegExp(Companion_getInstance_4().ma(oldValue), ignoreCase ? 'ui' : 'u');
		    var replacement = Companion_getInstance_4().na(newValue);
		    // Inline function 'kotlin.js.asDynamic' call
		    return _this__u8e3s4.replace(pattern, replacement);
		  }
		  function stackTraceToString(_this__u8e3s4) {
		    return (new ExceptionTraceBuilder()).bb(_this__u8e3s4);
		  }
		  function hasSeen($this, exception) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.collections.any' call
		      var indexedObject = $this.ya_1;
		      var inductionVariable = 0;
		      var last = indexedObject.length;
		      while (inductionVariable < last) {
		        var element = indexedObject[inductionVariable];
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.ExceptionTraceBuilder.hasSeen.<anonymous>' call
		        if (element === exception) {
		          tmp$ret$1 = true;
		          break $l$block;
		        }
		      }
		      tmp$ret$1 = false;
		    }
		    return tmp$ret$1;
		  }
		  function dumpFullTrace(_this__u8e3s4, $this, indent, qualifier) {
		    if (dumpSelfTrace(_this__u8e3s4, $this, indent, qualifier))
		      ;
		    else
		      return Unit_instance;
		    var cause = _this__u8e3s4.cause;
		    while (!(cause == null)) {
		      if (dumpSelfTrace(cause, $this, indent, 'Caused by: '))
		        ;
		      else
		        return Unit_instance;
		      cause = cause.cause;
		    }
		  }
		  function dumpSelfTrace(_this__u8e3s4, $this, indent, qualifier) {
		    $this.xa_1.i7(indent).i7(qualifier);
		    var shortInfo = _this__u8e3s4.toString();
		    if (hasSeen($this, _this__u8e3s4)) {
		      $this.xa_1.i7('[CIRCULAR REFERENCE, SEE ABOVE: ').i7(shortInfo).i7(']\n');
		      return false;
		    }
		    // Inline function 'kotlin.js.asDynamic' call
		    $this.ya_1.push(_this__u8e3s4);
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp = _this__u8e3s4.stack;
		    var stack = (tmp == null ? true : typeof tmp === 'string') ? tmp : THROW_CCE();
		    if (!(stack == null)) {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.ExceptionTraceBuilder.dumpSelfTrace.<anonymous>' call
		      var it = indexOf_6(stack, shortInfo);
		      var stackStart = it < 0 ? 0 : it + shortInfo.length | 0;
		      if (stackStart === 0) {
		        $this.xa_1.i7(shortInfo).i7('\n');
		      }
		      // Inline function 'kotlin.text.isEmpty' call
		      var this_0 = $this.za_1;
		      if (charSequenceLength(this_0) === 0) {
		        $this.za_1 = stack;
		        $this.ab_1 = stackStart;
		      } else {
		        stack = dropCommonFrames($this, stack, stackStart);
		      }
		      // Inline function 'kotlin.text.isNotEmpty' call
		      if (charSequenceLength(indent) > 0) {
		        var tmp_0;
		        if (stackStart === 0) {
		          tmp_0 = 0;
		        } else {
		          // Inline function 'kotlin.text.count' call
		          var count = 0;
		          var inductionVariable = 0;
		          while (inductionVariable < charSequenceLength(shortInfo)) {
		            var element = charSequenceGet(shortInfo, inductionVariable);
		            inductionVariable = inductionVariable + 1 | 0;
		            // Inline function 'kotlin.ExceptionTraceBuilder.dumpSelfTrace.<anonymous>' call
		            if (element === _Char___init__impl__6a9atx(10)) {
		              count = count + 1 | 0;
		            }
		          }
		          tmp_0 = 1 + count | 0;
		        }
		        var messageLines = tmp_0;
		        // Inline function 'kotlin.sequences.forEachIndexed' call
		        var index = 0;
		        var tmp0_iterator = lineSequence(stack).i();
		        while (tmp0_iterator.j()) {
		          var item = tmp0_iterator.k();
		          // Inline function 'kotlin.ExceptionTraceBuilder.dumpSelfTrace.<anonymous>' call
		          var tmp1 = index;
		          index = tmp1 + 1 | 0;
		          if (checkIndexOverflow(tmp1) >= messageLines) {
		            $this.xa_1.i7(indent);
		          }
		          $this.xa_1.i7(item).i7('\n');
		        }
		      } else {
		        $this.xa_1.i7(stack).i7('\n');
		      }
		    } else {
		      $this.xa_1.i7(shortInfo).i7('\n');
		    }
		    var suppressed = get_suppressedExceptions(_this__u8e3s4);
		    // Inline function 'kotlin.collections.isNotEmpty' call
		    if (!suppressed.n()) {
		      var suppressedIndent = indent + '    ';
		      var tmp0_iterator_0 = suppressed.i();
		      while (tmp0_iterator_0.j()) {
		        var s = tmp0_iterator_0.k();
		        dumpFullTrace(s, $this, suppressedIndent, 'Suppressed: ');
		      }
		    }
		    return true;
		  }
		  function dropCommonFrames($this, stack, stackStart) {
		    var commonFrames = 0;
		    var lastBreak = 0;
		    var preLastBreak = 0;
		    var inductionVariable = 0;
		    // Inline function 'kotlin.comparisons.minOf' call
		    var a = $this.za_1.length - $this.ab_1 | 0;
		    var b = stack.length - stackStart | 0;
		    var last = Math.min(a, b);
		    if (inductionVariable < last)
		      $l$loop: do {
		        var pos = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var c = charSequenceGet(stack, get_lastIndex_3(stack) - pos | 0);
		        if (!(c === charSequenceGet($this.za_1, get_lastIndex_3($this.za_1) - pos | 0)))
		          break $l$loop;
		        if (c === _Char___init__impl__6a9atx(10)) {
		          commonFrames = commonFrames + 1 | 0;
		          preLastBreak = lastBreak;
		          lastBreak = pos;
		        }
		      }
		       while (inductionVariable < last);
		    if (commonFrames <= 1)
		      return stack;
		    while (preLastBreak > 0 && charSequenceGet(stack, get_lastIndex_3(stack) - (preLastBreak - 1 | 0) | 0) === _Char___init__impl__6a9atx(32))
		      preLastBreak = preLastBreak - 1 | 0;
		    return dropLast(stack, preLastBreak) + ('... and ' + (commonFrames - 1 | 0) + ' more common stack frames skipped');
		  }
		  function ExceptionTraceBuilder() {
		    this.xa_1 = StringBuilder_init_$Create$_0();
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.ya_1 = [];
		    this.za_1 = '';
		    this.ab_1 = 0;
		  }
		  protoOf(ExceptionTraceBuilder).bb = function (exception) {
		    dumpFullTrace(exception, this, '', '');
		    return this.xa_1.toString();
		  };
		  function get_suppressedExceptions(_this__u8e3s4) {
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp0_safe_receiver = _this__u8e3s4._suppressed;
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.js.unsafeCast' call
		      tmp = tmp0_safe_receiver;
		    }
		    var tmp1_elvis_lhs = tmp;
		    return tmp1_elvis_lhs == null ? emptyList() : tmp1_elvis_lhs;
		  }
		  var DurationUnit_NANOSECONDS_instance;
		  var DurationUnit_MICROSECONDS_instance;
		  var DurationUnit_MILLISECONDS_instance;
		  var DurationUnit_SECONDS_instance;
		  var DurationUnit_MINUTES_instance;
		  var DurationUnit_HOURS_instance;
		  var DurationUnit_DAYS_instance;
		  var DurationUnit_entriesInitialized;
		  function DurationUnit_initEntries() {
		    if (DurationUnit_entriesInitialized)
		      return Unit_instance;
		    DurationUnit_entriesInitialized = true;
		    DurationUnit_NANOSECONDS_instance = new DurationUnit('NANOSECONDS', 0, 1.0);
		    DurationUnit_MICROSECONDS_instance = new DurationUnit('MICROSECONDS', 1, 1000.0);
		    DurationUnit_MILLISECONDS_instance = new DurationUnit('MILLISECONDS', 2, 1000000.0);
		    DurationUnit_SECONDS_instance = new DurationUnit('SECONDS', 3, 1.0E9);
		    DurationUnit_MINUTES_instance = new DurationUnit('MINUTES', 4, 6.0E10);
		    DurationUnit_HOURS_instance = new DurationUnit('HOURS', 5, 3.6E12);
		    DurationUnit_DAYS_instance = new DurationUnit('DAYS', 6, 8.64E13);
		  }
		  function DurationUnit(name, ordinal, scale) {
		    Enum.call(this, name, ordinal);
		    this.eb_1 = scale;
		  }
		  function convertDurationUnit(value, sourceUnit, targetUnit) {
		    var sourceCompareTarget = compareTo(sourceUnit.eb_1, targetUnit.eb_1);
		    return sourceCompareTarget > 0 ? value * (sourceUnit.eb_1 / targetUnit.eb_1) : sourceCompareTarget < 0 ? value / (targetUnit.eb_1 / sourceUnit.eb_1) : value;
		  }
		  function convertDurationUnit_0(value, sourceUnit, targetUnit) {
		    var sourceCompareTarget = compareTo(sourceUnit.eb_1, targetUnit.eb_1);
		    var tmp;
		    if (sourceCompareTarget > 0) {
		      var scale = numberToLong(sourceUnit.eb_1 / targetUnit.eb_1);
		      var result = value.o2(scale);
		      tmp = result.p2(scale).equals(value) ? result : value.v(new Long(0, 0)) > 0 ? new Long(-1, 2147483647) : new Long(0, -2147483648);
		    } else if (sourceCompareTarget < 0) {
		      tmp = value.p2(numberToLong(targetUnit.eb_1 / sourceUnit.eb_1));
		    } else {
		      tmp = value;
		    }
		    return tmp;
		  }
		  function convertDurationUnitOverflow(value, sourceUnit, targetUnit) {
		    var sourceCompareTarget = compareTo(sourceUnit.eb_1, targetUnit.eb_1);
		    return sourceCompareTarget > 0 ? value.o2(numberToLong(sourceUnit.eb_1 / targetUnit.eb_1)) : sourceCompareTarget < 0 ? value.p2(numberToLong(targetUnit.eb_1 / sourceUnit.eb_1)) : value;
		  }
		  function DurationUnit_NANOSECONDS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_NANOSECONDS_instance;
		  }
		  function DurationUnit_MICROSECONDS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_MICROSECONDS_instance;
		  }
		  function DurationUnit_MILLISECONDS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_MILLISECONDS_instance;
		  }
		  function DurationUnit_SECONDS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_SECONDS_instance;
		  }
		  function DurationUnit_MINUTES_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_MINUTES_instance;
		  }
		  function DurationUnit_HOURS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_HOURS_instance;
		  }
		  function DurationUnit_DAYS_getInstance() {
		    DurationUnit_initEntries();
		    return DurationUnit_DAYS_instance;
		  }
		  function AbstractCollection$toString$lambda(this$0) {
		    return function (it) {
		      return it === this$0 ? '(this Collection)' : toString_0(it);
		    };
		  }
		  function AbstractCollection() {
		  }
		  protoOf(AbstractCollection).o1 = function (element) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.any' call
		      var tmp;
		      if (isInterface(this, Collection)) {
		        tmp = this.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = false;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this.i();
		      while (tmp0_iterator.j()) {
		        var element_0 = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractCollection.contains.<anonymous>' call
		        if (equals(element_0, element)) {
		          tmp$ret$0 = true;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = false;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(AbstractCollection).p1 = function (elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var tmp;
		      if (isInterface(elements, Collection)) {
		        tmp = elements.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = elements.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractCollection.containsAll.<anonymous>' call
		        if (!this.o1(element)) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(AbstractCollection).n = function () {
		    return this.l() === 0;
		  };
		  protoOf(AbstractCollection).toString = function () {
		    return joinToString_0(this, ', ', '[', ']', VOID, VOID, AbstractCollection$toString$lambda(this));
		  };
		  protoOf(AbstractCollection).toArray = function () {
		    return collectionToArray(this);
		  };
		  function Companion_5() {
		    this.m3_1 = 2147483639;
		  }
		  protoOf(Companion_5).q4 = function (index, size) {
		    if (index < 0 || index >= size) {
		      throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', size: ' + size);
		    }
		  };
		  protoOf(Companion_5).r4 = function (index, size) {
		    if (index < 0 || index > size) {
		      throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', size: ' + size);
		    }
		  };
		  protoOf(Companion_5).n3 = function (fromIndex, toIndex, size) {
		    if (fromIndex < 0 || toIndex > size) {
		      throw IndexOutOfBoundsException_init_$Create$_0('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
		    }
		    if (fromIndex > toIndex) {
		      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
		    }
		  };
		  protoOf(Companion_5).ia = function (startIndex, endIndex, size) {
		    if (startIndex < 0 || endIndex > size) {
		      throw IndexOutOfBoundsException_init_$Create$_0('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
		    }
		    if (startIndex > endIndex) {
		      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
		    }
		  };
		  protoOf(Companion_5).h6 = function (oldCapacity, minCapacity) {
		    var newCapacity = oldCapacity + (oldCapacity >> 1) | 0;
		    if ((newCapacity - minCapacity | 0) < 0)
		      newCapacity = minCapacity;
		    if ((newCapacity - 2147483639 | 0) > 0)
		      newCapacity = minCapacity > 2147483639 ? 2147483647 : 2147483639;
		    return newCapacity;
		  };
		  protoOf(Companion_5).d4 = function (c) {
		    var hashCode_0 = 1;
		    var tmp0_iterator = c.i();
		    while (tmp0_iterator.j()) {
		      var e = tmp0_iterator.k();
		      var tmp = imul(31, hashCode_0);
		      var tmp2_elvis_lhs = e == null ? null : hashCode(e);
		      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
		    }
		    return hashCode_0;
		  };
		  protoOf(Companion_5).c4 = function (c, other) {
		    if (!(c.l() === other.l()))
		      return false;
		    var otherIterator = other.i();
		    var tmp0_iterator = c.i();
		    while (tmp0_iterator.j()) {
		      var elem = tmp0_iterator.k();
		      var elemOther = otherIterator.k();
		      if (!equals(elem, elemOther)) {
		        return false;
		      }
		    }
		    return true;
		  };
		  var Companion_instance_5;
		  function AbstractMap$keys$1$iterator$1($entryIterator) {
		    this.fb_1 = $entryIterator;
		  }
		  protoOf(AbstractMap$keys$1$iterator$1).j = function () {
		    return this.fb_1.j();
		  };
		  protoOf(AbstractMap$keys$1$iterator$1).k = function () {
		    return this.fb_1.k().q1();
		  };
		  function AbstractMap$values$1$iterator$1($entryIterator) {
		    this.gb_1 = $entryIterator;
		  }
		  protoOf(AbstractMap$values$1$iterator$1).j = function () {
		    return this.gb_1.j();
		  };
		  protoOf(AbstractMap$values$1$iterator$1).k = function () {
		    return this.gb_1.k().r1();
		  };
		  function toString_3($this, o) {
		    return o === $this ? '(this Map)' : toString_0(o);
		  }
		  function implFindEntry($this, key) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.collections.firstOrNull' call
		      var tmp0_iterator = $this.x1().i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractMap.implFindEntry.<anonymous>' call
		        if (equals(element.q1(), key)) {
		          tmp$ret$1 = element;
		          break $l$block;
		        }
		      }
		      tmp$ret$1 = null;
		    }
		    return tmp$ret$1;
		  }
		  function Companion_6() {
		  }
		  function AbstractMap$keys$1(this$0) {
		    this.hb_1 = this$0;
		    AbstractSet.call(this);
		  }
		  protoOf(AbstractMap$keys$1).a5 = function (element) {
		    return this.hb_1.s1(element);
		  };
		  protoOf(AbstractMap$keys$1).o1 = function (element) {
		    if (!(element == null ? true : !(element == null)))
		      return false;
		    return this.a5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(AbstractMap$keys$1).i = function () {
		    var entryIterator = this.hb_1.x1().i();
		    return new AbstractMap$keys$1$iterator$1(entryIterator);
		  };
		  protoOf(AbstractMap$keys$1).l = function () {
		    return this.hb_1.l();
		  };
		  function AbstractMap$toString$lambda(this$0) {
		    return function (it) {
		      return this$0.ib(it);
		    };
		  }
		  function AbstractMap$values$1(this$0) {
		    this.jb_1 = this$0;
		    AbstractCollection.call(this);
		  }
		  protoOf(AbstractMap$values$1).f5 = function (element) {
		    return this.jb_1.t1(element);
		  };
		  protoOf(AbstractMap$values$1).o1 = function (element) {
		    if (!(element == null ? true : !(element == null)))
		      return false;
		    return this.f5((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(AbstractMap$values$1).i = function () {
		    var entryIterator = this.jb_1.x1().i();
		    return new AbstractMap$values$1$iterator$1(entryIterator);
		  };
		  protoOf(AbstractMap$values$1).l = function () {
		    return this.jb_1.l();
		  };
		  function AbstractMap() {
		    this.k4_1 = null;
		    this.l4_1 = null;
		  }
		  protoOf(AbstractMap).s1 = function (key) {
		    return !(implFindEntry(this, key) == null);
		  };
		  protoOf(AbstractMap).t1 = function (value) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.any' call
		      var this_0 = this.x1();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = false;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractMap.containsValue.<anonymous>' call
		        if (equals(element.r1(), value)) {
		          tmp$ret$0 = true;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = false;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(AbstractMap).m4 = function (entry) {
		    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
		      return false;
		    var key = entry.q1();
		    var value = entry.r1();
		    // Inline function 'kotlin.collections.get' call
		    var ourValue = (isInterface(this, KtMap) ? this : THROW_CCE()).u1(key);
		    if (!equals(value, ourValue)) {
		      return false;
		    }
		    var tmp;
		    if (ourValue == null) {
		      // Inline function 'kotlin.collections.containsKey' call
		      tmp = !(isInterface(this, KtMap) ? this : THROW_CCE()).s1(key);
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      return false;
		    }
		    return true;
		  };
		  protoOf(AbstractMap).equals = function (other) {
		    if (other === this)
		      return true;
		    if (!(!(other == null) ? isInterface(other, KtMap) : false))
		      return false;
		    if (!(this.l() === other.l()))
		      return false;
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var this_0 = other.x1();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.AbstractMap.equals.<anonymous>' call
		        if (!this.m4(element)) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(AbstractMap).u1 = function (key) {
		    var tmp0_safe_receiver = implFindEntry(this, key);
		    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r1();
		  };
		  protoOf(AbstractMap).hashCode = function () {
		    return hashCode(this.x1());
		  };
		  protoOf(AbstractMap).n = function () {
		    return this.l() === 0;
		  };
		  protoOf(AbstractMap).l = function () {
		    return this.x1().l();
		  };
		  protoOf(AbstractMap).v1 = function () {
		    if (this.k4_1 == null) {
		      var tmp = this;
		      tmp.k4_1 = new AbstractMap$keys$1(this);
		    }
		    return ensureNotNull(this.k4_1);
		  };
		  protoOf(AbstractMap).toString = function () {
		    var tmp = this.x1();
		    return joinToString_0(tmp, ', ', '{', '}', VOID, VOID, AbstractMap$toString$lambda(this));
		  };
		  protoOf(AbstractMap).ib = function (entry) {
		    return toString_3(this, entry.q1()) + '=' + toString_3(this, entry.r1());
		  };
		  protoOf(AbstractMap).w1 = function () {
		    if (this.l4_1 == null) {
		      var tmp = this;
		      tmp.l4_1 = new AbstractMap$values$1(this);
		    }
		    return ensureNotNull(this.l4_1);
		  };
		  function Companion_7() {
		  }
		  protoOf(Companion_7).o4 = function (c) {
		    var hashCode_0 = 0;
		    var tmp0_iterator = c.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      var tmp = hashCode_0;
		      var tmp2_elvis_lhs = element == null ? null : hashCode(element);
		      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
		    }
		    return hashCode_0;
		  };
		  protoOf(Companion_7).n4 = function (c, other) {
		    if (!(c.l() === other.l()))
		      return false;
		    // Inline function 'kotlin.collections.containsAll' call
		    return c.p1(other);
		  };
		  var Companion_instance_7;
		  function AbstractSet() {
		    AbstractCollection.call(this);
		  }
		  protoOf(AbstractSet).equals = function (other) {
		    if (other === this)
		      return true;
		    if (!(!(other == null) ? isInterface(other, KtSet) : false))
		      return false;
		    return Companion_instance_7.n4(this, other);
		  };
		  protoOf(AbstractSet).hashCode = function () {
		    return Companion_instance_7.o4(this);
		  };
		  function collectionToArrayCommonImpl(collection) {
		    if (collection.n()) {
		      // Inline function 'kotlin.emptyArray' call
		      return [];
		    }
		    // Inline function 'kotlin.arrayOfNulls' call
		    var size = collection.l();
		    var destination = fillArrayVal(Array(size), null);
		    var iterator = collection.i();
		    var index = 0;
		    while (iterator.j()) {
		      var tmp0 = index;
		      index = tmp0 + 1 | 0;
		      destination[tmp0] = iterator.k();
		    }
		    return destination;
		  }
		  function emptyList() {
		    return EmptyList_getInstance();
		  }
		  function listOf_0(elements) {
		    return elements.length > 0 ? asList(elements) : emptyList();
		  }
		  function EmptyList() {
		    EmptyList_instance = this;
		    this.kb_1 = new Long(-1478467534, -1720727600);
		  }
		  protoOf(EmptyList).equals = function (other) {
		    var tmp;
		    if (!(other == null) ? isInterface(other, KtList) : false) {
		      tmp = other.n();
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(EmptyList).hashCode = function () {
		    return 1;
		  };
		  protoOf(EmptyList).toString = function () {
		    return '[]';
		  };
		  protoOf(EmptyList).l = function () {
		    return 0;
		  };
		  protoOf(EmptyList).n = function () {
		    return true;
		  };
		  protoOf(EmptyList).lb = function (element) {
		    return false;
		  };
		  protoOf(EmptyList).o1 = function (element) {
		    return false;
		  };
		  protoOf(EmptyList).mb = function (elements) {
		    return elements.n();
		  };
		  protoOf(EmptyList).p1 = function (elements) {
		    return this.mb(elements);
		  };
		  protoOf(EmptyList).m = function (index) {
		    throw IndexOutOfBoundsException_init_$Create$_0("Empty list doesn't contain element at index " + index + '.');
		  };
		  protoOf(EmptyList).i = function () {
		    return EmptyIterator_instance;
		  };
		  var EmptyList_instance;
		  function EmptyList_getInstance() {
		    if (EmptyList_instance == null)
		      new EmptyList();
		    return EmptyList_instance;
		  }
		  function EmptyIterator() {
		  }
		  protoOf(EmptyIterator).j = function () {
		    return false;
		  };
		  protoOf(EmptyIterator).k = function () {
		    throw NoSuchElementException_init_$Create$();
		  };
		  var EmptyIterator_instance;
		  function get_lastIndex_2(_this__u8e3s4) {
		    return _this__u8e3s4.l() - 1 | 0;
		  }
		  function asCollection(_this__u8e3s4) {
		    return new ArrayAsCollection(_this__u8e3s4, false);
		  }
		  function ArrayAsCollection(values, isVarargs) {
		    this.nb_1 = values;
		    this.ob_1 = isVarargs;
		  }
		  protoOf(ArrayAsCollection).l = function () {
		    return this.nb_1.length;
		  };
		  protoOf(ArrayAsCollection).n = function () {
		    // Inline function 'kotlin.collections.isEmpty' call
		    return this.nb_1.length === 0;
		  };
		  protoOf(ArrayAsCollection).pb = function (element) {
		    return contains_3(this.nb_1, element);
		  };
		  protoOf(ArrayAsCollection).qb = function (elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var tmp;
		      if (isInterface(elements, Collection)) {
		        tmp = elements.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = elements.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.collections.ArrayAsCollection.containsAll.<anonymous>' call
		        if (!this.pb(element)) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(ArrayAsCollection).p1 = function (elements) {
		    return this.qb(elements);
		  };
		  protoOf(ArrayAsCollection).i = function () {
		    return arrayIterator(this.nb_1);
		  };
		  function arrayListOf(elements) {
		    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
		  }
		  function throwIndexOverflow() {
		    throw ArithmeticException_init_$Create$_0('Index overflow has happened.');
		  }
		  function listOfNotNull(elements) {
		    return filterNotNull(elements);
		  }
		  function optimizeReadOnlyList(_this__u8e3s4) {
		    switch (_this__u8e3s4.l()) {
		      case 0:
		        return emptyList();
		      case 1:
		        return listOf(_this__u8e3s4.m(0));
		      default:
		        return _this__u8e3s4;
		    }
		  }
		  function IndexedValue(index, value) {
		    this.rb_1 = index;
		    this.sb_1 = value;
		  }
		  protoOf(IndexedValue).toString = function () {
		    return 'IndexedValue(index=' + this.rb_1 + ', value=' + toString_0(this.sb_1) + ')';
		  };
		  protoOf(IndexedValue).hashCode = function () {
		    var result = this.rb_1;
		    result = imul(result, 31) + (this.sb_1 == null ? 0 : hashCode(this.sb_1)) | 0;
		    return result;
		  };
		  protoOf(IndexedValue).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof IndexedValue))
		      return false;
		    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
		    if (!(this.rb_1 === tmp0_other_with_cast.rb_1))
		      return false;
		    if (!equals(this.sb_1, tmp0_other_with_cast.sb_1))
		      return false;
		    return true;
		  };
		  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
		    var tmp;
		    if (isInterface(_this__u8e3s4, Collection)) {
		      tmp = _this__u8e3s4.l();
		    } else {
		      tmp = default_0;
		    }
		    return tmp;
		  }
		  function IndexingIterable(iteratorFactory) {
		    this.tb_1 = iteratorFactory;
		  }
		  protoOf(IndexingIterable).i = function () {
		    return new IndexingIterator(this.tb_1());
		  };
		  function flatten(_this__u8e3s4) {
		    var result = ArrayList_init_$Create$();
		    var tmp0_iterator = _this__u8e3s4.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      addAll(result, element);
		    }
		    return result;
		  }
		  function collectionSizeOrNull(_this__u8e3s4) {
		    var tmp;
		    if (isInterface(_this__u8e3s4, Collection)) {
		      tmp = _this__u8e3s4.l();
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  }
		  function IndexingIterator(iterator) {
		    this.ub_1 = iterator;
		    this.vb_1 = 0;
		  }
		  protoOf(IndexingIterator).j = function () {
		    return this.ub_1.j();
		  };
		  protoOf(IndexingIterator).k = function () {
		    var tmp1 = this.vb_1;
		    this.vb_1 = tmp1 + 1 | 0;
		    return new IndexedValue(checkIndexOverflow(tmp1), this.ub_1.k());
		  };
		  function getOrImplicitDefault(_this__u8e3s4, key) {
		    if (isInterface(_this__u8e3s4, MapWithDefault))
		      return _this__u8e3s4.wb(key);
		    var tmp$ret$0;
		    $l$block: {
		      // Inline function 'kotlin.collections.getOrElseNullable' call
		      var value = _this__u8e3s4.u1(key);
		      if (value == null && !_this__u8e3s4.s1(key)) {
		        throw NoSuchElementException_init_$Create$_0('Key ' + toString_0(key) + ' is missing in the map.');
		      } else {
		        tmp$ret$0 = (value == null ? true : !(value == null)) ? value : THROW_CCE();
		        break $l$block;
		      }
		    }
		    return tmp$ret$0;
		  }
		  function MapWithDefault() {
		  }
		  function mapOf_0(pairs) {
		    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_0(mapCapacity(pairs.length))) : emptyMap();
		  }
		  function emptyMap() {
		    var tmp = EmptyMap_getInstance();
		    return isInterface(tmp, KtMap) ? tmp : THROW_CCE();
		  }
		  function getValue(_this__u8e3s4, key) {
		    return getOrImplicitDefault(_this__u8e3s4, key);
		  }
		  function toMap(_this__u8e3s4) {
		    if (isInterface(_this__u8e3s4, Collection)) {
		      var tmp;
		      switch (_this__u8e3s4.l()) {
		        case 0:
		          tmp = emptyMap();
		          break;
		        case 1:
		          var tmp_0;
		          if (isInterface(_this__u8e3s4, KtList)) {
		            tmp_0 = _this__u8e3s4.m(0);
		          } else {
		            tmp_0 = _this__u8e3s4.i().k();
		          }

		          tmp = mapOf(tmp_0);
		          break;
		        default:
		          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.l())));
		          break;
		      }
		      return tmp;
		    }
		    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
		  }
		  function toMap_0(_this__u8e3s4, destination) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.toMap.<anonymous>' call
		    putAll(destination, _this__u8e3s4);
		    return destination;
		  }
		  function EmptyMap() {
		    EmptyMap_instance = this;
		    this.xb_1 = new Long(-888910638, 1920087921);
		  }
		  protoOf(EmptyMap).equals = function (other) {
		    var tmp;
		    if (!(other == null) ? isInterface(other, KtMap) : false) {
		      tmp = other.n();
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(EmptyMap).hashCode = function () {
		    return 0;
		  };
		  protoOf(EmptyMap).toString = function () {
		    return '{}';
		  };
		  protoOf(EmptyMap).l = function () {
		    return 0;
		  };
		  protoOf(EmptyMap).n = function () {
		    return true;
		  };
		  protoOf(EmptyMap).yb = function (key) {
		    return false;
		  };
		  protoOf(EmptyMap).s1 = function (key) {
		    if (!(key == null ? true : !(key == null)))
		      return false;
		    return this.yb((key == null ? true : !(key == null)) ? key : THROW_CCE());
		  };
		  protoOf(EmptyMap).zb = function (key) {
		    return null;
		  };
		  protoOf(EmptyMap).u1 = function (key) {
		    if (!(key == null ? true : !(key == null)))
		      return null;
		    return this.zb((key == null ? true : !(key == null)) ? key : THROW_CCE());
		  };
		  protoOf(EmptyMap).x1 = function () {
		    return EmptySet_getInstance();
		  };
		  protoOf(EmptyMap).v1 = function () {
		    return EmptySet_getInstance();
		  };
		  protoOf(EmptyMap).w1 = function () {
		    return EmptyList_getInstance();
		  };
		  var EmptyMap_instance;
		  function EmptyMap_getInstance() {
		    if (EmptyMap_instance == null)
		      new EmptyMap();
		    return EmptyMap_instance;
		  }
		  function toMap_1(_this__u8e3s4, destination) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.toMap.<anonymous>' call
		    putAll_0(destination, _this__u8e3s4);
		    return destination;
		  }
		  function optimizeReadOnlyMap(_this__u8e3s4) {
		    var tmp;
		    switch (_this__u8e3s4.l()) {
		      case 0:
		        tmp = emptyMap();
		        break;
		      case 1:
		        // Inline function 'kotlin.collections.toSingletonMapOrSelf' call

		        tmp = _this__u8e3s4;
		        break;
		      default:
		        tmp = _this__u8e3s4;
		        break;
		    }
		    return tmp;
		  }
		  function putAll(_this__u8e3s4, pairs) {
		    var inductionVariable = 0;
		    var last = pairs.length;
		    while (inductionVariable < last) {
		      var tmp1_loop_parameter = pairs[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      var key = tmp1_loop_parameter.o8();
		      var value = tmp1_loop_parameter.p8();
		      _this__u8e3s4.b2(key, value);
		    }
		  }
		  function putAll_0(_this__u8e3s4, pairs) {
		    var tmp0_iterator = pairs.i();
		    while (tmp0_iterator.j()) {
		      var tmp1_loop_parameter = tmp0_iterator.k();
		      var key = tmp1_loop_parameter.o8();
		      var value = tmp1_loop_parameter.p8();
		      _this__u8e3s4.b2(key, value);
		    }
		  }
		  function hashMapOf(pairs) {
		    // Inline function 'kotlin.apply' call
		    var this_0 = HashMap_init_$Create$_0(mapCapacity(pairs.length));
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.hashMapOf.<anonymous>' call
		    putAll(this_0, pairs);
		    return this_0;
		  }
		  function addAll(_this__u8e3s4, elements) {
		    if (isInterface(elements, Collection))
		      return _this__u8e3s4.x(elements);
		    else {
		      var result = false;
		      var tmp1_iterator = elements.i();
		      while (tmp1_iterator.j()) {
		        var item = tmp1_iterator.k();
		        if (_this__u8e3s4.d(item))
		          result = true;
		      }
		      return result;
		    }
		  }
		  function removeLast(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4.n()) {
		      throw NoSuchElementException_init_$Create$_0('List is empty.');
		    } else {
		      tmp = _this__u8e3s4.a2(get_lastIndex_2(_this__u8e3s4));
		    }
		    return tmp;
		  }
		  function IntIterator() {
		  }
		  protoOf(IntIterator).k = function () {
		    return this.ac();
		  };
		  function TransformingSequence$iterator$1(this$0) {
		    this.cc_1 = this$0;
		    this.bc_1 = this$0.dc_1.i();
		  }
		  protoOf(TransformingSequence$iterator$1).k = function () {
		    return this.cc_1.ec_1(this.bc_1.k());
		  };
		  protoOf(TransformingSequence$iterator$1).j = function () {
		    return this.bc_1.j();
		  };
		  function TransformingSequence(sequence, transformer) {
		    this.dc_1 = sequence;
		    this.ec_1 = transformer;
		  }
		  protoOf(TransformingSequence).i = function () {
		    return new TransformingSequence$iterator$1(this);
		  };
		  function setOf_0(elements) {
		    return toSet(elements);
		  }
		  function EmptySet() {
		    EmptySet_instance = this;
		    this.fc_1 = new Long(1993859828, 793161749);
		  }
		  protoOf(EmptySet).equals = function (other) {
		    var tmp;
		    if (!(other == null) ? isInterface(other, KtSet) : false) {
		      tmp = other.n();
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(EmptySet).hashCode = function () {
		    return 0;
		  };
		  protoOf(EmptySet).toString = function () {
		    return '[]';
		  };
		  protoOf(EmptySet).l = function () {
		    return 0;
		  };
		  protoOf(EmptySet).n = function () {
		    return true;
		  };
		  protoOf(EmptySet).lb = function (element) {
		    return false;
		  };
		  protoOf(EmptySet).o1 = function (element) {
		    return false;
		  };
		  protoOf(EmptySet).mb = function (elements) {
		    return elements.n();
		  };
		  protoOf(EmptySet).p1 = function (elements) {
		    return this.mb(elements);
		  };
		  protoOf(EmptySet).i = function () {
		    return EmptyIterator_instance;
		  };
		  var EmptySet_instance;
		  function EmptySet_getInstance() {
		    if (EmptySet_instance == null)
		      new EmptySet();
		    return EmptySet_instance;
		  }
		  function emptySet() {
		    return EmptySet_getInstance();
		  }
		  function hashSetOf(elements) {
		    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
		  }
		  function optimizeReadOnlySet(_this__u8e3s4) {
		    switch (_this__u8e3s4.l()) {
		      case 0:
		        return emptySet();
		      case 1:
		        return setOf(_this__u8e3s4.i().k());
		      default:
		        return _this__u8e3s4;
		    }
		  }
		  function Continuation() {
		  }
		  function Key() {
		  }
		  var Key_instance;
		  function ContinuationInterceptor() {
		  }
		  function EmptyCoroutineContext() {
		    EmptyCoroutineContext_instance = this;
		    this.gc_1 = new Long(0, 0);
		  }
		  protoOf(EmptyCoroutineContext).i8 = function (key) {
		    return null;
		  };
		  protoOf(EmptyCoroutineContext).hashCode = function () {
		    return 0;
		  };
		  protoOf(EmptyCoroutineContext).toString = function () {
		    return 'EmptyCoroutineContext';
		  };
		  var EmptyCoroutineContext_instance;
		  function EmptyCoroutineContext_getInstance() {
		    if (EmptyCoroutineContext_instance == null)
		      new EmptyCoroutineContext();
		    return EmptyCoroutineContext_instance;
		  }
		  function get_COROUTINE_SUSPENDED() {
		    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
		  }
		  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
		  var CoroutineSingletons_entriesInitialized;
		  function CoroutineSingletons_initEntries() {
		    if (CoroutineSingletons_entriesInitialized)
		      return Unit_instance;
		    CoroutineSingletons_entriesInitialized = true;
		    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
		    new CoroutineSingletons('UNDECIDED', 1);
		    new CoroutineSingletons('RESUMED', 2);
		  }
		  function CoroutineSingletons(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
		    CoroutineSingletons_initEntries();
		    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
		  }
		  function getProgressionLastElement(start, end, step) {
		    var tmp;
		    if (step > 0) {
		      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
		    } else if (step < 0) {
		      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
		    } else {
		      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
		    }
		    return tmp;
		  }
		  function differenceModulo(a, b, c) {
		    return mod(mod(a, c) - mod(b, c) | 0, c);
		  }
		  function mod(a, b) {
		    var mod = a % b | 0;
		    return mod >= 0 ? mod : mod + b | 0;
		  }
		  function Default() {
		    Default_instance = this;
		    Random.call(this);
		    this.hc_1 = defaultPlatformRandom();
		  }
		  protoOf(Default).ic = function (bitCount) {
		    return this.hc_1.ic(bitCount);
		  };
		  protoOf(Default).ac = function () {
		    return this.hc_1.ac();
		  };
		  protoOf(Default).jc = function (from, until) {
		    return this.hc_1.jc(from, until);
		  };
		  var Default_instance;
		  function Default_getInstance() {
		    if (Default_instance == null)
		      new Default();
		    return Default_instance;
		  }
		  function Random() {
		    Default_getInstance();
		  }
		  protoOf(Random).ac = function () {
		    return this.ic(32);
		  };
		  protoOf(Random).jc = function (from, until) {
		    checkRangeBounds(from, until);
		    var n = until - from | 0;
		    if (n > 0 || n === -2147483648) {
		      var tmp;
		      if ((n & (-n | 0)) === n) {
		        var bitCount = fastLog2(n);
		        tmp = this.ic(bitCount);
		      } else {
		        var v;
		        do {
		          var bits = this.ac() >>> 1 | 0;
		          v = bits % n | 0;
		        }
		         while (((bits - v | 0) + (n - 1 | 0) | 0) < 0);
		        tmp = v;
		      }
		      var rnd = tmp;
		      return from + rnd | 0;
		    } else {
		      while (true) {
		        var rnd_0 = this.ac();
		        if (from <= rnd_0 ? rnd_0 < until : false)
		          return rnd_0;
		      }
		    }
		  };
		  function nextInt(_this__u8e3s4, range) {
		    var tmp;
		    if (range.n()) {
		      throw IllegalArgumentException_init_$Create$_0('Cannot get random in empty range: ' + range.toString());
		    } else if (range.q_1 < 2147483647) {
		      tmp = _this__u8e3s4.jc(range.p_1, range.q_1 + 1 | 0);
		    } else if (range.p_1 > -2147483648) {
		      tmp = _this__u8e3s4.jc(range.p_1 - 1 | 0, range.q_1) + 1 | 0;
		    } else {
		      tmp = _this__u8e3s4.ac();
		    }
		    return tmp;
		  }
		  function checkRangeBounds(from, until) {
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    if (!(until > from)) {
		      // Inline function 'kotlin.random.checkRangeBounds.<anonymous>' call
		      var message = boundsErrorMessage(from, until);
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return tmp;
		  }
		  function fastLog2(value) {
		    // Inline function 'kotlin.countLeadingZeroBits' call
		    return 31 - clz32(value) | 0;
		  }
		  function boundsErrorMessage(from, until) {
		    return 'Random range is empty: [' + toString_1(from) + ', ' + toString_1(until) + ').';
		  }
		  function Random_0(seed) {
		    return XorWowRandom_init_$Create$(seed, seed >> 31);
		  }
		  function takeUpperBits(_this__u8e3s4, bitCount) {
		    return (_this__u8e3s4 >>> (32 - bitCount | 0) | 0) & (-bitCount | 0) >> 31;
		  }
		  function XorWowRandom_init_$Init$(seed1, seed2, $this) {
		    XorWowRandom.call($this, seed1, seed2, 0, 0, ~seed1, seed1 << 10 ^ (seed2 >>> 4 | 0));
		    return $this;
		  }
		  function XorWowRandom_init_$Create$(seed1, seed2) {
		    return XorWowRandom_init_$Init$(seed1, seed2, objectCreate(protoOf(XorWowRandom)));
		  }
		  function Companion_8() {
		    Companion_instance_8 = this;
		    this.kc_1 = new Long(0, 0);
		  }
		  var Companion_instance_8;
		  function Companion_getInstance_8() {
		    if (Companion_instance_8 == null)
		      new Companion_8();
		    return Companion_instance_8;
		  }
		  function XorWowRandom(x, y, z, w, v, addend) {
		    Companion_getInstance_8();
		    Random.call(this);
		    this.lc_1 = x;
		    this.mc_1 = y;
		    this.nc_1 = z;
		    this.oc_1 = w;
		    this.pc_1 = v;
		    this.qc_1 = addend;
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!((this.lc_1 | this.mc_1 | this.nc_1 | this.oc_1 | this.pc_1) === 0)) {
		      // Inline function 'kotlin.random.XorWowRandom.<anonymous>' call
		      var message = 'Initial state must have at least one non-zero element.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    // Inline function 'kotlin.repeat' call
		    // Inline function 'kotlin.contracts.contract' call
		    var inductionVariable = 0;
		    if (inductionVariable < 64)
		      do {
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.random.XorWowRandom.<anonymous>' call
		        this.ac();
		      }
		       while (inductionVariable < 64);
		  }
		  protoOf(XorWowRandom).ac = function () {
		    var t = this.lc_1;
		    t = t ^ (t >>> 2 | 0);
		    this.lc_1 = this.mc_1;
		    this.mc_1 = this.nc_1;
		    this.nc_1 = this.oc_1;
		    var v0 = this.pc_1;
		    this.oc_1 = v0;
		    t = t ^ t << 1 ^ v0 ^ v0 << 4;
		    this.pc_1 = t;
		    this.qc_1 = this.qc_1 + 362437 | 0;
		    return t + this.qc_1 | 0;
		  };
		  protoOf(XorWowRandom).ic = function (bitCount) {
		    return takeUpperBits(this.ac(), bitCount);
		  };
		  function Companion_9() {
		    Companion_instance_9 = this;
		    this.o_1 = new IntRange(1, 0);
		  }
		  var Companion_instance_9;
		  function Companion_getInstance_9() {
		    if (Companion_instance_9 == null)
		      new Companion_9();
		    return Companion_instance_9;
		  }
		  function IntRange(start, endInclusive) {
		    Companion_getInstance_9();
		    IntProgression.call(this, start, endInclusive, 1);
		  }
		  protoOf(IntRange).rc = function () {
		    return this.p_1;
		  };
		  protoOf(IntRange).sc = function () {
		    return this.q_1;
		  };
		  protoOf(IntRange).n = function () {
		    return this.p_1 > this.q_1;
		  };
		  protoOf(IntRange).equals = function (other) {
		    var tmp;
		    if (other instanceof IntRange) {
		      tmp = this.n() && other.n() || (this.p_1 === other.p_1 && this.q_1 === other.q_1);
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(IntRange).hashCode = function () {
		    return this.n() ? -1 : imul(31, this.p_1) + this.q_1 | 0;
		  };
		  protoOf(IntRange).toString = function () {
		    return '' + this.p_1 + '..' + this.q_1;
		  };
		  function IntProgressionIterator(first, last, step) {
		    IntIterator.call(this);
		    this.tc_1 = step;
		    this.uc_1 = last;
		    this.vc_1 = this.tc_1 > 0 ? first <= last : first >= last;
		    this.wc_1 = this.vc_1 ? first : this.uc_1;
		  }
		  protoOf(IntProgressionIterator).j = function () {
		    return this.vc_1;
		  };
		  protoOf(IntProgressionIterator).ac = function () {
		    var value = this.wc_1;
		    if (value === this.uc_1) {
		      if (!this.vc_1)
		        throw NoSuchElementException_init_$Create$();
		      this.vc_1 = false;
		    } else {
		      this.wc_1 = this.wc_1 + this.tc_1 | 0;
		    }
		    return value;
		  };
		  function Companion_10() {
		  }
		  protoOf(Companion_10).s = function (rangeStart, rangeEnd, step) {
		    return new IntProgression(rangeStart, rangeEnd, step);
		  };
		  var Companion_instance_10;
		  function IntProgression(start, endInclusive, step) {
		    if (step === 0)
		      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
		    if (step === -2147483648)
		      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
		    this.p_1 = start;
		    this.q_1 = getProgressionLastElement(start, endInclusive, step);
		    this.r_1 = step;
		  }
		  protoOf(IntProgression).i = function () {
		    return new IntProgressionIterator(this.p_1, this.q_1, this.r_1);
		  };
		  protoOf(IntProgression).n = function () {
		    return this.r_1 > 0 ? this.p_1 > this.q_1 : this.p_1 < this.q_1;
		  };
		  protoOf(IntProgression).equals = function (other) {
		    var tmp;
		    if (other instanceof IntProgression) {
		      tmp = this.n() && other.n() || (this.p_1 === other.p_1 && this.q_1 === other.q_1 && this.r_1 === other.r_1);
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(IntProgression).hashCode = function () {
		    return this.n() ? -1 : imul(31, imul(31, this.p_1) + this.q_1 | 0) + this.r_1 | 0;
		  };
		  protoOf(IntProgression).toString = function () {
		    return this.r_1 > 0 ? '' + this.p_1 + '..' + this.q_1 + ' step ' + this.r_1 : '' + this.p_1 + ' downTo ' + this.q_1 + ' step ' + (-this.r_1 | 0);
		  };
		  function checkStepIsPositive(isPositive, step) {
		    if (!isPositive)
		      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_1(step) + '.');
		  }
		  function cast(_this__u8e3s4, value) {
		    if (!_this__u8e3s4.t8(value)) {
		      // Inline function 'kotlin.reflect.qualifiedOrSimpleName' call
		      var tmp$ret$0 = _this__u8e3s4.s8();
		      throw ClassCastException_init_$Create$_0('Value cannot be cast to ' + tmp$ret$0);
		    }
		    return !(value == null) ? value : THROW_CCE();
		  }
		  function KTypeParameter() {
		  }
		  function appendElement(_this__u8e3s4, element, transform) {
		    if (!(transform == null)) {
		      _this__u8e3s4.e(transform(element));
		    } else {
		      if (element == null ? true : isCharSequence(element)) {
		        _this__u8e3s4.e(element);
		      } else {
		        if (element instanceof Char) {
		          _this__u8e3s4.j7(element.b1_1);
		        } else {
		          _this__u8e3s4.e(toString_0(element));
		        }
		      }
		    }
		  }
		  function equals_1(_this__u8e3s4, other, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    if (_this__u8e3s4 === other)
		      return true;
		    if (!ignoreCase)
		      return false;
		    var thisUpper = uppercaseChar(_this__u8e3s4);
		    var otherUpper = uppercaseChar(other);
		    var tmp;
		    if (thisUpper === otherUpper) {
		      tmp = true;
		    } else {
		      // Inline function 'kotlin.text.lowercaseChar' call
		      // Inline function 'kotlin.text.lowercase' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp$ret$2 = toString(thisUpper).toLowerCase();
		      var tmp_0 = charSequenceGet(tmp$ret$2, 0);
		      // Inline function 'kotlin.text.lowercaseChar' call
		      // Inline function 'kotlin.text.lowercase' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp$ret$6 = toString(otherUpper).toLowerCase();
		      tmp = tmp_0 === charSequenceGet(tmp$ret$6, 0);
		    }
		    return tmp;
		  }
		  function titlecase(_this__u8e3s4) {
		    return titlecaseImpl(_this__u8e3s4);
		  }
		  function trimIndent(_this__u8e3s4) {
		    return replaceIndent(_this__u8e3s4, '');
		  }
		  function replaceIndent(_this__u8e3s4, newIndent) {
		    newIndent = newIndent === VOID ? '' : newIndent;
		    var lines_0 = lines(_this__u8e3s4);
		    // Inline function 'kotlin.collections.map' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filterTo' call
		    var destination = ArrayList_init_$Create$();
		    var tmp0_iterator = lines_0.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlin.text.isNotBlank' call
		      if (!isBlank(element)) {
		        destination.d(element);
		      }
		    }
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination_0 = ArrayList_init_$Create$_0(collectionSizeOrDefault(destination, 10));
		    var tmp0_iterator_0 = destination.i();
		    while (tmp0_iterator_0.j()) {
		      var item = tmp0_iterator_0.k();
		      var tmp$ret$3 = indentWidth(item);
		      destination_0.d(tmp$ret$3);
		    }
		    var tmp0_elvis_lhs = minOrNull(destination_0);
		    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
		    // Inline function 'kotlin.text.reindent' call
		    var resultSizeEstimate = _this__u8e3s4.length + imul(newIndent.length, lines_0.l()) | 0;
		    var indentAddFunction = getIndentFunction(newIndent);
		    var lastIndex = get_lastIndex_2(lines_0);
		    // Inline function 'kotlin.collections.mapIndexedNotNull' call
		    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
		    var destination_1 = ArrayList_init_$Create$();
		    // Inline function 'kotlin.collections.forEachIndexed' call
		    var index = 0;
		    var tmp0_iterator_1 = lines_0.i();
		    while (tmp0_iterator_1.j()) {
		      var item_0 = tmp0_iterator_1.k();
		      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
		      var tmp1 = index;
		      index = tmp1 + 1 | 0;
		      // Inline function 'kotlin.text.reindent.<anonymous>' call
		      var index_0 = checkIndexOverflow(tmp1);
		      var tmp;
		      if ((index_0 === 0 || index_0 === lastIndex) && isBlank(item_0)) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.text.replaceIndent.<anonymous>' call
		        var tmp0_safe_receiver = drop(item_0, minCommonIndent);
		        var tmp_0;
		        if (tmp0_safe_receiver == null) {
		          tmp_0 = null;
		        } else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          tmp_0 = indentAddFunction(tmp0_safe_receiver);
		        }
		        var tmp1_elvis_lhs = tmp_0;
		        tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
		      }
		      var tmp0_safe_receiver_0 = tmp;
		      if (tmp0_safe_receiver_0 == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        destination_1.d(tmp0_safe_receiver_0);
		      }
		    }
		    return joinTo_0(destination_1, StringBuilder_init_$Create$(resultSizeEstimate), '\n').toString();
		  }
		  function indentWidth(_this__u8e3s4) {
		    // Inline function 'kotlin.let' call
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.text.indexOfFirst' call
		      var inductionVariable = 0;
		      var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
		      if (inductionVariable <= last)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          // Inline function 'kotlin.text.indentWidth.<anonymous>' call
		          var it = charSequenceGet(_this__u8e3s4, index);
		          if (!isWhitespace(it)) {
		            tmp$ret$1 = index;
		            break $l$block;
		          }
		        }
		         while (inductionVariable <= last);
		      tmp$ret$1 = -1;
		    }
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.text.indentWidth.<anonymous>' call
		    var it_0 = tmp$ret$1;
		    return it_0 === -1 ? _this__u8e3s4.length : it_0;
		  }
		  function getIndentFunction(indent) {
		    var tmp;
		    // Inline function 'kotlin.text.isEmpty' call
		    if (charSequenceLength(indent) === 0) {
		      tmp = getIndentFunction$lambda;
		    } else {
		      tmp = getIndentFunction$lambda_0(indent);
		    }
		    return tmp;
		  }
		  function getIndentFunction$lambda(line) {
		    return line;
		  }
		  function getIndentFunction$lambda_0($indent) {
		    return function (line) {
		      return $indent + line;
		    };
		  }
		  function toIntOrNull(_this__u8e3s4) {
		    return toIntOrNull_0(_this__u8e3s4, 10);
		  }
		  function toIntOrNull_0(_this__u8e3s4, radix) {
		    checkRadix(radix);
		    var length = _this__u8e3s4.length;
		    if (length === 0)
		      return null;
		    var start;
		    var isNegative;
		    var limit;
		    var firstChar = charSequenceGet(_this__u8e3s4, 0);
		    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
		      if (length === 1)
		        return null;
		      start = 1;
		      if (firstChar === _Char___init__impl__6a9atx(45)) {
		        isNegative = true;
		        limit = -2147483648;
		      } else if (firstChar === _Char___init__impl__6a9atx(43)) {
		        isNegative = false;
		        limit = -2147483647;
		      } else
		        return null;
		    } else {
		      start = 0;
		      isNegative = false;
		      limit = -2147483647;
		    }
		    var limitForMaxRadix = -59652323;
		    var limitBeforeMul = limitForMaxRadix;
		    var result = 0;
		    var inductionVariable = start;
		    if (inductionVariable < length)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
		        if (digit < 0)
		          return null;
		        if (result < limitBeforeMul) {
		          if (limitBeforeMul === limitForMaxRadix) {
		            limitBeforeMul = limit / radix | 0;
		            if (result < limitBeforeMul) {
		              return null;
		            }
		          } else {
		            return null;
		          }
		        }
		        result = imul(result, radix);
		        if (result < (limit + digit | 0))
		          return null;
		        result = result - digit | 0;
		      }
		       while (inductionVariable < length);
		    return isNegative ? result : -result | 0;
		  }
		  function numberFormatError(input) {
		    throw NumberFormatException_init_$Create$_0("Invalid number format: '" + input + "'");
		  }
		  function toLongOrNull(_this__u8e3s4) {
		    return toLongOrNull_0(_this__u8e3s4, 10);
		  }
		  function toLongOrNull_0(_this__u8e3s4, radix) {
		    checkRadix(radix);
		    var length = _this__u8e3s4.length;
		    if (length === 0)
		      return null;
		    var start;
		    var isNegative;
		    var limit;
		    var firstChar = charSequenceGet(_this__u8e3s4, 0);
		    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
		      if (length === 1)
		        return null;
		      start = 1;
		      if (firstChar === _Char___init__impl__6a9atx(45)) {
		        isNegative = true;
		        limit = new Long(0, -2147483648);
		      } else if (firstChar === _Char___init__impl__6a9atx(43)) {
		        isNegative = false;
		        limit = new Long(1, -2147483648);
		      } else
		        return null;
		    } else {
		      start = 0;
		      isNegative = false;
		      limit = new Long(1, -2147483648);
		    }
		    // Inline function 'kotlin.Long.div' call
		    var limitForMaxRadix = (new Long(1, -2147483648)).p2(toLong(36));
		    var limitBeforeMul = limitForMaxRadix;
		    var result = new Long(0, 0);
		    var inductionVariable = start;
		    if (inductionVariable < length)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
		        if (digit < 0)
		          return null;
		        if (result.v(limitBeforeMul) < 0) {
		          if (limitBeforeMul.equals(limitForMaxRadix)) {
		            // Inline function 'kotlin.Long.div' call
		            limitBeforeMul = limit.p2(toLong(radix));
		            if (result.v(limitBeforeMul) < 0) {
		              return null;
		            }
		          } else {
		            return null;
		          }
		        }
		        // Inline function 'kotlin.Long.times' call
		        result = result.o2(toLong(radix));
		        var tmp = result;
		        // Inline function 'kotlin.Long.plus' call
		        var tmp$ret$3 = limit.m2(toLong(digit));
		        if (tmp.v(tmp$ret$3) < 0)
		          return null;
		        // Inline function 'kotlin.Long.minus' call
		        result = result.n2(toLong(digit));
		      }
		       while (inductionVariable < length);
		    return isNegative ? result : result.r2();
		  }
		  function padStart(_this__u8e3s4, length, padChar) {
		    padChar = padChar === VOID ? _Char___init__impl__6a9atx(32) : padChar;
		    return toString_1(padStart_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE(), length, padChar));
		  }
		  function startsWith_0(_this__u8e3s4, char, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    return charSequenceLength(_this__u8e3s4) > 0 && equals_1(charSequenceGet(_this__u8e3s4, 0), char, ignoreCase);
		  }
		  function contains_4(_this__u8e3s4, char, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    return indexOf_4(_this__u8e3s4, char, VOID, ignoreCase) >= 0;
		  }
		  function indexOf_4(_this__u8e3s4, char, startIndex, ignoreCase) {
		    startIndex = startIndex === VOID ? 0 : startIndex;
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    var tmp;
		    var tmp_0;
		    if (ignoreCase) {
		      tmp_0 = true;
		    } else {
		      tmp_0 = !(typeof _this__u8e3s4 === 'string');
		    }
		    if (tmp_0) {
		      // Inline function 'kotlin.charArrayOf' call
		      var tmp$ret$0 = charArrayOf([char]);
		      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
		    } else {
		      // Inline function 'kotlin.text.nativeIndexOf' call
		      // Inline function 'kotlin.text.nativeIndexOf' call
		      var str = toString(char);
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = _this__u8e3s4.indexOf(str, startIndex);
		    }
		    return tmp;
		  }
		  function get_lastIndex_3(_this__u8e3s4) {
		    return charSequenceLength(_this__u8e3s4) - 1 | 0;
		  }
		  function isBlank(_this__u8e3s4) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.text.all' call
		      var inductionVariable = 0;
		      while (inductionVariable < charSequenceLength(_this__u8e3s4)) {
		        var element = charSequenceGet(_this__u8e3s4, inductionVariable);
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.text.isBlank.<anonymous>' call
		        if (!isWhitespace(element)) {
		          tmp$ret$1 = false;
		          break $l$block;
		        }
		      }
		      tmp$ret$1 = true;
		    }
		    return tmp$ret$1;
		  }
		  function padStart_0(_this__u8e3s4, length, padChar) {
		    padChar = padChar === VOID ? _Char___init__impl__6a9atx(32) : padChar;
		    if (length < 0)
		      throw IllegalArgumentException_init_$Create$_0('Desired length ' + length + ' is less than zero.');
		    if (length <= charSequenceLength(_this__u8e3s4))
		      return charSequenceSubSequence(_this__u8e3s4, 0, charSequenceLength(_this__u8e3s4));
		    var sb = StringBuilder_init_$Create$(length);
		    var inductionVariable = 1;
		    var last = length - charSequenceLength(_this__u8e3s4) | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        sb.j7(padChar);
		      }
		       while (!(i === last));
		    sb.e(_this__u8e3s4);
		    return sb;
		  }
		  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
		    startIndex = startIndex === VOID ? 0 : startIndex;
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    var tmp;
		    if (!ignoreCase && chars.length === 1) {
		      tmp = typeof _this__u8e3s4 === 'string';
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      var char = single(chars);
		      // Inline function 'kotlin.text.nativeIndexOf' call
		      // Inline function 'kotlin.text.nativeIndexOf' call
		      var str = toString(char);
		      // Inline function 'kotlin.js.asDynamic' call
		      return _this__u8e3s4.indexOf(str, startIndex);
		    }
		    var inductionVariable = coerceAtLeast(startIndex, 0);
		    var last = get_lastIndex_3(_this__u8e3s4);
		    if (inductionVariable <= last)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
		        var tmp$ret$4;
		        $l$block: {
		          // Inline function 'kotlin.collections.any' call
		          var inductionVariable_0 = 0;
		          var last_0 = chars.length;
		          while (inductionVariable_0 < last_0) {
		            var element = chars[inductionVariable_0];
		            inductionVariable_0 = inductionVariable_0 + 1 | 0;
		            // Inline function 'kotlin.text.indexOfAny.<anonymous>' call
		            if (equals_1(element, charAtIndex, ignoreCase)) {
		              tmp$ret$4 = true;
		              break $l$block;
		            }
		          }
		          tmp$ret$4 = false;
		        }
		        if (tmp$ret$4)
		          return index;
		      }
		       while (!(index === last));
		    return -1;
		  }
		  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
		    if (otherOffset < 0 || thisOffset < 0 || thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0) || otherOffset > (charSequenceLength(other) - length | 0)) {
		      return false;
		    }
		    var inductionVariable = 0;
		    if (inductionVariable < length)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (!equals_1(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
		          return false;
		      }
		       while (inductionVariable < length);
		    return true;
		  }
		  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
		    startIndex = startIndex === VOID ? get_lastIndex_3(_this__u8e3s4) : startIndex;
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    var tmp;
		    var tmp_0;
		    if (ignoreCase) {
		      tmp_0 = true;
		    } else {
		      tmp_0 = !(typeof _this__u8e3s4 === 'string');
		    }
		    if (tmp_0) {
		      tmp = indexOf_5(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
		    } else {
		      // Inline function 'kotlin.text.nativeLastIndexOf' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = _this__u8e3s4.lastIndexOf(string, startIndex);
		    }
		    return tmp;
		  }
		  function removePrefix(_this__u8e3s4, prefix) {
		    if (startsWith_1(_this__u8e3s4, prefix)) {
		      // Inline function 'kotlin.text.substring' call
		      var startIndex = charSequenceLength(prefix);
		      // Inline function 'kotlin.js.asDynamic' call
		      return _this__u8e3s4.substring(startIndex);
		    }
		    return _this__u8e3s4;
		  }
		  function substringAfter(_this__u8e3s4, delimiter, missingDelimiterValue) {
		    missingDelimiterValue = missingDelimiterValue === VOID ? _this__u8e3s4 : missingDelimiterValue;
		    var index = indexOf_6(_this__u8e3s4, delimiter);
		    var tmp;
		    if (index === -1) {
		      tmp = missingDelimiterValue;
		    } else {
		      // Inline function 'kotlin.text.substring' call
		      var startIndex = index + delimiter.length | 0;
		      var endIndex = _this__u8e3s4.length;
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = _this__u8e3s4.substring(startIndex, endIndex);
		    }
		    return tmp;
		  }
		  function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    limit = limit === VOID ? 0 : limit;
		    if (delimiters.length === 1) {
		      var delimiter = delimiters[0];
		      // Inline function 'kotlin.text.isEmpty' call
		      if (!(charSequenceLength(delimiter) === 0)) {
		        return split_0(_this__u8e3s4, delimiter, ignoreCase, limit);
		      }
		    }
		    // Inline function 'kotlin.collections.map' call
		    var this_0 = asIterable(rangesDelimitedBy(_this__u8e3s4, delimiters, VOID, ignoreCase, limit));
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(this_0, 10));
		    var tmp0_iterator = this_0.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'kotlin.text.split.<anonymous>' call
		      var tmp$ret$1 = substring_0(_this__u8e3s4, item);
		      destination.d(tmp$ret$1);
		    }
		    return destination;
		  }
		  function substring(_this__u8e3s4, range) {
		    // Inline function 'kotlin.text.substring' call
		    var startIndex = range.rc();
		    var endIndex = range.sc() + 1 | 0;
		    // Inline function 'kotlin.js.asDynamic' call
		    return _this__u8e3s4.substring(startIndex, endIndex);
		  }
		  function indexOf_5(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
		    last = last === VOID ? false : last;
		    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
		    var tmp;
		    if (typeof _this__u8e3s4 === 'string') {
		      tmp = typeof other === 'string';
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      var inductionVariable = indices.p_1;
		      var last_0 = indices.q_1;
		      var step = indices.r_1;
		      if (step > 0 && inductionVariable <= last_0 || (step < 0 && last_0 <= inductionVariable))
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + step | 0;
		          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
		            return index;
		        }
		         while (!(index === last_0));
		    } else {
		      var inductionVariable_0 = indices.p_1;
		      var last_1 = indices.q_1;
		      var step_0 = indices.r_1;
		      if (step_0 > 0 && inductionVariable_0 <= last_1 || (step_0 < 0 && last_1 <= inductionVariable_0))
		        do {
		          var index_0 = inductionVariable_0;
		          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
		          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
		            return index_0;
		        }
		         while (!(index_0 === last_1));
		    }
		    return -1;
		  }
		  function startsWith_1(_this__u8e3s4, prefix, ignoreCase) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    var tmp;
		    var tmp_0;
		    if (!ignoreCase) {
		      tmp_0 = typeof _this__u8e3s4 === 'string';
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      tmp = typeof prefix === 'string';
		    } else {
		      tmp = false;
		    }
		    if (tmp)
		      return startsWith(_this__u8e3s4, prefix);
		    else {
		      return regionMatchesImpl(_this__u8e3s4, 0, prefix, 0, charSequenceLength(prefix), ignoreCase);
		    }
		  }
		  function indexOf_6(_this__u8e3s4, string, startIndex, ignoreCase) {
		    startIndex = startIndex === VOID ? 0 : startIndex;
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    var tmp;
		    var tmp_0;
		    if (ignoreCase) {
		      tmp_0 = true;
		    } else {
		      tmp_0 = !(typeof _this__u8e3s4 === 'string');
		    }
		    if (tmp_0) {
		      tmp = indexOf_5(_this__u8e3s4, string, startIndex, charSequenceLength(_this__u8e3s4), ignoreCase);
		    } else {
		      // Inline function 'kotlin.text.nativeIndexOf' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = _this__u8e3s4.indexOf(string, startIndex);
		    }
		    return tmp;
		  }
		  function split_0(_this__u8e3s4, delimiter, ignoreCase, limit) {
		    requireNonNegativeLimit(limit);
		    var currentOffset = 0;
		    var nextIndex = indexOf_6(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
		    if (nextIndex === -1 || limit === 1) {
		      return listOf(toString_1(_this__u8e3s4));
		    }
		    var isLimited = limit > 0;
		    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
		    $l$loop: do {
		      // Inline function 'kotlin.text.substring' call
		      var startIndex = currentOffset;
		      var endIndex = nextIndex;
		      var tmp$ret$0 = toString_1(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
		      result.d(tmp$ret$0);
		      currentOffset = nextIndex + delimiter.length | 0;
		      if (isLimited && result.l() === (limit - 1 | 0))
		        break $l$loop;
		      nextIndex = indexOf_6(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
		    }
		     while (!(nextIndex === -1));
		    // Inline function 'kotlin.text.substring' call
		    var startIndex_0 = currentOffset;
		    var endIndex_0 = charSequenceLength(_this__u8e3s4);
		    var tmp$ret$1 = toString_1(charSequenceSubSequence(_this__u8e3s4, startIndex_0, endIndex_0));
		    result.d(tmp$ret$1);
		    return result;
		  }
		  function substring_0(_this__u8e3s4, range) {
		    return toString_1(charSequenceSubSequence(_this__u8e3s4, range.rc(), range.sc() + 1 | 0));
		  }
		  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
		    startIndex = startIndex === VOID ? 0 : startIndex;
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    limit = limit === VOID ? 0 : limit;
		    requireNonNegativeLimit(limit);
		    var delimitersList = asList(delimiters);
		    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
		  }
		  function requireNonNegativeLimit(limit) {
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    if (!(limit >= 0)) {
		      // Inline function 'kotlin.text.requireNonNegativeLimit.<anonymous>' call
		      var message = 'Limit must be non-negative, but was ' + limit;
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    return tmp;
		  }
		  function calcNext($this) {
		    if ($this.zc_1 < 0) {
		      $this.xc_1 = 0;
		      $this.ad_1 = null;
		    } else {
		      var tmp;
		      var tmp_0;
		      if ($this.cd_1.fd_1 > 0) {
		        $this.bd_1 = $this.bd_1 + 1 | 0;
		        tmp_0 = $this.bd_1 >= $this.cd_1.fd_1;
		      } else {
		        tmp_0 = false;
		      }
		      if (tmp_0) {
		        tmp = true;
		      } else {
		        tmp = $this.zc_1 > charSequenceLength($this.cd_1.dd_1);
		      }
		      if (tmp) {
		        $this.ad_1 = numberRangeToNumber($this.yc_1, get_lastIndex_3($this.cd_1.dd_1));
		        $this.zc_1 = -1;
		      } else {
		        var match = $this.cd_1.gd_1($this.cd_1.dd_1, $this.zc_1);
		        if (match == null) {
		          $this.ad_1 = numberRangeToNumber($this.yc_1, get_lastIndex_3($this.cd_1.dd_1));
		          $this.zc_1 = -1;
		        } else {
		          var index = match.o8();
		          var length = match.p8();
		          $this.ad_1 = until($this.yc_1, index);
		          $this.yc_1 = index + length | 0;
		          $this.zc_1 = $this.yc_1 + (length === 0 ? 1 : 0) | 0;
		        }
		      }
		      $this.xc_1 = 1;
		    }
		  }
		  function DelimitedRangesSequence$iterator$1(this$0) {
		    this.cd_1 = this$0;
		    this.xc_1 = -1;
		    this.yc_1 = coerceIn_0(this$0.ed_1, 0, charSequenceLength(this$0.dd_1));
		    this.zc_1 = this.yc_1;
		    this.ad_1 = null;
		    this.bd_1 = 0;
		  }
		  protoOf(DelimitedRangesSequence$iterator$1).k = function () {
		    if (this.xc_1 === -1) {
		      calcNext(this);
		    }
		    if (this.xc_1 === 0)
		      throw NoSuchElementException_init_$Create$();
		    var tmp = this.ad_1;
		    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
		    this.ad_1 = null;
		    this.xc_1 = -1;
		    return result;
		  };
		  protoOf(DelimitedRangesSequence$iterator$1).j = function () {
		    if (this.xc_1 === -1) {
		      calcNext(this);
		    }
		    return this.xc_1 === 1;
		  };
		  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
		    this.dd_1 = input;
		    this.ed_1 = startIndex;
		    this.fd_1 = limit;
		    this.gd_1 = getNextMatch;
		  }
		  protoOf(DelimitedRangesSequence).i = function () {
		    return new DelimitedRangesSequence$iterator$1(this);
		  };
		  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
		    if (!ignoreCase && strings.l() === 1) {
		      var string = single_0(strings);
		      var index = !last ? indexOf_6(_this__u8e3s4, string, startIndex) : lastIndexOf(_this__u8e3s4, string, startIndex);
		      return index < 0 ? null : to(index, string);
		    }
		    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), 0);
		    if (typeof _this__u8e3s4 === 'string') {
		      var inductionVariable = indices.p_1;
		      var last_0 = indices.q_1;
		      var step = indices.r_1;
		      if (step > 0 && inductionVariable <= last_0 || (step < 0 && last_0 <= inductionVariable))
		        do {
		          var index_0 = inductionVariable;
		          inductionVariable = inductionVariable + step | 0;
		          var tmp$ret$1;
		          $l$block: {
		            // Inline function 'kotlin.collections.firstOrNull' call
		            var tmp0_iterator = strings.i();
		            while (tmp0_iterator.j()) {
		              var element = tmp0_iterator.k();
		              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
		              if (regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase)) {
		                tmp$ret$1 = element;
		                break $l$block;
		              }
		            }
		            tmp$ret$1 = null;
		          }
		          var matchingString = tmp$ret$1;
		          if (!(matchingString == null))
		            return to(index_0, matchingString);
		        }
		         while (!(index_0 === last_0));
		    } else {
		      var inductionVariable_0 = indices.p_1;
		      var last_1 = indices.q_1;
		      var step_0 = indices.r_1;
		      if (step_0 > 0 && inductionVariable_0 <= last_1 || (step_0 < 0 && last_1 <= inductionVariable_0))
		        do {
		          var index_1 = inductionVariable_0;
		          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
		          var tmp$ret$3;
		          $l$block_0: {
		            // Inline function 'kotlin.collections.firstOrNull' call
		            var tmp0_iterator_0 = strings.i();
		            while (tmp0_iterator_0.j()) {
		              var element_0 = tmp0_iterator_0.k();
		              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
		              if (regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase)) {
		                tmp$ret$3 = element_0;
		                break $l$block_0;
		              }
		            }
		            tmp$ret$3 = null;
		          }
		          var matchingString_0 = tmp$ret$3;
		          if (!(matchingString_0 == null))
		            return to(index_1, matchingString_0);
		        }
		         while (!(index_1 === last_1));
		    }
		    return null;
		  }
		  function lines(_this__u8e3s4) {
		    return toList_1(lineSequence(_this__u8e3s4));
		  }
		  function lineSequence(_this__u8e3s4) {
		    return splitToSequence(_this__u8e3s4, ['\r\n', '\n', '\r']);
		  }
		  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
		    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
		    limit = limit === VOID ? 0 : limit;
		    var tmp = rangesDelimitedBy(_this__u8e3s4, delimiters, VOID, ignoreCase, limit);
		    return map(tmp, splitToSequence$lambda(_this__u8e3s4));
		  }
		  function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
		    return function ($this$$receiver, currentIndex) {
		      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
		      var tmp;
		      if (tmp0_safe_receiver == null) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
		        tmp = to(tmp0_safe_receiver.m8_1, tmp0_safe_receiver.n8_1.length);
		      }
		      return tmp;
		    };
		  }
		  function splitToSequence$lambda($this_splitToSequence) {
		    return function (it) {
		      return substring_0($this_splitToSequence, it);
		    };
		  }
		  function _Duration___init__impl__kdtzql(rawValue) {
		    // Inline function 'kotlin.time.durationAssertionsEnabled' call
		    {
		      if (isInNanos(rawValue)) {
		        var containsArg = _get_value__a43j40_0(rawValue);
		        if (!((new Long(387905, -1073741824)).v(containsArg) <= 0 ? containsArg.v(new Long(-387905, 1073741823)) <= 0 : false))
		          throw AssertionError_init_$Create$_0(_get_value__a43j40_0(rawValue).toString() + ' ns is out of nanoseconds range');
		      } else {
		        var containsArg_0 = _get_value__a43j40_0(rawValue);
		        if (!((new Long(1, -1073741824)).v(containsArg_0) <= 0 ? containsArg_0.v(new Long(-1, 1073741823)) <= 0 : false))
		          throw AssertionError_init_$Create$_0(_get_value__a43j40_0(rawValue).toString() + ' ms is out of milliseconds range');
		        var containsArg_1 = _get_value__a43j40_0(rawValue);
		        if ((new Long(1108857478, -1074)).v(containsArg_1) <= 0 ? containsArg_1.v(new Long(-1108857478, 1073)) <= 0 : false)
		          throw AssertionError_init_$Create$_0(_get_value__a43j40_0(rawValue).toString() + ' ms is denormalized');
		      }
		    }
		    return rawValue;
		  }
		  function _get_rawValue__5zfu4e($this) {
		    return $this;
		  }
		  function _get_value__a43j40_0($this) {
		    return _get_rawValue__5zfu4e($this).u2(1);
		  }
		  function isInNanos($this) {
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    return (_get_rawValue__5zfu4e($this).b3() & 1) === 0;
		  }
		  function isInMillis($this) {
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    return (_get_rawValue__5zfu4e($this).b3() & 1) === 1;
		  }
		  function _get_storageUnit__szjgha($this) {
		    return isInNanos($this) ? DurationUnit_NANOSECONDS_getInstance() : DurationUnit_MILLISECONDS_getInstance();
		  }
		  function Companion_11() {
		    Companion_instance_11 = this;
		    this.hd_1 = _Duration___init__impl__kdtzql(new Long(0, 0));
		    this.id_1 = durationOfMillis(new Long(-1, 1073741823));
		    this.jd_1 = durationOfMillis(new Long(1, -1073741824));
		  }
		  protoOf(Companion_11).kd = function (value) {
		    var tmp;
		    try {
		      tmp = parseDuration(value, true);
		    } catch ($p) {
		      if ($p instanceof IllegalArgumentException) {
		        var e = $p;
		        throw IllegalArgumentException_init_$Create$_1("Invalid ISO duration string format: '" + value + "'.", e);
		      } else {
		        throw $p;
		      }
		    }
		    return tmp;
		  };
		  var Companion_instance_11;
		  function Companion_getInstance_11() {
		    if (Companion_instance_11 == null)
		      new Companion_11();
		    return Companion_instance_11;
		  }
		  function Duration__unaryMinus_impl_x2k1y0($this) {
		    var tmp = _get_value__a43j40_0($this).r2();
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    var tmp$ret$0 = _get_rawValue__5zfu4e($this).b3() & 1;
		    return durationOf(tmp, tmp$ret$0);
		  }
		  function Duration__plus_impl_yu9v8f($this, other) {
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      if (Duration__isFinite_impl_rzjsps(other) || _get_rawValue__5zfu4e($this).y2(_get_rawValue__5zfu4e(other)).v(new Long(0, 0)) >= 0)
		        return $this;
		      else
		        throw IllegalArgumentException_init_$Create$_0('Summing infinite durations of different signs yields an undefined result.');
		    } else if (Duration__isInfinite_impl_tsn9y3(other))
		      return other;
		    var tmp;
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    var tmp_0 = _get_rawValue__5zfu4e($this).b3() & 1;
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    if (tmp_0 === (_get_rawValue__5zfu4e(other).b3() & 1)) {
		      var result = _get_value__a43j40_0($this).m2(_get_value__a43j40_0(other));
		      tmp = isInNanos($this) ? durationOfNanosNormalized(result) : durationOfMillisNormalized(result);
		    } else {
		      if (isInMillis($this)) {
		        tmp = addValuesMixedRanges($this, _get_value__a43j40_0($this), _get_value__a43j40_0(other));
		      } else {
		        tmp = addValuesMixedRanges($this, _get_value__a43j40_0(other), _get_value__a43j40_0($this));
		      }
		    }
		    return tmp;
		  }
		  function addValuesMixedRanges($this, thisMillis, otherNanos) {
		    var otherMillis = nanosToMillis(otherNanos);
		    var resultMillis = thisMillis.m2(otherMillis);
		    var tmp;
		    if ((new Long(1108857478, -1074)).v(resultMillis) <= 0 ? resultMillis.v(new Long(-1108857478, 1073)) <= 0 : false) {
		      var otherNanoRemainder = otherNanos.n2(millisToNanos(otherMillis));
		      tmp = durationOfNanos(millisToNanos(resultMillis).m2(otherNanoRemainder));
		    } else {
		      tmp = durationOfMillis(coerceIn(resultMillis, new Long(1, -1073741824), new Long(-1, 1073741823)));
		    }
		    return tmp;
		  }
		  function Duration__isNegative_impl_pbysfa($this) {
		    return _get_rawValue__5zfu4e($this).v(new Long(0, 0)) < 0;
		  }
		  function Duration__isInfinite_impl_tsn9y3($this) {
		    return _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_11().id_1)) || _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_11().jd_1));
		  }
		  function Duration__isFinite_impl_rzjsps($this) {
		    return !Duration__isInfinite_impl_tsn9y3($this);
		  }
		  function _Duration___get_absoluteValue__impl__vr7i6w($this) {
		    return Duration__isNegative_impl_pbysfa($this) ? Duration__unaryMinus_impl_x2k1y0($this) : $this;
		  }
		  function Duration__compareTo_impl_pchp0f($this, other) {
		    var compareBits = _get_rawValue__5zfu4e($this).y2(_get_rawValue__5zfu4e(other));
		    if (compareBits.v(new Long(0, 0)) < 0 || (compareBits.b3() & 1) === 0)
		      return _get_rawValue__5zfu4e($this).v(_get_rawValue__5zfu4e(other));
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    var tmp = _get_rawValue__5zfu4e($this).b3() & 1;
		    // Inline function 'kotlin.time.Duration.unitDiscriminator' call
		    var r = tmp - (_get_rawValue__5zfu4e(other).b3() & 1) | 0;
		    return Duration__isNegative_impl_pbysfa($this) ? -r | 0 : r;
		  }
		  function Duration__compareTo_impl_pchp0f_0($this, other) {
		    return Duration__compareTo_impl_pchp0f($this.ld_1, other instanceof Duration ? other.ld_1 : THROW_CCE());
		  }
		  function _Duration___get_hoursComponent__impl__7hllxa($this) {
		    var tmp;
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      tmp = 0;
		    } else {
		      // Inline function 'kotlin.Long.rem' call
		      tmp = _Duration___get_inWholeHours__impl__kb9f3j($this).q2(toLong(24)).b3();
		    }
		    return tmp;
		  }
		  function _Duration___get_minutesComponent__impl__ctvd8u($this) {
		    var tmp;
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      tmp = 0;
		    } else {
		      // Inline function 'kotlin.Long.rem' call
		      tmp = _Duration___get_inWholeMinutes__impl__dognoh($this).q2(toLong(60)).b3();
		    }
		    return tmp;
		  }
		  function _Duration___get_secondsComponent__impl__if34a6($this) {
		    var tmp;
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      tmp = 0;
		    } else {
		      // Inline function 'kotlin.Long.rem' call
		      tmp = _Duration___get_inWholeSeconds__impl__hpy7b3($this).q2(toLong(60)).b3();
		    }
		    return tmp;
		  }
		  function _Duration___get_nanosecondsComponent__impl__nh19kq($this) {
		    var tmp;
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      tmp = 0;
		    } else if (isInMillis($this)) {
		      // Inline function 'kotlin.Long.rem' call
		      var tmp$ret$0 = _get_value__a43j40_0($this).q2(toLong(1000));
		      tmp = millisToNanos(tmp$ret$0).b3();
		    } else {
		      // Inline function 'kotlin.Long.rem' call
		      var this_0 = _get_value__a43j40_0($this);
		      var other = 1000000000;
		      tmp = this_0.q2(toLong(other)).b3();
		    }
		    return tmp;
		  }
		  function Duration__toLong_impl_shr43i($this, unit) {
		    var tmp0_subject = _get_rawValue__5zfu4e($this);
		    return tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_11().id_1)) ? new Long(-1, 2147483647) : tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_11().jd_1)) ? new Long(0, -2147483648) : convertDurationUnit_0(_get_value__a43j40_0($this), _get_storageUnit__szjgha($this), unit);
		  }
		  function _Duration___get_inWholeDays__impl__7bvpxz($this) {
		    return Duration__toLong_impl_shr43i($this, DurationUnit_DAYS_getInstance());
		  }
		  function _Duration___get_inWholeHours__impl__kb9f3j($this) {
		    return Duration__toLong_impl_shr43i($this, DurationUnit_HOURS_getInstance());
		  }
		  function _Duration___get_inWholeMinutes__impl__dognoh($this) {
		    return Duration__toLong_impl_shr43i($this, DurationUnit_MINUTES_getInstance());
		  }
		  function _Duration___get_inWholeSeconds__impl__hpy7b3($this) {
		    return Duration__toLong_impl_shr43i($this, DurationUnit_SECONDS_getInstance());
		  }
		  function Duration__toString_impl_8d916b($this) {
		    var tmp0_subject = _get_rawValue__5zfu4e($this);
		    var tmp;
		    if (tmp0_subject.equals(new Long(0, 0))) {
		      tmp = '0s';
		    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_11().id_1))) {
		      tmp = 'Infinity';
		    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_11().jd_1))) {
		      tmp = '-Infinity';
		    } else {
		      var isNegative = Duration__isNegative_impl_pbysfa($this);
		      // Inline function 'kotlin.text.buildString' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.apply' call
		      var this_0 = StringBuilder_init_$Create$_0();
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.time.Duration.toString.<anonymous>' call
		      if (isNegative) {
		        this_0.j7(_Char___init__impl__6a9atx(45));
		      }
		      // Inline function 'kotlin.time.Duration.toComponents' call
		      var this_1 = _Duration___get_absoluteValue__impl__vr7i6w($this);
		      // Inline function 'kotlin.contracts.contract' call
		      var days = _Duration___get_inWholeDays__impl__7bvpxz(this_1);
		      var hours = _Duration___get_hoursComponent__impl__7hllxa(this_1);
		      var minutes = _Duration___get_minutesComponent__impl__ctvd8u(this_1);
		      var seconds = _Duration___get_secondsComponent__impl__if34a6(this_1);
		      var nanoseconds = _Duration___get_nanosecondsComponent__impl__nh19kq(this_1);
		      var hasDays = !days.equals(new Long(0, 0));
		      var hasHours = !(hours === 0);
		      var hasMinutes = !(minutes === 0);
		      var hasSeconds = !(seconds === 0) || !(nanoseconds === 0);
		      var components = 0;
		      if (hasDays) {
		        this_0.ea(days).j7(_Char___init__impl__6a9atx(100));
		        components = components + 1 | 0;
		      }
		      if (hasHours || (hasDays && (hasMinutes || hasSeconds))) {
		        var tmp1 = components;
		        components = tmp1 + 1 | 0;
		        if (tmp1 > 0) {
		          this_0.j7(_Char___init__impl__6a9atx(32));
		        }
		        this_0.da(hours).j7(_Char___init__impl__6a9atx(104));
		      }
		      if (hasMinutes || (hasSeconds && (hasHours || hasDays))) {
		        var tmp2 = components;
		        components = tmp2 + 1 | 0;
		        if (tmp2 > 0) {
		          this_0.j7(_Char___init__impl__6a9atx(32));
		        }
		        this_0.da(minutes).j7(_Char___init__impl__6a9atx(109));
		      }
		      if (hasSeconds) {
		        var tmp3 = components;
		        components = tmp3 + 1 | 0;
		        if (tmp3 > 0) {
		          this_0.j7(_Char___init__impl__6a9atx(32));
		        }
		        if (!(seconds === 0) || hasDays || hasHours || hasMinutes) {
		          appendFractional(this_0, $this, seconds, nanoseconds, 9, 's', false);
		        } else if (nanoseconds >= 1000000) {
		          appendFractional(this_0, $this, nanoseconds / 1000000 | 0, nanoseconds % 1000000 | 0, 6, 'ms', false);
		        } else if (nanoseconds >= 1000) {
		          appendFractional(this_0, $this, nanoseconds / 1000 | 0, nanoseconds % 1000 | 0, 3, 'us', false);
		        } else {
		          this_0.da(nanoseconds).i7('ns');
		        }
		      }
		      if (isNegative && components > 1) {
		        this_0.fa(1, _Char___init__impl__6a9atx(40)).j7(_Char___init__impl__6a9atx(41));
		      }
		      tmp = this_0.toString();
		    }
		    return tmp;
		  }
		  function appendFractional(_this__u8e3s4, $this, whole, fractional, fractionalSize, unit, isoZeroes) {
		    _this__u8e3s4.da(whole);
		    if (!(fractional === 0)) {
		      _this__u8e3s4.j7(_Char___init__impl__6a9atx(46));
		      var fracString = padStart(fractional.toString(), fractionalSize, _Char___init__impl__6a9atx(48));
		      var tmp$ret$1;
		      $l$block: {
		        // Inline function 'kotlin.text.indexOfLast' call
		        var inductionVariable = charSequenceLength(fracString) - 1 | 0;
		        if (0 <= inductionVariable)
		          do {
		            var index = inductionVariable;
		            inductionVariable = inductionVariable + -1 | 0;
		            // Inline function 'kotlin.time.Duration.appendFractional.<anonymous>' call
		            if (!(charSequenceGet(fracString, index) === _Char___init__impl__6a9atx(48))) {
		              tmp$ret$1 = index;
		              break $l$block;
		            }
		          }
		           while (0 <= inductionVariable);
		        tmp$ret$1 = -1;
		      }
		      var nonZeroDigits = tmp$ret$1 + 1 | 0;
		      if (!isoZeroes && nonZeroDigits < 3) {
		        _this__u8e3s4.ca(fracString, 0, nonZeroDigits);
		      } else {
		        _this__u8e3s4.ca(fracString, 0, imul((nonZeroDigits + 2 | 0) / 3 | 0, 3));
		      }
		    }
		    _this__u8e3s4.i7(unit);
		  }
		  function Duration__toIsoString_impl_9h6wsm($this) {
		    // Inline function 'kotlin.text.buildString' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.apply' call
		    var this_0 = StringBuilder_init_$Create$_0();
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.time.Duration.toIsoString.<anonymous>' call
		    if (Duration__isNegative_impl_pbysfa($this)) {
		      this_0.j7(_Char___init__impl__6a9atx(45));
		    }
		    this_0.i7('PT');
		    // Inline function 'kotlin.time.Duration.toComponents' call
		    var this_1 = _Duration___get_absoluteValue__impl__vr7i6w($this);
		    // Inline function 'kotlin.contracts.contract' call
		    var hours = _Duration___get_inWholeHours__impl__kb9f3j(this_1);
		    var minutes = _Duration___get_minutesComponent__impl__ctvd8u(this_1);
		    var seconds = _Duration___get_secondsComponent__impl__if34a6(this_1);
		    var nanoseconds = _Duration___get_nanosecondsComponent__impl__nh19kq(this_1);
		    var hours_0 = hours;
		    if (Duration__isInfinite_impl_tsn9y3($this)) {
		      hours_0 = new Long(1316134911, 2328);
		    }
		    var hasHours = !hours_0.equals(new Long(0, 0));
		    var hasSeconds = !(seconds === 0) || !(nanoseconds === 0);
		    var hasMinutes = !(minutes === 0) || (hasSeconds && hasHours);
		    if (hasHours) {
		      this_0.ea(hours_0).j7(_Char___init__impl__6a9atx(72));
		    }
		    if (hasMinutes) {
		      this_0.da(minutes).j7(_Char___init__impl__6a9atx(77));
		    }
		    if (hasSeconds || (!hasHours && !hasMinutes)) {
		      appendFractional(this_0, $this, seconds, nanoseconds, 9, 'S', true);
		    }
		    return this_0.toString();
		  }
		  function Duration__hashCode_impl_u4exz6($this) {
		    return $this.hashCode();
		  }
		  function Duration__equals_impl_ygj6w6($this, other) {
		    if (!(other instanceof Duration))
		      return false;
		    var tmp0_other_with_cast = other instanceof Duration ? other.ld_1 : THROW_CCE();
		    if (!$this.equals(tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function Duration(rawValue) {
		    Companion_getInstance_11();
		    this.ld_1 = rawValue;
		  }
		  protoOf(Duration).md = function (other) {
		    return Duration__compareTo_impl_pchp0f(this.ld_1, other);
		  };
		  protoOf(Duration).n1 = function (other) {
		    return Duration__compareTo_impl_pchp0f_0(this, other);
		  };
		  protoOf(Duration).toString = function () {
		    return Duration__toString_impl_8d916b(this.ld_1);
		  };
		  protoOf(Duration).hashCode = function () {
		    return Duration__hashCode_impl_u4exz6(this.ld_1);
		  };
		  protoOf(Duration).equals = function (other) {
		    return Duration__equals_impl_ygj6w6(this.ld_1, other);
		  };
		  function durationOfMillis(normalMillis) {
		    // Inline function 'kotlin.Long.plus' call
		    var tmp$ret$0 = normalMillis.t2(1).m2(toLong(1));
		    return _Duration___init__impl__kdtzql(tmp$ret$0);
		  }
		  function toDuration(_this__u8e3s4, unit) {
		    var maxNsInUnit = convertDurationUnitOverflow(new Long(-387905, 1073741823), DurationUnit_NANOSECONDS_getInstance(), unit);
		    if (maxNsInUnit.r2().v(_this__u8e3s4) <= 0 ? _this__u8e3s4.v(maxNsInUnit) <= 0 : false) {
		      return durationOfNanos(convertDurationUnitOverflow(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance()));
		    } else {
		      var millis = convertDurationUnit_0(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance());
		      return durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
		    }
		  }
		  function toDuration_0(_this__u8e3s4, unit) {
		    var valueInNs = convertDurationUnit(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance());
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!isNaN_0(valueInNs)) {
		      // Inline function 'kotlin.time.toDuration.<anonymous>' call
		      var message = 'Duration value cannot be NaN.';
		      throw IllegalArgumentException_init_$Create$_0(toString_1(message));
		    }
		    var nanos = roundToLong(valueInNs);
		    var tmp;
		    if ((new Long(387905, -1073741824)).v(nanos) <= 0 ? nanos.v(new Long(-387905, 1073741823)) <= 0 : false) {
		      tmp = durationOfNanos(nanos);
		    } else {
		      var millis = roundToLong(convertDurationUnit(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance()));
		      tmp = durationOfMillisNormalized(millis);
		    }
		    return tmp;
		  }
		  function parseDuration(value, strictIso) {
		    var length = value.length;
		    if (length === 0)
		      throw IllegalArgumentException_init_$Create$_0('The string is empty');
		    var index = 0;
		    var result = Companion_getInstance_11().hd_1;
		    var infinityString = 'Infinity';
		    var tmp0_subject = charSequenceGet(value, index);
		    if (tmp0_subject === _Char___init__impl__6a9atx(43) ? true : tmp0_subject === _Char___init__impl__6a9atx(45)) {
		      index = index + 1 | 0;
		    }
		    var hasSign = index > 0;
		    var isNegative = hasSign && startsWith_0(value, _Char___init__impl__6a9atx(45));
		    if (length <= index)
		      throw IllegalArgumentException_init_$Create$_0('No components');
		    else {
		      if (charSequenceGet(value, index) === _Char___init__impl__6a9atx(80)) {
		        index = index + 1 | 0;
		        if (index === length)
		          throw IllegalArgumentException_init_$Create$();
		        var nonDigitSymbols = '+-.';
		        var isTimeComponent = false;
		        var prevUnit = null;
		        $l$loop: while (index < length) {
		          if (charSequenceGet(value, index) === _Char___init__impl__6a9atx(84)) {
		            var tmp;
		            if (isTimeComponent) {
		              tmp = true;
		            } else {
		              index = index + 1 | 0;
		              tmp = index === length;
		            }
		            if (tmp)
		              throw IllegalArgumentException_init_$Create$();
		            isTimeComponent = true;
		            continue $l$loop;
		          }
		          // Inline function 'kotlin.time.substringWhile' call
		          var startIndex = index;
		          // Inline function 'kotlin.text.substring' call
		          // Inline function 'kotlin.time.skipWhile' call
		          var i = startIndex;
		          $l$loop_0: while (true) {
		            var tmp_0;
		            if (i < value.length) {
		              // Inline function 'kotlin.time.parseDuration.<anonymous>' call
		              var it = charSequenceGet(value, i);
		              tmp_0 = (_Char___init__impl__6a9atx(48) <= it ? it <= _Char___init__impl__6a9atx(57) : false) || contains_4(nonDigitSymbols, it);
		            } else {
		              tmp_0 = false;
		            }
		            if (!tmp_0) {
		              break $l$loop_0;
		            }
		            i = i + 1 | 0;
		          }
		          var endIndex = i;
		          // Inline function 'kotlin.js.asDynamic' call
		          var component = value.substring(startIndex, endIndex);
		          // Inline function 'kotlin.text.isEmpty' call
		          if (charSequenceLength(component) === 0)
		            throw IllegalArgumentException_init_$Create$();
		          index = index + component.length | 0;
		          // Inline function 'kotlin.text.getOrElse' call
		          var index_0 = index;
		          // Inline function 'kotlin.contracts.contract' call
		          var tmp_1;
		          if (0 <= index_0 ? index_0 <= (charSequenceLength(value) - 1 | 0) : false) {
		            tmp_1 = charSequenceGet(value, index_0);
		          } else {
		            throw IllegalArgumentException_init_$Create$_0('Missing unit for value ' + component);
		          }
		          var unitChar = tmp_1;
		          index = index + 1 | 0;
		          var unit = durationUnitByIsoChar(unitChar, isTimeComponent);
		          if (!(prevUnit == null) && prevUnit.h2(unit) <= 0)
		            throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
		          prevUnit = unit;
		          var dotIndex = indexOf_4(component, _Char___init__impl__6a9atx(46));
		          if (unit.equals(DurationUnit_SECONDS_getInstance()) && dotIndex > 0) {
		            // Inline function 'kotlin.text.substring' call
		            // Inline function 'kotlin.js.asDynamic' call
		            var whole = component.substring(0, dotIndex);
		            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(whole), unit));
		            var tmp_2 = result;
		            // Inline function 'kotlin.text.substring' call
		            // Inline function 'kotlin.js.asDynamic' call
		            var tmp$ret$10 = component.substring(dotIndex);
		            result = Duration__plus_impl_yu9v8f(tmp_2, toDuration_0(toDouble(tmp$ret$10), unit));
		          } else {
		            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(component), unit));
		          }
		        }
		      } else {
		        if (strictIso)
		          throw IllegalArgumentException_init_$Create$();
		        else {
		          var tmp_3 = index;
		          // Inline function 'kotlin.comparisons.maxOf' call
		          var a = length - index | 0;
		          var b = infinityString.length;
		          var tmp$ret$11 = Math.max(a, b);
		          if (regionMatches(value, tmp_3, infinityString, 0, tmp$ret$11, true)) {
		            result = Companion_getInstance_11().id_1;
		          } else {
		            var prevUnit_0 = null;
		            var afterFirst = false;
		            var allowSpaces = !hasSign;
		            if (hasSign && charSequenceGet(value, index) === _Char___init__impl__6a9atx(40) && last_0(value) === _Char___init__impl__6a9atx(41)) {
		              allowSpaces = true;
		              index = index + 1 | 0;
		              var tmp_4 = index;
		              length = length - 1 | 0;
		              if (tmp_4 === length)
		                throw IllegalArgumentException_init_$Create$_0('No components');
		            }
		            while (index < length) {
		              if (afterFirst && allowSpaces) {
		                // Inline function 'kotlin.time.skipWhile' call
		                var i_0 = index;
		                $l$loop_1: while (true) {
		                  var tmp_5;
		                  if (i_0 < value.length) {
		                    // Inline function 'kotlin.time.parseDuration.<anonymous>' call
		                    tmp_5 = charSequenceGet(value, i_0) === _Char___init__impl__6a9atx(32);
		                  } else {
		                    tmp_5 = false;
		                  }
		                  if (!tmp_5) {
		                    break $l$loop_1;
		                  }
		                  i_0 = i_0 + 1 | 0;
		                }
		                index = i_0;
		              }
		              afterFirst = true;
		              // Inline function 'kotlin.time.substringWhile' call
		              var startIndex_0 = index;
		              // Inline function 'kotlin.text.substring' call
		              // Inline function 'kotlin.time.skipWhile' call
		              var i_1 = startIndex_0;
		              $l$loop_2: while (true) {
		                var tmp_6;
		                if (i_1 < value.length) {
		                  // Inline function 'kotlin.time.parseDuration.<anonymous>' call
		                  var it_0 = charSequenceGet(value, i_1);
		                  tmp_6 = (_Char___init__impl__6a9atx(48) <= it_0 ? it_0 <= _Char___init__impl__6a9atx(57) : false) || it_0 === _Char___init__impl__6a9atx(46);
		                } else {
		                  tmp_6 = false;
		                }
		                if (!tmp_6) {
		                  break $l$loop_2;
		                }
		                i_1 = i_1 + 1 | 0;
		              }
		              var endIndex_0 = i_1;
		              // Inline function 'kotlin.js.asDynamic' call
		              var component_0 = value.substring(startIndex_0, endIndex_0);
		              // Inline function 'kotlin.text.isEmpty' call
		              if (charSequenceLength(component_0) === 0)
		                throw IllegalArgumentException_init_$Create$();
		              index = index + component_0.length | 0;
		              // Inline function 'kotlin.time.substringWhile' call
		              var startIndex_1 = index;
		              // Inline function 'kotlin.text.substring' call
		              // Inline function 'kotlin.time.skipWhile' call
		              var i_2 = startIndex_1;
		              $l$loop_3: while (true) {
		                var tmp_7;
		                if (i_2 < value.length) {
		                  // Inline function 'kotlin.time.parseDuration.<anonymous>' call
		                  var it_1 = charSequenceGet(value, i_2);
		                  tmp_7 = _Char___init__impl__6a9atx(97) <= it_1 ? it_1 <= _Char___init__impl__6a9atx(122) : false;
		                } else {
		                  tmp_7 = false;
		                }
		                if (!tmp_7) {
		                  break $l$loop_3;
		                }
		                i_2 = i_2 + 1 | 0;
		              }
		              var endIndex_1 = i_2;
		              // Inline function 'kotlin.js.asDynamic' call
		              var unitName = value.substring(startIndex_1, endIndex_1);
		              index = index + unitName.length | 0;
		              var unit_0 = durationUnitByShortName(unitName);
		              if (!(prevUnit_0 == null) && prevUnit_0.h2(unit_0) <= 0)
		                throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
		              prevUnit_0 = unit_0;
		              var dotIndex_0 = indexOf_4(component_0, _Char___init__impl__6a9atx(46));
		              if (dotIndex_0 > 0) {
		                // Inline function 'kotlin.text.substring' call
		                // Inline function 'kotlin.js.asDynamic' call
		                var whole_0 = component_0.substring(0, dotIndex_0);
		                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong_0(whole_0), unit_0));
		                var tmp_8 = result;
		                // Inline function 'kotlin.text.substring' call
		                // Inline function 'kotlin.js.asDynamic' call
		                var tmp$ret$28 = component_0.substring(dotIndex_0);
		                result = Duration__plus_impl_yu9v8f(tmp_8, toDuration_0(toDouble(tmp$ret$28), unit_0));
		                if (index < length)
		                  throw IllegalArgumentException_init_$Create$_0('Fractional component must be last');
		              } else {
		                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong_0(component_0), unit_0));
		              }
		            }
		          }
		        }
		      }
		    }
		    return isNegative ? Duration__unaryMinus_impl_x2k1y0(result) : result;
		  }
		  function durationOf(normalValue, unitDiscriminator) {
		    // Inline function 'kotlin.Long.plus' call
		    var tmp$ret$0 = normalValue.t2(1).m2(toLong(unitDiscriminator));
		    return _Duration___init__impl__kdtzql(tmp$ret$0);
		  }
		  function durationOfNanosNormalized(nanos) {
		    var tmp;
		    if ((new Long(387905, -1073741824)).v(nanos) <= 0 ? nanos.v(new Long(-387905, 1073741823)) <= 0 : false) {
		      tmp = durationOfNanos(nanos);
		    } else {
		      tmp = durationOfMillis(nanosToMillis(nanos));
		    }
		    return tmp;
		  }
		  function durationOfMillisNormalized(millis) {
		    var tmp;
		    if ((new Long(1108857478, -1074)).v(millis) <= 0 ? millis.v(new Long(-1108857478, 1073)) <= 0 : false) {
		      tmp = durationOfNanos(millisToNanos(millis));
		    } else {
		      tmp = durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
		    }
		    return tmp;
		  }
		  function nanosToMillis(nanos) {
		    // Inline function 'kotlin.Long.div' call
		    return nanos.p2(toLong(1000000));
		  }
		  function millisToNanos(millis) {
		    // Inline function 'kotlin.Long.times' call
		    return millis.o2(toLong(1000000));
		  }
		  function durationOfNanos(normalNanos) {
		    return _Duration___init__impl__kdtzql(normalNanos.t2(1));
		  }
		  function parseOverLongIsoComponent(value) {
		    var length = value.length;
		    var startIndex = 0;
		    if (length > 0 && contains_4('+-', charSequenceGet(value, 0))) {
		      startIndex = startIndex + 1 | 0;
		    }
		    var tmp;
		    if ((length - startIndex | 0) > 16) {
		      var tmp$ret$0;
		      $l$block_0: {
		        // Inline function 'kotlin.collections.all' call
		        var this_0 = numberRangeToNumber(startIndex, get_lastIndex_3(value));
		        var tmp_0;
		        if (isInterface(this_0, Collection)) {
		          tmp_0 = this_0.n();
		        } else {
		          tmp_0 = false;
		        }
		        if (tmp_0) {
		          tmp$ret$0 = true;
		          break $l$block_0;
		        }
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var element = tmp0_iterator.k();
		          // Inline function 'kotlin.time.parseOverLongIsoComponent.<anonymous>' call
		          var containsArg = charSequenceGet(value, element);
		          if (!(_Char___init__impl__6a9atx(48) <= containsArg ? containsArg <= _Char___init__impl__6a9atx(57) : false)) {
		            tmp$ret$0 = false;
		            break $l$block_0;
		          }
		        }
		        tmp$ret$0 = true;
		      }
		      tmp = tmp$ret$0;
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      return charSequenceGet(value, 0) === _Char___init__impl__6a9atx(45) ? new Long(0, -2147483648) : new Long(-1, 2147483647);
		    }
		    return startsWith(value, '+') ? toLong_0(drop(value, 1)) : toLong_0(value);
		  }
		  function durationUnitByIsoChar(isoChar, isTimeComponent) {
		    var tmp;
		    if (!isTimeComponent) {
		      var tmp_0;
		      if (isoChar === _Char___init__impl__6a9atx(68)) {
		        tmp_0 = DurationUnit_DAYS_getInstance();
		      } else {
		        throw IllegalArgumentException_init_$Create$_0('Invalid or unsupported duration ISO non-time unit: ' + toString(isoChar));
		      }
		      tmp = tmp_0;
		    } else {
		      var tmp_1;
		      if (isoChar === _Char___init__impl__6a9atx(72)) {
		        tmp_1 = DurationUnit_HOURS_getInstance();
		      } else if (isoChar === _Char___init__impl__6a9atx(77)) {
		        tmp_1 = DurationUnit_MINUTES_getInstance();
		      } else if (isoChar === _Char___init__impl__6a9atx(83)) {
		        tmp_1 = DurationUnit_SECONDS_getInstance();
		      } else {
		        throw IllegalArgumentException_init_$Create$_0('Invalid duration ISO time unit: ' + toString(isoChar));
		      }
		      tmp = tmp_1;
		    }
		    return tmp;
		  }
		  function durationUnitByShortName(shortName) {
		    var tmp;
		    switch (shortName) {
		      case 'ns':
		        tmp = DurationUnit_NANOSECONDS_getInstance();
		        break;
		      case 'us':
		        tmp = DurationUnit_MICROSECONDS_getInstance();
		        break;
		      case 'ms':
		        tmp = DurationUnit_MILLISECONDS_getInstance();
		        break;
		      case 's':
		        tmp = DurationUnit_SECONDS_getInstance();
		        break;
		      case 'm':
		        tmp = DurationUnit_MINUTES_getInstance();
		        break;
		      case 'h':
		        tmp = DurationUnit_HOURS_getInstance();
		        break;
		      case 'd':
		        tmp = DurationUnit_DAYS_getInstance();
		        break;
		      default:
		        throw IllegalArgumentException_init_$Create$_0('Unknown duration unit short name: ' + shortName);
		    }
		    return tmp;
		  }
		  function get_UNDEFINED_RESULT() {
		    _init_properties_DeepRecursive_kt__zbwcac();
		    return UNDEFINED_RESULT;
		  }
		  var UNDEFINED_RESULT;
		  function DeepRecursiveScope() {
		  }
		  function invoke(_this__u8e3s4, value) {
		    _init_properties_DeepRecursive_kt__zbwcac();
		    return (new DeepRecursiveScopeImpl(_this__u8e3s4.od_1, value)).td();
		  }
		  function DeepRecursiveFunction(block) {
		    this.od_1 = block;
		  }
		  function DeepRecursiveScopeImpl(block, value) {
		    DeepRecursiveScope.call(this);
		    var tmp = this;
		    tmp.pd_1 = isSuspendFunction(block, 2) ? block : THROW_CCE();
		    this.qd_1 = value;
		    var tmp_0 = this;
		    tmp_0.rd_1 = isInterface(this, Continuation) ? this : THROW_CCE();
		    this.sd_1 = get_UNDEFINED_RESULT();
		  }
		  protoOf(DeepRecursiveScopeImpl).c8 = function () {
		    return EmptyCoroutineContext_getInstance();
		  };
		  protoOf(DeepRecursiveScopeImpl).ud = function (result) {
		    this.rd_1 = null;
		    this.sd_1 = result;
		  };
		  protoOf(DeepRecursiveScopeImpl).h8 = function (result) {
		    return this.ud(result);
		  };
		  protoOf(DeepRecursiveScopeImpl).nd = function (value, $completion) {
		    // Inline function 'kotlin.DeepRecursiveScopeImpl.callRecursive.<anonymous>' call
		    var tmp = this;
		    tmp.rd_1 = isInterface($completion, Continuation) ? $completion : THROW_CCE();
		    this.qd_1 = value;
		    return get_COROUTINE_SUSPENDED();
		  };
		  protoOf(DeepRecursiveScopeImpl).td = function () {
		    $l$loop: while (true) {
		      var result = this.sd_1;
		      var tmp0_elvis_lhs = this.rd_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        // Inline function 'kotlin.getOrThrow' call
		        var this_0 = new Result(result) instanceof Result ? result : THROW_CCE();
		        throwOnFailure(this_0);
		        var tmp_0 = _Result___get_value__impl__bjfvqg(this_0);
		        return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var cont = tmp;
		      if (equals(get_UNDEFINED_RESULT(), result)) {
		        var tmp_1;
		        try {
		          // Inline function 'kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn' call
		          var this_1 = this.pd_1;
		          var param = this.qd_1;
		          // Inline function 'kotlin.js.asDynamic' call
		          var a = this_1;
		          tmp_1 = typeof a === 'function' ? a(this, param, cont) : this_1.vd(this, param, cont);
		        } catch ($p) {
		          if ($p instanceof Error) {
		            var e = $p;
		            // Inline function 'kotlin.coroutines.resumeWithException' call
		            // Inline function 'kotlin.Companion.failure' call
		            var tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(e));
		            cont.h8(tmp$ret$3);
		            continue $l$loop;
		          } else {
		            throw $p;
		          }
		        }
		        var r = tmp_1;
		        if (!(r === get_COROUTINE_SUSPENDED())) {
		          // Inline function 'kotlin.coroutines.resume' call
		          // Inline function 'kotlin.Companion.success' call
		          var value = (r == null ? true : !(r == null)) ? r : THROW_CCE();
		          var tmp$ret$5 = _Result___init__impl__xyqfz8(value);
		          cont.h8(tmp$ret$5);
		        }
		      } else {
		        this.sd_1 = get_UNDEFINED_RESULT();
		        cont.h8(result);
		      }
		    }
		  };
		  var properties_initialized_DeepRecursive_kt_5z0al2;
		  function _init_properties_DeepRecursive_kt__zbwcac() {
		    if (!properties_initialized_DeepRecursive_kt_5z0al2) {
		      properties_initialized_DeepRecursive_kt_5z0al2 = true;
		      // Inline function 'kotlin.Companion.success' call
		      var value = get_COROUTINE_SUSPENDED();
		      UNDEFINED_RESULT = _Result___init__impl__xyqfz8(value);
		    }
		  }
		  var LazyThreadSafetyMode_PUBLICATION_instance;
		  var LazyThreadSafetyMode_entriesInitialized;
		  function LazyThreadSafetyMode_initEntries() {
		    if (LazyThreadSafetyMode_entriesInitialized)
		      return Unit_instance;
		    LazyThreadSafetyMode_entriesInitialized = true;
		    new LazyThreadSafetyMode('SYNCHRONIZED', 0);
		    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
		    new LazyThreadSafetyMode('NONE', 2);
		  }
		  function LazyThreadSafetyMode(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function UnsafeLazyImpl(initializer) {
		    this.wd_1 = initializer;
		    this.xd_1 = UNINITIALIZED_VALUE_instance;
		  }
		  protoOf(UnsafeLazyImpl).r1 = function () {
		    if (this.xd_1 === UNINITIALIZED_VALUE_instance) {
		      this.xd_1 = ensureNotNull(this.wd_1)();
		      this.wd_1 = null;
		    }
		    var tmp = this.xd_1;
		    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
		  };
		  protoOf(UnsafeLazyImpl).yd = function () {
		    return !(this.xd_1 === UNINITIALIZED_VALUE_instance);
		  };
		  protoOf(UnsafeLazyImpl).toString = function () {
		    return this.yd() ? toString_0(this.r1()) : 'Lazy value not initialized yet.';
		  };
		  function UNINITIALIZED_VALUE() {
		  }
		  var UNINITIALIZED_VALUE_instance;
		  function LazyThreadSafetyMode_PUBLICATION_getInstance() {
		    LazyThreadSafetyMode_initEntries();
		    return LazyThreadSafetyMode_PUBLICATION_instance;
		  }
		  function _Result___init__impl__xyqfz8(value) {
		    return value;
		  }
		  function _Result___get_value__impl__bjfvqg($this) {
		    return $this;
		  }
		  function _Result___get_isFailure__impl__jpiriv($this) {
		    var tmp = _Result___get_value__impl__bjfvqg($this);
		    return tmp instanceof Failure;
		  }
		  function Result__exceptionOrNull_impl_p6xea9($this) {
		    var tmp;
		    if (_Result___get_value__impl__bjfvqg($this) instanceof Failure) {
		      tmp = _Result___get_value__impl__bjfvqg($this).zd_1;
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  }
		  function Result__toString_impl_yu5r8k($this) {
		    var tmp;
		    if (_Result___get_value__impl__bjfvqg($this) instanceof Failure) {
		      tmp = toString_1(_Result___get_value__impl__bjfvqg($this));
		    } else {
		      tmp = 'Success(' + toString_0(_Result___get_value__impl__bjfvqg($this)) + ')';
		    }
		    return tmp;
		  }
		  function Companion_12() {
		  }
		  var Companion_instance_12;
		  function Failure(exception) {
		    this.zd_1 = exception;
		  }
		  protoOf(Failure).equals = function (other) {
		    var tmp;
		    if (other instanceof Failure) {
		      tmp = equals(this.zd_1, other.zd_1);
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(Failure).hashCode = function () {
		    return hashCode(this.zd_1);
		  };
		  protoOf(Failure).toString = function () {
		    return 'Failure(' + this.zd_1.toString() + ')';
		  };
		  function Result__hashCode_impl_d2zufp($this) {
		    return $this == null ? 0 : hashCode($this);
		  }
		  function Result__equals_impl_bxgmep($this, other) {
		    if (!(other instanceof Result))
		      return false;
		    var tmp0_other_with_cast = other instanceof Result ? other.ae_1 : THROW_CCE();
		    if (!equals($this, tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function Result(value) {
		    this.ae_1 = value;
		  }
		  protoOf(Result).toString = function () {
		    return Result__toString_impl_yu5r8k(this.ae_1);
		  };
		  protoOf(Result).hashCode = function () {
		    return Result__hashCode_impl_d2zufp(this.ae_1);
		  };
		  protoOf(Result).equals = function (other) {
		    return Result__equals_impl_bxgmep(this.ae_1, other);
		  };
		  function createFailure(exception) {
		    return new Failure(exception);
		  }
		  function throwOnFailure(_this__u8e3s4) {
		    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
		    if (tmp instanceof Failure)
		      throw _Result___get_value__impl__bjfvqg(_this__u8e3s4).zd_1;
		  }
		  function NotImplementedError(message) {
		    message = message === VOID ? 'An operation is not implemented.' : message;
		    Error_init_$Init$_0(message, this);
		    captureStack(this, NotImplementedError);
		  }
		  function Pair(first, second) {
		    this.m8_1 = first;
		    this.n8_1 = second;
		  }
		  protoOf(Pair).toString = function () {
		    return '(' + toString_0(this.m8_1) + ', ' + toString_0(this.n8_1) + ')';
		  };
		  protoOf(Pair).o8 = function () {
		    return this.m8_1;
		  };
		  protoOf(Pair).p8 = function () {
		    return this.n8_1;
		  };
		  protoOf(Pair).hashCode = function () {
		    var result = this.m8_1 == null ? 0 : hashCode(this.m8_1);
		    result = imul(result, 31) + (this.n8_1 == null ? 0 : hashCode(this.n8_1)) | 0;
		    return result;
		  };
		  protoOf(Pair).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Pair))
		      return false;
		    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
		    if (!equals(this.m8_1, tmp0_other_with_cast.m8_1))
		      return false;
		    if (!equals(this.n8_1, tmp0_other_with_cast.n8_1))
		      return false;
		    return true;
		  };
		  function to(_this__u8e3s4, that) {
		    return new Pair(_this__u8e3s4, that);
		  }
		  function Triple(first, second, third) {
		    this.be_1 = first;
		    this.ce_1 = second;
		    this.de_1 = third;
		  }
		  protoOf(Triple).toString = function () {
		    return '(' + toString_0(this.be_1) + ', ' + toString_0(this.ce_1) + ', ' + toString_0(this.de_1) + ')';
		  };
		  protoOf(Triple).hashCode = function () {
		    var result = this.be_1 == null ? 0 : hashCode(this.be_1);
		    result = imul(result, 31) + (this.ce_1 == null ? 0 : hashCode(this.ce_1)) | 0;
		    result = imul(result, 31) + (this.de_1 == null ? 0 : hashCode(this.de_1)) | 0;
		    return result;
		  };
		  protoOf(Triple).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Triple))
		      return false;
		    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
		    if (!equals(this.be_1, tmp0_other_with_cast.be_1))
		      return false;
		    if (!equals(this.ce_1, tmp0_other_with_cast.ce_1))
		      return false;
		    if (!equals(this.de_1, tmp0_other_with_cast.de_1))
		      return false;
		    return true;
		  };
		  function _UByte___init__impl__g9hnc4(data) {
		    return data;
		  }
		  function _UByte___get_data__impl__jof9qr($this) {
		    return $this;
		  }
		  function Companion_13() {
		    Companion_instance_13 = this;
		    this.ee_1 = _UByte___init__impl__g9hnc4(0);
		    this.fe_1 = _UByte___init__impl__g9hnc4(-1);
		    this.ge_1 = 1;
		    this.he_1 = 8;
		  }
		  var Companion_instance_13;
		  function Companion_getInstance_13() {
		    if (Companion_instance_13 == null)
		      new Companion_13();
		    return Companion_instance_13;
		  }
		  function UByte__compareTo_impl_5w5192($this, other) {
		    // Inline function 'kotlin.UByte.toInt' call
		    var tmp = _UByte___get_data__impl__jof9qr($this) & 255;
		    // Inline function 'kotlin.UByte.toInt' call
		    var tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
		    return compareTo(tmp, tmp$ret$1);
		  }
		  function UByte__compareTo_impl_5w5192_0($this, other) {
		    return UByte__compareTo_impl_5w5192($this.ie_1, other instanceof UByte ? other.ie_1 : THROW_CCE());
		  }
		  function UByte__toString_impl_v72jg($this) {
		    // Inline function 'kotlin.UByte.toInt' call
		    return (_UByte___get_data__impl__jof9qr($this) & 255).toString();
		  }
		  function UByte__hashCode_impl_mmczcb($this) {
		    return $this;
		  }
		  function UByte__equals_impl_nvqtsf($this, other) {
		    if (!(other instanceof UByte))
		      return false;
		    if (!($this === (other instanceof UByte ? other.ie_1 : THROW_CCE())))
		      return false;
		    return true;
		  }
		  function UByte(data) {
		    Companion_getInstance_13();
		    this.ie_1 = data;
		  }
		  protoOf(UByte).je = function (other) {
		    return UByte__compareTo_impl_5w5192(this.ie_1, other);
		  };
		  protoOf(UByte).n1 = function (other) {
		    return UByte__compareTo_impl_5w5192_0(this, other);
		  };
		  protoOf(UByte).toString = function () {
		    return UByte__toString_impl_v72jg(this.ie_1);
		  };
		  protoOf(UByte).hashCode = function () {
		    return UByte__hashCode_impl_mmczcb(this.ie_1);
		  };
		  protoOf(UByte).equals = function (other) {
		    return UByte__equals_impl_nvqtsf(this.ie_1, other);
		  };
		  function _UByteArray___init__impl__ip4y9n(storage) {
		    return storage;
		  }
		  function _UByteArray___get_storage__impl__d4kctt($this) {
		    return $this;
		  }
		  function _UByteArray___init__impl__ip4y9n_0(size) {
		    return _UByteArray___init__impl__ip4y9n(new Int8Array(size));
		  }
		  function UByteArray__get_impl_t5f3hv($this, index) {
		    // Inline function 'kotlin.toUByte' call
		    var this_0 = _UByteArray___get_storage__impl__d4kctt($this)[index];
		    return _UByte___init__impl__g9hnc4(this_0);
		  }
		  function UByteArray__set_impl_jvcicn($this, index, value) {
		    var tmp = _UByteArray___get_storage__impl__d4kctt($this);
		    // Inline function 'kotlin.UByte.toByte' call
		    tmp[index] = _UByte___get_data__impl__jof9qr(value);
		  }
		  function _UByteArray___get_size__impl__h6pkdv($this) {
		    return _UByteArray___get_storage__impl__d4kctt($this).length;
		  }
		  function UByteArray__iterator_impl_509y1p($this) {
		    return new Iterator(_UByteArray___get_storage__impl__d4kctt($this));
		  }
		  function Iterator(array) {
		    this.ke_1 = array;
		    this.le_1 = 0;
		  }
		  protoOf(Iterator).j = function () {
		    return this.le_1 < this.ke_1.length;
		  };
		  protoOf(Iterator).me = function () {
		    var tmp;
		    if (this.le_1 < this.ke_1.length) {
		      // Inline function 'kotlin.toUByte' call
		      var tmp1 = this.le_1;
		      this.le_1 = tmp1 + 1 | 0;
		      var this_0 = this.ke_1[tmp1];
		      tmp = _UByte___init__impl__g9hnc4(this_0);
		    } else {
		      throw NoSuchElementException_init_$Create$_0(this.le_1.toString());
		    }
		    return tmp;
		  };
		  protoOf(Iterator).k = function () {
		    return new UByte(this.me());
		  };
		  function UByteArray__containsAll_impl_v9s6dj($this, elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.UByteArray.containsAll.<anonymous>' call
		        var tmp_0;
		        if (element instanceof UByte) {
		          var tmp_1 = _UByteArray___get_storage__impl__d4kctt($this);
		          // Inline function 'kotlin.UByte.toByte' call
		          var this_1 = element.ie_1;
		          var tmp$ret$1 = _UByte___get_data__impl__jof9qr(this_1);
		          tmp_0 = contains_2(tmp_1, tmp$ret$1);
		        } else {
		          tmp_0 = false;
		        }
		        if (!tmp_0) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  }
		  function UByteArray__containsAll_impl_v9s6dj_0($this, elements) {
		    return UByteArray__containsAll_impl_v9s6dj($this.ne_1, elements);
		  }
		  function UByteArray__isEmpty_impl_nbfqsa($this) {
		    return _UByteArray___get_storage__impl__d4kctt($this).length === 0;
		  }
		  function UByteArray__toString_impl_ukpl97($this) {
		    return 'UByteArray(storage=' + toString_1($this) + ')';
		  }
		  function UByteArray__hashCode_impl_ip8jx2($this) {
		    return hashCode($this);
		  }
		  function UByteArray__equals_impl_roka4u($this, other) {
		    if (!(other instanceof UByteArray))
		      return false;
		    var tmp0_other_with_cast = other instanceof UByteArray ? other.ne_1 : THROW_CCE();
		    if (!equals($this, tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function UByteArray(storage) {
		    this.ne_1 = storage;
		  }
		  protoOf(UByteArray).l = function () {
		    return _UByteArray___get_size__impl__h6pkdv(this.ne_1);
		  };
		  protoOf(UByteArray).i = function () {
		    return UByteArray__iterator_impl_509y1p(this.ne_1);
		  };
		  protoOf(UByteArray).oe = function (elements) {
		    return UByteArray__containsAll_impl_v9s6dj(this.ne_1, elements);
		  };
		  protoOf(UByteArray).p1 = function (elements) {
		    return UByteArray__containsAll_impl_v9s6dj_0(this, elements);
		  };
		  protoOf(UByteArray).n = function () {
		    return UByteArray__isEmpty_impl_nbfqsa(this.ne_1);
		  };
		  protoOf(UByteArray).toString = function () {
		    return UByteArray__toString_impl_ukpl97(this.ne_1);
		  };
		  protoOf(UByteArray).hashCode = function () {
		    return UByteArray__hashCode_impl_ip8jx2(this.ne_1);
		  };
		  protoOf(UByteArray).equals = function (other) {
		    return UByteArray__equals_impl_roka4u(this.ne_1, other);
		  };
		  function _UInt___init__impl__l7qpdl(data) {
		    return data;
		  }
		  function _UInt___get_data__impl__f0vqqw($this) {
		    return $this;
		  }
		  function Companion_14() {
		    Companion_instance_14 = this;
		    this.pe_1 = _UInt___init__impl__l7qpdl(0);
		    this.qe_1 = _UInt___init__impl__l7qpdl(-1);
		    this.re_1 = 4;
		    this.se_1 = 32;
		  }
		  var Companion_instance_14;
		  function Companion_getInstance_14() {
		    if (Companion_instance_14 == null)
		      new Companion_14();
		    return Companion_instance_14;
		  }
		  function UInt__compareTo_impl_yacclj($this, other) {
		    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
		  }
		  function UInt__compareTo_impl_yacclj_0($this, other) {
		    return UInt__compareTo_impl_yacclj($this.te_1, other instanceof UInt ? other.te_1 : THROW_CCE());
		  }
		  function UInt__toString_impl_dbgl21($this) {
		    // Inline function 'kotlin.uintToString' call
		    // Inline function 'kotlin.uintToLong' call
		    var value = _UInt___get_data__impl__f0vqqw($this);
		    return toLong(value).w2(new Long(-1, 0)).toString();
		  }
		  function UInt__hashCode_impl_z2mhuw($this) {
		    return $this;
		  }
		  function UInt__equals_impl_ffdoxg($this, other) {
		    if (!(other instanceof UInt))
		      return false;
		    if (!($this === (other instanceof UInt ? other.te_1 : THROW_CCE())))
		      return false;
		    return true;
		  }
		  function UInt(data) {
		    Companion_getInstance_14();
		    this.te_1 = data;
		  }
		  protoOf(UInt).ue = function (other) {
		    return UInt__compareTo_impl_yacclj(this.te_1, other);
		  };
		  protoOf(UInt).n1 = function (other) {
		    return UInt__compareTo_impl_yacclj_0(this, other);
		  };
		  protoOf(UInt).toString = function () {
		    return UInt__toString_impl_dbgl21(this.te_1);
		  };
		  protoOf(UInt).hashCode = function () {
		    return UInt__hashCode_impl_z2mhuw(this.te_1);
		  };
		  protoOf(UInt).equals = function (other) {
		    return UInt__equals_impl_ffdoxg(this.te_1, other);
		  };
		  function _UIntArray___init__impl__ghjpc6(storage) {
		    return storage;
		  }
		  function _UIntArray___get_storage__impl__92a0v0($this) {
		    return $this;
		  }
		  function _UIntArray___init__impl__ghjpc6_0(size) {
		    return _UIntArray___init__impl__ghjpc6(new Int32Array(size));
		  }
		  function UIntArray__get_impl_gp5kza($this, index) {
		    // Inline function 'kotlin.toUInt' call
		    var this_0 = _UIntArray___get_storage__impl__92a0v0($this)[index];
		    return _UInt___init__impl__l7qpdl(this_0);
		  }
		  function UIntArray__set_impl_7f2zu2($this, index, value) {
		    var tmp = _UIntArray___get_storage__impl__92a0v0($this);
		    // Inline function 'kotlin.UInt.toInt' call
		    tmp[index] = _UInt___get_data__impl__f0vqqw(value);
		  }
		  function _UIntArray___get_size__impl__r6l8ci($this) {
		    return _UIntArray___get_storage__impl__92a0v0($this).length;
		  }
		  function UIntArray__iterator_impl_tkdv7k($this) {
		    return new Iterator_0(_UIntArray___get_storage__impl__92a0v0($this));
		  }
		  function Iterator_0(array) {
		    this.ve_1 = array;
		    this.we_1 = 0;
		  }
		  protoOf(Iterator_0).j = function () {
		    return this.we_1 < this.ve_1.length;
		  };
		  protoOf(Iterator_0).xe = function () {
		    var tmp;
		    if (this.we_1 < this.ve_1.length) {
		      // Inline function 'kotlin.toUInt' call
		      var tmp1 = this.we_1;
		      this.we_1 = tmp1 + 1 | 0;
		      var this_0 = this.ve_1[tmp1];
		      tmp = _UInt___init__impl__l7qpdl(this_0);
		    } else {
		      throw NoSuchElementException_init_$Create$_0(this.we_1.toString());
		    }
		    return tmp;
		  };
		  protoOf(Iterator_0).k = function () {
		    return new UInt(this.xe());
		  };
		  function UIntArray__containsAll_impl_414g22($this, elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.UIntArray.containsAll.<anonymous>' call
		        var tmp_0;
		        if (element instanceof UInt) {
		          var tmp_1 = _UIntArray___get_storage__impl__92a0v0($this);
		          // Inline function 'kotlin.UInt.toInt' call
		          var this_1 = element.te_1;
		          var tmp$ret$1 = _UInt___get_data__impl__f0vqqw(this_1);
		          tmp_0 = contains_0(tmp_1, tmp$ret$1);
		        } else {
		          tmp_0 = false;
		        }
		        if (!tmp_0) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  }
		  function UIntArray__containsAll_impl_414g22_0($this, elements) {
		    return UIntArray__containsAll_impl_414g22($this.ye_1, elements);
		  }
		  function UIntArray__isEmpty_impl_vd8j4n($this) {
		    return _UIntArray___get_storage__impl__92a0v0($this).length === 0;
		  }
		  function UIntArray__toString_impl_3zy802($this) {
		    return 'UIntArray(storage=' + toString_1($this) + ')';
		  }
		  function UIntArray__hashCode_impl_hr7ost($this) {
		    return hashCode($this);
		  }
		  function UIntArray__equals_impl_flcmof($this, other) {
		    if (!(other instanceof UIntArray))
		      return false;
		    var tmp0_other_with_cast = other instanceof UIntArray ? other.ye_1 : THROW_CCE();
		    if (!equals($this, tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function UIntArray(storage) {
		    this.ye_1 = storage;
		  }
		  protoOf(UIntArray).l = function () {
		    return _UIntArray___get_size__impl__r6l8ci(this.ye_1);
		  };
		  protoOf(UIntArray).i = function () {
		    return UIntArray__iterator_impl_tkdv7k(this.ye_1);
		  };
		  protoOf(UIntArray).ze = function (elements) {
		    return UIntArray__containsAll_impl_414g22(this.ye_1, elements);
		  };
		  protoOf(UIntArray).p1 = function (elements) {
		    return UIntArray__containsAll_impl_414g22_0(this, elements);
		  };
		  protoOf(UIntArray).n = function () {
		    return UIntArray__isEmpty_impl_vd8j4n(this.ye_1);
		  };
		  protoOf(UIntArray).toString = function () {
		    return UIntArray__toString_impl_3zy802(this.ye_1);
		  };
		  protoOf(UIntArray).hashCode = function () {
		    return UIntArray__hashCode_impl_hr7ost(this.ye_1);
		  };
		  protoOf(UIntArray).equals = function (other) {
		    return UIntArray__equals_impl_flcmof(this.ye_1, other);
		  };
		  function _ULong___init__impl__c78o9k(data) {
		    return data;
		  }
		  function _ULong___get_data__impl__fggpzb($this) {
		    return $this;
		  }
		  function Companion_15() {
		    Companion_instance_15 = this;
		    this.af_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
		    this.bf_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
		    this.cf_1 = 8;
		    this.df_1 = 64;
		  }
		  var Companion_instance_15;
		  function Companion_getInstance_15() {
		    if (Companion_instance_15 == null)
		      new Companion_15();
		    return Companion_instance_15;
		  }
		  function ULong__compareTo_impl_38i7tu($this, other) {
		    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
		  }
		  function ULong__compareTo_impl_38i7tu_0($this, other) {
		    return ULong__compareTo_impl_38i7tu($this.ef_1, other instanceof ULong ? other.ef_1 : THROW_CCE());
		  }
		  function ULong__toString_impl_f9au7k($this) {
		    // Inline function 'kotlin.ulongToString' call
		    var value = _ULong___get_data__impl__fggpzb($this);
		    return ulongToString(value, 10);
		  }
		  function ULong__hashCode_impl_6hv2lb($this) {
		    return $this.hashCode();
		  }
		  function ULong__equals_impl_o0gnyb($this, other) {
		    if (!(other instanceof ULong))
		      return false;
		    var tmp0_other_with_cast = other instanceof ULong ? other.ef_1 : THROW_CCE();
		    if (!$this.equals(tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function ULong(data) {
		    Companion_getInstance_15();
		    this.ef_1 = data;
		  }
		  protoOf(ULong).ff = function (other) {
		    return ULong__compareTo_impl_38i7tu(this.ef_1, other);
		  };
		  protoOf(ULong).n1 = function (other) {
		    return ULong__compareTo_impl_38i7tu_0(this, other);
		  };
		  protoOf(ULong).toString = function () {
		    return ULong__toString_impl_f9au7k(this.ef_1);
		  };
		  protoOf(ULong).hashCode = function () {
		    return ULong__hashCode_impl_6hv2lb(this.ef_1);
		  };
		  protoOf(ULong).equals = function (other) {
		    return ULong__equals_impl_o0gnyb(this.ef_1, other);
		  };
		  function _ULongArray___init__impl__twm1l3(storage) {
		    return storage;
		  }
		  function _ULongArray___get_storage__impl__28e64j($this) {
		    return $this;
		  }
		  function _ULongArray___init__impl__twm1l3_0(size) {
		    return _ULongArray___init__impl__twm1l3(longArray(size));
		  }
		  function ULongArray__get_impl_pr71q9($this, index) {
		    // Inline function 'kotlin.toULong' call
		    var this_0 = _ULongArray___get_storage__impl__28e64j($this)[index];
		    return _ULong___init__impl__c78o9k(this_0);
		  }
		  function ULongArray__set_impl_z19mvh($this, index, value) {
		    var tmp = _ULongArray___get_storage__impl__28e64j($this);
		    // Inline function 'kotlin.ULong.toLong' call
		    tmp[index] = _ULong___get_data__impl__fggpzb(value);
		  }
		  function _ULongArray___get_size__impl__ju6dtr($this) {
		    return _ULongArray___get_storage__impl__28e64j($this).length;
		  }
		  function ULongArray__iterator_impl_cq4d2h($this) {
		    return new Iterator_1(_ULongArray___get_storage__impl__28e64j($this));
		  }
		  function Iterator_1(array) {
		    this.gf_1 = array;
		    this.hf_1 = 0;
		  }
		  protoOf(Iterator_1).j = function () {
		    return this.hf_1 < this.gf_1.length;
		  };
		  protoOf(Iterator_1).if = function () {
		    var tmp;
		    if (this.hf_1 < this.gf_1.length) {
		      // Inline function 'kotlin.toULong' call
		      var tmp1 = this.hf_1;
		      this.hf_1 = tmp1 + 1 | 0;
		      var this_0 = this.gf_1[tmp1];
		      tmp = _ULong___init__impl__c78o9k(this_0);
		    } else {
		      throw NoSuchElementException_init_$Create$_0(this.hf_1.toString());
		    }
		    return tmp;
		  };
		  protoOf(Iterator_1).k = function () {
		    return new ULong(this.if());
		  };
		  function ULongArray__containsAll_impl_xx8ztf($this, elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.ULongArray.containsAll.<anonymous>' call
		        var tmp_0;
		        if (element instanceof ULong) {
		          var tmp_1 = _ULongArray___get_storage__impl__28e64j($this);
		          // Inline function 'kotlin.ULong.toLong' call
		          var this_1 = element.ef_1;
		          var tmp$ret$1 = _ULong___get_data__impl__fggpzb(this_1);
		          tmp_0 = contains(tmp_1, tmp$ret$1);
		        } else {
		          tmp_0 = false;
		        }
		        if (!tmp_0) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  }
		  function ULongArray__containsAll_impl_xx8ztf_0($this, elements) {
		    return ULongArray__containsAll_impl_xx8ztf($this.jf_1, elements);
		  }
		  function ULongArray__isEmpty_impl_c3yngu($this) {
		    return _ULongArray___get_storage__impl__28e64j($this).length === 0;
		  }
		  function ULongArray__toString_impl_wqk1p5($this) {
		    return 'ULongArray(storage=' + toString_1($this) + ')';
		  }
		  function ULongArray__hashCode_impl_aze4wa($this) {
		    return hashCode($this);
		  }
		  function ULongArray__equals_impl_vwitwa($this, other) {
		    if (!(other instanceof ULongArray))
		      return false;
		    var tmp0_other_with_cast = other instanceof ULongArray ? other.jf_1 : THROW_CCE();
		    if (!equals($this, tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function ULongArray(storage) {
		    this.jf_1 = storage;
		  }
		  protoOf(ULongArray).l = function () {
		    return _ULongArray___get_size__impl__ju6dtr(this.jf_1);
		  };
		  protoOf(ULongArray).i = function () {
		    return ULongArray__iterator_impl_cq4d2h(this.jf_1);
		  };
		  protoOf(ULongArray).kf = function (elements) {
		    return ULongArray__containsAll_impl_xx8ztf(this.jf_1, elements);
		  };
		  protoOf(ULongArray).p1 = function (elements) {
		    return ULongArray__containsAll_impl_xx8ztf_0(this, elements);
		  };
		  protoOf(ULongArray).n = function () {
		    return ULongArray__isEmpty_impl_c3yngu(this.jf_1);
		  };
		  protoOf(ULongArray).toString = function () {
		    return ULongArray__toString_impl_wqk1p5(this.jf_1);
		  };
		  protoOf(ULongArray).hashCode = function () {
		    return ULongArray__hashCode_impl_aze4wa(this.jf_1);
		  };
		  protoOf(ULongArray).equals = function (other) {
		    return ULongArray__equals_impl_vwitwa(this.jf_1, other);
		  };
		  function _UShort___init__impl__jigrne(data) {
		    return data;
		  }
		  function _UShort___get_data__impl__g0245($this) {
		    return $this;
		  }
		  function Companion_16() {
		    Companion_instance_16 = this;
		    this.lf_1 = _UShort___init__impl__jigrne(0);
		    this.mf_1 = _UShort___init__impl__jigrne(-1);
		    this.nf_1 = 2;
		    this.of_1 = 16;
		  }
		  var Companion_instance_16;
		  function Companion_getInstance_16() {
		    if (Companion_instance_16 == null)
		      new Companion_16();
		    return Companion_instance_16;
		  }
		  function UShort__compareTo_impl_1pfgyc($this, other) {
		    // Inline function 'kotlin.UShort.toInt' call
		    var tmp = _UShort___get_data__impl__g0245($this) & 65535;
		    // Inline function 'kotlin.UShort.toInt' call
		    var tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
		    return compareTo(tmp, tmp$ret$1);
		  }
		  function UShort__compareTo_impl_1pfgyc_0($this, other) {
		    return UShort__compareTo_impl_1pfgyc($this.pf_1, other instanceof UShort ? other.pf_1 : THROW_CCE());
		  }
		  function UShort__toString_impl_edaoee($this) {
		    // Inline function 'kotlin.UShort.toInt' call
		    return (_UShort___get_data__impl__g0245($this) & 65535).toString();
		  }
		  function UShort__hashCode_impl_ywngrv($this) {
		    return $this;
		  }
		  function UShort__equals_impl_7t9pdz($this, other) {
		    if (!(other instanceof UShort))
		      return false;
		    if (!($this === (other instanceof UShort ? other.pf_1 : THROW_CCE())))
		      return false;
		    return true;
		  }
		  function UShort(data) {
		    Companion_getInstance_16();
		    this.pf_1 = data;
		  }
		  protoOf(UShort).qf = function (other) {
		    return UShort__compareTo_impl_1pfgyc(this.pf_1, other);
		  };
		  protoOf(UShort).n1 = function (other) {
		    return UShort__compareTo_impl_1pfgyc_0(this, other);
		  };
		  protoOf(UShort).toString = function () {
		    return UShort__toString_impl_edaoee(this.pf_1);
		  };
		  protoOf(UShort).hashCode = function () {
		    return UShort__hashCode_impl_ywngrv(this.pf_1);
		  };
		  protoOf(UShort).equals = function (other) {
		    return UShort__equals_impl_7t9pdz(this.pf_1, other);
		  };
		  function _UShortArray___init__impl__9b26ef(storage) {
		    return storage;
		  }
		  function _UShortArray___get_storage__impl__t2jpv5($this) {
		    return $this;
		  }
		  function _UShortArray___init__impl__9b26ef_0(size) {
		    return _UShortArray___init__impl__9b26ef(new Int16Array(size));
		  }
		  function UShortArray__get_impl_fnbhmx($this, index) {
		    // Inline function 'kotlin.toUShort' call
		    var this_0 = _UShortArray___get_storage__impl__t2jpv5($this)[index];
		    return _UShort___init__impl__jigrne(this_0);
		  }
		  function UShortArray__set_impl_6d8whp($this, index, value) {
		    var tmp = _UShortArray___get_storage__impl__t2jpv5($this);
		    // Inline function 'kotlin.UShort.toShort' call
		    tmp[index] = _UShort___get_data__impl__g0245(value);
		  }
		  function _UShortArray___get_size__impl__jqto1b($this) {
		    return _UShortArray___get_storage__impl__t2jpv5($this).length;
		  }
		  function UShortArray__iterator_impl_ktpenn($this) {
		    return new Iterator_2(_UShortArray___get_storage__impl__t2jpv5($this));
		  }
		  function Iterator_2(array) {
		    this.rf_1 = array;
		    this.sf_1 = 0;
		  }
		  protoOf(Iterator_2).j = function () {
		    return this.sf_1 < this.rf_1.length;
		  };
		  protoOf(Iterator_2).tf = function () {
		    var tmp;
		    if (this.sf_1 < this.rf_1.length) {
		      // Inline function 'kotlin.toUShort' call
		      var tmp1 = this.sf_1;
		      this.sf_1 = tmp1 + 1 | 0;
		      var this_0 = this.rf_1[tmp1];
		      tmp = _UShort___init__impl__jigrne(this_0);
		    } else {
		      throw NoSuchElementException_init_$Create$_0(this.sf_1.toString());
		    }
		    return tmp;
		  };
		  protoOf(Iterator_2).k = function () {
		    return new UShort(this.tf());
		  };
		  function UShortArray__containsAll_impl_vlaaxp($this, elements) {
		    var tmp$ret$0;
		    $l$block_0: {
		      // Inline function 'kotlin.collections.all' call
		      var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
		      var tmp;
		      if (isInterface(this_0, Collection)) {
		        tmp = this_0.n();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$0 = true;
		        break $l$block_0;
		      }
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlin.UShortArray.containsAll.<anonymous>' call
		        var tmp_0;
		        if (element instanceof UShort) {
		          var tmp_1 = _UShortArray___get_storage__impl__t2jpv5($this);
		          // Inline function 'kotlin.UShort.toShort' call
		          var this_1 = element.pf_1;
		          var tmp$ret$1 = _UShort___get_data__impl__g0245(this_1);
		          tmp_0 = contains_1(tmp_1, tmp$ret$1);
		        } else {
		          tmp_0 = false;
		        }
		        if (!tmp_0) {
		          tmp$ret$0 = false;
		          break $l$block_0;
		        }
		      }
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  }
		  function UShortArray__containsAll_impl_vlaaxp_0($this, elements) {
		    return UShortArray__containsAll_impl_vlaaxp($this.uf_1, elements);
		  }
		  function UShortArray__isEmpty_impl_cdd9l0($this) {
		    return _UShortArray___get_storage__impl__t2jpv5($this).length === 0;
		  }
		  function UShortArray__toString_impl_omz03z($this) {
		    return 'UShortArray(storage=' + toString_1($this) + ')';
		  }
		  function UShortArray__hashCode_impl_2vt3b4($this) {
		    return hashCode($this);
		  }
		  function UShortArray__equals_impl_tyc3mk($this, other) {
		    if (!(other instanceof UShortArray))
		      return false;
		    var tmp0_other_with_cast = other instanceof UShortArray ? other.uf_1 : THROW_CCE();
		    if (!equals($this, tmp0_other_with_cast))
		      return false;
		    return true;
		  }
		  function UShortArray(storage) {
		    this.uf_1 = storage;
		  }
		  protoOf(UShortArray).l = function () {
		    return _UShortArray___get_size__impl__jqto1b(this.uf_1);
		  };
		  protoOf(UShortArray).i = function () {
		    return UShortArray__iterator_impl_ktpenn(this.uf_1);
		  };
		  protoOf(UShortArray).vf = function (elements) {
		    return UShortArray__containsAll_impl_vlaaxp(this.uf_1, elements);
		  };
		  protoOf(UShortArray).p1 = function (elements) {
		    return UShortArray__containsAll_impl_vlaaxp_0(this, elements);
		  };
		  protoOf(UShortArray).n = function () {
		    return UShortArray__isEmpty_impl_cdd9l0(this.uf_1);
		  };
		  protoOf(UShortArray).toString = function () {
		    return UShortArray__toString_impl_omz03z(this.uf_1);
		  };
		  protoOf(UShortArray).hashCode = function () {
		    return UShortArray__hashCode_impl_2vt3b4(this.uf_1);
		  };
		  protoOf(UShortArray).equals = function (other) {
		    return UShortArray__equals_impl_tyc3mk(this.uf_1, other);
		  };
		  function toUInt(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function toULong(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function toUByte(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function toUShort(_this__u8e3s4) {
		    var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
		      numberFormatError(_this__u8e3s4);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function toULongOrNull(_this__u8e3s4) {
		    return toULongOrNull_0(_this__u8e3s4, 10);
		  }
		  function toUIntOrNull(_this__u8e3s4) {
		    return toUIntOrNull_0(_this__u8e3s4, 10);
		  }
		  function toUByteOrNull(_this__u8e3s4) {
		    return toUByteOrNull_0(_this__u8e3s4, 10);
		  }
		  function toUShortOrNull(_this__u8e3s4) {
		    return toUShortOrNull_0(_this__u8e3s4, 10);
		  }
		  function toULongOrNull_0(_this__u8e3s4, radix) {
		    checkRadix(radix);
		    var length = _this__u8e3s4.length;
		    if (length === 0)
		      return null;
		    var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
		    var start;
		    var firstChar = charSequenceGet(_this__u8e3s4, 0);
		    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
		      if (length === 1 || !(firstChar === _Char___init__impl__6a9atx(43)))
		        return null;
		      start = 1;
		    } else {
		      start = 0;
		    }
		    var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
		    var limitBeforeMul = limitForMaxRadix;
		    // Inline function 'kotlin.toULong' call
		    var uradix = _ULong___init__impl__c78o9k(toLong(radix));
		    var result = _ULong___init__impl__c78o9k(new Long(0, 0));
		    var inductionVariable = start;
		    if (inductionVariable < length)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
		        if (digit < 0)
		          return null;
		        // Inline function 'kotlin.ULong.compareTo' call
		        var this_0 = result;
		        var other = limitBeforeMul;
		        if (ulongCompare(_ULong___get_data__impl__fggpzb(this_0), _ULong___get_data__impl__fggpzb(other)) > 0) {
		          if (equals(limitBeforeMul, limitForMaxRadix)) {
		            // Inline function 'kotlin.ULong.div' call
		            limitBeforeMul = ulongDivide(limit, uradix);
		            // Inline function 'kotlin.ULong.compareTo' call
		            var this_1 = result;
		            var other_0 = limitBeforeMul;
		            if (ulongCompare(_ULong___get_data__impl__fggpzb(this_1), _ULong___get_data__impl__fggpzb(other_0)) > 0) {
		              return null;
		            }
		          } else {
		            return null;
		          }
		        }
		        // Inline function 'kotlin.ULong.times' call
		        var this_2 = result;
		        result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_2).o2(_ULong___get_data__impl__fggpzb(uradix)));
		        var beforeAdding = result;
		        // Inline function 'kotlin.ULong.plus' call
		        var this_3 = result;
		        // Inline function 'kotlin.toUInt' call
		        // Inline function 'kotlin.ULong.plus' call
		        // Inline function 'kotlin.UInt.toULong' call
		        var this_4 = _UInt___init__impl__l7qpdl(digit);
		        // Inline function 'kotlin.uintToULong' call
		        // Inline function 'kotlin.uintToLong' call
		        var value = _UInt___get_data__impl__f0vqqw(this_4);
		        var tmp$ret$6 = toLong(value).w2(new Long(-1, 0));
		        var other_1 = _ULong___init__impl__c78o9k(tmp$ret$6);
		        result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_3).m2(_ULong___get_data__impl__fggpzb(other_1)));
		        // Inline function 'kotlin.ULong.compareTo' call
		        var this_5 = result;
		        if (ulongCompare(_ULong___get_data__impl__fggpzb(this_5), _ULong___get_data__impl__fggpzb(beforeAdding)) < 0)
		          return null;
		      }
		       while (inductionVariable < length);
		    return result;
		  }
		  function toUIntOrNull_0(_this__u8e3s4, radix) {
		    checkRadix(radix);
		    var length = _this__u8e3s4.length;
		    if (length === 0)
		      return null;
		    var limit = _UInt___init__impl__l7qpdl(-1);
		    var start;
		    var firstChar = charSequenceGet(_this__u8e3s4, 0);
		    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
		      if (length === 1 || !(firstChar === _Char___init__impl__6a9atx(43)))
		        return null;
		      start = 1;
		    } else {
		      start = 0;
		    }
		    var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
		    var limitBeforeMul = limitForMaxRadix;
		    // Inline function 'kotlin.toUInt' call
		    var uradix = _UInt___init__impl__l7qpdl(radix);
		    var result = _UInt___init__impl__l7qpdl(0);
		    var inductionVariable = start;
		    if (inductionVariable < length)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
		        if (digit < 0)
		          return null;
		        // Inline function 'kotlin.UInt.compareTo' call
		        var this_0 = result;
		        var other = limitBeforeMul;
		        if (uintCompare(_UInt___get_data__impl__f0vqqw(this_0), _UInt___get_data__impl__f0vqqw(other)) > 0) {
		          if (limitBeforeMul === limitForMaxRadix) {
		            // Inline function 'kotlin.UInt.div' call
		            limitBeforeMul = uintDivide(limit, uradix);
		            // Inline function 'kotlin.UInt.compareTo' call
		            var this_1 = result;
		            var other_0 = limitBeforeMul;
		            if (uintCompare(_UInt___get_data__impl__f0vqqw(this_1), _UInt___get_data__impl__f0vqqw(other_0)) > 0) {
		              return null;
		            }
		          } else {
		            return null;
		          }
		        }
		        // Inline function 'kotlin.UInt.times' call
		        var this_2 = result;
		        result = _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw(this_2), _UInt___get_data__impl__f0vqqw(uradix)));
		        var beforeAdding = result;
		        // Inline function 'kotlin.UInt.plus' call
		        var this_3 = result;
		        // Inline function 'kotlin.toUInt' call
		        var other_1 = _UInt___init__impl__l7qpdl(digit);
		        result = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(this_3) + _UInt___get_data__impl__f0vqqw(other_1) | 0);
		        // Inline function 'kotlin.UInt.compareTo' call
		        var this_4 = result;
		        if (uintCompare(_UInt___get_data__impl__f0vqqw(this_4), _UInt___get_data__impl__f0vqqw(beforeAdding)) < 0)
		          return null;
		      }
		       while (inductionVariable < length);
		    return result;
		  }
		  function toUByteOrNull_0(_this__u8e3s4, radix) {
		    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
		      return null;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var int = tmp;
		    // Inline function 'kotlin.UInt.compareTo' call
		    // Inline function 'kotlin.UInt.compareTo' call
		    // Inline function 'kotlin.UByte.toUInt' call
		    var this_0 = _UByte___init__impl__g9hnc4(-1);
		    var other = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(this_0) & 255);
		    if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(other)) > 0)
		      return null;
		    // Inline function 'kotlin.UInt.toUByte' call
		    // Inline function 'kotlin.toUByte' call
		    var this_1 = _UInt___get_data__impl__f0vqqw(int);
		    return _UByte___init__impl__g9hnc4(toByte(this_1));
		  }
		  function toUShortOrNull_0(_this__u8e3s4, radix) {
		    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
		    var tmp;
		    var tmp_0 = tmp0_elvis_lhs;
		    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
		      return null;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var int = tmp;
		    // Inline function 'kotlin.UInt.compareTo' call
		    // Inline function 'kotlin.UInt.compareTo' call
		    // Inline function 'kotlin.UShort.toUInt' call
		    var this_0 = _UShort___init__impl__jigrne(-1);
		    var other = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(this_0) & 65535);
		    if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(other)) > 0)
		      return null;
		    // Inline function 'kotlin.UInt.toUShort' call
		    // Inline function 'kotlin.toUShort' call
		    var this_1 = _UInt___get_data__impl__f0vqqw(int);
		    return _UShort___init__impl__jigrne(toShort(this_1));
		  }
		  //region block: post-declaration
		  protoOf(InternalHashMap).p5 = containsAllEntries;
		  //endregion
		  //region block: init
		  Unit_instance = new Unit();
		  ByteCompanionObject_instance = new ByteCompanionObject();
		  ShortCompanionObject_instance = new ShortCompanionObject();
		  IntCompanionObject_instance = new IntCompanionObject();
		  FloatCompanionObject_instance = new FloatCompanionObject();
		  DoubleCompanionObject_instance = new DoubleCompanionObject();
		  StringCompanionObject_instance = new StringCompanionObject();
		  BooleanCompanionObject_instance = new BooleanCompanionObject();
		  Companion_instance_3 = new Companion_3();
		  CompletedContinuation_instance = new CompletedContinuation();
		  Companion_instance_5 = new Companion_5();
		  Companion_instance_7 = new Companion_7();
		  EmptyIterator_instance = new EmptyIterator();
		  Key_instance = new Key();
		  Companion_instance_10 = new Companion_10();
		  UNINITIALIZED_VALUE_instance = new UNINITIALIZED_VALUE();
		  Companion_instance_12 = new Companion_12();
		  //endregion
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = arrayConcat;
		  _.$_$.b = createKType;
		  _.$_$.c = findAssociatedObject;
		  _.$_$.d = getKClassFromExpression;
		  _.$_$.e = getKClass;
		  _.$_$.f = VOID;
		  _.$_$.g = LazyThreadSafetyMode_PUBLICATION_getInstance;
		  _.$_$.h = ArrayList_init_$Create$_0;
		  _.$_$.i = ArrayList_init_$Create$;
		  _.$_$.j = ArrayList_init_$Create$_1;
		  _.$_$.k = HashMap_init_$Create$_0;
		  _.$_$.l = HashMap_init_$Create$;
		  _.$_$.m = HashMap_init_$Create$_1;
		  _.$_$.n = HashSet_init_$Create$_1;
		  _.$_$.o = HashSet_init_$Create$;
		  _.$_$.p = HashSet_init_$Create$_0;
		  _.$_$.q = LinkedHashMap_init_$Create$_0;
		  _.$_$.r = LinkedHashMap_init_$Create$;
		  _.$_$.s = LinkedHashMap_init_$Create$_1;
		  _.$_$.t = LinkedHashSet_init_$Create$;
		  _.$_$.u = LinkedHashSet_init_$Create$_0;
		  _.$_$.v = Regex_init_$Create$;
		  _.$_$.w = StringBuilder_init_$Create$;
		  _.$_$.x = StringBuilder_init_$Create$_0;
		  _.$_$.y = Exception_init_$Create$_1;
		  _.$_$.z = Exception_init_$Init$;
		  _.$_$.a1 = Exception_init_$Init$_0;
		  _.$_$.b1 = Exception_init_$Create$_0;
		  _.$_$.c1 = Exception_init_$Init$_1;
		  _.$_$.d1 = IllegalArgumentException_init_$Init$_2;
		  _.$_$.e1 = IllegalArgumentException_init_$Init$;
		  _.$_$.f1 = IllegalArgumentException_init_$Create$;
		  _.$_$.g1 = IllegalArgumentException_init_$Init$_0;
		  _.$_$.h1 = IllegalArgumentException_init_$Create$_0;
		  _.$_$.i1 = IllegalArgumentException_init_$Init$_1;
		  _.$_$.j1 = IllegalStateException_init_$Create$_0;
		  _.$_$.k1 = IndexOutOfBoundsException_init_$Create$_0;
		  _.$_$.l1 = UnsupportedOperationException_init_$Create$_0;
		  _.$_$.m1 = Duration__toIsoString_impl_9h6wsm;
		  _.$_$.n1 = _Char___init__impl__6a9atx;
		  _.$_$.o1 = Char__minus_impl_a2frrh;
		  _.$_$.p1 = Char__toInt_impl_vasixd;
		  _.$_$.q1 = toString;
		  _.$_$.r1 = _Result___init__impl__xyqfz8;
		  _.$_$.s1 = Result__exceptionOrNull_impl_p6xea9;
		  _.$_$.t1 = _Result___get_isFailure__impl__jpiriv;
		  _.$_$.u1 = _Result___get_value__impl__bjfvqg;
		  _.$_$.v1 = _UByte___init__impl__g9hnc4;
		  _.$_$.w1 = _UByte___get_data__impl__jof9qr;
		  _.$_$.x1 = UByte__toString_impl_v72jg;
		  _.$_$.y1 = _UByteArray___init__impl__ip4y9n;
		  _.$_$.z1 = _UByteArray___init__impl__ip4y9n_0;
		  _.$_$.a2 = UByteArray__get_impl_t5f3hv;
		  _.$_$.b2 = UByteArray__set_impl_jvcicn;
		  _.$_$.c2 = _UByteArray___get_size__impl__h6pkdv;
		  _.$_$.d2 = _UByteArray___get_storage__impl__d4kctt;
		  _.$_$.e2 = _UInt___init__impl__l7qpdl;
		  _.$_$.f2 = _UInt___get_data__impl__f0vqqw;
		  _.$_$.g2 = UInt__toString_impl_dbgl21;
		  _.$_$.h2 = _UIntArray___init__impl__ghjpc6_0;
		  _.$_$.i2 = _UIntArray___init__impl__ghjpc6;
		  _.$_$.j2 = UIntArray__get_impl_gp5kza;
		  _.$_$.k2 = UIntArray__set_impl_7f2zu2;
		  _.$_$.l2 = _UIntArray___get_size__impl__r6l8ci;
		  _.$_$.m2 = _UIntArray___get_storage__impl__92a0v0;
		  _.$_$.n2 = _ULong___init__impl__c78o9k;
		  _.$_$.o2 = _ULong___get_data__impl__fggpzb;
		  _.$_$.p2 = ULong__toString_impl_f9au7k;
		  _.$_$.q2 = _ULongArray___init__impl__twm1l3_0;
		  _.$_$.r2 = _ULongArray___init__impl__twm1l3;
		  _.$_$.s2 = ULongArray__get_impl_pr71q9;
		  _.$_$.t2 = ULongArray__set_impl_z19mvh;
		  _.$_$.u2 = _ULongArray___get_size__impl__ju6dtr;
		  _.$_$.v2 = _ULongArray___get_storage__impl__28e64j;
		  _.$_$.w2 = _UShort___init__impl__jigrne;
		  _.$_$.x2 = _UShort___get_data__impl__g0245;
		  _.$_$.y2 = UShort__toString_impl_edaoee;
		  _.$_$.z2 = _UShortArray___init__impl__9b26ef_0;
		  _.$_$.a3 = _UShortArray___init__impl__9b26ef;
		  _.$_$.b3 = UShortArray__get_impl_fnbhmx;
		  _.$_$.c3 = UShortArray__set_impl_6d8whp;
		  _.$_$.d3 = _UShortArray___get_size__impl__jqto1b;
		  _.$_$.e3 = _UShortArray___get_storage__impl__t2jpv5;
		  _.$_$.f3 = BooleanCompanionObject_instance;
		  _.$_$.g3 = ByteCompanionObject_instance;
		  _.$_$.h3 = DoubleCompanionObject_instance;
		  _.$_$.i3 = FloatCompanionObject_instance;
		  _.$_$.j3 = IntCompanionObject_instance;
		  _.$_$.k3 = ShortCompanionObject_instance;
		  _.$_$.l3 = StringCompanionObject_instance;
		  _.$_$.m3 = Default_getInstance;
		  _.$_$.n3 = PrimitiveClasses_getInstance;
		  _.$_$.o3 = Companion_getInstance_11;
		  _.$_$.p3 = Companion_getInstance;
		  _.$_$.q3 = Companion_getInstance_1;
		  _.$_$.r3 = Companion_instance_12;
		  _.$_$.s3 = Companion_getInstance_13;
		  _.$_$.t3 = Companion_getInstance_14;
		  _.$_$.u3 = Companion_getInstance_15;
		  _.$_$.v3 = Companion_getInstance_16;
		  _.$_$.w3 = Unit_instance;
		  _.$_$.x3 = ArrayList;
		  _.$_$.y3 = Collection;
		  _.$_$.z3 = HashMap;
		  _.$_$.a4 = HashSet;
		  _.$_$.b4 = LinkedHashMap;
		  _.$_$.c4 = LinkedHashSet;
		  _.$_$.d4 = KtList;
		  _.$_$.e4 = Entry;
		  _.$_$.f4 = KtMap;
		  _.$_$.g4 = KtMutableList;
		  _.$_$.h4 = KtMutableMap;
		  _.$_$.i4 = KtMutableSet;
		  _.$_$.j4 = KtSet;
		  _.$_$.k4 = addAll;
		  _.$_$.l4 = asList;
		  _.$_$.m4 = collectionSizeOrDefault;
		  _.$_$.n4 = contentEquals;
		  _.$_$.o4 = contentHashCode;
		  _.$_$.p4 = contentToString;
		  _.$_$.q4 = copyOf_4;
		  _.$_$.r4 = copyOf_2;
		  _.$_$.s4 = copyOf_6;
		  _.$_$.t4 = copyOf;
		  _.$_$.u4 = copyOf_5;
		  _.$_$.v4 = copyOf_0;
		  _.$_$.w4 = copyOf_1;
		  _.$_$.x4 = copyOf_7;
		  _.$_$.y4 = copyOf_3;
		  _.$_$.z4 = copyToArray;
		  _.$_$.a5 = distinct;
		  _.$_$.b5 = emptyList;
		  _.$_$.c5 = emptyMap;
		  _.$_$.d5 = emptySet;
		  _.$_$.e5 = filterNotNull_0;
		  _.$_$.f5 = flatten;
		  _.$_$.g5 = getValue;
		  _.$_$.h5 = indexOf;
		  _.$_$.i5 = get_indices_0;
		  _.$_$.j5 = get_indices;
		  _.$_$.k5 = joinToString_0;
		  _.$_$.l5 = get_lastIndex_1;
		  _.$_$.m5 = get_lastIndex_2;
		  _.$_$.n5 = lastOrNull;
		  _.$_$.o5 = last;
		  _.$_$.p5 = listOfNotNull;
		  _.$_$.q5 = listOf;
		  _.$_$.r5 = listOf_0;
		  _.$_$.s5 = mapCapacity;
		  _.$_$.t5 = mapOf;
		  _.$_$.u5 = mapOf_0;
		  _.$_$.v5 = plus;
		  _.$_$.w5 = removeLast;
		  _.$_$.x5 = reversed;
		  _.$_$.y5 = setOf_0;
		  _.$_$.z5 = singleOrNull;
		  _.$_$.a6 = toBooleanArray;
		  _.$_$.b6 = toHashSet;
		  _.$_$.c6 = toList_0;
		  _.$_$.d6 = toList;
		  _.$_$.e6 = toMap;
		  _.$_$.f6 = withIndex;
		  _.$_$.g6 = zip;
		  _.$_$.h6 = get_COROUTINE_SUSPENDED;
		  _.$_$.i6 = CoroutineImpl;
		  _.$_$.j6 = arrayIterator;
		  _.$_$.k6 = booleanArray;
		  _.$_$.l6 = captureStack;
		  _.$_$.m6 = charArray;
		  _.$_$.n6 = charSequenceGet;
		  _.$_$.o6 = charSequenceLength;
		  _.$_$.p6 = charSequenceSubSequence;
		  _.$_$.q6 = defineProp;
		  _.$_$.r6 = equals;
		  _.$_$.s6 = extendThrowable;
		  _.$_$.t6 = fillArrayVal;
		  _.$_$.u6 = getBooleanHashCode;
		  _.$_$.v6 = getNumberHashCode;
		  _.$_$.w6 = getPropertyCallableRef;
		  _.$_$.x6 = getStringHashCode;
		  _.$_$.y6 = hashCode;
		  _.$_$.z6 = initMetadataForClass;
		  _.$_$.a7 = initMetadataForCompanion;
		  _.$_$.b7 = initMetadataForCoroutine;
		  _.$_$.c7 = initMetadataForInterface;
		  _.$_$.d7 = initMetadataForLambda;
		  _.$_$.e7 = initMetadataForObject;
		  _.$_$.f7 = isArray;
		  _.$_$.g7 = isBooleanArray;
		  _.$_$.h7 = isByteArray;
		  _.$_$.i7 = isCharArray;
		  _.$_$.j7 = isDoubleArray;
		  _.$_$.k7 = isFloatArray;
		  _.$_$.l7 = isIntArray;
		  _.$_$.m7 = isInterface;
		  _.$_$.n7 = isLongArray;
		  _.$_$.o7 = isNumber;
		  _.$_$.p7 = isShortArray;
		  _.$_$.q7 = get_js;
		  _.$_$.r7 = json;
		  _.$_$.s7 = longArray;
		  _.$_$.t7 = newThrowable;
		  _.$_$.u7 = numberRangeToNumber;
		  _.$_$.v7 = numberToChar;
		  _.$_$.w7 = numberToDouble;
		  _.$_$.x7 = numberToInt;
		  _.$_$.y7 = numberToLong;
		  _.$_$.z7 = objectCreate;
		  _.$_$.a8 = protoOf;
		  _.$_$.b8 = toByte;
		  _.$_$.c8 = toLong;
		  _.$_$.d8 = toShort;
		  _.$_$.e8 = toString_1;
		  _.$_$.f8 = coerceAtLeast;
		  _.$_$.g8 = coerceAtMost;
		  _.$_$.h8 = random;
		  _.$_$.i8 = step;
		  _.$_$.j8 = until;
		  _.$_$.k8 = KClass;
		  _.$_$.l8 = KProperty1;
		  _.$_$.m8 = KTypeParameter;
		  _.$_$.n8 = cast;
		  _.$_$.o8 = equals_0;
		  _.$_$.p8 = indexOf_4;
		  _.$_$.q8 = isBlank;
		  _.$_$.r8 = isLowerCase;
		  _.$_$.s8 = lastIndexOf;
		  _.$_$.t8 = removePrefix;
		  _.$_$.u8 = replaceFirst;
		  _.$_$.v8 = single_2;
		  _.$_$.w8 = slice;
		  _.$_$.x8 = split;
		  _.$_$.y8 = startsWith;
		  _.$_$.z8 = substringAfter;
		  _.$_$.a9 = titlecase;
		  _.$_$.b9 = toDoubleOrNull;
		  _.$_$.c9 = toDouble;
		  _.$_$.d9 = toIntOrNull;
		  _.$_$.e9 = toInt;
		  _.$_$.f9 = toLongOrNull;
		  _.$_$.g9 = toLong_0;
		  _.$_$.h9 = toUByte;
		  _.$_$.i9 = toUInt;
		  _.$_$.j9 = toULongOrNull;
		  _.$_$.k9 = toULong;
		  _.$_$.l9 = toUShort;
		  _.$_$.m9 = trimIndent;
		  _.$_$.n9 = Duration;
		  _.$_$.o9 = Char;
		  _.$_$.p9 = DeepRecursiveFunction;
		  _.$_$.q9 = DeepRecursiveScope;
		  _.$_$.r9 = Enum;
		  _.$_$.s9 = Exception;
		  _.$_$.t9 = IllegalArgumentException;
		  _.$_$.u9 = Long;
		  _.$_$.v9 = NotImplementedError;
		  _.$_$.w9 = Pair;
		  _.$_$.x9 = Result;
		  _.$_$.y9 = THROW_CCE;
		  _.$_$.z9 = THROW_IAE;
		  _.$_$.aa = Triple;
		  _.$_$.ba = UByteArray;
		  _.$_$.ca = UByte;
		  _.$_$.da = UIntArray;
		  _.$_$.ea = UInt;
		  _.$_$.fa = ULongArray;
		  _.$_$.ga = ULong;
		  _.$_$.ha = UShortArray;
		  _.$_$.ia = UShort;
		  _.$_$.ja = Unit;
		  _.$_$.ka = arrayOf;
		  _.$_$.la = countTrailingZeroBits;
		  _.$_$.ma = createFailure;
		  _.$_$.na = ensureNotNull;
		  _.$_$.oa = invoke;
		  _.$_$.pa = isFinite;
		  _.$_$.qa = isFinite_0;
		  _.$_$.ra = lazy;
		  _.$_$.sa = lazy_0;
		  _.$_$.ta = noWhenBranchMatchedException;
		  _.$_$.ua = plus_0;
		  _.$_$.va = stackTraceToString;
		  _.$_$.wa = throwUninitializedPropertyAccessException;
		  _.$_$.xa = toString_0;
		  _.$_$.ya = to;
		  //endregion
		  return _;
		}));

		
} (kotlinKotlinStdlib));
	return kotlinKotlinStdlibExports;
}

var clientsdkClientcoreExports = {};
var clientsdkClientcore = {
  get exports(){ return clientsdkClientcoreExports; },
  set exports(v){ clientsdkClientcoreExports = v; },
};

var kotlinxSerializationKotlinxSerializationCoreJsIrExports = {};
var kotlinxSerializationKotlinxSerializationCoreJsIr = {
  get exports(){ return kotlinxSerializationKotlinxSerializationCoreJsIrExports; },
  set exports(v){ kotlinxSerializationKotlinxSerializationCoreJsIrExports = v; },
};

var hasRequiredKotlinxSerializationKotlinxSerializationCoreJsIr;

function requireKotlinxSerializationKotlinxSerializationCoreJsIr () {
	if (hasRequiredKotlinxSerializationKotlinxSerializationCoreJsIr) return kotlinxSerializationKotlinxSerializationCoreJsIrExports;
	hasRequiredKotlinxSerializationKotlinxSerializationCoreJsIr = 1;
	(function (module, exports) {
		(function (root, factory) {
		  factory(module.exports, requireKotlinKotlinStdlib());
		}(globalThis, function (_, kotlin_kotlin) {
		  //region block: imports
		  var imul = Math.imul;
		  var getKClass = kotlin_kotlin.$_$.e;
		  var VOID = kotlin_kotlin.$_$.f;
		  var protoOf = kotlin_kotlin.$_$.a8;
		  var THROW_CCE = kotlin_kotlin.$_$.y9;
		  var getStringHashCode = kotlin_kotlin.$_$.x6;
		  var toString = kotlin_kotlin.$_$.e8;
		  var initMetadataForClass = kotlin_kotlin.$_$.z6;
		  var initMetadataForInterface = kotlin_kotlin.$_$.c7;
		  kotlin_kotlin.$_$.l3;
		  var Unit_instance = kotlin_kotlin.$_$.w3;
		  var emptyList = kotlin_kotlin.$_$.b5;
		  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.g;
		  var lazy = kotlin_kotlin.$_$.ra;
		  var getKClassFromExpression = kotlin_kotlin.$_$.d;
		  var KProperty1 = kotlin_kotlin.$_$.l8;
		  var getPropertyCallableRef = kotlin_kotlin.$_$.w6;
		  var asList = kotlin_kotlin.$_$.l4;
		  var objectCreate = kotlin_kotlin.$_$.z7;
		  var distinct = kotlin_kotlin.$_$.a5;
		  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.h1;
		  var zip = kotlin_kotlin.$_$.g6;
		  var toMap = kotlin_kotlin.$_$.e6;
		  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.r;
		  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.j1;
		  var mapCapacity = kotlin_kotlin.$_$.s5;
		  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.q;
		  var KtMap = kotlin_kotlin.$_$.f4;
		  var isInterface = kotlin_kotlin.$_$.m7;
		  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.e1;
		  var captureStack = kotlin_kotlin.$_$.l6;
		  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.g1;
		  var IllegalArgumentException_init_$Init$_1 = kotlin_kotlin.$_$.i1;
		  var IllegalArgumentException = kotlin_kotlin.$_$.t9;
		  var collectionSizeOrDefault = kotlin_kotlin.$_$.m4;
		  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.h;
		  var KClass = kotlin_kotlin.$_$.k8;
		  var Triple = kotlin_kotlin.$_$.aa;
		  var Pair = kotlin_kotlin.$_$.w9;
		  var Entry = kotlin_kotlin.$_$.e4;
		  var LinkedHashMap = kotlin_kotlin.$_$.b4;
		  var KtMutableMap = kotlin_kotlin.$_$.h4;
		  var HashMap = kotlin_kotlin.$_$.z3;
		  var LinkedHashSet = kotlin_kotlin.$_$.c4;
		  var KtMutableSet = kotlin_kotlin.$_$.i4;
		  var KtSet = kotlin_kotlin.$_$.j4;
		  var HashSet = kotlin_kotlin.$_$.a4;
		  var ArrayList = kotlin_kotlin.$_$.x3;
		  var KtMutableList = kotlin_kotlin.$_$.g4;
		  var KtList = kotlin_kotlin.$_$.d4;
		  var Collection = kotlin_kotlin.$_$.y3;
		  var copyToArray = kotlin_kotlin.$_$.z4;
		  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.s1;
		  var _Result___get_value__impl__bjfvqg = kotlin_kotlin.$_$.u1;
		  var _Result___get_isFailure__impl__jpiriv = kotlin_kotlin.$_$.t1;
		  var Result = kotlin_kotlin.$_$.x9;
		  var ensureNotNull = kotlin_kotlin.$_$.na;
		  var equals = kotlin_kotlin.$_$.r6;
		  var isBlank = kotlin_kotlin.$_$.q8;
		  var toList = kotlin_kotlin.$_$.d6;
		  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.i;
		  var HashSet_init_$Create$ = kotlin_kotlin.$_$.o;
		  var toHashSet = kotlin_kotlin.$_$.b6;
		  var toBooleanArray = kotlin_kotlin.$_$.a6;
		  var withIndex = kotlin_kotlin.$_$.f6;
		  var to = kotlin_kotlin.$_$.ya;
		  var lazy_0 = kotlin_kotlin.$_$.sa;
		  var contentEquals = kotlin_kotlin.$_$.n4;
		  var until = kotlin_kotlin.$_$.j8;
		  var joinToString = kotlin_kotlin.$_$.k5;
		  var initMetadataForObject = kotlin_kotlin.$_$.e7;
		  var Long = kotlin_kotlin.$_$.u9;
		  var Char = kotlin_kotlin.$_$.o9;
		  var Duration__toIsoString_impl_9h6wsm = kotlin_kotlin.$_$.m1;
		  var Duration = kotlin_kotlin.$_$.n9;
		  var Companion_getInstance = kotlin_kotlin.$_$.o3;
		  var toIntOrNull = kotlin_kotlin.$_$.d9;
		  var hashCode = kotlin_kotlin.$_$.y6;
		  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.j;
		  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.p;
		  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.t;
		  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.u;
		  var HashMap_init_$Create$ = kotlin_kotlin.$_$.l;
		  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.m;
		  var LinkedHashMap_init_$Create$_1 = kotlin_kotlin.$_$.s;
		  var isArray = kotlin_kotlin.$_$.f7;
		  var arrayIterator = kotlin_kotlin.$_$.j6;
		  var step = kotlin_kotlin.$_$.i8;
		  var getValue = kotlin_kotlin.$_$.g5;
		  var longArray = kotlin_kotlin.$_$.s7;
		  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
		  var get_lastIndex = kotlin_kotlin.$_$.l5;
		  var countTrailingZeroBits = kotlin_kotlin.$_$.la;
		  var indexOf = kotlin_kotlin.$_$.h5;
		  var contentToString = kotlin_kotlin.$_$.p4;
		  var Enum = kotlin_kotlin.$_$.r9;
		  var fillArrayVal = kotlin_kotlin.$_$.t6;
		  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.n;
		  var toString_0 = kotlin_kotlin.$_$.xa;
		  var KTypeParameter = kotlin_kotlin.$_$.m8;
		  var booleanArray = kotlin_kotlin.$_$.k6;
		  var emptyMap = kotlin_kotlin.$_$.c5;
		  var contentHashCode = kotlin_kotlin.$_$.o4;
		  var Companion_getInstance_0 = kotlin_kotlin.$_$.p3;
		  var isCharArray = kotlin_kotlin.$_$.i7;
		  var charArray = kotlin_kotlin.$_$.m6;
		  kotlin_kotlin.$_$.h3;
		  var isDoubleArray = kotlin_kotlin.$_$.j7;
		  kotlin_kotlin.$_$.i3;
		  var isFloatArray = kotlin_kotlin.$_$.k7;
		  var Companion_getInstance_1 = kotlin_kotlin.$_$.q3;
		  var isLongArray = kotlin_kotlin.$_$.n7;
		  var Companion_getInstance_2 = kotlin_kotlin.$_$.u3;
		  var _ULongArray___get_size__impl__ju6dtr = kotlin_kotlin.$_$.u2;
		  var ULongArray = kotlin_kotlin.$_$.fa;
		  var _ULongArray___init__impl__twm1l3 = kotlin_kotlin.$_$.q2;
		  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.n2;
		  var ULongArray__get_impl_pr71q9 = kotlin_kotlin.$_$.s2;
		  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.o2;
		  kotlin_kotlin.$_$.j3;
		  var isIntArray = kotlin_kotlin.$_$.l7;
		  var Companion_getInstance_3 = kotlin_kotlin.$_$.t3;
		  var _UIntArray___get_size__impl__r6l8ci = kotlin_kotlin.$_$.l2;
		  var UIntArray = kotlin_kotlin.$_$.da;
		  var _UIntArray___init__impl__ghjpc6 = kotlin_kotlin.$_$.h2;
		  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.e2;
		  var UIntArray__get_impl_gp5kza = kotlin_kotlin.$_$.j2;
		  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.f2;
		  kotlin_kotlin.$_$.k3;
		  var isShortArray = kotlin_kotlin.$_$.p7;
		  var Companion_getInstance_4 = kotlin_kotlin.$_$.v3;
		  var _UShortArray___get_size__impl__jqto1b = kotlin_kotlin.$_$.d3;
		  var UShortArray = kotlin_kotlin.$_$.ha;
		  var _UShortArray___init__impl__9b26ef = kotlin_kotlin.$_$.z2;
		  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.w2;
		  var UShortArray__get_impl_fnbhmx = kotlin_kotlin.$_$.b3;
		  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.x2;
		  kotlin_kotlin.$_$.g3;
		  var isByteArray = kotlin_kotlin.$_$.h7;
		  var Companion_getInstance_5 = kotlin_kotlin.$_$.s3;
		  var _UByteArray___get_size__impl__h6pkdv = kotlin_kotlin.$_$.c2;
		  var UByteArray = kotlin_kotlin.$_$.ba;
		  var _UByteArray___init__impl__ip4y9n = kotlin_kotlin.$_$.z1;
		  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.v1;
		  var UByteArray__get_impl_t5f3hv = kotlin_kotlin.$_$.a2;
		  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.w1;
		  kotlin_kotlin.$_$.f3;
		  var isBooleanArray = kotlin_kotlin.$_$.g7;
		  var coerceAtLeast = kotlin_kotlin.$_$.f8;
		  var copyOf = kotlin_kotlin.$_$.t4;
		  var copyOf_0 = kotlin_kotlin.$_$.v4;
		  var copyOf_1 = kotlin_kotlin.$_$.w4;
		  var copyOf_2 = kotlin_kotlin.$_$.r4;
		  var _ULongArray___get_storage__impl__28e64j = kotlin_kotlin.$_$.v2;
		  var _ULongArray___init__impl__twm1l3_0 = kotlin_kotlin.$_$.r2;
		  var ULongArray__set_impl_z19mvh = kotlin_kotlin.$_$.t2;
		  var copyOf_3 = kotlin_kotlin.$_$.y4;
		  var _UIntArray___get_storage__impl__92a0v0 = kotlin_kotlin.$_$.m2;
		  var _UIntArray___init__impl__ghjpc6_0 = kotlin_kotlin.$_$.i2;
		  var UIntArray__set_impl_7f2zu2 = kotlin_kotlin.$_$.k2;
		  var copyOf_4 = kotlin_kotlin.$_$.q4;
		  var _UShortArray___get_storage__impl__t2jpv5 = kotlin_kotlin.$_$.e3;
		  var _UShortArray___init__impl__9b26ef_0 = kotlin_kotlin.$_$.a3;
		  var UShortArray__set_impl_6d8whp = kotlin_kotlin.$_$.c3;
		  var copyOf_5 = kotlin_kotlin.$_$.u4;
		  var _UByteArray___get_storage__impl__d4kctt = kotlin_kotlin.$_$.d2;
		  var _UByteArray___init__impl__ip4y9n_0 = kotlin_kotlin.$_$.y1;
		  var UByteArray__set_impl_jvcicn = kotlin_kotlin.$_$.b2;
		  var copyOf_6 = kotlin_kotlin.$_$.s4;
		  var Unit = kotlin_kotlin.$_$.ja;
		  var trimIndent = kotlin_kotlin.$_$.m9;
		  var equals_0 = kotlin_kotlin.$_$.o8;
		  var charSequenceLength = kotlin_kotlin.$_$.o6;
		  var charSequenceGet = kotlin_kotlin.$_$.n6;
		  var toString_1 = kotlin_kotlin.$_$.q1;
		  var titlecase = kotlin_kotlin.$_$.a9;
		  var isLowerCase = kotlin_kotlin.$_$.r8;
		  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.n3;
		  var ULong = kotlin_kotlin.$_$.ga;
		  var UInt = kotlin_kotlin.$_$.ea;
		  var UShort = kotlin_kotlin.$_$.ia;
		  var UByte = kotlin_kotlin.$_$.ca;
		  var mapOf = kotlin_kotlin.$_$.u5;
		  var last = kotlin_kotlin.$_$.o5;
		  var lastOrNull = kotlin_kotlin.$_$.n5;
		  var get_lastIndex_0 = kotlin_kotlin.$_$.m5;
		  var get_js = kotlin_kotlin.$_$.q7;
		  var findAssociatedObject = kotlin_kotlin.$_$.c;
		  var get_indices = kotlin_kotlin.$_$.j5;
		  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.k1;
		  var get_indices_0 = kotlin_kotlin.$_$.i5;
		  kotlin_kotlin.$_$.r3;
		  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.r1;
		  var createFailure = kotlin_kotlin.$_$.ma;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForClass(Serializable, 'Serializable');
		  initMetadataForInterface(SerializationStrategy, 'SerializationStrategy');
		  initMetadataForInterface(DeserializationStrategy, 'DeserializationStrategy');
		  initMetadataForInterface(KSerializer, 'KSerializer', VOID, VOID, [SerializationStrategy, DeserializationStrategy]);
		  initMetadataForClass(AbstractPolymorphicSerializer, 'AbstractPolymorphicSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(PolymorphicSerializer, 'PolymorphicSerializer', VOID, AbstractPolymorphicSerializer);
		  initMetadataForClass(_no_name_provided__qut3iv);
		  initMetadataForClass(SealedClassSerializer, 'SealedClassSerializer', VOID, AbstractPolymorphicSerializer);
		  initMetadataForClass(SerializationException, 'SerializationException', SerializationException_init_$Create$, IllegalArgumentException);
		  initMetadataForClass(MissingFieldException, 'MissingFieldException', VOID, SerializationException);
		  initMetadataForClass(UnknownFieldException, 'UnknownFieldException', VOID, SerializationException);
		  function get_isNullable() {
		    return false;
		  }
		  function get_isInline() {
		    return false;
		  }
		  function get_annotations() {
		    return emptyList();
		  }
		  initMetadataForInterface(SerialDescriptor, 'SerialDescriptor');
		  initMetadataForClass(ContextDescriptor, 'ContextDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForClass(elementDescriptors$1$1);
		  initMetadataForClass(_no_name_provided__qut3iv_0);
		  initMetadataForClass(elementNames$1$1);
		  initMetadataForClass(_no_name_provided__qut3iv_1);
		  initMetadataForClass(ClassSerialDescriptorBuilder, 'ClassSerialDescriptorBuilder');
		  initMetadataForInterface(CachedNames, 'CachedNames');
		  initMetadataForClass(SerialDescriptorImpl, 'SerialDescriptorImpl', VOID, VOID, [SerialDescriptor, CachedNames]);
		  initMetadataForClass(SerialKind, 'SerialKind');
		  initMetadataForObject(ENUM, 'ENUM', VOID, SerialKind);
		  initMetadataForObject(CONTEXTUAL, 'CONTEXTUAL', VOID, SerialKind);
		  initMetadataForClass(PrimitiveKind, 'PrimitiveKind', VOID, SerialKind);
		  initMetadataForObject(BOOLEAN, 'BOOLEAN', VOID, PrimitiveKind);
		  initMetadataForObject(BYTE, 'BYTE', VOID, PrimitiveKind);
		  initMetadataForObject(CHAR, 'CHAR', VOID, PrimitiveKind);
		  initMetadataForObject(SHORT, 'SHORT', VOID, PrimitiveKind);
		  initMetadataForObject(INT, 'INT', VOID, PrimitiveKind);
		  initMetadataForObject(LONG, 'LONG', VOID, PrimitiveKind);
		  initMetadataForObject(FLOAT, 'FLOAT', VOID, PrimitiveKind);
		  initMetadataForObject(DOUBLE, 'DOUBLE', VOID, PrimitiveKind);
		  initMetadataForObject(STRING, 'STRING', VOID, PrimitiveKind);
		  initMetadataForClass(StructureKind, 'StructureKind', VOID, SerialKind);
		  initMetadataForObject(CLASS, 'CLASS', VOID, StructureKind);
		  initMetadataForObject(LIST, 'LIST', VOID, StructureKind);
		  initMetadataForObject(MAP, 'MAP', VOID, StructureKind);
		  initMetadataForObject(OBJECT, 'OBJECT', VOID, StructureKind);
		  initMetadataForClass(PolymorphicKind, 'PolymorphicKind', VOID, SerialKind);
		  initMetadataForObject(SEALED, 'SEALED', VOID, PolymorphicKind);
		  initMetadataForObject(OPEN, 'OPEN', VOID, PolymorphicKind);
		  function decodeSerializableValue(deserializer) {
		    return deserializer.zf(this);
		  }
		  initMetadataForInterface(Decoder, 'Decoder');
		  function decodeSequentially() {
		    return false;
		  }
		  function decodeCollectionSize(descriptor) {
		    return -1;
		  }
		  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $super) {
		    previousValue = previousValue === VOID ? null : previousValue;
		    return $super === VOID ? this.tj(descriptor, index, deserializer, previousValue) : $super.tj.call(this, descriptor, index, deserializer, previousValue);
		  }
		  initMetadataForInterface(CompositeDecoder, 'CompositeDecoder');
		  initMetadataForClass(AbstractDecoder, 'AbstractDecoder', VOID, VOID, [Decoder, CompositeDecoder]);
		  function encodeNotNullMark() {
		  }
		  function beginCollection(descriptor, collectionSize) {
		    return this.hj(descriptor);
		  }
		  function encodeSerializableValue(serializer, value) {
		    serializer.yf(this, value);
		  }
		  function encodeNullableSerializableValue(serializer, value) {
		    var isNullabilitySupported = serializer.xf().hh();
		    if (isNullabilitySupported) {
		      return this.zk(isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE(), value);
		    }
		    if (value == null) {
		      this.ck();
		    } else {
		      this.cl();
		      this.zk(serializer, value);
		    }
		  }
		  initMetadataForInterface(Encoder, 'Encoder');
		  function shouldEncodeElementDefault(descriptor, index) {
		    return true;
		  }
		  initMetadataForInterface(CompositeEncoder, 'CompositeEncoder');
		  initMetadataForClass(AbstractEncoder, 'AbstractEncoder', VOID, VOID, [Encoder, CompositeEncoder]);
		  initMetadataForObject(DurationSerializer, 'DurationSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(ListLikeDescriptor, 'ListLikeDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForClass(ArrayListClassDesc, 'ArrayListClassDesc', VOID, ListLikeDescriptor);
		  initMetadataForClass(HashSetClassDesc, 'HashSetClassDesc', VOID, ListLikeDescriptor);
		  initMetadataForClass(LinkedHashSetClassDesc, 'LinkedHashSetClassDesc', VOID, ListLikeDescriptor);
		  initMetadataForClass(MapLikeDescriptor, 'MapLikeDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForClass(HashMapClassDesc, 'HashMapClassDesc', VOID, MapLikeDescriptor);
		  initMetadataForClass(LinkedHashMapClassDesc, 'LinkedHashMapClassDesc', VOID, MapLikeDescriptor);
		  initMetadataForClass(ArrayClassDesc, 'ArrayClassDesc', VOID, ListLikeDescriptor);
		  initMetadataForClass(PrimitiveArrayDescriptor, 'PrimitiveArrayDescriptor', VOID, ListLikeDescriptor);
		  initMetadataForClass(AbstractCollectionSerializer, 'AbstractCollectionSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(CollectionLikeSerializer, 'CollectionLikeSerializer', VOID, AbstractCollectionSerializer);
		  initMetadataForClass(CollectionSerializer, 'CollectionSerializer', VOID, CollectionLikeSerializer);
		  initMetadataForClass(ArrayListSerializer, 'ArrayListSerializer', VOID, CollectionSerializer);
		  initMetadataForClass(HashSetSerializer, 'HashSetSerializer', VOID, CollectionSerializer);
		  initMetadataForClass(LinkedHashSetSerializer, 'LinkedHashSetSerializer', VOID, CollectionSerializer);
		  initMetadataForClass(MapLikeSerializer, 'MapLikeSerializer', VOID, AbstractCollectionSerializer);
		  initMetadataForClass(HashMapSerializer, 'HashMapSerializer', VOID, MapLikeSerializer);
		  initMetadataForClass(LinkedHashMapSerializer, 'LinkedHashMapSerializer', VOID, MapLikeSerializer);
		  initMetadataForClass(ReferenceArraySerializer, 'ReferenceArraySerializer', VOID, CollectionLikeSerializer);
		  initMetadataForClass(PrimitiveArraySerializer, 'PrimitiveArraySerializer', VOID, CollectionLikeSerializer);
		  initMetadataForClass(PrimitiveArrayBuilder, 'PrimitiveArrayBuilder');
		  initMetadataForCompanion(Companion);
		  initMetadataForClass(ElementMarker, 'ElementMarker');
		  initMetadataForClass(EnumSerializer, 'EnumSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(PluginGeneratedSerialDescriptor, 'PluginGeneratedSerialDescriptor', VOID, VOID, [SerialDescriptor, CachedNames]);
		  initMetadataForClass(EnumDescriptor, 'EnumDescriptor', VOID, PluginGeneratedSerialDescriptor);
		  initMetadataForClass(InlineClassDescriptor, 'InlineClassDescriptor', VOID, PluginGeneratedSerialDescriptor);
		  function typeParametersSerializers() {
		    return get_EMPTY_SERIALIZER_ARRAY();
		  }
		  initMetadataForInterface(GeneratedSerializer, 'GeneratedSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(InlinePrimitiveDescriptor$1, VOID, VOID, VOID, [GeneratedSerializer]);
		  initMetadataForObject(NoOpEncoder, 'NoOpEncoder', VOID, AbstractEncoder);
		  initMetadataForClass(NullableSerializer, 'NullableSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(SerialDescriptorForNullable, 'SerialDescriptorForNullable', VOID, VOID, [SerialDescriptor, CachedNames]);
		  initMetadataForClass(ObjectSerializer, 'ObjectSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForInterface(SerializerFactory, 'SerializerFactory');
		  initMetadataForObject(CharArraySerializer_0, 'CharArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(DoubleArraySerializer_0, 'DoubleArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(FloatArraySerializer_0, 'FloatArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(LongArraySerializer_0, 'LongArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(ULongArraySerializer_0, 'ULongArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(IntArraySerializer_0, 'IntArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(UIntArraySerializer_0, 'UIntArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(ShortArraySerializer_0, 'ShortArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(UShortArraySerializer_0, 'UShortArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(ByteArraySerializer_0, 'ByteArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(UByteArraySerializer_0, 'UByteArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForObject(BooleanArraySerializer_0, 'BooleanArraySerializer', VOID, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
		  initMetadataForClass(CharArrayBuilder, 'CharArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(DoubleArrayBuilder, 'DoubleArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(FloatArrayBuilder, 'FloatArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(LongArrayBuilder, 'LongArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(ULongArrayBuilder, 'ULongArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(IntArrayBuilder, 'IntArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(UIntArrayBuilder, 'UIntArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(ShortArrayBuilder, 'ShortArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(UShortArrayBuilder, 'UShortArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(ByteArrayBuilder, 'ByteArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(UByteArrayBuilder, 'UByteArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForClass(BooleanArrayBuilder, 'BooleanArrayBuilder', VOID, PrimitiveArrayBuilder);
		  initMetadataForObject(StringSerializer, 'StringSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(CharSerializer, 'CharSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(DoubleSerializer, 'DoubleSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(FloatSerializer, 'FloatSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(LongSerializer, 'LongSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(IntSerializer, 'IntSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(ShortSerializer, 'ShortSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(ByteSerializer, 'ByteSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(BooleanSerializer, 'BooleanSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(UnitSerializer, 'UnitSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(PrimitiveSerialDescriptor_0, 'PrimitiveSerialDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForClass(TaggedEncoder, 'TaggedEncoder', VOID, VOID, [Encoder, CompositeEncoder]);
		  initMetadataForClass(NamedValueEncoder, 'NamedValueEncoder', VOID, TaggedEncoder);
		  initMetadataForClass(TaggedDecoder, 'TaggedDecoder', VOID, VOID, [Decoder, CompositeDecoder]);
		  initMetadataForClass(NamedValueDecoder, 'NamedValueDecoder', VOID, TaggedDecoder);
		  initMetadataForClass(MapEntry, 'MapEntry', VOID, VOID, [Entry]);
		  initMetadataForClass(KeyValueSerializer, 'KeyValueSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(MapEntrySerializer_0, 'MapEntrySerializer', VOID, KeyValueSerializer);
		  initMetadataForClass(PairSerializer_0, 'PairSerializer', VOID, KeyValueSerializer);
		  initMetadataForClass(TripleSerializer_0, 'TripleSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(ULongSerializer, 'ULongSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(UIntSerializer, 'UIntSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(UShortSerializer, 'UShortSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(UByteSerializer, 'UByteSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(SerializersModule, 'SerializersModule');
		  initMetadataForClass(SerialModuleImpl, 'SerialModuleImpl', VOID, SerializersModule);
		  initMetadataForClass(ContextualProvider, 'ContextualProvider');
		  initMetadataForClass(Argless, 'Argless', VOID, ContextualProvider);
		  initMetadataForClass(WithTypeArguments, 'WithTypeArguments', VOID, ContextualProvider);
		  function contextual(kClass, serializer) {
		    return this.h10(kClass, SerializersModuleCollector$contextual$lambda(serializer));
		  }
		  initMetadataForInterface(SerializersModuleCollector, 'SerializersModuleCollector');
		  initMetadataForClass(SerializableWith, 'SerializableWith', VOID, VOID, VOID, VOID, 0);
		  initMetadataForClass(createCache$1);
		  initMetadataForClass(createParametrizedCache$1);
		  //endregion
		  function Serializable(with_0) {
		    with_0 = with_0 === VOID ? getKClass(KSerializer) : with_0;
		    this.wf_1 = with_0;
		  }
		  protoOf(Serializable).equals = function (other) {
		    if (!(other instanceof Serializable))
		      return false;
		    var tmp0_other_with_cast = other instanceof Serializable ? other : THROW_CCE();
		    if (!this.wf_1.equals(tmp0_other_with_cast.wf_1))
		      return false;
		    return true;
		  };
		  protoOf(Serializable).hashCode = function () {
		    return imul(getStringHashCode('with'), 127) ^ this.wf_1.hashCode();
		  };
		  protoOf(Serializable).toString = function () {
		    return '@kotlinx.serialization.Serializable(with=' + toString(this.wf_1) + ')';
		  };
		  function KSerializer() {
		  }
		  function SerializationStrategy() {
		  }
		  function DeserializationStrategy() {
		  }
		  function PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0) {
		    return function ($this$buildSerialDescriptor) {
		      $this$buildSerialDescriptor.ig('type', serializer_0().xf());
		      $this$buildSerialDescriptor.ig('value', buildSerialDescriptor('kotlinx.serialization.Polymorphic<' + this$0.jg_1.s8() + '>', CONTEXTUAL_getInstance(), []));
		      $this$buildSerialDescriptor.cg_1 = this$0.kg_1;
		      return Unit_instance;
		    };
		  }
		  function PolymorphicSerializer$descriptor$delegate$lambda(this$0) {
		    return function () {
		      var tmp = OPEN_getInstance();
		      return withContext(buildSerialDescriptor('kotlinx.serialization.Polymorphic', tmp, [], PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0)), this$0.jg_1);
		    };
		  }
		  function PolymorphicSerializer(baseClass) {
		    AbstractPolymorphicSerializer.call(this);
		    this.jg_1 = baseClass;
		    this.kg_1 = emptyList();
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.lg_1 = lazy(tmp_0, PolymorphicSerializer$descriptor$delegate$lambda(this));
		  }
		  protoOf(PolymorphicSerializer).mg = function () {
		    return this.jg_1;
		  };
		  protoOf(PolymorphicSerializer).xf = function () {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = this.lg_1;
		    descriptor$factory();
		    return this_0.r1();
		  };
		  protoOf(PolymorphicSerializer).toString = function () {
		    return 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + toString(this.jg_1) + ')';
		  };
		  function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
		    var tmp0_elvis_lhs = _this__u8e3s4.pg(encoder, value);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throwSubtypeNotRegistered(getKClassFromExpression(value), _this__u8e3s4.mg());
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function findPolymorphicSerializer_0(_this__u8e3s4, decoder, klassName) {
		    var tmp0_elvis_lhs = _this__u8e3s4.og(decoder, klassName);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throwSubtypeNotRegistered_0(klassName, _this__u8e3s4.mg());
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function descriptor$factory() {
		    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
		      return receiver.xf();
		    }, null);
		  }
		  function SealedClassSerializer_init_$Init$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations, $this) {
		    SealedClassSerializer.call($this, serialName, baseClass, subclasses, subclassSerializers);
		    $this.rg_1 = asList(classAnnotations);
		    return $this;
		  }
		  function SealedClassSerializer_init_$Create$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations) {
		    return SealedClassSerializer_init_$Init$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations, objectCreate(protoOf(SealedClassSerializer)));
		  }
		  function SealedClassSerializer$descriptor$delegate$lambda$lambda$lambda($subclassSerializers) {
		    return function ($this$buildSerialDescriptor) {
		      var tmp0_iterator = distinct($subclassSerializers).i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlinx.serialization.SealedClassSerializer.descriptor$delegate.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		        var d = element.xf();
		        $this$buildSerialDescriptor.ig(d.vg(), d);
		      }
		      return Unit_instance;
		    };
		  }
		  function SealedClassSerializer$descriptor$delegate$lambda$lambda(this$0, $subclassSerializers) {
		    return function ($this$buildSerialDescriptor) {
		      $this$buildSerialDescriptor.ig('type', serializer_0().xf());
		      var tmp = 'kotlinx.serialization.Sealed<' + this$0.qg_1.s8() + '>';
		      var tmp_0 = CONTEXTUAL_getInstance();
		      var elementDescriptor = buildSerialDescriptor(tmp, tmp_0, [], SealedClassSerializer$descriptor$delegate$lambda$lambda$lambda($subclassSerializers));
		      $this$buildSerialDescriptor.ig('value', elementDescriptor);
		      $this$buildSerialDescriptor.cg_1 = this$0.rg_1;
		      return Unit_instance;
		    };
		  }
		  function SealedClassSerializer$descriptor$delegate$lambda($serialName, this$0, $subclassSerializers) {
		    return function () {
		      var tmp = SEALED_getInstance();
		      return buildSerialDescriptor($serialName, tmp, [], SealedClassSerializer$descriptor$delegate$lambda$lambda(this$0, $subclassSerializers));
		    };
		  }
		  function _no_name_provided__qut3iv($this) {
		    this.wg_1 = $this;
		  }
		  protoOf(_no_name_provided__qut3iv).xg = function () {
		    return this.wg_1.i();
		  };
		  protoOf(_no_name_provided__qut3iv).yg = function (element) {
		    // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
		    return element.r1().xf().vg();
		  };
		  protoOf(_no_name_provided__qut3iv).zg = function (element) {
		    return this.yg((element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  function SealedClassSerializer(serialName, baseClass, subclasses, subclassSerializers) {
		    AbstractPolymorphicSerializer.call(this);
		    this.qg_1 = baseClass;
		    this.rg_1 = emptyList();
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.sg_1 = lazy(tmp_0, SealedClassSerializer$descriptor$delegate$lambda(serialName, this, subclassSerializers));
		    if (!(subclasses.length === subclassSerializers.length)) {
		      throw IllegalArgumentException_init_$Create$('All subclasses of sealed class ' + this.qg_1.s8() + ' should be marked @Serializable');
		    }
		    this.tg_1 = toMap(zip(subclasses, subclassSerializers));
		    var tmp_1 = this;
		    // Inline function 'kotlin.collections.mapValues' call
		    // Inline function 'kotlin.collections.aggregate' call
		    // Inline function 'kotlin.collections.groupingBy' call
		    var this_0 = this.tg_1.x1();
		    // Inline function 'kotlin.collections.aggregateTo' call
		    var this_1 = new _no_name_provided__qut3iv(this_0);
		    // Inline function 'kotlin.collections.mutableMapOf' call
		    var destination = LinkedHashMap_init_$Create$();
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this_1.xg();
		    while (tmp0_iterator.j()) {
		      var e = tmp0_iterator.k();
		      var key = this_1.zg(e);
		      var accumulator = destination.u1(key);
		      // Inline function 'kotlin.collections.set' call
		      // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
		      accumulator == null && !destination.s1(key);
		      if (!(accumulator == null)) {
		        // Inline function 'kotlin.error' call
		        var message = "Multiple sealed subclasses of '" + toString(this.qg_1) + "' have the same serial name '" + key + "':" + (" '" + toString(accumulator.q1()) + "', '" + toString(e.q1()) + "'");
		        throw IllegalStateException_init_$Create$(toString(message));
		      }
		      destination.b2(key, e);
		    }
		    // Inline function 'kotlin.collections.mapValuesTo' call
		    var destination_0 = LinkedHashMap_init_$Create$_0(mapCapacity(destination.l()));
		    // Inline function 'kotlin.collections.associateByTo' call
		    var tmp0_iterator_0 = destination.x1().i();
		    while (tmp0_iterator_0.j()) {
		      var element = tmp0_iterator_0.k();
		      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
		      var tmp_2 = element.q1();
		      // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
		      var tmp$ret$7 = element.r1().r1();
		      destination_0.b2(tmp_2, tmp$ret$7);
		    }
		    tmp_1.ug_1 = destination_0;
		  }
		  protoOf(SealedClassSerializer).mg = function () {
		    return this.qg_1;
		  };
		  protoOf(SealedClassSerializer).xf = function () {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = this.sg_1;
		    descriptor$factory_0();
		    return this_0.r1();
		  };
		  protoOf(SealedClassSerializer).og = function (decoder, klassName) {
		    // Inline function 'kotlin.collections.get' call
		    var this_0 = this.ug_1;
		    var tmp0_elvis_lhs = (isInterface(this_0, KtMap) ? this_0 : THROW_CCE()).u1(klassName);
		    return tmp0_elvis_lhs == null ? protoOf(AbstractPolymorphicSerializer).og.call(this, decoder, klassName) : tmp0_elvis_lhs;
		  };
		  protoOf(SealedClassSerializer).pg = function (encoder, value) {
		    var tmp0_elvis_lhs = this.tg_1.u1(getKClassFromExpression(value));
		    var tmp1_safe_receiver = tmp0_elvis_lhs == null ? protoOf(AbstractPolymorphicSerializer).pg.call(this, encoder, value) : tmp0_elvis_lhs;
		    var tmp;
		    if (tmp1_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlinx.serialization.internal.cast' call
		      tmp = isInterface(tmp1_safe_receiver, SerializationStrategy) ? tmp1_safe_receiver : THROW_CCE();
		    }
		    return tmp;
		  };
		  function descriptor$factory_0() {
		    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
		      return receiver.xf();
		    }, null);
		  }
		  function SerializationException_init_$Init$($this) {
		    IllegalArgumentException_init_$Init$($this);
		    SerializationException.call($this);
		    return $this;
		  }
		  function SerializationException_init_$Create$() {
		    var tmp = SerializationException_init_$Init$(objectCreate(protoOf(SerializationException)));
		    captureStack(tmp, SerializationException_init_$Create$);
		    return tmp;
		  }
		  function SerializationException_init_$Init$_0(message, $this) {
		    IllegalArgumentException_init_$Init$_0(message, $this);
		    SerializationException.call($this);
		    return $this;
		  }
		  function SerializationException_init_$Create$_0(message) {
		    var tmp = SerializationException_init_$Init$_0(message, objectCreate(protoOf(SerializationException)));
		    captureStack(tmp, SerializationException_init_$Create$_0);
		    return tmp;
		  }
		  function SerializationException_init_$Init$_1(message, cause, $this) {
		    IllegalArgumentException_init_$Init$_1(message, cause, $this);
		    SerializationException.call($this);
		    return $this;
		  }
		  function SerializationException() {
		    captureStack(this, SerializationException);
		  }
		  function MissingFieldException_init_$Init$(missingFields, serialName, $this) {
		    MissingFieldException.call($this, missingFields, missingFields.l() === 1 ? "Field '" + missingFields.m(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + toString(missingFields) + " are required for type with serial name '" + serialName + "', but they were missing", null);
		    return $this;
		  }
		  function MissingFieldException_init_$Create$(missingFields, serialName) {
		    var tmp = MissingFieldException_init_$Init$(missingFields, serialName, objectCreate(protoOf(MissingFieldException)));
		    captureStack(tmp, MissingFieldException_init_$Create$);
		    return tmp;
		  }
		  function MissingFieldException(missingFields, message, cause) {
		    SerializationException_init_$Init$_1(message, cause, this);
		    captureStack(this, MissingFieldException);
		    this.ah_1 = missingFields;
		  }
		  function UnknownFieldException_init_$Init$(index, $this) {
		    UnknownFieldException.call($this, 'An unknown field for index ' + index);
		    return $this;
		  }
		  function UnknownFieldException_init_$Create$(index) {
		    var tmp = UnknownFieldException_init_$Init$(index, objectCreate(protoOf(UnknownFieldException)));
		    captureStack(tmp, UnknownFieldException_init_$Create$);
		    return tmp;
		  }
		  function UnknownFieldException(message) {
		    SerializationException_init_$Init$_0(message, this);
		    captureStack(this, UnknownFieldException);
		  }
		  function serializerOrNull(_this__u8e3s4) {
		    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
		    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
		  }
		  function serializersForParameters(_this__u8e3s4, typeArguments, failOnMissingTypeArgSerializer) {
		    var tmp;
		    if (failOnMissingTypeArgSerializer) {
		      // Inline function 'kotlin.collections.map' call
		      // Inline function 'kotlin.collections.mapTo' call
		      var destination = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
		      var tmp0_iterator = typeArguments.i();
		      while (tmp0_iterator.j()) {
		        var item = tmp0_iterator.k();
		        // Inline function 'kotlinx.serialization.serializersForParameters.<anonymous>' call
		        var tmp$ret$0 = serializer(_this__u8e3s4, item);
		        destination.d(tmp$ret$0);
		      }
		      tmp = destination;
		    } else {
		      // Inline function 'kotlin.collections.map' call
		      // Inline function 'kotlin.collections.mapTo' call
		      var destination_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
		      var tmp0_iterator_0 = typeArguments.i();
		      while (tmp0_iterator_0.j()) {
		        var item_0 = tmp0_iterator_0.k();
		        // Inline function 'kotlinx.serialization.serializersForParameters.<anonymous>' call
		        var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
		        var tmp_0;
		        if (tmp0_elvis_lhs == null) {
		          return null;
		        } else {
		          tmp_0 = tmp0_elvis_lhs;
		        }
		        var tmp$ret$3 = tmp_0;
		        destination_0.d(tmp$ret$3);
		      }
		      tmp = destination_0;
		    }
		    var serializers = tmp;
		    return serializers;
		  }
		  function parametrizedSerializerOrNull(_this__u8e3s4, types, serializers) {
		    var tmp0_elvis_lhs = builtinParametrizedSerializer(_this__u8e3s4, types, serializers);
		    return tmp0_elvis_lhs == null ? compiledParametrizedSerializer(_this__u8e3s4, serializers) : tmp0_elvis_lhs;
		  }
		  function serializer(_this__u8e3s4, type) {
		    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      platformSpecificSerializerNotRegistered(kclass(type));
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function serializerOrNull_0(_this__u8e3s4, type) {
		    return serializerByKTypeImpl(_this__u8e3s4, type, false);
		  }
		  function builtinParametrizedSerializer(_this__u8e3s4, typeArguments, serializers) {
		    var tmp;
		    if (((_this__u8e3s4.equals(getKClass(Collection)) ? true : _this__u8e3s4.equals(getKClass(KtList))) ? true : _this__u8e3s4.equals(getKClass(KtMutableList))) ? true : _this__u8e3s4.equals(getKClass(ArrayList))) {
		      tmp = new ArrayListSerializer(serializers.m(0));
		    } else if (_this__u8e3s4.equals(getKClass(HashSet))) {
		      tmp = new HashSetSerializer(serializers.m(0));
		    } else if ((_this__u8e3s4.equals(getKClass(KtSet)) ? true : _this__u8e3s4.equals(getKClass(KtMutableSet))) ? true : _this__u8e3s4.equals(getKClass(LinkedHashSet))) {
		      tmp = new LinkedHashSetSerializer(serializers.m(0));
		    } else if (_this__u8e3s4.equals(getKClass(HashMap))) {
		      tmp = new HashMapSerializer(serializers.m(0), serializers.m(1));
		    } else if ((_this__u8e3s4.equals(getKClass(KtMap)) ? true : _this__u8e3s4.equals(getKClass(KtMutableMap))) ? true : _this__u8e3s4.equals(getKClass(LinkedHashMap))) {
		      tmp = new LinkedHashMapSerializer(serializers.m(0), serializers.m(1));
		    } else if (_this__u8e3s4.equals(getKClass(Entry))) {
		      tmp = MapEntrySerializer(serializers.m(0), serializers.m(1));
		    } else if (_this__u8e3s4.equals(getKClass(Pair))) {
		      tmp = PairSerializer(serializers.m(0), serializers.m(1));
		    } else if (_this__u8e3s4.equals(getKClass(Triple))) {
		      tmp = TripleSerializer(serializers.m(0), serializers.m(1), serializers.m(2));
		    } else {
		      var tmp_0;
		      if (isReferenceArray(_this__u8e3s4)) {
		        var tmp_1 = typeArguments.m(0).e9();
		        tmp_0 = ArraySerializer((!(tmp_1 == null) ? isInterface(tmp_1, KClass) : false) ? tmp_1 : THROW_CCE(), serializers.m(0));
		      } else {
		        tmp_0 = null;
		      }
		      tmp = tmp_0;
		    }
		    return tmp;
		  }
		  function compiledParametrizedSerializer(_this__u8e3s4, serializers) {
		    // Inline function 'kotlin.collections.toTypedArray' call
		    var tmp$ret$0 = copyToArray(serializers);
		    return constructSerializerForGivenTypeArgs(_this__u8e3s4, tmp$ret$0.slice());
		  }
		  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
		    var rootClass = kclass(type);
		    var isNullable = type.g9();
		    // Inline function 'kotlin.collections.map' call
		    var this_0 = type.f9();
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
		    var tmp0_iterator = this_0.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>' call
		      var tmp$ret$1;
		      $l$block: {
		        // Inline function 'kotlin.requireNotNull' call
		        var value = item.ch_1;
		        // Inline function 'kotlin.contracts.contract' call
		        if (value == null) {
		          // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>.<anonymous>' call
		          var message = 'Star projections in type arguments are not allowed, but had ' + toString(type);
		          throw IllegalArgumentException_init_$Create$(toString(message));
		        } else {
		          tmp$ret$1 = value;
		          break $l$block;
		        }
		      }
		      var tmp$ret$2 = tmp$ret$1;
		      destination.d(tmp$ret$2);
		    }
		    var typeArguments = destination;
		    var tmp;
		    if (typeArguments.n()) {
		      tmp = findCachedSerializer(rootClass, isNullable);
		    } else {
		      var cachedResult = findParametrizedCachedSerializer(rootClass, typeArguments, isNullable);
		      var tmp_0;
		      if (failOnMissingTypeArgSerializer) {
		        // Inline function 'kotlin.Result.getOrNull' call
		        var tmp_1;
		        if (_Result___get_isFailure__impl__jpiriv(cachedResult)) {
		          tmp_1 = null;
		        } else {
		          var tmp_2 = _Result___get_value__impl__bjfvqg(cachedResult);
		          tmp_1 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : THROW_CCE();
		        }
		        tmp_0 = tmp_1;
		      } else {
		        // Inline function 'kotlin.getOrElse' call
		        // Inline function 'kotlin.contracts.contract' call
		        var exception = Result__exceptionOrNull_impl_p6xea9(cachedResult);
		        var tmp_3;
		        if (exception == null) {
		          var tmp_4 = _Result___get_value__impl__bjfvqg(cachedResult);
		          tmp_3 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : THROW_CCE();
		        } else {
		          return null;
		        }
		        tmp_0 = tmp_3;
		      }
		      tmp = tmp_0;
		    }
		    var cachedSerializer = tmp;
		    if (cachedSerializer == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return cachedSerializer;
		    }
		    var tmp_5;
		    if (typeArguments.n()) {
		      tmp_5 = _this__u8e3s4.eh(rootClass);
		    } else {
		      var tmp1_elvis_lhs = serializersForParameters(_this__u8e3s4, typeArguments, failOnMissingTypeArgSerializer);
		      var tmp_6;
		      if (tmp1_elvis_lhs == null) {
		        return null;
		      } else {
		        tmp_6 = tmp1_elvis_lhs;
		      }
		      var serializers = tmp_6;
		      var tmp2_elvis_lhs = parametrizedSerializerOrNull(rootClass, typeArguments, serializers);
		      tmp_5 = tmp2_elvis_lhs == null ? _this__u8e3s4.dh(rootClass, serializers) : tmp2_elvis_lhs;
		    }
		    var contextualSerializer = tmp_5;
		    var tmp_7;
		    if (contextualSerializer == null) {
		      tmp_7 = null;
		    } else {
		      // Inline function 'kotlinx.serialization.internal.cast' call
		      tmp_7 = isInterface(contextualSerializer, KSerializer) ? contextualSerializer : THROW_CCE();
		    }
		    var tmp4_safe_receiver = tmp_7;
		    return tmp4_safe_receiver == null ? null : nullable(tmp4_safe_receiver, isNullable);
		  }
		  function nullable(_this__u8e3s4, shouldBeNullable) {
		    if (shouldBeNullable)
		      return get_nullable(_this__u8e3s4);
		    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
		  }
		  function get_SERIALIZERS_CACHE() {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    return SERIALIZERS_CACHE;
		  }
		  var SERIALIZERS_CACHE;
		  function get_SERIALIZERS_CACHE_NULLABLE() {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    return SERIALIZERS_CACHE_NULLABLE;
		  }
		  var SERIALIZERS_CACHE_NULLABLE;
		  function get_PARAMETRIZED_SERIALIZERS_CACHE() {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    return PARAMETRIZED_SERIALIZERS_CACHE;
		  }
		  var PARAMETRIZED_SERIALIZERS_CACHE;
		  function get_PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE() {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    return PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE;
		  }
		  var PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE;
		  function findCachedSerializer(clazz, isNullable) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    var tmp;
		    if (!isNullable) {
		      var tmp0_safe_receiver = get_SERIALIZERS_CACHE().fh(clazz);
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlinx.serialization.internal.cast' call
		        tmp_0 = isInterface(tmp0_safe_receiver, KSerializer) ? tmp0_safe_receiver : THROW_CCE();
		      }
		      tmp = tmp_0;
		    } else {
		      tmp = get_SERIALIZERS_CACHE_NULLABLE().fh(clazz);
		    }
		    return tmp;
		  }
		  function findParametrizedCachedSerializer(clazz, types, isNullable) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    var tmp;
		    if (!isNullable) {
		      var tmp_0 = get_PARAMETRIZED_SERIALIZERS_CACHE().gh(clazz, types);
		      tmp = new Result(tmp_0) instanceof Result ? tmp_0 : THROW_CCE();
		    } else {
		      tmp = get_PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE().gh(clazz, types);
		    }
		    return tmp;
		  }
		  function SERIALIZERS_CACHE$lambda(it) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    return serializerOrNull(it);
		  }
		  function SERIALIZERS_CACHE_NULLABLE$lambda(it) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    var tmp0_safe_receiver = serializerOrNull(it);
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_nullable(tmp0_safe_receiver);
		    var tmp;
		    if (tmp1_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlinx.serialization.internal.cast' call
		      tmp = isInterface(tmp1_safe_receiver, KSerializer) ? tmp1_safe_receiver : THROW_CCE();
		    }
		    return tmp;
		  }
		  function PARAMETRIZED_SERIALIZERS_CACHE$lambda(clazz, types) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    var serializers = ensureNotNull(serializersForParameters(EmptySerializersModule_0(), types, true));
		    return parametrizedSerializerOrNull(clazz, types, serializers);
		  }
		  function PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda(clazz, types) {
		    _init_properties_SerializersCache_kt__hgwi2p();
		    var serializers = ensureNotNull(serializersForParameters(EmptySerializersModule_0(), types, true));
		    var tmp0_safe_receiver = parametrizedSerializerOrNull(clazz, types, serializers);
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_nullable(tmp0_safe_receiver);
		    var tmp;
		    if (tmp1_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlinx.serialization.internal.cast' call
		      tmp = isInterface(tmp1_safe_receiver, KSerializer) ? tmp1_safe_receiver : THROW_CCE();
		    }
		    return tmp;
		  }
		  var properties_initialized_SerializersCache_kt_q8kf25;
		  function _init_properties_SerializersCache_kt__hgwi2p() {
		    if (!properties_initialized_SerializersCache_kt_q8kf25) {
		      properties_initialized_SerializersCache_kt_q8kf25 = true;
		      SERIALIZERS_CACHE = createCache(SERIALIZERS_CACHE$lambda);
		      SERIALIZERS_CACHE_NULLABLE = createCache(SERIALIZERS_CACHE_NULLABLE$lambda);
		      PARAMETRIZED_SERIALIZERS_CACHE = createParametrizedCache(PARAMETRIZED_SERIALIZERS_CACHE$lambda);
		      PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE = createParametrizedCache(PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda);
		    }
		  }
		  function get_nullable(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4.xf().hh()) {
		      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
		    } else {
		      tmp = new NullableSerializer(_this__u8e3s4);
		    }
		    return tmp;
		  }
		  function serializer_0(_this__u8e3s4) {
		    return StringSerializer_getInstance();
		  }
		  function serializer_1(_this__u8e3s4) {
		    return CharSerializer_getInstance();
		  }
		  function CharArraySerializer() {
		    return CharArraySerializer_getInstance();
		  }
		  function serializer_2(_this__u8e3s4) {
		    return DoubleSerializer_getInstance();
		  }
		  function DoubleArraySerializer() {
		    return DoubleArraySerializer_getInstance();
		  }
		  function serializer_3(_this__u8e3s4) {
		    return FloatSerializer_getInstance();
		  }
		  function FloatArraySerializer() {
		    return FloatArraySerializer_getInstance();
		  }
		  function serializer_4(_this__u8e3s4) {
		    return LongSerializer_getInstance();
		  }
		  function LongArraySerializer() {
		    return LongArraySerializer_getInstance();
		  }
		  function serializer_5(_this__u8e3s4) {
		    return ULongSerializer_getInstance();
		  }
		  function ULongArraySerializer() {
		    return ULongArraySerializer_getInstance();
		  }
		  function serializer_6(_this__u8e3s4) {
		    return IntSerializer_getInstance();
		  }
		  function IntArraySerializer() {
		    return IntArraySerializer_getInstance();
		  }
		  function serializer_7(_this__u8e3s4) {
		    return UIntSerializer_getInstance();
		  }
		  function UIntArraySerializer() {
		    return UIntArraySerializer_getInstance();
		  }
		  function serializer_8(_this__u8e3s4) {
		    return ShortSerializer_getInstance();
		  }
		  function ShortArraySerializer() {
		    return ShortArraySerializer_getInstance();
		  }
		  function serializer_9(_this__u8e3s4) {
		    return UShortSerializer_getInstance();
		  }
		  function UShortArraySerializer() {
		    return UShortArraySerializer_getInstance();
		  }
		  function serializer_10(_this__u8e3s4) {
		    return ByteSerializer_getInstance();
		  }
		  function ByteArraySerializer() {
		    return ByteArraySerializer_getInstance();
		  }
		  function serializer_11(_this__u8e3s4) {
		    return UByteSerializer_getInstance();
		  }
		  function UByteArraySerializer() {
		    return UByteArraySerializer_getInstance();
		  }
		  function serializer_12(_this__u8e3s4) {
		    return BooleanSerializer_getInstance();
		  }
		  function BooleanArraySerializer() {
		    return BooleanArraySerializer_getInstance();
		  }
		  function serializer_13(_this__u8e3s4) {
		    return UnitSerializer_getInstance();
		  }
		  function serializer_14(_this__u8e3s4) {
		    return DurationSerializer_getInstance();
		  }
		  function MapEntrySerializer(keySerializer, valueSerializer) {
		    return new MapEntrySerializer_0(keySerializer, valueSerializer);
		  }
		  function PairSerializer(keySerializer, valueSerializer) {
		    return new PairSerializer_0(keySerializer, valueSerializer);
		  }
		  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
		    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
		  }
		  function ArraySerializer(kClass, elementSerializer) {
		    return new ReferenceArraySerializer(kClass, elementSerializer);
		  }
		  function MapSerializer(keySerializer, valueSerializer) {
		    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
		  }
		  function ListSerializer(elementSerializer) {
		    return new ArrayListSerializer(elementSerializer);
		  }
		  function withContext(_this__u8e3s4, context) {
		    return new ContextDescriptor(_this__u8e3s4, context);
		  }
		  function ContextDescriptor(original, kClass) {
		    this.ih_1 = original;
		    this.jh_1 = kClass;
		    this.kh_1 = this.ih_1.vg() + '<' + this.jh_1.s8() + '>';
		  }
		  protoOf(ContextDescriptor).lh = function () {
		    return this.ih_1.lh();
		  };
		  protoOf(ContextDescriptor).mh = function () {
		    return this.ih_1.mh();
		  };
		  protoOf(ContextDescriptor).nh = function () {
		    return this.ih_1.nh();
		  };
		  protoOf(ContextDescriptor).hh = function () {
		    return this.ih_1.hh();
		  };
		  protoOf(ContextDescriptor).oh = function () {
		    return this.ih_1.oh();
		  };
		  protoOf(ContextDescriptor).ph = function (index) {
		    return this.ih_1.ph(index);
		  };
		  protoOf(ContextDescriptor).qh = function (index) {
		    return this.ih_1.qh(index);
		  };
		  protoOf(ContextDescriptor).rh = function (name) {
		    return this.ih_1.rh(name);
		  };
		  protoOf(ContextDescriptor).sh = function (index) {
		    return this.ih_1.sh(index);
		  };
		  protoOf(ContextDescriptor).th = function (index) {
		    return this.ih_1.th(index);
		  };
		  protoOf(ContextDescriptor).vg = function () {
		    return this.kh_1;
		  };
		  protoOf(ContextDescriptor).equals = function (other) {
		    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return false;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var another = tmp;
		    return equals(this.ih_1, another.ih_1) && another.jh_1.equals(this.jh_1);
		  };
		  protoOf(ContextDescriptor).hashCode = function () {
		    var result = this.jh_1.hashCode();
		    result = imul(31, result) + getStringHashCode(this.kh_1) | 0;
		    return result;
		  };
		  protoOf(ContextDescriptor).toString = function () {
		    return 'ContextDescriptor(kClass: ' + toString(this.jh_1) + ', original: ' + toString(this.ih_1) + ')';
		  };
		  function getContextualDescriptor(_this__u8e3s4, descriptor) {
		    var tmp0_safe_receiver = get_capturedKClass(descriptor);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.descriptors.getContextualDescriptor.<anonymous>' call
		      var tmp0_safe_receiver_0 = _this__u8e3s4.eh(tmp0_safe_receiver);
		      tmp = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.xf();
		    }
		    return tmp;
		  }
		  function get_capturedKClass(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 instanceof ContextDescriptor) {
		      tmp = _this__u8e3s4.jh_1;
		    } else {
		      if (_this__u8e3s4 instanceof SerialDescriptorForNullable) {
		        tmp = get_capturedKClass(_this__u8e3s4.uh_1);
		      } else {
		        tmp = null;
		      }
		    }
		    return tmp;
		  }
		  function SerialDescriptor() {
		  }
		  function get_elementDescriptors(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.Iterable' call
		    return new _no_name_provided__qut3iv_0(_this__u8e3s4);
		  }
		  function get_elementNames(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.Iterable' call
		    return new _no_name_provided__qut3iv_1(_this__u8e3s4);
		  }
		  function elementDescriptors$1$1($this_elementDescriptors) {
		    this.yh_1 = $this_elementDescriptors;
		    this.xh_1 = $this_elementDescriptors.mh();
		  }
		  protoOf(elementDescriptors$1$1).j = function () {
		    return this.xh_1 > 0;
		  };
		  protoOf(elementDescriptors$1$1).k = function () {
		    var tmp = this.yh_1.mh();
		    var tmp1 = this.xh_1;
		    this.xh_1 = tmp1 - 1 | 0;
		    return this.yh_1.qh(tmp - tmp1 | 0);
		  };
		  function _no_name_provided__qut3iv_0($this_elementDescriptors) {
		    this.zh_1 = $this_elementDescriptors;
		  }
		  protoOf(_no_name_provided__qut3iv_0).i = function () {
		    // Inline function 'kotlinx.serialization.descriptors.<get-elementDescriptors>.<anonymous>' call
		    return new elementDescriptors$1$1(this.zh_1);
		  };
		  function elementNames$1$1($this_elementNames) {
		    this.bi_1 = $this_elementNames;
		    this.ai_1 = $this_elementNames.mh();
		  }
		  protoOf(elementNames$1$1).j = function () {
		    return this.ai_1 > 0;
		  };
		  protoOf(elementNames$1$1).k = function () {
		    var tmp = this.bi_1.mh();
		    var tmp1 = this.ai_1;
		    this.ai_1 = tmp1 - 1 | 0;
		    return this.bi_1.sh(tmp - tmp1 | 0);
		  };
		  function _no_name_provided__qut3iv_1($this_elementNames) {
		    this.ci_1 = $this_elementNames;
		  }
		  protoOf(_no_name_provided__qut3iv_1).i = function () {
		    // Inline function 'kotlinx.serialization.descriptors.<get-elementNames>.<anonymous>' call
		    return new elementNames$1$1(this.ci_1);
		  };
		  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
		    var tmp;
		    if (builder === VOID) {
		      tmp = buildSerialDescriptor$lambda;
		    } else {
		      tmp = builder;
		    }
		    builder = tmp;
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.text.isNotBlank' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!isBlank(serialName)) {
		      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
		      var message = 'Blank serial names are prohibited';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!equals(kind, CLASS_getInstance())) {
		      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
		      var message_0 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
		      throw IllegalArgumentException_init_$Create$(toString(message_0));
		    }
		    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
		    builder(sdBuilder);
		    return new SerialDescriptorImpl(serialName, kind, sdBuilder.dg_1.l(), toList(typeParameters), sdBuilder);
		  }
		  function ClassSerialDescriptorBuilder(serialName) {
		    this.ag_1 = serialName;
		    this.bg_1 = false;
		    this.cg_1 = emptyList();
		    this.dg_1 = ArrayList_init_$Create$_0();
		    this.eg_1 = HashSet_init_$Create$();
		    this.fg_1 = ArrayList_init_$Create$_0();
		    this.gg_1 = ArrayList_init_$Create$_0();
		    this.hg_1 = ArrayList_init_$Create$_0();
		  }
		  protoOf(ClassSerialDescriptorBuilder).di = function (elementName, descriptor, annotations, isOptional) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!this.eg_1.d(elementName)) {
		      // Inline function 'kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder.element.<anonymous>' call
		      var message = "Element with name '" + elementName + "' is already registered";
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    // Inline function 'kotlin.collections.plusAssign' call
		    this.dg_1.d(elementName);
		    // Inline function 'kotlin.collections.plusAssign' call
		    this.fg_1.d(descriptor);
		    // Inline function 'kotlin.collections.plusAssign' call
		    this.gg_1.d(annotations);
		    // Inline function 'kotlin.collections.plusAssign' call
		    this.hg_1.d(isOptional);
		  };
		  protoOf(ClassSerialDescriptorBuilder).ig = function (elementName, descriptor, annotations, isOptional, $super) {
		    annotations = annotations === VOID ? emptyList() : annotations;
		    isOptional = isOptional === VOID ? false : isOptional;
		    var tmp;
		    if ($super === VOID) {
		      this.di(elementName, descriptor, annotations, isOptional);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.di.call(this, elementName, descriptor, annotations, isOptional);
		    }
		    return tmp;
		  };
		  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
		    var tmp;
		    if (builderAction === VOID) {
		      tmp = buildClassSerialDescriptor$lambda;
		    } else {
		      tmp = builderAction;
		    }
		    builderAction = tmp;
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.text.isNotBlank' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!isBlank(serialName)) {
		      // Inline function 'kotlinx.serialization.descriptors.buildClassSerialDescriptor.<anonymous>' call
		      var message = 'Blank serial names are prohibited';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
		    builderAction(sdBuilder);
		    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.dg_1.l(), toList(typeParameters), sdBuilder);
		  }
		  function _get__hashCode__tgwhef($this) {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = $this.pi_1;
		    _hashCode$factory();
		    return this_0.r1();
		  }
		  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
		    return function () {
		      return hashCodeImpl(this$0, this$0.oi_1);
		    };
		  }
		  function SerialDescriptorImpl$toString$lambda(this$0) {
		    return function (it) {
		      return this$0.sh(it) + ': ' + this$0.qh(it).vg();
		    };
		  }
		  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
		    this.ei_1 = serialName;
		    this.fi_1 = kind;
		    this.gi_1 = elementsCount;
		    this.hi_1 = builder.cg_1;
		    this.ii_1 = toHashSet(builder.dg_1);
		    var tmp = this;
		    // Inline function 'kotlin.collections.toTypedArray' call
		    var this_0 = builder.dg_1;
		    tmp.ji_1 = copyToArray(this_0);
		    this.ki_1 = compactArray(builder.fg_1);
		    var tmp_0 = this;
		    // Inline function 'kotlin.collections.toTypedArray' call
		    var this_1 = builder.gg_1;
		    tmp_0.li_1 = copyToArray(this_1);
		    this.mi_1 = toBooleanArray(builder.hg_1);
		    var tmp_1 = this;
		    // Inline function 'kotlin.collections.map' call
		    var this_2 = withIndex(this.ji_1);
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_2, 10));
		    var tmp0_iterator = this_2.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.name2Index.<anonymous>' call
		      var tmp$ret$2 = to(item.sb_1, item.rb_1);
		      destination.d(tmp$ret$2);
		    }
		    tmp_1.ni_1 = toMap(destination);
		    this.oi_1 = compactArray(typeParameters);
		    var tmp_2 = this;
		    tmp_2.pi_1 = lazy_0(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
		  }
		  protoOf(SerialDescriptorImpl).vg = function () {
		    return this.ei_1;
		  };
		  protoOf(SerialDescriptorImpl).oh = function () {
		    return this.fi_1;
		  };
		  protoOf(SerialDescriptorImpl).mh = function () {
		    return this.gi_1;
		  };
		  protoOf(SerialDescriptorImpl).lh = function () {
		    return this.hi_1;
		  };
		  protoOf(SerialDescriptorImpl).qi = function () {
		    return this.ii_1;
		  };
		  protoOf(SerialDescriptorImpl).sh = function (index) {
		    return getChecked(this.ji_1, index);
		  };
		  protoOf(SerialDescriptorImpl).rh = function (name) {
		    var tmp0_elvis_lhs = this.ni_1.u1(name);
		    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
		  };
		  protoOf(SerialDescriptorImpl).ph = function (index) {
		    return getChecked(this.li_1, index);
		  };
		  protoOf(SerialDescriptorImpl).qh = function (index) {
		    return getChecked(this.ki_1, index);
		  };
		  protoOf(SerialDescriptorImpl).th = function (index) {
		    return getChecked_0(this.mi_1, index);
		  };
		  protoOf(SerialDescriptorImpl).equals = function (other) {
		    var tmp$ret$0;
		    $l$block_5: {
		      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
		      if (this === other) {
		        tmp$ret$0 = true;
		        break $l$block_5;
		      }
		      if (!(other instanceof SerialDescriptorImpl)) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.vg() === other.vg())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.equals.<anonymous>' call
		      if (!contentEquals(this.oi_1, other.oi_1)) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.mh() === other.mh())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      var inductionVariable = 0;
		      var last = this.mh();
		      if (inductionVariable < last)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          if (!(this.qh(index).vg() === other.qh(index).vg())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		          if (!equals(this.qh(index).oh(), other.qh(index).oh())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		        }
		         while (inductionVariable < last);
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(SerialDescriptorImpl).hashCode = function () {
		    return _get__hashCode__tgwhef(this);
		  };
		  protoOf(SerialDescriptorImpl).toString = function () {
		    var tmp = until(0, this.gi_1);
		    var tmp_0 = this.ei_1 + '(';
		    return joinToString(tmp, ', ', tmp_0, ')', VOID, VOID, SerialDescriptorImpl$toString$lambda(this));
		  };
		  function PrimitiveSerialDescriptor(serialName, kind) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.text.isNotBlank' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!!isBlank(serialName)) {
		      // Inline function 'kotlinx.serialization.descriptors.PrimitiveSerialDescriptor.<anonymous>' call
		      var message = 'Blank serial names are prohibited';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return PrimitiveDescriptorSafe(serialName, kind);
		  }
		  function buildSerialDescriptor$lambda($this$null) {
		    return Unit_instance;
		  }
		  function buildClassSerialDescriptor$lambda($this$null) {
		    return Unit_instance;
		  }
		  function _hashCode$factory() {
		    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
		      return _get__hashCode__tgwhef(receiver);
		    }, null);
		  }
		  function ENUM() {
		    ENUM_instance = this;
		    SerialKind.call(this);
		  }
		  var ENUM_instance;
		  function ENUM_getInstance() {
		    if (ENUM_instance == null)
		      new ENUM();
		    return ENUM_instance;
		  }
		  function CONTEXTUAL() {
		    CONTEXTUAL_instance = this;
		    SerialKind.call(this);
		  }
		  var CONTEXTUAL_instance;
		  function CONTEXTUAL_getInstance() {
		    if (CONTEXTUAL_instance == null)
		      new CONTEXTUAL();
		    return CONTEXTUAL_instance;
		  }
		  function SerialKind() {
		  }
		  protoOf(SerialKind).toString = function () {
		    return ensureNotNull(getKClassFromExpression(this).s8());
		  };
		  protoOf(SerialKind).hashCode = function () {
		    return getStringHashCode(this.toString());
		  };
		  function BOOLEAN() {
		    BOOLEAN_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var BOOLEAN_instance;
		  function BOOLEAN_getInstance() {
		    if (BOOLEAN_instance == null)
		      new BOOLEAN();
		    return BOOLEAN_instance;
		  }
		  function BYTE() {
		    BYTE_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var BYTE_instance;
		  function BYTE_getInstance() {
		    if (BYTE_instance == null)
		      new BYTE();
		    return BYTE_instance;
		  }
		  function CHAR() {
		    CHAR_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var CHAR_instance;
		  function CHAR_getInstance() {
		    if (CHAR_instance == null)
		      new CHAR();
		    return CHAR_instance;
		  }
		  function SHORT() {
		    SHORT_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var SHORT_instance;
		  function SHORT_getInstance() {
		    if (SHORT_instance == null)
		      new SHORT();
		    return SHORT_instance;
		  }
		  function INT() {
		    INT_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var INT_instance;
		  function INT_getInstance() {
		    if (INT_instance == null)
		      new INT();
		    return INT_instance;
		  }
		  function LONG() {
		    LONG_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var LONG_instance;
		  function LONG_getInstance() {
		    if (LONG_instance == null)
		      new LONG();
		    return LONG_instance;
		  }
		  function FLOAT() {
		    FLOAT_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var FLOAT_instance;
		  function FLOAT_getInstance() {
		    if (FLOAT_instance == null)
		      new FLOAT();
		    return FLOAT_instance;
		  }
		  function DOUBLE() {
		    DOUBLE_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var DOUBLE_instance;
		  function DOUBLE_getInstance() {
		    if (DOUBLE_instance == null)
		      new DOUBLE();
		    return DOUBLE_instance;
		  }
		  function STRING() {
		    STRING_instance = this;
		    PrimitiveKind.call(this);
		  }
		  var STRING_instance;
		  function STRING_getInstance() {
		    if (STRING_instance == null)
		      new STRING();
		    return STRING_instance;
		  }
		  function PrimitiveKind() {
		    SerialKind.call(this);
		  }
		  function CLASS() {
		    CLASS_instance = this;
		    StructureKind.call(this);
		  }
		  var CLASS_instance;
		  function CLASS_getInstance() {
		    if (CLASS_instance == null)
		      new CLASS();
		    return CLASS_instance;
		  }
		  function LIST() {
		    LIST_instance = this;
		    StructureKind.call(this);
		  }
		  var LIST_instance;
		  function LIST_getInstance() {
		    if (LIST_instance == null)
		      new LIST();
		    return LIST_instance;
		  }
		  function MAP() {
		    MAP_instance = this;
		    StructureKind.call(this);
		  }
		  var MAP_instance;
		  function MAP_getInstance() {
		    if (MAP_instance == null)
		      new MAP();
		    return MAP_instance;
		  }
		  function OBJECT() {
		    OBJECT_instance = this;
		    StructureKind.call(this);
		  }
		  var OBJECT_instance;
		  function OBJECT_getInstance() {
		    if (OBJECT_instance == null)
		      new OBJECT();
		    return OBJECT_instance;
		  }
		  function StructureKind() {
		    SerialKind.call(this);
		  }
		  function SEALED() {
		    SEALED_instance = this;
		    PolymorphicKind.call(this);
		  }
		  var SEALED_instance;
		  function SEALED_getInstance() {
		    if (SEALED_instance == null)
		      new SEALED();
		    return SEALED_instance;
		  }
		  function OPEN() {
		    OPEN_instance = this;
		    PolymorphicKind.call(this);
		  }
		  var OPEN_instance;
		  function OPEN_getInstance() {
		    if (OPEN_instance == null)
		      new OPEN();
		    return OPEN_instance;
		  }
		  function PolymorphicKind() {
		    SerialKind.call(this);
		  }
		  function AbstractDecoder() {
		  }
		  protoOf(AbstractDecoder).ri = function () {
		    throw SerializationException_init_$Create$_0(toString(getKClassFromExpression(this)) + " can't retrieve untyped values");
		  };
		  protoOf(AbstractDecoder).si = function () {
		    return true;
		  };
		  protoOf(AbstractDecoder).ti = function () {
		    return null;
		  };
		  protoOf(AbstractDecoder).ui = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).vi = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).wi = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).xi = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).yi = function () {
		    var tmp = this.ri();
		    return tmp instanceof Long ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).zi = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).aj = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).bj = function () {
		    var tmp = this.ri();
		    return tmp instanceof Char ? tmp.b1_1 : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).cj = function () {
		    var tmp = this.ri();
		    return typeof tmp === 'string' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).dj = function (enumDescriptor) {
		    var tmp = this.ri();
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(AbstractDecoder).ej = function (descriptor) {
		    return this;
		  };
		  protoOf(AbstractDecoder).fj = function (deserializer, previousValue) {
		    return this.gj(deserializer);
		  };
		  protoOf(AbstractDecoder).hj = function (descriptor) {
		    return this;
		  };
		  protoOf(AbstractDecoder).ij = function (descriptor) {
		  };
		  protoOf(AbstractDecoder).jj = function (descriptor, index) {
		    return this.ui();
		  };
		  protoOf(AbstractDecoder).kj = function (descriptor, index) {
		    return this.vi();
		  };
		  protoOf(AbstractDecoder).lj = function (descriptor, index) {
		    return this.wi();
		  };
		  protoOf(AbstractDecoder).mj = function (descriptor, index) {
		    return this.xi();
		  };
		  protoOf(AbstractDecoder).nj = function (descriptor, index) {
		    return this.yi();
		  };
		  protoOf(AbstractDecoder).oj = function (descriptor, index) {
		    return this.zi();
		  };
		  protoOf(AbstractDecoder).pj = function (descriptor, index) {
		    return this.aj();
		  };
		  protoOf(AbstractDecoder).qj = function (descriptor, index) {
		    return this.bj();
		  };
		  protoOf(AbstractDecoder).rj = function (descriptor, index) {
		    return this.cj();
		  };
		  protoOf(AbstractDecoder).sj = function (descriptor, index) {
		    return this.ej(descriptor.qh(index));
		  };
		  protoOf(AbstractDecoder).tj = function (descriptor, index, deserializer, previousValue) {
		    return this.fj(deserializer, previousValue);
		  };
		  protoOf(AbstractDecoder).vj = function (descriptor, index, deserializer, previousValue) {
		    var isNullabilitySupported = deserializer.xf().hh();
		    return isNullabilitySupported || this.si() ? this.fj(deserializer, previousValue) : this.ti();
		  };
		  function AbstractEncoder() {
		  }
		  protoOf(AbstractEncoder).hj = function (descriptor) {
		    return this;
		  };
		  protoOf(AbstractEncoder).ij = function (descriptor) {
		  };
		  protoOf(AbstractEncoder).ak = function (descriptor, index) {
		    return true;
		  };
		  protoOf(AbstractEncoder).bk = function (value) {
		    throw SerializationException_init_$Create$_0('Non-serializable ' + toString(getKClassFromExpression(value)) + ' is not supported by ' + toString(getKClassFromExpression(this)) + ' encoder');
		  };
		  protoOf(AbstractEncoder).ck = function () {
		    throw SerializationException_init_$Create$_0("'null' is not supported by default");
		  };
		  protoOf(AbstractEncoder).dk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).ek = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).fk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).gk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).hk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).ik = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).jk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).kk = function (value) {
		    return this.bk(new Char(value));
		  };
		  protoOf(AbstractEncoder).lk = function (value) {
		    return this.bk(value);
		  };
		  protoOf(AbstractEncoder).mk = function (enumDescriptor, index) {
		    return this.bk(index);
		  };
		  protoOf(AbstractEncoder).nk = function (descriptor) {
		    return this;
		  };
		  protoOf(AbstractEncoder).ok = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.dk(value);
		    }
		  };
		  protoOf(AbstractEncoder).pk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.ek(value);
		    }
		  };
		  protoOf(AbstractEncoder).qk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.fk(value);
		    }
		  };
		  protoOf(AbstractEncoder).rk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.gk(value);
		    }
		  };
		  protoOf(AbstractEncoder).sk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.hk(value);
		    }
		  };
		  protoOf(AbstractEncoder).tk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.ik(value);
		    }
		  };
		  protoOf(AbstractEncoder).uk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.jk(value);
		    }
		  };
		  protoOf(AbstractEncoder).vk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.kk(value);
		    }
		  };
		  protoOf(AbstractEncoder).wk = function (descriptor, index, value) {
		    if (this.ak(descriptor, index)) {
		      this.lk(value);
		    }
		  };
		  protoOf(AbstractEncoder).xk = function (descriptor, index) {
		    return this.ak(descriptor, index) ? this.nk(descriptor.qh(index)) : NoOpEncoder_getInstance();
		  };
		  protoOf(AbstractEncoder).yk = function (descriptor, index, serializer, value) {
		    if (this.ak(descriptor, index)) {
		      this.zk(serializer, value);
		    }
		  };
		  protoOf(AbstractEncoder).al = function (descriptor, index, serializer, value) {
		    if (this.ak(descriptor, index)) {
		      this.bl(serializer, value);
		    }
		  };
		  function Decoder() {
		  }
		  function CompositeDecoder() {
		  }
		  function Encoder() {
		  }
		  function CompositeEncoder() {
		  }
		  function decodeSequentially_0($this, compositeDecoder) {
		    var klassName = compositeDecoder.rj($this.xf(), 0);
		    var serializer = findPolymorphicSerializer_0($this, compositeDecoder, klassName);
		    return compositeDecoder.uj($this.xf(), 1, serializer);
		  }
		  function AbstractPolymorphicSerializer() {
		  }
		  protoOf(AbstractPolymorphicSerializer).ng = function (encoder, value) {
		    var actualSerializer = findPolymorphicSerializer(this, encoder, value);
		    // Inline function 'kotlinx.serialization.encoding.encodeStructure' call
		    var descriptor = this.xf();
		    var composite = encoder.hj(descriptor);
		    // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.serialize.<anonymous>' call
		    composite.wk(this.xf(), 0, actualSerializer.xf().vg());
		    var tmp = this.xf();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var tmp$ret$0 = isInterface(actualSerializer, SerializationStrategy) ? actualSerializer : THROW_CCE();
		    composite.yk(tmp, 1, tmp$ret$0, value);
		    composite.ij(descriptor);
		  };
		  protoOf(AbstractPolymorphicSerializer).yf = function (encoder, value) {
		    return this.ng(encoder, !(value == null) ? value : THROW_CCE());
		  };
		  protoOf(AbstractPolymorphicSerializer).zf = function (decoder) {
		    // Inline function 'kotlinx.serialization.encoding.decodeStructure' call
		    var descriptor = this.xf();
		    var composite = decoder.hj(descriptor);
		    var tmp$ret$0;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>' call
		      var klassName = null;
		      var value = null;
		      if (composite.xj()) {
		        tmp$ret$0 = decodeSequentially_0(this, composite);
		        break $l$block;
		      }
		      mainLoop: while (true) {
		        var index = composite.yj(this.xf());
		        switch (index) {
		          case -1:
		            break mainLoop;
		          case 0:
		            klassName = composite.rj(this.xf(), index);
		            break;
		          case 1:
		            var tmp$ret$2;
		            $l$block_0: {
		              // Inline function 'kotlin.requireNotNull' call
		              var value_0 = klassName;
		              // Inline function 'kotlin.contracts.contract' call
		              if (value_0 == null) {
		                // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>.<anonymous>' call
		                var message = 'Cannot read polymorphic value before its type token';
		                throw IllegalArgumentException_init_$Create$(toString(message));
		              } else {
		                tmp$ret$2 = value_0;
		                break $l$block_0;
		              }
		            }

		            klassName = tmp$ret$2;
		            var serializer = findPolymorphicSerializer_0(this, composite, klassName);
		            value = composite.uj(this.xf(), index, serializer);
		            break;
		          default:
		            var tmp0_elvis_lhs = klassName;
		            throw SerializationException_init_$Create$_0('Invalid index in polymorphic deserialization of ' + (tmp0_elvis_lhs == null ? 'unknown class' : tmp0_elvis_lhs) + ('\n Expected 0, 1 or DECODE_DONE(-1), but found ' + index));
		        }
		      }
		      var tmp$ret$4;
		      $l$block_1: {
		        // Inline function 'kotlin.requireNotNull' call
		        var value_1 = value;
		        // Inline function 'kotlin.contracts.contract' call
		        if (value_1 == null) {
		          // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>.<anonymous>' call
		          var message_0 = 'Polymorphic value has not been read for class ' + klassName;
		          throw IllegalArgumentException_init_$Create$(toString(message_0));
		        } else {
		          tmp$ret$4 = value_1;
		          break $l$block_1;
		        }
		      }
		      var tmp = tmp$ret$4;
		      tmp$ret$0 = !(tmp == null) ? tmp : THROW_CCE();
		    }
		    var result = tmp$ret$0;
		    composite.ij(descriptor);
		    return result;
		  };
		  protoOf(AbstractPolymorphicSerializer).og = function (decoder, klassName) {
		    return decoder.wj().fl(this.mg(), klassName);
		  };
		  protoOf(AbstractPolymorphicSerializer).pg = function (encoder, value) {
		    return encoder.wj().gl(this.mg(), value);
		  };
		  function throwSubtypeNotRegistered(subClass, baseClass) {
		    var tmp0_elvis_lhs = subClass.s8();
		    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? toString(subClass) : tmp0_elvis_lhs, baseClass);
		  }
		  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
		    var scope = "in the scope of '" + baseClass.s8() + "'";
		    throw SerializationException_init_$Create$_0(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
		  }
		  function DurationSerializer() {
		    DurationSerializer_instance = this;
		    this.hl_1 = new PrimitiveSerialDescriptor_0('kotlin.time.Duration', STRING_getInstance());
		  }
		  protoOf(DurationSerializer).xf = function () {
		    return this.hl_1;
		  };
		  protoOf(DurationSerializer).il = function (encoder, value) {
		    encoder.lk(Duration__toIsoString_impl_9h6wsm(value));
		  };
		  protoOf(DurationSerializer).yf = function (encoder, value) {
		    return this.il(encoder, value instanceof Duration ? value.ld_1 : THROW_CCE());
		  };
		  protoOf(DurationSerializer).jl = function (decoder) {
		    return Companion_getInstance().kd(decoder.cj());
		  };
		  protoOf(DurationSerializer).zf = function (decoder) {
		    return new Duration(this.jl(decoder));
		  };
		  var DurationSerializer_instance;
		  function DurationSerializer_getInstance() {
		    if (DurationSerializer_instance == null)
		      new DurationSerializer();
		    return DurationSerializer_instance;
		  }
		  function CachedNames() {
		  }
		  function ArrayListClassDesc(elementDesc) {
		    ListLikeDescriptor.call(this, elementDesc);
		  }
		  protoOf(ArrayListClassDesc).vg = function () {
		    return 'kotlin.collections.ArrayList';
		  };
		  function HashSetClassDesc(elementDesc) {
		    ListLikeDescriptor.call(this, elementDesc);
		  }
		  protoOf(HashSetClassDesc).vg = function () {
		    return 'kotlin.collections.HashSet';
		  };
		  function LinkedHashSetClassDesc(elementDesc) {
		    ListLikeDescriptor.call(this, elementDesc);
		  }
		  protoOf(LinkedHashSetClassDesc).vg = function () {
		    return 'kotlin.collections.LinkedHashSet';
		  };
		  function HashMapClassDesc(keyDesc, valueDesc) {
		    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
		  }
		  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
		    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
		  }
		  function ArrayClassDesc(elementDesc) {
		    ListLikeDescriptor.call(this, elementDesc);
		  }
		  protoOf(ArrayClassDesc).vg = function () {
		    return 'kotlin.Array';
		  };
		  function ListLikeDescriptor(elementDescriptor) {
		    this.ml_1 = elementDescriptor;
		    this.nl_1 = 1;
		  }
		  protoOf(ListLikeDescriptor).oh = function () {
		    return LIST_getInstance();
		  };
		  protoOf(ListLikeDescriptor).mh = function () {
		    return this.nl_1;
		  };
		  protoOf(ListLikeDescriptor).sh = function (index) {
		    return index.toString();
		  };
		  protoOf(ListLikeDescriptor).rh = function (name) {
		    var tmp0_elvis_lhs = toIntOrNull(name);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(ListLikeDescriptor).th = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.isElementOptional.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return false;
		  };
		  protoOf(ListLikeDescriptor).ph = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementAnnotations.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return emptyList();
		  };
		  protoOf(ListLikeDescriptor).qh = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementDescriptor.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return this.ml_1;
		  };
		  protoOf(ListLikeDescriptor).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ListLikeDescriptor))
		      return false;
		    if (equals(this.ml_1, other.ml_1) && this.vg() === other.vg())
		      return true;
		    return false;
		  };
		  protoOf(ListLikeDescriptor).hashCode = function () {
		    return imul(hashCode(this.ml_1), 31) + getStringHashCode(this.vg()) | 0;
		  };
		  protoOf(ListLikeDescriptor).toString = function () {
		    return this.vg() + '(' + toString(this.ml_1) + ')';
		  };
		  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
		    this.sl_1 = serialName;
		    this.tl_1 = keyDescriptor;
		    this.ul_1 = valueDescriptor;
		    this.vl_1 = 2;
		  }
		  protoOf(MapLikeDescriptor).vg = function () {
		    return this.sl_1;
		  };
		  protoOf(MapLikeDescriptor).oh = function () {
		    return MAP_getInstance();
		  };
		  protoOf(MapLikeDescriptor).mh = function () {
		    return this.vl_1;
		  };
		  protoOf(MapLikeDescriptor).sh = function (index) {
		    return index.toString();
		  };
		  protoOf(MapLikeDescriptor).rh = function (name) {
		    var tmp0_elvis_lhs = toIntOrNull(name);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(MapLikeDescriptor).th = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.isElementOptional.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return false;
		  };
		  protoOf(MapLikeDescriptor).ph = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementAnnotations.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return emptyList();
		  };
		  protoOf(MapLikeDescriptor).qh = function (index) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(index >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementDescriptor.<anonymous>' call
		      var message = 'Illegal index ' + index + ', ' + this.vg() + ' expects only non-negative indices';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    var tmp;
		    switch (index % 2 | 0) {
		      case 0:
		        tmp = this.tl_1;
		        break;
		      case 1:
		        tmp = this.ul_1;
		        break;
		      default:
		        var message_0 = 'Unreached';
		        throw IllegalStateException_init_$Create$(toString(message_0));
		    }
		    return tmp;
		  };
		  protoOf(MapLikeDescriptor).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MapLikeDescriptor))
		      return false;
		    if (!(this.vg() === other.vg()))
		      return false;
		    if (!equals(this.tl_1, other.tl_1))
		      return false;
		    if (!equals(this.ul_1, other.ul_1))
		      return false;
		    return true;
		  };
		  protoOf(MapLikeDescriptor).hashCode = function () {
		    var result = getStringHashCode(this.vg());
		    result = imul(31, result) + hashCode(this.tl_1) | 0;
		    result = imul(31, result) + hashCode(this.ul_1) | 0;
		    return result;
		  };
		  protoOf(MapLikeDescriptor).toString = function () {
		    return this.vg() + '(' + toString(this.tl_1) + ', ' + toString(this.ul_1) + ')';
		  };
		  function PrimitiveArrayDescriptor(primitive) {
		    ListLikeDescriptor.call(this, primitive);
		    this.am_1 = primitive.vg() + 'Array';
		  }
		  protoOf(PrimitiveArrayDescriptor).vg = function () {
		    return this.am_1;
		  };
		  function ArrayListSerializer(element) {
		    CollectionSerializer.call(this, element);
		    this.cm_1 = new ArrayListClassDesc(element.xf());
		  }
		  protoOf(ArrayListSerializer).xf = function () {
		    return this.cm_1;
		  };
		  protoOf(ArrayListSerializer).dm = function () {
		    // Inline function 'kotlin.collections.arrayListOf' call
		    return ArrayList_init_$Create$_0();
		  };
		  protoOf(ArrayListSerializer).em = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(ArrayListSerializer).fm = function (_this__u8e3s4) {
		    return this.em(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ArrayListSerializer).gm = function (_this__u8e3s4) {
		    return _this__u8e3s4;
		  };
		  protoOf(ArrayListSerializer).hm = function (_this__u8e3s4) {
		    return this.gm(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ArrayListSerializer).im = function (_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
		    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
		  };
		  protoOf(ArrayListSerializer).jm = function (_this__u8e3s4) {
		    return this.im((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtList) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ArrayListSerializer).km = function (_this__u8e3s4, size) {
		    return _this__u8e3s4.s4(size);
		  };
		  protoOf(ArrayListSerializer).lm = function (_this__u8e3s4, size) {
		    return this.km(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  protoOf(ArrayListSerializer).mm = function (_this__u8e3s4, index, element) {
		    _this__u8e3s4.a4(index, element);
		  };
		  protoOf(ArrayListSerializer).nm = function (_this__u8e3s4, index, element) {
		    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
		    return this.mm(tmp, index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  function HashSetSerializer(eSerializer) {
		    CollectionSerializer.call(this, eSerializer);
		    this.ym_1 = new HashSetClassDesc(eSerializer.xf());
		  }
		  protoOf(HashSetSerializer).xf = function () {
		    return this.ym_1;
		  };
		  protoOf(HashSetSerializer).dm = function () {
		    return HashSet_init_$Create$();
		  };
		  protoOf(HashSetSerializer).zm = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(HashSetSerializer).fm = function (_this__u8e3s4) {
		    return this.zm(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashSetSerializer).an = function (_this__u8e3s4) {
		    return _this__u8e3s4;
		  };
		  protoOf(HashSetSerializer).hm = function (_this__u8e3s4) {
		    return this.an(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashSetSerializer).bn = function (_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
		    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
		  };
		  protoOf(HashSetSerializer).jm = function (_this__u8e3s4) {
		    return this.bn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtSet) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashSetSerializer).cn = function (_this__u8e3s4, size) {
		  };
		  protoOf(HashSetSerializer).lm = function (_this__u8e3s4, size) {
		    return this.cn(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  protoOf(HashSetSerializer).dn = function (_this__u8e3s4, index, element) {
		    _this__u8e3s4.d(element);
		  };
		  protoOf(HashSetSerializer).nm = function (_this__u8e3s4, index, element) {
		    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
		    return this.dn(tmp, index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  function LinkedHashSetSerializer(eSerializer) {
		    CollectionSerializer.call(this, eSerializer);
		    this.fn_1 = new LinkedHashSetClassDesc(eSerializer.xf());
		  }
		  protoOf(LinkedHashSetSerializer).xf = function () {
		    return this.fn_1;
		  };
		  protoOf(LinkedHashSetSerializer).dm = function () {
		    // Inline function 'kotlin.collections.linkedSetOf' call
		    return LinkedHashSet_init_$Create$();
		  };
		  protoOf(LinkedHashSetSerializer).gn = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(LinkedHashSetSerializer).fm = function (_this__u8e3s4) {
		    return this.gn(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashSetSerializer).hn = function (_this__u8e3s4) {
		    return _this__u8e3s4;
		  };
		  protoOf(LinkedHashSetSerializer).hm = function (_this__u8e3s4) {
		    return this.hn(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashSetSerializer).bn = function (_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
		    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
		  };
		  protoOf(LinkedHashSetSerializer).jm = function (_this__u8e3s4) {
		    return this.bn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtSet) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashSetSerializer).in = function (_this__u8e3s4, size) {
		  };
		  protoOf(LinkedHashSetSerializer).lm = function (_this__u8e3s4, size) {
		    return this.in(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  protoOf(LinkedHashSetSerializer).jn = function (_this__u8e3s4, index, element) {
		    _this__u8e3s4.d(element);
		  };
		  protoOf(LinkedHashSetSerializer).nm = function (_this__u8e3s4, index, element) {
		    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
		    return this.jn(tmp, index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  function HashMapSerializer(kSerializer, vSerializer) {
		    MapLikeSerializer.call(this, kSerializer, vSerializer);
		    this.mn_1 = new HashMapClassDesc(kSerializer.xf(), vSerializer.xf());
		  }
		  protoOf(HashMapSerializer).xf = function () {
		    return this.mn_1;
		  };
		  protoOf(HashMapSerializer).nn = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(HashMapSerializer).on = function (_this__u8e3s4) {
		    return this.nn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashMapSerializer).pn = function (_this__u8e3s4) {
		    // Inline function 'kotlin.collections.iterator' call
		    return _this__u8e3s4.x1().i();
		  };
		  protoOf(HashMapSerializer).qn = function (_this__u8e3s4) {
		    return this.pn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashMapSerializer).dm = function () {
		    return HashMap_init_$Create$();
		  };
		  protoOf(HashMapSerializer).rn = function (_this__u8e3s4) {
		    return imul(_this__u8e3s4.l(), 2);
		  };
		  protoOf(HashMapSerializer).fm = function (_this__u8e3s4) {
		    return this.rn(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashMapSerializer).sn = function (_this__u8e3s4) {
		    return _this__u8e3s4;
		  };
		  protoOf(HashMapSerializer).hm = function (_this__u8e3s4) {
		    return this.sn(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashMapSerializer).tn = function (_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
		    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
		  };
		  protoOf(HashMapSerializer).jm = function (_this__u8e3s4) {
		    return this.tn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(HashMapSerializer).un = function (_this__u8e3s4, size) {
		  };
		  protoOf(HashMapSerializer).lm = function (_this__u8e3s4, size) {
		    return this.un(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  function LinkedHashMapSerializer(kSerializer, vSerializer) {
		    MapLikeSerializer.call(this, kSerializer, vSerializer);
		    this.bo_1 = new LinkedHashMapClassDesc(kSerializer.xf(), vSerializer.xf());
		  }
		  protoOf(LinkedHashMapSerializer).xf = function () {
		    return this.bo_1;
		  };
		  protoOf(LinkedHashMapSerializer).nn = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(LinkedHashMapSerializer).on = function (_this__u8e3s4) {
		    return this.nn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashMapSerializer).pn = function (_this__u8e3s4) {
		    // Inline function 'kotlin.collections.iterator' call
		    return _this__u8e3s4.x1().i();
		  };
		  protoOf(LinkedHashMapSerializer).qn = function (_this__u8e3s4) {
		    return this.pn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashMapSerializer).dm = function () {
		    return LinkedHashMap_init_$Create$();
		  };
		  protoOf(LinkedHashMapSerializer).co = function (_this__u8e3s4) {
		    return imul(_this__u8e3s4.l(), 2);
		  };
		  protoOf(LinkedHashMapSerializer).fm = function (_this__u8e3s4) {
		    return this.co(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashMapSerializer).do = function (_this__u8e3s4) {
		    return _this__u8e3s4;
		  };
		  protoOf(LinkedHashMapSerializer).hm = function (_this__u8e3s4) {
		    return this.do(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashMapSerializer).tn = function (_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
		    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
		  };
		  protoOf(LinkedHashMapSerializer).jm = function (_this__u8e3s4) {
		    return this.tn((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LinkedHashMapSerializer).eo = function (_this__u8e3s4, size) {
		  };
		  protoOf(LinkedHashMapSerializer).lm = function (_this__u8e3s4, size) {
		    return this.eo(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  function ReferenceArraySerializer(kClass, eSerializer) {
		    CollectionLikeSerializer.call(this, eSerializer);
		    this.go_1 = kClass;
		    this.ho_1 = new ArrayClassDesc(eSerializer.xf());
		  }
		  protoOf(ReferenceArraySerializer).xf = function () {
		    return this.ho_1;
		  };
		  protoOf(ReferenceArraySerializer).io = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(ReferenceArraySerializer).on = function (_this__u8e3s4) {
		    return this.io((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ReferenceArraySerializer).jo = function (_this__u8e3s4) {
		    return arrayIterator(_this__u8e3s4);
		  };
		  protoOf(ReferenceArraySerializer).qn = function (_this__u8e3s4) {
		    return this.jo((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ReferenceArraySerializer).dm = function () {
		    // Inline function 'kotlin.collections.arrayListOf' call
		    return ArrayList_init_$Create$_0();
		  };
		  protoOf(ReferenceArraySerializer).ko = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(ReferenceArraySerializer).fm = function (_this__u8e3s4) {
		    return this.ko(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ReferenceArraySerializer).lo = function (_this__u8e3s4) {
		    return toNativeArrayImpl(_this__u8e3s4, this.go_1);
		  };
		  protoOf(ReferenceArraySerializer).hm = function (_this__u8e3s4) {
		    return this.lo(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ReferenceArraySerializer).mo = function (_this__u8e3s4) {
		    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
		  };
		  protoOf(ReferenceArraySerializer).jm = function (_this__u8e3s4) {
		    return this.mo((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ReferenceArraySerializer).no = function (_this__u8e3s4, size) {
		    return _this__u8e3s4.s4(size);
		  };
		  protoOf(ReferenceArraySerializer).lm = function (_this__u8e3s4, size) {
		    return this.no(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  protoOf(ReferenceArraySerializer).oo = function (_this__u8e3s4, index, element) {
		    _this__u8e3s4.a4(index, element);
		  };
		  protoOf(ReferenceArraySerializer).nm = function (_this__u8e3s4, index, element) {
		    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
		    return this.oo(tmp, index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  function CollectionSerializer(element) {
		    CollectionLikeSerializer.call(this, element);
		  }
		  protoOf(CollectionSerializer).pm = function (_this__u8e3s4) {
		    return _this__u8e3s4.l();
		  };
		  protoOf(CollectionSerializer).on = function (_this__u8e3s4) {
		    return this.pm((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Collection) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(CollectionSerializer).qm = function (_this__u8e3s4) {
		    return _this__u8e3s4.i();
		  };
		  protoOf(CollectionSerializer).qn = function (_this__u8e3s4) {
		    return this.qm((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Collection) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  function MapLikeSerializer(keySerializer, valueSerializer) {
		    AbstractCollectionSerializer.call(this);
		    this.vn_1 = keySerializer;
		    this.wn_1 = valueSerializer;
		  }
		  protoOf(MapLikeSerializer).xn = function (decoder, builder, startIndex, size) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(size >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readAll.<anonymous>' call
		      var message = 'Size must be known in advance when using READ_ALL';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    var progression = step(until(0, imul(size, 2)), 2);
		    var inductionVariable = progression.p_1;
		    var last = progression.q_1;
		    var step_0 = progression.r_1;
		    if (step_0 > 0 && inductionVariable <= last || (step_0 < 0 && last <= inductionVariable))
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + step_0 | 0;
		        this.yn(decoder, startIndex + index | 0, builder, false);
		      }
		       while (!(index === last));
		  };
		  protoOf(MapLikeSerializer).tm = function (decoder, builder, startIndex, size) {
		    return this.xn(decoder, (!(builder == null) ? isInterface(builder, KtMutableMap) : false) ? builder : THROW_CCE(), startIndex, size);
		  };
		  protoOf(MapLikeSerializer).yn = function (decoder, index, builder, checkIndex) {
		    var key = decoder.uj(this.xf(), index, this.vn_1);
		    var tmp;
		    if (checkIndex) {
		      // Inline function 'kotlin.also' call
		      var this_0 = decoder.yj(this.xf());
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>' call
		      // Inline function 'kotlin.require' call
		      // Inline function 'kotlin.contracts.contract' call
		      if (!(this_0 === (index + 1 | 0))) {
		        // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>.<anonymous>' call
		        var message = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + this_0;
		        throw IllegalArgumentException_init_$Create$(toString(message));
		      }
		      tmp = this_0;
		    } else {
		      tmp = index + 1 | 0;
		    }
		    var vIndex = tmp;
		    var tmp_0;
		    var tmp_1;
		    if (builder.s1(key)) {
		      var tmp_2 = this.wn_1.xf().oh();
		      tmp_1 = !(tmp_2 instanceof PrimitiveKind);
		    } else {
		      tmp_1 = false;
		    }
		    if (tmp_1) {
		      tmp_0 = decoder.tj(this.xf(), vIndex, this.wn_1, getValue(builder, key));
		    } else {
		      tmp_0 = decoder.uj(this.xf(), vIndex, this.wn_1);
		    }
		    var value = tmp_0;
		    // Inline function 'kotlin.collections.set' call
		    builder.b2(key, value);
		  };
		  protoOf(MapLikeSerializer).um = function (decoder, index, builder, checkIndex) {
		    return this.yn(decoder, index, (!(builder == null) ? isInterface(builder, KtMutableMap) : false) ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(MapLikeSerializer).sm = function (encoder, value) {
		    var size = this.on(value);
		    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
		    var descriptor = this.xf();
		    var composite = encoder.dl(descriptor, size);
		    // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>' call
		    var iterator = this.qn(value);
		    var index = 0;
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = iterator;
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var k = element.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var v = element.r1();
		      var tmp = this.xf();
		      var tmp0 = index;
		      index = tmp0 + 1 | 0;
		      composite.yk(tmp, tmp0, this.vn_1, k);
		      var tmp_0 = this.xf();
		      var tmp1 = index;
		      index = tmp1 + 1 | 0;
		      composite.yk(tmp_0, tmp1, this.wn_1, v);
		    }
		    composite.ij(descriptor);
		  };
		  protoOf(MapLikeSerializer).yf = function (encoder, value) {
		    return this.sm(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  function CollectionLikeSerializer(elementSerializer) {
		    AbstractCollectionSerializer.call(this);
		    this.rm_1 = elementSerializer;
		  }
		  protoOf(CollectionLikeSerializer).sm = function (encoder, value) {
		    var size = this.on(value);
		    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
		    var descriptor = this.xf();
		    var composite = encoder.dl(descriptor, size);
		    // Inline function 'kotlinx.serialization.internal.CollectionLikeSerializer.serialize.<anonymous>' call
		    var iterator = this.qn(value);
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        composite.yk(this.xf(), index, this.rm_1, iterator.k());
		      }
		       while (inductionVariable < size);
		    composite.ij(descriptor);
		  };
		  protoOf(CollectionLikeSerializer).yf = function (encoder, value) {
		    return this.sm(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  protoOf(CollectionLikeSerializer).tm = function (decoder, builder, startIndex, size) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(size >= 0)) {
		      // Inline function 'kotlinx.serialization.internal.CollectionLikeSerializer.readAll.<anonymous>' call
		      var message = 'Size must be known in advance when using READ_ALL';
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        this.um(decoder, startIndex + index | 0, builder, false);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(CollectionLikeSerializer).um = function (decoder, index, builder, checkIndex) {
		    this.nm(builder, index, decoder.uj(this.xf(), index, this.rm_1));
		  };
		  function readSize($this, decoder, builder) {
		    var size = decoder.zj($this.xf());
		    $this.lm(builder, size);
		    return size;
		  }
		  function AbstractCollectionSerializer() {
		  }
		  protoOf(AbstractCollectionSerializer).wm = function (decoder, previous) {
		    var tmp1_elvis_lhs = previous == null ? null : this.jm(previous);
		    var builder = tmp1_elvis_lhs == null ? this.dm() : tmp1_elvis_lhs;
		    var startIndex = this.fm(builder);
		    var compositeDecoder = decoder.hj(this.xf());
		    if (compositeDecoder.xj()) {
		      this.tm(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
		    } else {
		      $l$loop: while (true) {
		        var index = compositeDecoder.yj(this.xf());
		        if (index === -1)
		          break $l$loop;
		        this.vm(compositeDecoder, startIndex + index | 0, builder);
		      }
		    }
		    compositeDecoder.ij(this.xf());
		    return this.hm(builder);
		  };
		  protoOf(AbstractCollectionSerializer).zf = function (decoder) {
		    return this.wm(decoder, null);
		  };
		  protoOf(AbstractCollectionSerializer).vm = function (decoder, index, builder, checkIndex, $super) {
		    checkIndex = checkIndex === VOID ? true : checkIndex;
		    var tmp;
		    if ($super === VOID) {
		      this.um(decoder, index, builder, checkIndex);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.um.call(this, decoder, index, builder, checkIndex);
		    }
		    return tmp;
		  };
		  function PrimitiveArraySerializer(primitiveSerializer) {
		    CollectionLikeSerializer.call(this, primitiveSerializer);
		    this.qo_1 = new PrimitiveArrayDescriptor(primitiveSerializer.xf());
		  }
		  protoOf(PrimitiveArraySerializer).xf = function () {
		    return this.qo_1;
		  };
		  protoOf(PrimitiveArraySerializer).ro = function (_this__u8e3s4) {
		    return _this__u8e3s4.so();
		  };
		  protoOf(PrimitiveArraySerializer).fm = function (_this__u8e3s4) {
		    return this.ro(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).to = function (_this__u8e3s4) {
		    return _this__u8e3s4.uo();
		  };
		  protoOf(PrimitiveArraySerializer).hm = function (_this__u8e3s4) {
		    return this.to(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).vo = function (_this__u8e3s4, size) {
		    return _this__u8e3s4.wo(size);
		  };
		  protoOf(PrimitiveArraySerializer).lm = function (_this__u8e3s4, size) {
		    return this.vo(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : THROW_CCE(), size);
		  };
		  protoOf(PrimitiveArraySerializer).xo = function (_this__u8e3s4) {
		    var message = 'This method lead to boxing and must not be used, use writeContents instead';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  protoOf(PrimitiveArraySerializer).qn = function (_this__u8e3s4) {
		    return this.xo((_this__u8e3s4 == null ? true : !(_this__u8e3s4 == null)) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).yo = function (_this__u8e3s4, index, element) {
		    var message = 'This method lead to boxing and must not be used, use Builder.append instead';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  protoOf(PrimitiveArraySerializer).nm = function (_this__u8e3s4, index, element) {
		    var tmp = _this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : THROW_CCE();
		    return this.yo(tmp, index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).dm = function () {
		    return this.jm(this.zo());
		  };
		  protoOf(PrimitiveArraySerializer).cp = function (encoder, value) {
		    var size = this.on(value);
		    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
		    var descriptor = this.qo_1;
		    var composite = encoder.dl(descriptor, size);
		    // Inline function 'kotlinx.serialization.internal.PrimitiveArraySerializer.serialize.<anonymous>' call
		    this.bp(composite, value, size);
		    composite.ij(descriptor);
		  };
		  protoOf(PrimitiveArraySerializer).yf = function (encoder, value) {
		    return this.cp(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).sm = function (encoder, value) {
		    return this.cp(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  protoOf(PrimitiveArraySerializer).zf = function (decoder) {
		    return this.wm(decoder, null);
		  };
		  function PrimitiveArrayBuilder() {
		  }
		  protoOf(PrimitiveArrayBuilder).dp = function (requiredCapacity, $super) {
		    requiredCapacity = requiredCapacity === VOID ? this.so() + 1 | 0 : requiredCapacity;
		    var tmp;
		    if ($super === VOID) {
		      this.wo(requiredCapacity);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.wo.call(this, requiredCapacity);
		    }
		    return tmp;
		  };
		  function Companion() {
		    Companion_instance_0 = this;
		    this.ep_1 = longArray(0);
		  }
		  var Companion_instance_0;
		  function Companion_getInstance_6() {
		    if (Companion_instance_0 == null)
		      new Companion();
		    return Companion_instance_0;
		  }
		  function prepareHighMarksArray($this, elementsCount) {
		    var slotsCount = (elementsCount - 1 | 0) >>> 6 | 0;
		    var elementsInLastSlot = elementsCount & 63;
		    var highMarks = longArray(slotsCount);
		    if (!(elementsInLastSlot === 0)) {
		      highMarks[get_lastIndex(highMarks)] = (new Long(-1, -1)).t2(elementsCount);
		    }
		    return highMarks;
		  }
		  function markHigh($this, index) {
		    var slot = (index >>> 6 | 0) - 1 | 0;
		    var offsetInSlot = index & 63;
		    $this.ip_1[slot] = $this.ip_1[slot].x2((new Long(1, 0)).t2(offsetInSlot));
		  }
		  function nextUnmarkedHighIndex($this) {
		    var inductionVariable = 0;
		    var last = $this.ip_1.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var slot = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var slotOffset = imul(slot + 1 | 0, 64);
		        var slotMarks = $this.ip_1[slot];
		        while (!slotMarks.equals(new Long(-1, -1))) {
		          var indexInSlot = countTrailingZeroBits(slotMarks.s2());
		          slotMarks = slotMarks.x2((new Long(1, 0)).t2(indexInSlot));
		          var index = slotOffset + indexInSlot | 0;
		          if ($this.gp_1($this.fp_1, index)) {
		            $this.ip_1[slot] = slotMarks;
		            return index;
		          }
		        }
		        $this.ip_1[slot] = slotMarks;
		      }
		       while (inductionVariable <= last);
		    return -1;
		  }
		  function ElementMarker(descriptor, readIfAbsent) {
		    Companion_getInstance_6();
		    this.fp_1 = descriptor;
		    this.gp_1 = readIfAbsent;
		    var elementsCount = this.fp_1.mh();
		    if (elementsCount <= 64) {
		      var tmp = this;
		      var tmp_0;
		      if (elementsCount === 64) {
		        tmp_0 = new Long(0, 0);
		      } else {
		        tmp_0 = (new Long(-1, -1)).t2(elementsCount);
		      }
		      tmp.hp_1 = tmp_0;
		      this.ip_1 = Companion_getInstance_6().ep_1;
		    } else {
		      this.hp_1 = new Long(0, 0);
		      this.ip_1 = prepareHighMarksArray(this, elementsCount);
		    }
		  }
		  protoOf(ElementMarker).jp = function (index) {
		    if (index < 64) {
		      this.hp_1 = this.hp_1.x2((new Long(1, 0)).t2(index));
		    } else {
		      markHigh(this, index);
		    }
		  };
		  protoOf(ElementMarker).kp = function () {
		    var elementsCount = this.fp_1.mh();
		    while (!this.hp_1.equals(new Long(-1, -1))) {
		      var index = countTrailingZeroBits(this.hp_1.s2());
		      this.hp_1 = this.hp_1.x2((new Long(1, 0)).t2(index));
		      if (this.gp_1(this.fp_1, index)) {
		        return index;
		      }
		    }
		    if (elementsCount > 64) {
		      return nextUnmarkedHighIndex(this);
		    }
		    return -1;
		  };
		  function createUnmarkedDescriptor($this, serialName) {
		    var d = new EnumDescriptor(serialName, $this.lp_1.length);
		    // Inline function 'kotlin.collections.forEach' call
		    var indexedObject = $this.lp_1;
		    var inductionVariable = 0;
		    var last = indexedObject.length;
		    while (inductionVariable < last) {
		      var element = indexedObject[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      // Inline function 'kotlinx.serialization.internal.EnumSerializer.createUnmarkedDescriptor.<anonymous>' call
		      d.aq(element.d2_1);
		    }
		    return d;
		  }
		  function EnumSerializer$descriptor$delegate$lambda(this$0, $serialName) {
		    return function () {
		      var tmp0_elvis_lhs = this$0.mp_1;
		      return tmp0_elvis_lhs == null ? createUnmarkedDescriptor(this$0, $serialName) : tmp0_elvis_lhs;
		    };
		  }
		  function EnumSerializer(serialName, values) {
		    this.lp_1 = values;
		    this.mp_1 = null;
		    var tmp = this;
		    tmp.np_1 = lazy_0(EnumSerializer$descriptor$delegate$lambda(this, serialName));
		  }
		  protoOf(EnumSerializer).xf = function () {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = this.np_1;
		    descriptor$factory_1();
		    return this_0.r1();
		  };
		  protoOf(EnumSerializer).bq = function (encoder, value) {
		    var index = indexOf(this.lp_1, value);
		    if (index === -1) {
		      throw SerializationException_init_$Create$_0(toString(value) + ' is not a valid enum ' + this.xf().vg() + ', ' + ('must be one of ' + contentToString(this.lp_1)));
		    }
		    encoder.mk(this.xf(), index);
		  };
		  protoOf(EnumSerializer).yf = function (encoder, value) {
		    return this.bq(encoder, value instanceof Enum ? value : THROW_CCE());
		  };
		  protoOf(EnumSerializer).zf = function (decoder) {
		    var index = decoder.dj(this.xf());
		    if (!(0 <= index ? index <= (this.lp_1.length - 1 | 0) : false)) {
		      throw SerializationException_init_$Create$_0('' + index + ' is not among valid ' + this.xf().vg() + ' enum values, ' + ('values size is ' + this.lp_1.length));
		    }
		    return this.lp_1[index];
		  };
		  protoOf(EnumSerializer).toString = function () {
		    return 'kotlinx.serialization.internal.EnumSerializer<' + this.xf().vg() + '>';
		  };
		  function _get_elementDescriptors__y23q9p($this) {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = $this.pq_1;
		    elementDescriptors$factory();
		    return this_0.r1();
		  }
		  function EnumDescriptor$elementDescriptors$delegate$lambda($elementsCount, $name, this$0) {
		    return function () {
		      var tmp = 0;
		      var tmp_0 = $elementsCount;
		      // Inline function 'kotlin.arrayOfNulls' call
		      var tmp_1 = fillArrayVal(Array(tmp_0), null);
		      while (tmp < tmp_0) {
		        var tmp_2 = tmp;
		        tmp_1[tmp_2] = buildSerialDescriptor($name + '.' + this$0.sh(tmp_2), OBJECT_getInstance(), []);
		        tmp = tmp + 1 | 0;
		      }
		      return tmp_1;
		    };
		  }
		  function EnumDescriptor(name, elementsCount) {
		    PluginGeneratedSerialDescriptor.call(this, name, VOID, elementsCount);
		    this.oq_1 = ENUM_getInstance();
		    var tmp = this;
		    tmp.pq_1 = lazy_0(EnumDescriptor$elementDescriptors$delegate$lambda(elementsCount, name, this));
		  }
		  protoOf(EnumDescriptor).oh = function () {
		    return this.oq_1;
		  };
		  protoOf(EnumDescriptor).qh = function (index) {
		    return getChecked(_get_elementDescriptors__y23q9p(this), index);
		  };
		  protoOf(EnumDescriptor).equals = function (other) {
		    if (this === other)
		      return true;
		    if (other == null)
		      return false;
		    if (!(!(other == null) ? isInterface(other, SerialDescriptor) : false))
		      return false;
		    if (!(other.oh() === ENUM_getInstance()))
		      return false;
		    if (!(this.vg() === other.vg()))
		      return false;
		    if (!equals(cachedSerialNames(this), cachedSerialNames(other)))
		      return false;
		    return true;
		  };
		  protoOf(EnumDescriptor).toString = function () {
		    return joinToString(get_elementNames(this), ', ', this.vg() + '(', ')');
		  };
		  protoOf(EnumDescriptor).hashCode = function () {
		    var result = getStringHashCode(this.vg());
		    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
		    // Inline function 'kotlin.collections.fold' call
		    var accumulator = 1;
		    var tmp0_iterator = get_elementNames(this).i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
		      var hash = accumulator;
		      var tmp = imul(31, hash);
		      // Inline function 'kotlin.hashCode' call
		      // Inline function 'kotlinx.serialization.internal.EnumDescriptor.hashCode.<anonymous>' call
		      var tmp1_elvis_lhs = element == null ? null : hashCode(element);
		      accumulator = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
		    }
		    var elementsHashCode = accumulator;
		    result = imul(31, result) + elementsHashCode | 0;
		    return result;
		  };
		  function descriptor$factory_1() {
		    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
		      return receiver.xf();
		    }, null);
		  }
		  function elementDescriptors$factory() {
		    return getPropertyCallableRef('elementDescriptors', 1, KProperty1, function (receiver) {
		      return _get_elementDescriptors__y23q9p(receiver);
		    }, null);
		  }
		  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
		    return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
		  }
		  function InlineClassDescriptor(name, generatedSerializer) {
		    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
		    this.er_1 = true;
		  }
		  protoOf(InlineClassDescriptor).nh = function () {
		    return this.er_1;
		  };
		  protoOf(InlineClassDescriptor).hashCode = function () {
		    return imul(protoOf(PluginGeneratedSerialDescriptor).hashCode.call(this), 31);
		  };
		  protoOf(InlineClassDescriptor).equals = function (other) {
		    var tmp$ret$0;
		    $l$block_5: {
		      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
		      if (this === other) {
		        tmp$ret$0 = true;
		        break $l$block_5;
		      }
		      if (!(other instanceof InlineClassDescriptor)) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.vg() === other.vg())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      // Inline function 'kotlinx.serialization.internal.InlineClassDescriptor.equals.<anonymous>' call
		      if (!(other.er_1 && contentEquals(this.qq(), other.qq()))) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.mh() === other.mh())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      var inductionVariable = 0;
		      var last = this.mh();
		      if (inductionVariable < last)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          if (!(this.qh(index).vg() === other.qh(index).vg())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		          if (!equals(this.qh(index).oh(), other.qh(index).oh())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		        }
		         while (inductionVariable < last);
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  function InlinePrimitiveDescriptor$1($primitiveSerializer) {
		    this.fr_1 = $primitiveSerializer;
		  }
		  protoOf(InlinePrimitiveDescriptor$1).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [this.fr_1];
		  };
		  protoOf(InlinePrimitiveDescriptor$1).xf = function () {
		    var message = 'unsupported';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  protoOf(InlinePrimitiveDescriptor$1).yf = function (encoder, value) {
		    // Inline function 'kotlin.error' call
		    var message = 'unsupported';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  protoOf(InlinePrimitiveDescriptor$1).zf = function (decoder) {
		    // Inline function 'kotlin.error' call
		    var message = 'unsupported';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  function jsonCachedSerialNames(_this__u8e3s4) {
		    return cachedSerialNames(_this__u8e3s4);
		  }
		  function NoOpEncoder() {
		    NoOpEncoder_instance = this;
		    AbstractEncoder.call(this);
		    this.ir_1 = EmptySerializersModule_0();
		  }
		  protoOf(NoOpEncoder).wj = function () {
		    return this.ir_1;
		  };
		  protoOf(NoOpEncoder).bk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).ck = function () {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).dk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).ek = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).fk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).gk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).hk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).ik = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).jk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).kk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).lk = function (value) {
		    return Unit_instance;
		  };
		  protoOf(NoOpEncoder).mk = function (enumDescriptor, index) {
		    return Unit_instance;
		  };
		  var NoOpEncoder_instance;
		  function NoOpEncoder_getInstance() {
		    if (NoOpEncoder_instance == null)
		      new NoOpEncoder();
		    return NoOpEncoder_instance;
		  }
		  function NullableSerializer(serializer) {
		    this.jr_1 = serializer;
		    this.kr_1 = new SerialDescriptorForNullable(this.jr_1.xf());
		  }
		  protoOf(NullableSerializer).xf = function () {
		    return this.kr_1;
		  };
		  protoOf(NullableSerializer).lr = function (encoder, value) {
		    if (!(value == null)) {
		      encoder.cl();
		      encoder.zk(this.jr_1, value);
		    } else {
		      encoder.ck();
		    }
		  };
		  protoOf(NullableSerializer).yf = function (encoder, value) {
		    return this.lr(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  protoOf(NullableSerializer).zf = function (decoder) {
		    return decoder.si() ? decoder.gj(this.jr_1) : decoder.ti();
		  };
		  protoOf(NullableSerializer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (other == null || !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
		      return false;
		    if (!(other instanceof NullableSerializer))
		      THROW_CCE();
		    if (!equals(this.jr_1, other.jr_1))
		      return false;
		    return true;
		  };
		  protoOf(NullableSerializer).hashCode = function () {
		    return hashCode(this.jr_1);
		  };
		  function SerialDescriptorForNullable(original) {
		    this.uh_1 = original;
		    this.vh_1 = this.uh_1.vg() + '?';
		    this.wh_1 = cachedSerialNames(this.uh_1);
		  }
		  protoOf(SerialDescriptorForNullable).lh = function () {
		    return this.uh_1.lh();
		  };
		  protoOf(SerialDescriptorForNullable).mh = function () {
		    return this.uh_1.mh();
		  };
		  protoOf(SerialDescriptorForNullable).nh = function () {
		    return this.uh_1.nh();
		  };
		  protoOf(SerialDescriptorForNullable).oh = function () {
		    return this.uh_1.oh();
		  };
		  protoOf(SerialDescriptorForNullable).ph = function (index) {
		    return this.uh_1.ph(index);
		  };
		  protoOf(SerialDescriptorForNullable).qh = function (index) {
		    return this.uh_1.qh(index);
		  };
		  protoOf(SerialDescriptorForNullable).rh = function (name) {
		    return this.uh_1.rh(name);
		  };
		  protoOf(SerialDescriptorForNullable).sh = function (index) {
		    return this.uh_1.sh(index);
		  };
		  protoOf(SerialDescriptorForNullable).th = function (index) {
		    return this.uh_1.th(index);
		  };
		  protoOf(SerialDescriptorForNullable).vg = function () {
		    return this.vh_1;
		  };
		  protoOf(SerialDescriptorForNullable).qi = function () {
		    return this.wh_1;
		  };
		  protoOf(SerialDescriptorForNullable).hh = function () {
		    return true;
		  };
		  protoOf(SerialDescriptorForNullable).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SerialDescriptorForNullable))
		      return false;
		    if (!equals(this.uh_1, other.uh_1))
		      return false;
		    return true;
		  };
		  protoOf(SerialDescriptorForNullable).toString = function () {
		    return toString(this.uh_1) + '?';
		  };
		  protoOf(SerialDescriptorForNullable).hashCode = function () {
		    return imul(hashCode(this.uh_1), 31);
		  };
		  function ObjectSerializer_init_$Init$(serialName, objectInstance, classAnnotations, $this) {
		    ObjectSerializer.call($this, serialName, objectInstance);
		    $this.nr_1 = asList(classAnnotations);
		    return $this;
		  }
		  function ObjectSerializer_init_$Create$(serialName, objectInstance, classAnnotations) {
		    return ObjectSerializer_init_$Init$(serialName, objectInstance, classAnnotations, objectCreate(protoOf(ObjectSerializer)));
		  }
		  function ObjectSerializer$descriptor$delegate$lambda$lambda(this$0) {
		    return function ($this$buildSerialDescriptor) {
		      $this$buildSerialDescriptor.cg_1 = this$0.nr_1;
		      return Unit_instance;
		    };
		  }
		  function ObjectSerializer$descriptor$delegate$lambda($serialName, this$0) {
		    return function () {
		      var tmp = OBJECT_getInstance();
		      return buildSerialDescriptor($serialName, tmp, [], ObjectSerializer$descriptor$delegate$lambda$lambda(this$0));
		    };
		  }
		  function ObjectSerializer(serialName, objectInstance) {
		    this.mr_1 = objectInstance;
		    this.nr_1 = emptyList();
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.or_1 = lazy(tmp_0, ObjectSerializer$descriptor$delegate$lambda(serialName, this));
		  }
		  protoOf(ObjectSerializer).xf = function () {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = this.or_1;
		    descriptor$factory_2();
		    return this_0.r1();
		  };
		  protoOf(ObjectSerializer).ng = function (encoder, value) {
		    encoder.hj(this.xf()).ij(this.xf());
		  };
		  protoOf(ObjectSerializer).yf = function (encoder, value) {
		    return this.ng(encoder, !(value == null) ? value : THROW_CCE());
		  };
		  protoOf(ObjectSerializer).zf = function (decoder) {
		    // Inline function 'kotlinx.serialization.encoding.decodeStructure' call
		    var descriptor = this.xf();
		    var composite = decoder.hj(descriptor);
		    $l$block: {
		      // Inline function 'kotlinx.serialization.internal.ObjectSerializer.deserialize.<anonymous>' call
		      var index = composite.yj(this.xf());
		      if (index === -1) {
		        break $l$block;
		      } else
		        throw SerializationException_init_$Create$_0('Unexpected index ' + index);
		    }
		    composite.ij(descriptor);
		    return this.mr_1;
		  };
		  function descriptor$factory_2() {
		    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
		      return receiver.xf();
		    }, null);
		  }
		  function get_EMPTY_DESCRIPTOR_ARRAY() {
		    _init_properties_Platform_common_kt__3qzecs();
		    return EMPTY_DESCRIPTOR_ARRAY;
		  }
		  var EMPTY_DESCRIPTOR_ARRAY;
		  function cachedSerialNames(_this__u8e3s4) {
		    _init_properties_Platform_common_kt__3qzecs();
		    if (isInterface(_this__u8e3s4, CachedNames))
		      return _this__u8e3s4.qi();
		    var result = HashSet_init_$Create$_1(_this__u8e3s4.mh());
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.mh();
		    if (inductionVariable < last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.collections.plusAssign' call
		        var element = _this__u8e3s4.sh(i);
		        result.d(element);
		      }
		       while (inductionVariable < last);
		    return result;
		  }
		  function kclass(_this__u8e3s4) {
		    _init_properties_Platform_common_kt__3qzecs();
		    var t = _this__u8e3s4.e9();
		    var tmp;
		    if (!(t == null) ? isInterface(t, KClass) : false) {
		      tmp = t;
		    } else {
		      if (!(t == null) ? isInterface(t, KTypeParameter) : false) {
		        var message = 'Captured type paramerer ' + toString_0(t) + ' from generic non-reified function. ' + ('Such functionality cannot be supported as ' + toString_0(t) + ' is erased, either specify serializer explicitly or make ') + ('calling function inline with reified ' + toString_0(t));
		        throw IllegalStateException_init_$Create$(toString(message));
		      } else {
		        var message_0 = 'Only KClass supported as classifier, got ' + toString_0(t);
		        throw IllegalStateException_init_$Create$(toString(message_0));
		      }
		    }
		    var tmp_0 = tmp;
		    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
		  }
		  function compactArray(_this__u8e3s4) {
		    _init_properties_Platform_common_kt__3qzecs();
		    // Inline function 'kotlin.takeUnless' call
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    // Inline function 'kotlinx.serialization.internal.compactArray.<anonymous>' call
		    // Inline function 'kotlin.collections.isNullOrEmpty' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(_this__u8e3s4 == null || _this__u8e3s4.n())) {
		      tmp = _this__u8e3s4;
		    } else {
		      tmp = null;
		    }
		    var tmp0_safe_receiver = tmp;
		    var tmp_0;
		    if (tmp0_safe_receiver == null) {
		      tmp_0 = null;
		    } else {
		      // Inline function 'kotlin.collections.toTypedArray' call
		      tmp_0 = copyToArray(tmp0_safe_receiver);
		    }
		    var tmp1_elvis_lhs = tmp_0;
		    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
		  }
		  var properties_initialized_Platform_common_kt_i7q4ty;
		  function _init_properties_Platform_common_kt__3qzecs() {
		    if (!properties_initialized_Platform_common_kt_i7q4ty) {
		      properties_initialized_Platform_common_kt_i7q4ty = true;
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      EMPTY_DESCRIPTOR_ARRAY = [];
		    }
		  }
		  function throwMissingFieldException(seen, goldenMask, descriptor) {
		    // Inline function 'kotlin.collections.mutableListOf' call
		    var missingFields = ArrayList_init_$Create$_0();
		    var missingFieldsBits = goldenMask & ~seen;
		    var inductionVariable = 0;
		    if (inductionVariable < 32)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (!((missingFieldsBits & 1) === 0)) {
		          // Inline function 'kotlin.collections.plusAssign' call
		          var element = descriptor.sh(i);
		          missingFields.d(element);
		        }
		        missingFieldsBits = missingFieldsBits >>> 1 | 0;
		      }
		       while (inductionVariable < 32);
		    throw MissingFieldException_init_$Create$(missingFields, descriptor.vg());
		  }
		  function _get_childSerializers__7vnyfa($this) {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = $this.xp_1;
		    childSerializers$factory();
		    return this_0.r1();
		  }
		  function _get__hashCode__tgwhef_0($this) {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = $this.zp_1;
		    _hashCode$factory_0();
		    return this_0.r1();
		  }
		  function buildIndices($this) {
		    var indices = HashMap_init_$Create$();
		    var inductionVariable = 0;
		    var last = $this.sp_1.length - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.collections.set' call
		        var key = $this.sp_1[i];
		        indices.b2(key, i);
		      }
		       while (inductionVariable <= last);
		    return indices;
		  }
		  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
		    return function () {
		      var tmp0_safe_receiver = this$0.pp_1;
		      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.gr();
		      return tmp1_elvis_lhs == null ? get_EMPTY_SERIALIZER_ARRAY() : tmp1_elvis_lhs;
		    };
		  }
		  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
		    return function () {
		      var tmp0_safe_receiver = this$0.pp_1;
		      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hr();
		      var tmp;
		      if (tmp1_safe_receiver == null) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.collections.map' call
		        // Inline function 'kotlin.collections.mapTo' call
		        var destination = ArrayList_init_$Create$(tmp1_safe_receiver.length);
		        var inductionVariable = 0;
		        var last = tmp1_safe_receiver.length;
		        while (inductionVariable < last) {
		          var item = tmp1_safe_receiver[inductionVariable];
		          inductionVariable = inductionVariable + 1 | 0;
		          // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.typeParameterDescriptors$delegate.<anonymous>.<anonymous>' call
		          var tmp$ret$0 = item.xf();
		          destination.d(tmp$ret$0);
		        }
		        tmp = destination;
		      }
		      return compactArray(tmp);
		    };
		  }
		  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
		    return function () {
		      return hashCodeImpl(this$0, this$0.qq());
		    };
		  }
		  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
		    return function (i) {
		      return this$0.sh(i) + ': ' + this$0.qh(i).vg();
		    };
		  }
		  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
		    generatedSerializer = generatedSerializer === VOID ? null : generatedSerializer;
		    this.op_1 = serialName;
		    this.pp_1 = generatedSerializer;
		    this.qp_1 = elementsCount;
		    this.rp_1 = -1;
		    var tmp = this;
		    var tmp_0 = 0;
		    var tmp_1 = this.qp_1;
		    // Inline function 'kotlin.arrayOfNulls' call
		    var tmp_2 = fillArrayVal(Array(tmp_1), null);
		    while (tmp_0 < tmp_1) {
		      tmp_2[tmp_0] = '[UNINITIALIZED]';
		      tmp_0 = tmp_0 + 1 | 0;
		    }
		    tmp.sp_1 = tmp_2;
		    var tmp_3 = this;
		    // Inline function 'kotlin.arrayOfNulls' call
		    var size = this.qp_1;
		    tmp_3.tp_1 = fillArrayVal(Array(size), null);
		    this.up_1 = null;
		    this.vp_1 = booleanArray(this.qp_1);
		    this.wp_1 = emptyMap();
		    var tmp_4 = this;
		    var tmp_5 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp_4.xp_1 = lazy(tmp_5, PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
		    var tmp_6 = this;
		    var tmp_7 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp_6.yp_1 = lazy(tmp_7, PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
		    var tmp_8 = this;
		    var tmp_9 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp_8.zp_1 = lazy(tmp_9, PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
		  }
		  protoOf(PluginGeneratedSerialDescriptor).vg = function () {
		    return this.op_1;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).mh = function () {
		    return this.qp_1;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).oh = function () {
		    return CLASS_getInstance();
		  };
		  protoOf(PluginGeneratedSerialDescriptor).lh = function () {
		    var tmp0_elvis_lhs = this.up_1;
		    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).qi = function () {
		    return this.wp_1.v1();
		  };
		  protoOf(PluginGeneratedSerialDescriptor).qq = function () {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = this.yp_1;
		    typeParameterDescriptors$factory();
		    return this_0.r1();
		  };
		  protoOf(PluginGeneratedSerialDescriptor).rq = function (name, isOptional) {
		    this.rp_1 = this.rp_1 + 1 | 0;
		    this.sp_1[this.rp_1] = name;
		    this.vp_1[this.rp_1] = isOptional;
		    this.tp_1[this.rp_1] = null;
		    if (this.rp_1 === (this.qp_1 - 1 | 0)) {
		      this.wp_1 = buildIndices(this);
		    }
		  };
		  protoOf(PluginGeneratedSerialDescriptor).aq = function (name, isOptional, $super) {
		    isOptional = isOptional === VOID ? false : isOptional;
		    var tmp;
		    if ($super === VOID) {
		      this.rq(name, isOptional);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.rq.call(this, name, isOptional);
		    }
		    return tmp;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).qh = function (index) {
		    return getChecked(_get_childSerializers__7vnyfa(this), index).xf();
		  };
		  protoOf(PluginGeneratedSerialDescriptor).th = function (index) {
		    return getChecked_0(this.vp_1, index);
		  };
		  protoOf(PluginGeneratedSerialDescriptor).ph = function (index) {
		    var tmp0_elvis_lhs = getChecked(this.tp_1, index);
		    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).sh = function (index) {
		    return getChecked(this.sp_1, index);
		  };
		  protoOf(PluginGeneratedSerialDescriptor).rh = function (name) {
		    var tmp0_elvis_lhs = this.wp_1.u1(name);
		    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).equals = function (other) {
		    var tmp$ret$0;
		    $l$block_5: {
		      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
		      if (this === other) {
		        tmp$ret$0 = true;
		        break $l$block_5;
		      }
		      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.vg() === other.vg())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.equals.<anonymous>' call
		      if (!contentEquals(this.qq(), other.qq())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      if (!(this.mh() === other.mh())) {
		        tmp$ret$0 = false;
		        break $l$block_5;
		      }
		      var inductionVariable = 0;
		      var last = this.mh();
		      if (inductionVariable < last)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          if (!(this.qh(index).vg() === other.qh(index).vg())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		          if (!equals(this.qh(index).oh(), other.qh(index).oh())) {
		            tmp$ret$0 = false;
		            break $l$block_5;
		          }
		        }
		         while (inductionVariable < last);
		      tmp$ret$0 = true;
		    }
		    return tmp$ret$0;
		  };
		  protoOf(PluginGeneratedSerialDescriptor).hashCode = function () {
		    return _get__hashCode__tgwhef_0(this);
		  };
		  protoOf(PluginGeneratedSerialDescriptor).toString = function () {
		    var tmp = until(0, this.qp_1);
		    var tmp_0 = this.vg() + '(';
		    return joinToString(tmp, ', ', tmp_0, ')', VOID, VOID, PluginGeneratedSerialDescriptor$toString$lambda(this));
		  };
		  function hashCodeImpl(_this__u8e3s4, typeParams) {
		    var result = getStringHashCode(_this__u8e3s4.vg());
		    result = imul(31, result) + contentHashCode(typeParams) | 0;
		    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
		    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
		    // Inline function 'kotlin.collections.fold' call
		    var accumulator = 1;
		    var tmp0_iterator = elementDescriptors.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
		      var hash = accumulator;
		      var tmp = imul(31, hash);
		      // Inline function 'kotlin.hashCode' call
		      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
		      var tmp0_safe_receiver = element.vg();
		      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
		      accumulator = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
		    }
		    var namesHash = accumulator;
		    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
		    // Inline function 'kotlin.collections.fold' call
		    var accumulator_0 = 1;
		    var tmp0_iterator_0 = elementDescriptors.i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
		      var hash_0 = accumulator_0;
		      var tmp_0 = imul(31, hash_0);
		      // Inline function 'kotlin.hashCode' call
		      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
		      var tmp0_safe_receiver_0 = element_0.oh();
		      var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
		      accumulator_0 = tmp_0 + (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0) | 0;
		    }
		    var kindHash = accumulator_0;
		    result = imul(31, result) + namesHash | 0;
		    result = imul(31, result) + kindHash | 0;
		    return result;
		  }
		  function childSerializers$factory() {
		    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
		      return _get_childSerializers__7vnyfa(receiver);
		    }, null);
		  }
		  function typeParameterDescriptors$factory() {
		    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
		      return receiver.qq();
		    }, null);
		  }
		  function _hashCode$factory_0() {
		    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
		      return _get__hashCode__tgwhef_0(receiver);
		    }, null);
		  }
		  function get_EMPTY_SERIALIZER_ARRAY() {
		    _init_properties_PluginHelperInterfaces_kt__xgvzfp();
		    return EMPTY_SERIALIZER_ARRAY;
		  }
		  var EMPTY_SERIALIZER_ARRAY;
		  function SerializerFactory() {
		  }
		  function GeneratedSerializer() {
		  }
		  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
		  function _init_properties_PluginHelperInterfaces_kt__xgvzfp() {
		    if (!properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
		      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      EMPTY_SERIALIZER_ARRAY = [];
		    }
		  }
		  function CharArraySerializer_0() {
		    CharArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_1(Companion_getInstance_0()));
		  }
		  protoOf(CharArraySerializer_0).sr = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(CharArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.sr((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(CharArraySerializer_0).tr = function (_this__u8e3s4) {
		    return new CharArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(CharArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.tr((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(CharArraySerializer_0).zo = function () {
		    return charArray(0);
		  };
		  protoOf(CharArraySerializer_0).ur = function (decoder, index, builder, checkIndex) {
		    builder.xr(decoder.qj(this.qo_1, index));
		  };
		  protoOf(CharArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ur(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(CharArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ur(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(CharArraySerializer_0).yr = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.vk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(CharArraySerializer_0).bp = function (encoder, content, size) {
		    return this.yr(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var CharArraySerializer_instance;
		  function CharArraySerializer_getInstance() {
		    if (CharArraySerializer_instance == null)
		      new CharArraySerializer_0();
		    return CharArraySerializer_instance;
		  }
		  function DoubleArraySerializer_0() {
		    DoubleArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_2());
		  }
		  protoOf(DoubleArraySerializer_0).bs = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(DoubleArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.bs((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(DoubleArraySerializer_0).cs = function (_this__u8e3s4) {
		    return new DoubleArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(DoubleArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.cs((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(DoubleArraySerializer_0).zo = function () {
		    return new Float64Array(0);
		  };
		  protoOf(DoubleArraySerializer_0).ds = function (decoder, index, builder, checkIndex) {
		    builder.gs(decoder.pj(this.qo_1, index));
		  };
		  protoOf(DoubleArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ds(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(DoubleArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ds(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(DoubleArraySerializer_0).hs = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.uk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(DoubleArraySerializer_0).bp = function (encoder, content, size) {
		    return this.hs(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var DoubleArraySerializer_instance;
		  function DoubleArraySerializer_getInstance() {
		    if (DoubleArraySerializer_instance == null)
		      new DoubleArraySerializer_0();
		    return DoubleArraySerializer_instance;
		  }
		  function FloatArraySerializer_0() {
		    FloatArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_3());
		  }
		  protoOf(FloatArraySerializer_0).ks = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(FloatArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.ks((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(FloatArraySerializer_0).ls = function (_this__u8e3s4) {
		    return new FloatArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(FloatArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.ls((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(FloatArraySerializer_0).zo = function () {
		    return new Float32Array(0);
		  };
		  protoOf(FloatArraySerializer_0).ms = function (decoder, index, builder, checkIndex) {
		    builder.ps(decoder.oj(this.qo_1, index));
		  };
		  protoOf(FloatArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ms(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(FloatArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ms(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(FloatArraySerializer_0).qs = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.tk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(FloatArraySerializer_0).bp = function (encoder, content, size) {
		    return this.qs(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var FloatArraySerializer_instance;
		  function FloatArraySerializer_getInstance() {
		    if (FloatArraySerializer_instance == null)
		      new FloatArraySerializer_0();
		    return FloatArraySerializer_instance;
		  }
		  function LongArraySerializer_0() {
		    LongArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_4(Companion_getInstance_1()));
		  }
		  protoOf(LongArraySerializer_0).ts = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(LongArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.ts((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LongArraySerializer_0).us = function (_this__u8e3s4) {
		    return new LongArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(LongArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.us((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(LongArraySerializer_0).zo = function () {
		    return longArray(0);
		  };
		  protoOf(LongArraySerializer_0).vs = function (decoder, index, builder, checkIndex) {
		    builder.ys(decoder.nj(this.qo_1, index));
		  };
		  protoOf(LongArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.vs(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(LongArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.vs(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(LongArraySerializer_0).zs = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.sk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(LongArraySerializer_0).bp = function (encoder, content, size) {
		    return this.zs(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var LongArraySerializer_instance;
		  function LongArraySerializer_getInstance() {
		    if (LongArraySerializer_instance == null)
		      new LongArraySerializer_0();
		    return LongArraySerializer_instance;
		  }
		  function ULongArraySerializer_0() {
		    ULongArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_5(Companion_getInstance_2()));
		  }
		  protoOf(ULongArraySerializer_0).ct = function (_this__u8e3s4) {
		    return _ULongArray___get_size__impl__ju6dtr(_this__u8e3s4);
		  };
		  protoOf(ULongArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.ct(_this__u8e3s4 instanceof ULongArray ? _this__u8e3s4.jf_1 : THROW_CCE());
		  };
		  protoOf(ULongArraySerializer_0).dt = function (_this__u8e3s4) {
		    return new ULongArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(ULongArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.dt(_this__u8e3s4 instanceof ULongArray ? _this__u8e3s4.jf_1 : THROW_CCE());
		  };
		  protoOf(ULongArraySerializer_0).et = function () {
		    return _ULongArray___init__impl__twm1l3(0);
		  };
		  protoOf(ULongArraySerializer_0).zo = function () {
		    return new ULongArray(this.et());
		  };
		  protoOf(ULongArraySerializer_0).ft = function (decoder, index, builder, checkIndex) {
		    // Inline function 'kotlin.toULong' call
		    var this_0 = decoder.sj(this.qo_1, index).yi();
		    var tmp$ret$0 = _ULong___init__impl__c78o9k(this_0);
		    builder.it(tmp$ret$0);
		  };
		  protoOf(ULongArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ft(decoder, index, builder instanceof ULongArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ULongArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ft(decoder, index, builder instanceof ULongArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ULongArraySerializer_0).jt = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var tmp = encoder.xk(this.qo_1, i);
		        // Inline function 'kotlin.ULong.toLong' call
		        var this_0 = ULongArray__get_impl_pr71q9(content, i);
		        var tmp$ret$0 = _ULong___get_data__impl__fggpzb(this_0);
		        tmp.hk(tmp$ret$0);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(ULongArraySerializer_0).bp = function (encoder, content, size) {
		    return this.jt(encoder, content instanceof ULongArray ? content.jf_1 : THROW_CCE(), size);
		  };
		  var ULongArraySerializer_instance;
		  function ULongArraySerializer_getInstance() {
		    if (ULongArraySerializer_instance == null)
		      new ULongArraySerializer_0();
		    return ULongArraySerializer_instance;
		  }
		  function IntArraySerializer_0() {
		    IntArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_6());
		  }
		  protoOf(IntArraySerializer_0).mt = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(IntArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.mt((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(IntArraySerializer_0).nt = function (_this__u8e3s4) {
		    return new IntArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(IntArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.nt((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(IntArraySerializer_0).zo = function () {
		    return new Int32Array(0);
		  };
		  protoOf(IntArraySerializer_0).ot = function (decoder, index, builder, checkIndex) {
		    builder.rt(decoder.mj(this.qo_1, index));
		  };
		  protoOf(IntArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ot(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(IntArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ot(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(IntArraySerializer_0).st = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.rk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(IntArraySerializer_0).bp = function (encoder, content, size) {
		    return this.st(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var IntArraySerializer_instance;
		  function IntArraySerializer_getInstance() {
		    if (IntArraySerializer_instance == null)
		      new IntArraySerializer_0();
		    return IntArraySerializer_instance;
		  }
		  function UIntArraySerializer_0() {
		    UIntArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_7(Companion_getInstance_3()));
		  }
		  protoOf(UIntArraySerializer_0).vt = function (_this__u8e3s4) {
		    return _UIntArray___get_size__impl__r6l8ci(_this__u8e3s4);
		  };
		  protoOf(UIntArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.vt(_this__u8e3s4 instanceof UIntArray ? _this__u8e3s4.ye_1 : THROW_CCE());
		  };
		  protoOf(UIntArraySerializer_0).wt = function (_this__u8e3s4) {
		    return new UIntArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(UIntArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.wt(_this__u8e3s4 instanceof UIntArray ? _this__u8e3s4.ye_1 : THROW_CCE());
		  };
		  protoOf(UIntArraySerializer_0).xt = function () {
		    return _UIntArray___init__impl__ghjpc6(0);
		  };
		  protoOf(UIntArraySerializer_0).zo = function () {
		    return new UIntArray(this.xt());
		  };
		  protoOf(UIntArraySerializer_0).yt = function (decoder, index, builder, checkIndex) {
		    // Inline function 'kotlin.toUInt' call
		    var this_0 = decoder.sj(this.qo_1, index).xi();
		    var tmp$ret$0 = _UInt___init__impl__l7qpdl(this_0);
		    builder.bu(tmp$ret$0);
		  };
		  protoOf(UIntArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.yt(decoder, index, builder instanceof UIntArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UIntArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.yt(decoder, index, builder instanceof UIntArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UIntArraySerializer_0).cu = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var tmp = encoder.xk(this.qo_1, i);
		        // Inline function 'kotlin.UInt.toInt' call
		        var this_0 = UIntArray__get_impl_gp5kza(content, i);
		        var tmp$ret$0 = _UInt___get_data__impl__f0vqqw(this_0);
		        tmp.gk(tmp$ret$0);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(UIntArraySerializer_0).bp = function (encoder, content, size) {
		    return this.cu(encoder, content instanceof UIntArray ? content.ye_1 : THROW_CCE(), size);
		  };
		  var UIntArraySerializer_instance;
		  function UIntArraySerializer_getInstance() {
		    if (UIntArraySerializer_instance == null)
		      new UIntArraySerializer_0();
		    return UIntArraySerializer_instance;
		  }
		  function ShortArraySerializer_0() {
		    ShortArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_8());
		  }
		  protoOf(ShortArraySerializer_0).fu = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(ShortArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.fu((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ShortArraySerializer_0).gu = function (_this__u8e3s4) {
		    return new ShortArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(ShortArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.gu((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ShortArraySerializer_0).zo = function () {
		    return new Int16Array(0);
		  };
		  protoOf(ShortArraySerializer_0).hu = function (decoder, index, builder, checkIndex) {
		    builder.ku(decoder.lj(this.qo_1, index));
		  };
		  protoOf(ShortArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.hu(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ShortArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.hu(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ShortArraySerializer_0).lu = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.qk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(ShortArraySerializer_0).bp = function (encoder, content, size) {
		    return this.lu(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var ShortArraySerializer_instance;
		  function ShortArraySerializer_getInstance() {
		    if (ShortArraySerializer_instance == null)
		      new ShortArraySerializer_0();
		    return ShortArraySerializer_instance;
		  }
		  function UShortArraySerializer_0() {
		    UShortArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_9(Companion_getInstance_4()));
		  }
		  protoOf(UShortArraySerializer_0).ou = function (_this__u8e3s4) {
		    return _UShortArray___get_size__impl__jqto1b(_this__u8e3s4);
		  };
		  protoOf(UShortArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.ou(_this__u8e3s4 instanceof UShortArray ? _this__u8e3s4.uf_1 : THROW_CCE());
		  };
		  protoOf(UShortArraySerializer_0).pu = function (_this__u8e3s4) {
		    return new UShortArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(UShortArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.pu(_this__u8e3s4 instanceof UShortArray ? _this__u8e3s4.uf_1 : THROW_CCE());
		  };
		  protoOf(UShortArraySerializer_0).qu = function () {
		    return _UShortArray___init__impl__9b26ef(0);
		  };
		  protoOf(UShortArraySerializer_0).zo = function () {
		    return new UShortArray(this.qu());
		  };
		  protoOf(UShortArraySerializer_0).ru = function (decoder, index, builder, checkIndex) {
		    // Inline function 'kotlin.toUShort' call
		    var this_0 = decoder.sj(this.qo_1, index).wi();
		    var tmp$ret$0 = _UShort___init__impl__jigrne(this_0);
		    builder.uu(tmp$ret$0);
		  };
		  protoOf(UShortArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.ru(decoder, index, builder instanceof UShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UShortArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.ru(decoder, index, builder instanceof UShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UShortArraySerializer_0).vu = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var tmp = encoder.xk(this.qo_1, i);
		        // Inline function 'kotlin.UShort.toShort' call
		        var this_0 = UShortArray__get_impl_fnbhmx(content, i);
		        var tmp$ret$0 = _UShort___get_data__impl__g0245(this_0);
		        tmp.fk(tmp$ret$0);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(UShortArraySerializer_0).bp = function (encoder, content, size) {
		    return this.vu(encoder, content instanceof UShortArray ? content.uf_1 : THROW_CCE(), size);
		  };
		  var UShortArraySerializer_instance;
		  function UShortArraySerializer_getInstance() {
		    if (UShortArraySerializer_instance == null)
		      new UShortArraySerializer_0();
		    return UShortArraySerializer_instance;
		  }
		  function ByteArraySerializer_0() {
		    ByteArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_10());
		  }
		  protoOf(ByteArraySerializer_0).yu = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(ByteArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.yu((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ByteArraySerializer_0).zu = function (_this__u8e3s4) {
		    return new ByteArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(ByteArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.zu((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(ByteArraySerializer_0).zo = function () {
		    return new Int8Array(0);
		  };
		  protoOf(ByteArraySerializer_0).av = function (decoder, index, builder, checkIndex) {
		    builder.dv(decoder.kj(this.qo_1, index));
		  };
		  protoOf(ByteArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.av(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ByteArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.av(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(ByteArraySerializer_0).ev = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.pk(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(ByteArraySerializer_0).bp = function (encoder, content, size) {
		    return this.ev(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var ByteArraySerializer_instance;
		  function ByteArraySerializer_getInstance() {
		    if (ByteArraySerializer_instance == null)
		      new ByteArraySerializer_0();
		    return ByteArraySerializer_instance;
		  }
		  function UByteArraySerializer_0() {
		    UByteArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_11(Companion_getInstance_5()));
		  }
		  protoOf(UByteArraySerializer_0).hv = function (_this__u8e3s4) {
		    return _UByteArray___get_size__impl__h6pkdv(_this__u8e3s4);
		  };
		  protoOf(UByteArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.hv(_this__u8e3s4 instanceof UByteArray ? _this__u8e3s4.ne_1 : THROW_CCE());
		  };
		  protoOf(UByteArraySerializer_0).iv = function (_this__u8e3s4) {
		    return new UByteArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(UByteArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.iv(_this__u8e3s4 instanceof UByteArray ? _this__u8e3s4.ne_1 : THROW_CCE());
		  };
		  protoOf(UByteArraySerializer_0).jv = function () {
		    return _UByteArray___init__impl__ip4y9n(0);
		  };
		  protoOf(UByteArraySerializer_0).zo = function () {
		    return new UByteArray(this.jv());
		  };
		  protoOf(UByteArraySerializer_0).kv = function (decoder, index, builder, checkIndex) {
		    // Inline function 'kotlin.toUByte' call
		    var this_0 = decoder.sj(this.qo_1, index).vi();
		    var tmp$ret$0 = _UByte___init__impl__g9hnc4(this_0);
		    builder.nv(tmp$ret$0);
		  };
		  protoOf(UByteArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.kv(decoder, index, builder instanceof UByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UByteArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.kv(decoder, index, builder instanceof UByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(UByteArraySerializer_0).ov = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var tmp = encoder.xk(this.qo_1, i);
		        // Inline function 'kotlin.UByte.toByte' call
		        var this_0 = UByteArray__get_impl_t5f3hv(content, i);
		        var tmp$ret$0 = _UByte___get_data__impl__jof9qr(this_0);
		        tmp.ek(tmp$ret$0);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(UByteArraySerializer_0).bp = function (encoder, content, size) {
		    return this.ov(encoder, content instanceof UByteArray ? content.ne_1 : THROW_CCE(), size);
		  };
		  var UByteArraySerializer_instance;
		  function UByteArraySerializer_getInstance() {
		    if (UByteArraySerializer_instance == null)
		      new UByteArraySerializer_0();
		    return UByteArraySerializer_instance;
		  }
		  function BooleanArraySerializer_0() {
		    BooleanArraySerializer_instance = this;
		    PrimitiveArraySerializer.call(this, serializer_12());
		  }
		  protoOf(BooleanArraySerializer_0).rv = function (_this__u8e3s4) {
		    return _this__u8e3s4.length;
		  };
		  protoOf(BooleanArraySerializer_0).on = function (_this__u8e3s4) {
		    return this.rv((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(BooleanArraySerializer_0).sv = function (_this__u8e3s4) {
		    return new BooleanArrayBuilder(_this__u8e3s4);
		  };
		  protoOf(BooleanArraySerializer_0).jm = function (_this__u8e3s4) {
		    return this.sv((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(BooleanArraySerializer_0).zo = function () {
		    return booleanArray(0);
		  };
		  protoOf(BooleanArraySerializer_0).tv = function (decoder, index, builder, checkIndex) {
		    builder.wv(decoder.jj(this.qo_1, index));
		  };
		  protoOf(BooleanArraySerializer_0).um = function (decoder, index, builder, checkIndex) {
		    return this.tv(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(BooleanArraySerializer_0).ap = function (decoder, index, builder, checkIndex) {
		    return this.tv(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
		  };
		  protoOf(BooleanArraySerializer_0).xv = function (encoder, content, size) {
		    var inductionVariable = 0;
		    if (inductionVariable < size)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        encoder.ok(this.qo_1, i, content[i]);
		      }
		       while (inductionVariable < size);
		  };
		  protoOf(BooleanArraySerializer_0).bp = function (encoder, content, size) {
		    return this.xv(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size);
		  };
		  var BooleanArraySerializer_instance;
		  function BooleanArraySerializer_getInstance() {
		    if (BooleanArraySerializer_instance == null)
		      new BooleanArraySerializer_0();
		    return BooleanArraySerializer_instance;
		  }
		  function CharArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.vr_1 = bufferWithData;
		    this.wr_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(CharArrayBuilder).so = function () {
		    return this.wr_1;
		  };
		  protoOf(CharArrayBuilder).wo = function (requiredCapacity) {
		    if (this.vr_1.length < requiredCapacity)
		      this.vr_1 = copyOf(this.vr_1, coerceAtLeast(requiredCapacity, imul(this.vr_1.length, 2)));
		  };
		  protoOf(CharArrayBuilder).xr = function (c) {
		    this.dp();
		    var tmp = this.vr_1;
		    var tmp1 = this.wr_1;
		    this.wr_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(CharArrayBuilder).uo = function () {
		    return copyOf(this.vr_1, this.wr_1);
		  };
		  function DoubleArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.es_1 = bufferWithData;
		    this.fs_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(DoubleArrayBuilder).so = function () {
		    return this.fs_1;
		  };
		  protoOf(DoubleArrayBuilder).wo = function (requiredCapacity) {
		    if (this.es_1.length < requiredCapacity)
		      this.es_1 = copyOf_0(this.es_1, coerceAtLeast(requiredCapacity, imul(this.es_1.length, 2)));
		  };
		  protoOf(DoubleArrayBuilder).gs = function (c) {
		    this.dp();
		    var tmp = this.es_1;
		    var tmp1 = this.fs_1;
		    this.fs_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(DoubleArrayBuilder).uo = function () {
		    return copyOf_0(this.es_1, this.fs_1);
		  };
		  function FloatArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.ns_1 = bufferWithData;
		    this.os_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(FloatArrayBuilder).so = function () {
		    return this.os_1;
		  };
		  protoOf(FloatArrayBuilder).wo = function (requiredCapacity) {
		    if (this.ns_1.length < requiredCapacity)
		      this.ns_1 = copyOf_1(this.ns_1, coerceAtLeast(requiredCapacity, imul(this.ns_1.length, 2)));
		  };
		  protoOf(FloatArrayBuilder).ps = function (c) {
		    this.dp();
		    var tmp = this.ns_1;
		    var tmp1 = this.os_1;
		    this.os_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(FloatArrayBuilder).uo = function () {
		    return copyOf_1(this.ns_1, this.os_1);
		  };
		  function LongArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.ws_1 = bufferWithData;
		    this.xs_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(LongArrayBuilder).so = function () {
		    return this.xs_1;
		  };
		  protoOf(LongArrayBuilder).wo = function (requiredCapacity) {
		    if (this.ws_1.length < requiredCapacity)
		      this.ws_1 = copyOf_2(this.ws_1, coerceAtLeast(requiredCapacity, imul(this.ws_1.length, 2)));
		  };
		  protoOf(LongArrayBuilder).ys = function (c) {
		    this.dp();
		    var tmp = this.ws_1;
		    var tmp1 = this.xs_1;
		    this.xs_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(LongArrayBuilder).uo = function () {
		    return copyOf_2(this.ws_1, this.xs_1);
		  };
		  function ULongArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.gt_1 = bufferWithData;
		    this.ht_1 = _ULongArray___get_size__impl__ju6dtr(bufferWithData);
		    this.wo(10);
		  }
		  protoOf(ULongArrayBuilder).so = function () {
		    return this.ht_1;
		  };
		  protoOf(ULongArrayBuilder).wo = function (requiredCapacity) {
		    if (_ULongArray___get_size__impl__ju6dtr(this.gt_1) < requiredCapacity) {
		      var tmp = this;
		      // Inline function 'kotlin.collections.copyOf' call
		      var this_0 = this.gt_1;
		      var newSize = coerceAtLeast(requiredCapacity, imul(_ULongArray___get_size__impl__ju6dtr(this.gt_1), 2));
		      tmp.gt_1 = _ULongArray___init__impl__twm1l3_0(copyOf_2(_ULongArray___get_storage__impl__28e64j(this_0), newSize));
		    }
		  };
		  protoOf(ULongArrayBuilder).it = function (c) {
		    this.dp();
		    var tmp = this.gt_1;
		    var tmp1 = this.ht_1;
		    this.ht_1 = tmp1 + 1 | 0;
		    ULongArray__set_impl_z19mvh(tmp, tmp1, c);
		  };
		  protoOf(ULongArrayBuilder).yv = function () {
		    // Inline function 'kotlin.collections.copyOf' call
		    var this_0 = this.gt_1;
		    var newSize = this.ht_1;
		    return _ULongArray___init__impl__twm1l3_0(copyOf_2(_ULongArray___get_storage__impl__28e64j(this_0), newSize));
		  };
		  protoOf(ULongArrayBuilder).uo = function () {
		    return new ULongArray(this.yv());
		  };
		  function IntArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.pt_1 = bufferWithData;
		    this.qt_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(IntArrayBuilder).so = function () {
		    return this.qt_1;
		  };
		  protoOf(IntArrayBuilder).wo = function (requiredCapacity) {
		    if (this.pt_1.length < requiredCapacity)
		      this.pt_1 = copyOf_3(this.pt_1, coerceAtLeast(requiredCapacity, imul(this.pt_1.length, 2)));
		  };
		  protoOf(IntArrayBuilder).rt = function (c) {
		    this.dp();
		    var tmp = this.pt_1;
		    var tmp1 = this.qt_1;
		    this.qt_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(IntArrayBuilder).uo = function () {
		    return copyOf_3(this.pt_1, this.qt_1);
		  };
		  function UIntArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.zt_1 = bufferWithData;
		    this.au_1 = _UIntArray___get_size__impl__r6l8ci(bufferWithData);
		    this.wo(10);
		  }
		  protoOf(UIntArrayBuilder).so = function () {
		    return this.au_1;
		  };
		  protoOf(UIntArrayBuilder).wo = function (requiredCapacity) {
		    if (_UIntArray___get_size__impl__r6l8ci(this.zt_1) < requiredCapacity) {
		      var tmp = this;
		      // Inline function 'kotlin.collections.copyOf' call
		      var this_0 = this.zt_1;
		      var newSize = coerceAtLeast(requiredCapacity, imul(_UIntArray___get_size__impl__r6l8ci(this.zt_1), 2));
		      tmp.zt_1 = _UIntArray___init__impl__ghjpc6_0(copyOf_3(_UIntArray___get_storage__impl__92a0v0(this_0), newSize));
		    }
		  };
		  protoOf(UIntArrayBuilder).bu = function (c) {
		    this.dp();
		    var tmp = this.zt_1;
		    var tmp1 = this.au_1;
		    this.au_1 = tmp1 + 1 | 0;
		    UIntArray__set_impl_7f2zu2(tmp, tmp1, c);
		  };
		  protoOf(UIntArrayBuilder).zv = function () {
		    // Inline function 'kotlin.collections.copyOf' call
		    var this_0 = this.zt_1;
		    var newSize = this.au_1;
		    return _UIntArray___init__impl__ghjpc6_0(copyOf_3(_UIntArray___get_storage__impl__92a0v0(this_0), newSize));
		  };
		  protoOf(UIntArrayBuilder).uo = function () {
		    return new UIntArray(this.zv());
		  };
		  function ShortArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.iu_1 = bufferWithData;
		    this.ju_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(ShortArrayBuilder).so = function () {
		    return this.ju_1;
		  };
		  protoOf(ShortArrayBuilder).wo = function (requiredCapacity) {
		    if (this.iu_1.length < requiredCapacity)
		      this.iu_1 = copyOf_4(this.iu_1, coerceAtLeast(requiredCapacity, imul(this.iu_1.length, 2)));
		  };
		  protoOf(ShortArrayBuilder).ku = function (c) {
		    this.dp();
		    var tmp = this.iu_1;
		    var tmp1 = this.ju_1;
		    this.ju_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(ShortArrayBuilder).uo = function () {
		    return copyOf_4(this.iu_1, this.ju_1);
		  };
		  function UShortArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.su_1 = bufferWithData;
		    this.tu_1 = _UShortArray___get_size__impl__jqto1b(bufferWithData);
		    this.wo(10);
		  }
		  protoOf(UShortArrayBuilder).so = function () {
		    return this.tu_1;
		  };
		  protoOf(UShortArrayBuilder).wo = function (requiredCapacity) {
		    if (_UShortArray___get_size__impl__jqto1b(this.su_1) < requiredCapacity) {
		      var tmp = this;
		      // Inline function 'kotlin.collections.copyOf' call
		      var this_0 = this.su_1;
		      var newSize = coerceAtLeast(requiredCapacity, imul(_UShortArray___get_size__impl__jqto1b(this.su_1), 2));
		      tmp.su_1 = _UShortArray___init__impl__9b26ef_0(copyOf_4(_UShortArray___get_storage__impl__t2jpv5(this_0), newSize));
		    }
		  };
		  protoOf(UShortArrayBuilder).uu = function (c) {
		    this.dp();
		    var tmp = this.su_1;
		    var tmp1 = this.tu_1;
		    this.tu_1 = tmp1 + 1 | 0;
		    UShortArray__set_impl_6d8whp(tmp, tmp1, c);
		  };
		  protoOf(UShortArrayBuilder).aw = function () {
		    // Inline function 'kotlin.collections.copyOf' call
		    var this_0 = this.su_1;
		    var newSize = this.tu_1;
		    return _UShortArray___init__impl__9b26ef_0(copyOf_4(_UShortArray___get_storage__impl__t2jpv5(this_0), newSize));
		  };
		  protoOf(UShortArrayBuilder).uo = function () {
		    return new UShortArray(this.aw());
		  };
		  function ByteArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.bv_1 = bufferWithData;
		    this.cv_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(ByteArrayBuilder).so = function () {
		    return this.cv_1;
		  };
		  protoOf(ByteArrayBuilder).wo = function (requiredCapacity) {
		    if (this.bv_1.length < requiredCapacity)
		      this.bv_1 = copyOf_5(this.bv_1, coerceAtLeast(requiredCapacity, imul(this.bv_1.length, 2)));
		  };
		  protoOf(ByteArrayBuilder).dv = function (c) {
		    this.dp();
		    var tmp = this.bv_1;
		    var tmp1 = this.cv_1;
		    this.cv_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(ByteArrayBuilder).uo = function () {
		    return copyOf_5(this.bv_1, this.cv_1);
		  };
		  function UByteArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.lv_1 = bufferWithData;
		    this.mv_1 = _UByteArray___get_size__impl__h6pkdv(bufferWithData);
		    this.wo(10);
		  }
		  protoOf(UByteArrayBuilder).so = function () {
		    return this.mv_1;
		  };
		  protoOf(UByteArrayBuilder).wo = function (requiredCapacity) {
		    if (_UByteArray___get_size__impl__h6pkdv(this.lv_1) < requiredCapacity) {
		      var tmp = this;
		      // Inline function 'kotlin.collections.copyOf' call
		      var this_0 = this.lv_1;
		      var newSize = coerceAtLeast(requiredCapacity, imul(_UByteArray___get_size__impl__h6pkdv(this.lv_1), 2));
		      tmp.lv_1 = _UByteArray___init__impl__ip4y9n_0(copyOf_5(_UByteArray___get_storage__impl__d4kctt(this_0), newSize));
		    }
		  };
		  protoOf(UByteArrayBuilder).nv = function (c) {
		    this.dp();
		    var tmp = this.lv_1;
		    var tmp1 = this.mv_1;
		    this.mv_1 = tmp1 + 1 | 0;
		    UByteArray__set_impl_jvcicn(tmp, tmp1, c);
		  };
		  protoOf(UByteArrayBuilder).bw = function () {
		    // Inline function 'kotlin.collections.copyOf' call
		    var this_0 = this.lv_1;
		    var newSize = this.mv_1;
		    return _UByteArray___init__impl__ip4y9n_0(copyOf_5(_UByteArray___get_storage__impl__d4kctt(this_0), newSize));
		  };
		  protoOf(UByteArrayBuilder).uo = function () {
		    return new UByteArray(this.bw());
		  };
		  function BooleanArrayBuilder(bufferWithData) {
		    PrimitiveArrayBuilder.call(this);
		    this.uv_1 = bufferWithData;
		    this.vv_1 = bufferWithData.length;
		    this.wo(10);
		  }
		  protoOf(BooleanArrayBuilder).so = function () {
		    return this.vv_1;
		  };
		  protoOf(BooleanArrayBuilder).wo = function (requiredCapacity) {
		    if (this.uv_1.length < requiredCapacity)
		      this.uv_1 = copyOf_6(this.uv_1, coerceAtLeast(requiredCapacity, imul(this.uv_1.length, 2)));
		  };
		  protoOf(BooleanArrayBuilder).wv = function (c) {
		    this.dp();
		    var tmp = this.uv_1;
		    var tmp1 = this.vv_1;
		    this.vv_1 = tmp1 + 1 | 0;
		    tmp[tmp1] = c;
		  };
		  protoOf(BooleanArrayBuilder).uo = function () {
		    return copyOf_6(this.uv_1, this.vv_1);
		  };
		  function get_BUILTIN_SERIALIZERS() {
		    _init_properties_Primitives_kt__k0eto4();
		    return BUILTIN_SERIALIZERS;
		  }
		  var BUILTIN_SERIALIZERS;
		  function builtinSerializerOrNull(_this__u8e3s4) {
		    _init_properties_Primitives_kt__k0eto4();
		    var tmp = get_BUILTIN_SERIALIZERS().u1(_this__u8e3s4);
		    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
		  }
		  function StringSerializer() {
		    StringSerializer_instance = this;
		    this.cw_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
		  }
		  protoOf(StringSerializer).xf = function () {
		    return this.cw_1;
		  };
		  protoOf(StringSerializer).dw = function (encoder, value) {
		    return encoder.lk(value);
		  };
		  protoOf(StringSerializer).yf = function (encoder, value) {
		    return this.dw(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
		  };
		  protoOf(StringSerializer).zf = function (decoder) {
		    return decoder.cj();
		  };
		  var StringSerializer_instance;
		  function StringSerializer_getInstance() {
		    if (StringSerializer_instance == null)
		      new StringSerializer();
		    return StringSerializer_instance;
		  }
		  function CharSerializer() {
		    CharSerializer_instance = this;
		    this.ew_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
		  }
		  protoOf(CharSerializer).xf = function () {
		    return this.ew_1;
		  };
		  protoOf(CharSerializer).fw = function (encoder, value) {
		    return encoder.kk(value);
		  };
		  protoOf(CharSerializer).yf = function (encoder, value) {
		    return this.fw(encoder, value instanceof Char ? value.b1_1 : THROW_CCE());
		  };
		  protoOf(CharSerializer).gw = function (decoder) {
		    return decoder.bj();
		  };
		  protoOf(CharSerializer).zf = function (decoder) {
		    return new Char(this.gw(decoder));
		  };
		  var CharSerializer_instance;
		  function CharSerializer_getInstance() {
		    if (CharSerializer_instance == null)
		      new CharSerializer();
		    return CharSerializer_instance;
		  }
		  function DoubleSerializer() {
		    DoubleSerializer_instance = this;
		    this.hw_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
		  }
		  protoOf(DoubleSerializer).xf = function () {
		    return this.hw_1;
		  };
		  protoOf(DoubleSerializer).iw = function (encoder, value) {
		    return encoder.jk(value);
		  };
		  protoOf(DoubleSerializer).yf = function (encoder, value) {
		    return this.iw(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
		  };
		  protoOf(DoubleSerializer).zf = function (decoder) {
		    return decoder.aj();
		  };
		  var DoubleSerializer_instance;
		  function DoubleSerializer_getInstance() {
		    if (DoubleSerializer_instance == null)
		      new DoubleSerializer();
		    return DoubleSerializer_instance;
		  }
		  function FloatSerializer() {
		    FloatSerializer_instance = this;
		    this.jw_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
		  }
		  protoOf(FloatSerializer).xf = function () {
		    return this.jw_1;
		  };
		  protoOf(FloatSerializer).kw = function (encoder, value) {
		    return encoder.ik(value);
		  };
		  protoOf(FloatSerializer).yf = function (encoder, value) {
		    return this.kw(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
		  };
		  protoOf(FloatSerializer).zf = function (decoder) {
		    return decoder.zi();
		  };
		  var FloatSerializer_instance;
		  function FloatSerializer_getInstance() {
		    if (FloatSerializer_instance == null)
		      new FloatSerializer();
		    return FloatSerializer_instance;
		  }
		  function LongSerializer() {
		    LongSerializer_instance = this;
		    this.lw_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
		  }
		  protoOf(LongSerializer).xf = function () {
		    return this.lw_1;
		  };
		  protoOf(LongSerializer).mw = function (encoder, value) {
		    return encoder.hk(value);
		  };
		  protoOf(LongSerializer).yf = function (encoder, value) {
		    return this.mw(encoder, value instanceof Long ? value : THROW_CCE());
		  };
		  protoOf(LongSerializer).zf = function (decoder) {
		    return decoder.yi();
		  };
		  var LongSerializer_instance;
		  function LongSerializer_getInstance() {
		    if (LongSerializer_instance == null)
		      new LongSerializer();
		    return LongSerializer_instance;
		  }
		  function IntSerializer() {
		    IntSerializer_instance = this;
		    this.nw_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
		  }
		  protoOf(IntSerializer).xf = function () {
		    return this.nw_1;
		  };
		  protoOf(IntSerializer).ow = function (encoder, value) {
		    return encoder.gk(value);
		  };
		  protoOf(IntSerializer).yf = function (encoder, value) {
		    return this.ow(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
		  };
		  protoOf(IntSerializer).zf = function (decoder) {
		    return decoder.xi();
		  };
		  var IntSerializer_instance;
		  function IntSerializer_getInstance() {
		    if (IntSerializer_instance == null)
		      new IntSerializer();
		    return IntSerializer_instance;
		  }
		  function ShortSerializer() {
		    ShortSerializer_instance = this;
		    this.pw_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
		  }
		  protoOf(ShortSerializer).xf = function () {
		    return this.pw_1;
		  };
		  protoOf(ShortSerializer).qw = function (encoder, value) {
		    return encoder.fk(value);
		  };
		  protoOf(ShortSerializer).yf = function (encoder, value) {
		    return this.qw(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
		  };
		  protoOf(ShortSerializer).zf = function (decoder) {
		    return decoder.wi();
		  };
		  var ShortSerializer_instance;
		  function ShortSerializer_getInstance() {
		    if (ShortSerializer_instance == null)
		      new ShortSerializer();
		    return ShortSerializer_instance;
		  }
		  function ByteSerializer() {
		    ByteSerializer_instance = this;
		    this.rw_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
		  }
		  protoOf(ByteSerializer).xf = function () {
		    return this.rw_1;
		  };
		  protoOf(ByteSerializer).sw = function (encoder, value) {
		    return encoder.ek(value);
		  };
		  protoOf(ByteSerializer).yf = function (encoder, value) {
		    return this.sw(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
		  };
		  protoOf(ByteSerializer).zf = function (decoder) {
		    return decoder.vi();
		  };
		  var ByteSerializer_instance;
		  function ByteSerializer_getInstance() {
		    if (ByteSerializer_instance == null)
		      new ByteSerializer();
		    return ByteSerializer_instance;
		  }
		  function BooleanSerializer() {
		    BooleanSerializer_instance = this;
		    this.tw_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
		  }
		  protoOf(BooleanSerializer).xf = function () {
		    return this.tw_1;
		  };
		  protoOf(BooleanSerializer).uw = function (encoder, value) {
		    return encoder.dk(value);
		  };
		  protoOf(BooleanSerializer).yf = function (encoder, value) {
		    return this.uw(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
		  };
		  protoOf(BooleanSerializer).zf = function (decoder) {
		    return decoder.ui();
		  };
		  var BooleanSerializer_instance;
		  function BooleanSerializer_getInstance() {
		    if (BooleanSerializer_instance == null)
		      new BooleanSerializer();
		    return BooleanSerializer_instance;
		  }
		  function UnitSerializer() {
		    UnitSerializer_instance = this;
		    this.vw_1 = new ObjectSerializer('kotlin.Unit', Unit_instance);
		  }
		  protoOf(UnitSerializer).xf = function () {
		    return this.vw_1.xf();
		  };
		  protoOf(UnitSerializer).ww = function (decoder) {
		    this.vw_1.zf(decoder);
		  };
		  protoOf(UnitSerializer).zf = function (decoder) {
		    this.ww(decoder);
		    return Unit_instance;
		  };
		  protoOf(UnitSerializer).xw = function (encoder, value) {
		    this.vw_1.ng(encoder, Unit_instance);
		  };
		  protoOf(UnitSerializer).yf = function (encoder, value) {
		    return this.xw(encoder, value instanceof Unit ? value : THROW_CCE());
		  };
		  var UnitSerializer_instance;
		  function UnitSerializer_getInstance() {
		    if (UnitSerializer_instance == null)
		      new UnitSerializer();
		    return UnitSerializer_instance;
		  }
		  function error($this) {
		    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
		  }
		  function PrimitiveSerialDescriptor_0(serialName, kind) {
		    this.yw_1 = serialName;
		    this.zw_1 = kind;
		  }
		  protoOf(PrimitiveSerialDescriptor_0).vg = function () {
		    return this.yw_1;
		  };
		  protoOf(PrimitiveSerialDescriptor_0).oh = function () {
		    return this.zw_1;
		  };
		  protoOf(PrimitiveSerialDescriptor_0).mh = function () {
		    return 0;
		  };
		  protoOf(PrimitiveSerialDescriptor_0).sh = function (index) {
		    error();
		  };
		  protoOf(PrimitiveSerialDescriptor_0).rh = function (name) {
		    error();
		  };
		  protoOf(PrimitiveSerialDescriptor_0).th = function (index) {
		    error();
		  };
		  protoOf(PrimitiveSerialDescriptor_0).qh = function (index) {
		    error();
		  };
		  protoOf(PrimitiveSerialDescriptor_0).ph = function (index) {
		    error();
		  };
		  protoOf(PrimitiveSerialDescriptor_0).toString = function () {
		    return 'PrimitiveDescriptor(' + this.yw_1 + ')';
		  };
		  function PrimitiveDescriptorSafe(serialName, kind) {
		    _init_properties_Primitives_kt__k0eto4();
		    checkName(serialName);
		    return new PrimitiveSerialDescriptor_0(serialName, kind);
		  }
		  function checkName(serialName) {
		    _init_properties_Primitives_kt__k0eto4();
		    var keys = get_BUILTIN_SERIALIZERS().v1();
		    var tmp0_iterator = keys.i();
		    while (tmp0_iterator.j()) {
		      var primitive = tmp0_iterator.k();
		      var simpleName = capitalize(ensureNotNull(primitive.s8()));
		      var qualifiedName = 'kotlin.' + simpleName;
		      if (equals_0(serialName, qualifiedName, true) || equals_0(serialName, simpleName, true)) {
		        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
		      }
		    }
		  }
		  function capitalize(_this__u8e3s4) {
		    _init_properties_Primitives_kt__k0eto4();
		    // Inline function 'kotlin.text.replaceFirstChar' call
		    var tmp;
		    // Inline function 'kotlin.text.isNotEmpty' call
		    if (charSequenceLength(_this__u8e3s4) > 0) {
		      // Inline function 'kotlinx.serialization.internal.capitalize.<anonymous>' call
		      var it = charSequenceGet(_this__u8e3s4, 0);
		      var tmp$ret$1 = isLowerCase(it) ? titlecase(it) : toString_1(it);
		      var tmp_0 = toString(tmp$ret$1);
		      // Inline function 'kotlin.text.substring' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = tmp_0 + _this__u8e3s4.substring(1);
		    } else {
		      tmp = _this__u8e3s4;
		    }
		    return tmp;
		  }
		  var properties_initialized_Primitives_kt_6dpii6;
		  function _init_properties_Primitives_kt__k0eto4() {
		    if (!properties_initialized_Primitives_kt_6dpii6) {
		      properties_initialized_Primitives_kt_6dpii6 = true;
		      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().r9(), serializer_0()), to(getKClass(Char), serializer_1(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().u9(), CharArraySerializer()), to(PrimitiveClasses_getInstance().p9(), serializer_2()), to(PrimitiveClasses_getInstance().aa(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().o9(), serializer_3()), to(PrimitiveClasses_getInstance().z9(), FloatArraySerializer()), to(getKClass(Long), serializer_4(Companion_getInstance_1())), to(PrimitiveClasses_getInstance().y9(), LongArraySerializer()), to(getKClass(ULong), serializer_5(Companion_getInstance_2())), to(getKClass(ULongArray), ULongArraySerializer()), to(PrimitiveClasses_getInstance().n9(), serializer_6()), to(PrimitiveClasses_getInstance().x9(), IntArraySerializer()), to(getKClass(UInt), serializer_7(Companion_getInstance_3())), to(getKClass(UIntArray), UIntArraySerializer()), to(PrimitiveClasses_getInstance().m9(), serializer_8()), to(PrimitiveClasses_getInstance().w9(), ShortArraySerializer()), to(getKClass(UShort), serializer_9(Companion_getInstance_4())), to(getKClass(UShortArray), UShortArraySerializer()), to(PrimitiveClasses_getInstance().l9(), serializer_10()), to(PrimitiveClasses_getInstance().v9(), ByteArraySerializer()), to(getKClass(UByte), serializer_11(Companion_getInstance_5())), to(getKClass(UByteArray), UByteArraySerializer()), to(PrimitiveClasses_getInstance().k9(), serializer_12()), to(PrimitiveClasses_getInstance().t9(), BooleanArraySerializer()), to(getKClass(Unit), serializer_13()), to(getKClass(Duration), serializer_14(Companion_getInstance()))]);
		    }
		  }
		  function NamedValueEncoder() {
		    TaggedEncoder.call(this);
		  }
		  protoOf(NamedValueEncoder).bx = function (_this__u8e3s4, index) {
		    return this.dx(this.cx(_this__u8e3s4, index));
		  };
		  protoOf(NamedValueEncoder).dx = function (nestedName) {
		    var tmp0_elvis_lhs = this.fx();
		    return this.gx(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
		  };
		  protoOf(NamedValueEncoder).cx = function (descriptor, index) {
		    return descriptor.sh(index);
		  };
		  protoOf(NamedValueEncoder).gx = function (parentName, childName) {
		    var tmp;
		    // Inline function 'kotlin.text.isEmpty' call
		    if (charSequenceLength(parentName) === 0) {
		      tmp = childName;
		    } else {
		      tmp = parentName + '.' + childName;
		    }
		    return tmp;
		  };
		  function NamedValueDecoder() {
		    TaggedDecoder.call(this);
		  }
		  protoOf(NamedValueDecoder).bx = function (_this__u8e3s4, index) {
		    return this.dx(this.cx(_this__u8e3s4, index));
		  };
		  protoOf(NamedValueDecoder).dx = function (nestedName) {
		    var tmp0_elvis_lhs = this.fx();
		    return this.gx(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
		  };
		  protoOf(NamedValueDecoder).cx = function (desc, index) {
		    return desc.sh(index);
		  };
		  protoOf(NamedValueDecoder).gx = function (parentName, childName) {
		    var tmp;
		    // Inline function 'kotlin.text.isEmpty' call
		    if (charSequenceLength(parentName) === 0) {
		      tmp = childName;
		    } else {
		      tmp = parentName + '.' + childName;
		    }
		    return tmp;
		  };
		  function encodeElement($this, desc, index) {
		    var tag = $this.bx(desc, index);
		    $this.xx(tag);
		    return true;
		  }
		  function TaggedEncoder() {
		    var tmp = this;
		    // Inline function 'kotlin.collections.arrayListOf' call
		    tmp.ex_1 = ArrayList_init_$Create$_0();
		  }
		  protoOf(TaggedEncoder).wj = function () {
		    return EmptySerializersModule_0();
		  };
		  protoOf(TaggedEncoder).hx = function (tag, value) {
		    throw SerializationException_init_$Create$_0('Non-serializable ' + toString(getKClassFromExpression(value)) + ' is not supported by ' + toString(getKClassFromExpression(this)) + ' encoder');
		  };
		  protoOf(TaggedEncoder).ix = function (tag) {
		  };
		  protoOf(TaggedEncoder).jx = function (tag) {
		    throw SerializationException_init_$Create$_0('null is not supported');
		  };
		  protoOf(TaggedEncoder).kx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).lx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).mx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).nx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).ox = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).px = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).qx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).rx = function (tag, value) {
		    return this.hx(tag, new Char(value));
		  };
		  protoOf(TaggedEncoder).sx = function (tag, value) {
		    return this.hx(tag, value);
		  };
		  protoOf(TaggedEncoder).tx = function (tag, enumDescriptor, ordinal) {
		    return this.hx(tag, ordinal);
		  };
		  protoOf(TaggedEncoder).ux = function (tag, inlineDescriptor) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlinx.serialization.internal.TaggedEncoder.encodeTaggedInline.<anonymous>' call
		    this.xx(tag);
		    return this;
		  };
		  protoOf(TaggedEncoder).nk = function (descriptor) {
		    return this.ux(this.yx(), descriptor);
		  };
		  protoOf(TaggedEncoder).cl = function () {
		    return this.ix(this.wx());
		  };
		  protoOf(TaggedEncoder).ck = function () {
		    return this.jx(this.yx());
		  };
		  protoOf(TaggedEncoder).dk = function (value) {
		    return this.qx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).ek = function (value) {
		    return this.lx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).fk = function (value) {
		    return this.mx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).gk = function (value) {
		    return this.kx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).hk = function (value) {
		    return this.nx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).ik = function (value) {
		    return this.ox(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).jk = function (value) {
		    return this.px(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).kk = function (value) {
		    return this.rx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).lk = function (value) {
		    return this.sx(this.yx(), value);
		  };
		  protoOf(TaggedEncoder).mk = function (enumDescriptor, index) {
		    return this.tx(this.yx(), enumDescriptor, index);
		  };
		  protoOf(TaggedEncoder).hj = function (descriptor) {
		    return this;
		  };
		  protoOf(TaggedEncoder).ij = function (descriptor) {
		    // Inline function 'kotlin.collections.isNotEmpty' call
		    if (!this.ex_1.n()) {
		      this.yx();
		    }
		    this.vx(descriptor);
		  };
		  protoOf(TaggedEncoder).vx = function (descriptor) {
		  };
		  protoOf(TaggedEncoder).ok = function (descriptor, index, value) {
		    return this.qx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).pk = function (descriptor, index, value) {
		    return this.lx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).qk = function (descriptor, index, value) {
		    return this.mx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).rk = function (descriptor, index, value) {
		    return this.kx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).sk = function (descriptor, index, value) {
		    return this.nx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).tk = function (descriptor, index, value) {
		    return this.ox(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).uk = function (descriptor, index, value) {
		    return this.px(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).vk = function (descriptor, index, value) {
		    return this.rx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).wk = function (descriptor, index, value) {
		    return this.sx(this.bx(descriptor, index), value);
		  };
		  protoOf(TaggedEncoder).xk = function (descriptor, index) {
		    return this.ux(this.bx(descriptor, index), descriptor.qh(index));
		  };
		  protoOf(TaggedEncoder).yk = function (descriptor, index, serializer, value) {
		    if (encodeElement(this, descriptor, index)) {
		      this.zk(serializer, value);
		    }
		  };
		  protoOf(TaggedEncoder).al = function (descriptor, index, serializer, value) {
		    if (encodeElement(this, descriptor, index)) {
		      this.bl(serializer, value);
		    }
		  };
		  protoOf(TaggedEncoder).wx = function () {
		    return last(this.ex_1);
		  };
		  protoOf(TaggedEncoder).fx = function () {
		    return lastOrNull(this.ex_1);
		  };
		  protoOf(TaggedEncoder).xx = function (name) {
		    this.ex_1.d(name);
		  };
		  protoOf(TaggedEncoder).yx = function () {
		    var tmp;
		    // Inline function 'kotlin.collections.isNotEmpty' call
		    if (!this.ex_1.n()) {
		      tmp = this.ex_1.a2(get_lastIndex_0(this.ex_1));
		    } else {
		      throw SerializationException_init_$Create$_0('No tag in stack for requested element');
		    }
		    return tmp;
		  };
		  function tagBlock($this, tag, block) {
		    $this.xx(tag);
		    var r = block();
		    if (!$this.cy_1) {
		      $this.yx();
		    }
		    $this.cy_1 = false;
		    return r;
		  }
		  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
		    return function () {
		      return this$0.fj($deserializer, $previousValue);
		    };
		  }
		  function TaggedDecoder$decodeNullableSerializableElement$lambda(this$0, $deserializer, $previousValue) {
		    return function () {
		      return this$0.si() ? this$0.fj($deserializer, $previousValue) : this$0.ti();
		    };
		  }
		  function TaggedDecoder() {
		    var tmp = this;
		    // Inline function 'kotlin.collections.arrayListOf' call
		    tmp.by_1 = ArrayList_init_$Create$_0();
		    this.cy_1 = false;
		  }
		  protoOf(TaggedDecoder).wj = function () {
		    return EmptySerializersModule_0();
		  };
		  protoOf(TaggedDecoder).dy = function (tag) {
		    throw SerializationException_init_$Create$_0(toString(getKClassFromExpression(this)) + " can't retrieve untyped values");
		  };
		  protoOf(TaggedDecoder).ey = function (tag) {
		    return true;
		  };
		  protoOf(TaggedDecoder).fy = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).gy = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).hy = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).iy = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).jy = function (tag) {
		    var tmp = this.dy(tag);
		    return tmp instanceof Long ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).ky = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).ly = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).my = function (tag) {
		    var tmp = this.dy(tag);
		    return tmp instanceof Char ? tmp.b1_1 : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).ny = function (tag) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'string' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).oy = function (tag, enumDescriptor) {
		    var tmp = this.dy(tag);
		    return typeof tmp === 'number' ? tmp : THROW_CCE();
		  };
		  protoOf(TaggedDecoder).py = function (tag, inlineDescriptor) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlinx.serialization.internal.TaggedDecoder.decodeTaggedInline.<anonymous>' call
		    this.xx(tag);
		    return this;
		  };
		  protoOf(TaggedDecoder).fj = function (deserializer, previousValue) {
		    return this.gj(deserializer);
		  };
		  protoOf(TaggedDecoder).ej = function (descriptor) {
		    return this.py(this.yx(), descriptor);
		  };
		  protoOf(TaggedDecoder).si = function () {
		    var tmp0_elvis_lhs = this.fx();
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return false;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var currentTag = tmp;
		    return this.ey(currentTag);
		  };
		  protoOf(TaggedDecoder).ti = function () {
		    return null;
		  };
		  protoOf(TaggedDecoder).ui = function () {
		    return this.fy(this.yx());
		  };
		  protoOf(TaggedDecoder).vi = function () {
		    return this.gy(this.yx());
		  };
		  protoOf(TaggedDecoder).wi = function () {
		    return this.hy(this.yx());
		  };
		  protoOf(TaggedDecoder).xi = function () {
		    return this.iy(this.yx());
		  };
		  protoOf(TaggedDecoder).yi = function () {
		    return this.jy(this.yx());
		  };
		  protoOf(TaggedDecoder).zi = function () {
		    return this.ky(this.yx());
		  };
		  protoOf(TaggedDecoder).aj = function () {
		    return this.ly(this.yx());
		  };
		  protoOf(TaggedDecoder).bj = function () {
		    return this.my(this.yx());
		  };
		  protoOf(TaggedDecoder).cj = function () {
		    return this.ny(this.yx());
		  };
		  protoOf(TaggedDecoder).dj = function (enumDescriptor) {
		    return this.oy(this.yx(), enumDescriptor);
		  };
		  protoOf(TaggedDecoder).hj = function (descriptor) {
		    return this;
		  };
		  protoOf(TaggedDecoder).ij = function (descriptor) {
		  };
		  protoOf(TaggedDecoder).jj = function (descriptor, index) {
		    return this.fy(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).kj = function (descriptor, index) {
		    return this.gy(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).lj = function (descriptor, index) {
		    return this.hy(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).mj = function (descriptor, index) {
		    return this.iy(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).nj = function (descriptor, index) {
		    return this.jy(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).oj = function (descriptor, index) {
		    return this.ky(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).pj = function (descriptor, index) {
		    return this.ly(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).qj = function (descriptor, index) {
		    return this.my(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).rj = function (descriptor, index) {
		    return this.ny(this.bx(descriptor, index));
		  };
		  protoOf(TaggedDecoder).sj = function (descriptor, index) {
		    return this.py(this.bx(descriptor, index), descriptor.qh(index));
		  };
		  protoOf(TaggedDecoder).tj = function (descriptor, index, deserializer, previousValue) {
		    var tmp = this.bx(descriptor, index);
		    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
		  };
		  protoOf(TaggedDecoder).vj = function (descriptor, index, deserializer, previousValue) {
		    var tmp = this.bx(descriptor, index);
		    return tagBlock(this, tmp, TaggedDecoder$decodeNullableSerializableElement$lambda(this, deserializer, previousValue));
		  };
		  protoOf(TaggedDecoder).fx = function () {
		    return lastOrNull(this.by_1);
		  };
		  protoOf(TaggedDecoder).xx = function (name) {
		    this.by_1.d(name);
		  };
		  protoOf(TaggedDecoder).yx = function () {
		    var r = this.by_1.a2(get_lastIndex_0(this.by_1));
		    this.cy_1 = true;
		    return r;
		  };
		  function get_NULL() {
		    _init_properties_Tuples_kt__dz0qyd();
		    return NULL;
		  }
		  var NULL;
		  function MapEntry(key, value) {
		    this.qy_1 = key;
		    this.ry_1 = value;
		  }
		  protoOf(MapEntry).q1 = function () {
		    return this.qy_1;
		  };
		  protoOf(MapEntry).r1 = function () {
		    return this.ry_1;
		  };
		  protoOf(MapEntry).toString = function () {
		    return 'MapEntry(key=' + toString_0(this.qy_1) + ', value=' + toString_0(this.ry_1) + ')';
		  };
		  protoOf(MapEntry).hashCode = function () {
		    var result = this.qy_1 == null ? 0 : hashCode(this.qy_1);
		    result = imul(result, 31) + (this.ry_1 == null ? 0 : hashCode(this.ry_1)) | 0;
		    return result;
		  };
		  protoOf(MapEntry).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MapEntry))
		      return false;
		    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
		    if (!equals(this.qy_1, tmp0_other_with_cast.qy_1))
		      return false;
		    if (!equals(this.ry_1, tmp0_other_with_cast.ry_1))
		      return false;
		    return true;
		  };
		  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
		    return function ($this$buildSerialDescriptor) {
		      $this$buildSerialDescriptor.ig('key', $keySerializer.xf());
		      $this$buildSerialDescriptor.ig('value', $valueSerializer.xf());
		      return Unit_instance;
		    };
		  }
		  function MapEntrySerializer_0(keySerializer, valueSerializer) {
		    KeyValueSerializer.call(this, keySerializer, valueSerializer);
		    var tmp = this;
		    var tmp_0 = MAP_getInstance();
		    tmp.uy_1 = buildSerialDescriptor('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer));
		  }
		  protoOf(MapEntrySerializer_0).xf = function () {
		    return this.uy_1;
		  };
		  protoOf(MapEntrySerializer_0).vy = function (_this__u8e3s4) {
		    return _this__u8e3s4.q1();
		  };
		  protoOf(MapEntrySerializer_0).wy = function (_this__u8e3s4) {
		    return this.vy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(MapEntrySerializer_0).xy = function (_this__u8e3s4) {
		    return _this__u8e3s4.r1();
		  };
		  protoOf(MapEntrySerializer_0).yy = function (_this__u8e3s4) {
		    return this.xy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(MapEntrySerializer_0).zy = function (key, value) {
		    return new MapEntry(key, value);
		  };
		  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
		    return function ($this$buildClassSerialDescriptor) {
		      $this$buildClassSerialDescriptor.ig('first', $keySerializer.xf());
		      $this$buildClassSerialDescriptor.ig('second', $valueSerializer.xf());
		      return Unit_instance;
		    };
		  }
		  function PairSerializer_0(keySerializer, valueSerializer) {
		    KeyValueSerializer.call(this, keySerializer, valueSerializer);
		    var tmp = this;
		    tmp.fz_1 = buildClassSerialDescriptor('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer));
		  }
		  protoOf(PairSerializer_0).xf = function () {
		    return this.fz_1;
		  };
		  protoOf(PairSerializer_0).gz = function (_this__u8e3s4) {
		    return _this__u8e3s4.m8_1;
		  };
		  protoOf(PairSerializer_0).wy = function (_this__u8e3s4) {
		    return this.gz(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(PairSerializer_0).hz = function (_this__u8e3s4) {
		    return _this__u8e3s4.n8_1;
		  };
		  protoOf(PairSerializer_0).yy = function (_this__u8e3s4) {
		    return this.hz(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
		  };
		  protoOf(PairSerializer_0).zy = function (key, value) {
		    return to(key, value);
		  };
		  function decodeSequentially_1($this, composite) {
		    var a = composite.uj($this.lz_1, 0, $this.iz_1);
		    var b = composite.uj($this.lz_1, 1, $this.jz_1);
		    var c = composite.uj($this.lz_1, 2, $this.kz_1);
		    composite.ij($this.lz_1);
		    return new Triple(a, b, c);
		  }
		  function decodeStructure($this, composite) {
		    var a = get_NULL();
		    var b = get_NULL();
		    var c = get_NULL();
		    mainLoop: while (true) {
		      var index = composite.yj($this.lz_1);
		      switch (index) {
		        case -1:
		          break mainLoop;
		        case 0:
		          a = composite.uj($this.lz_1, 0, $this.iz_1);
		          break;
		        case 1:
		          b = composite.uj($this.lz_1, 1, $this.jz_1);
		          break;
		        case 2:
		          c = composite.uj($this.lz_1, 2, $this.kz_1);
		          break;
		        default:
		          throw SerializationException_init_$Create$_0('Unexpected index ' + index);
		      }
		    }
		    composite.ij($this.lz_1);
		    if (a === get_NULL())
		      throw SerializationException_init_$Create$_0("Element 'first' is missing");
		    if (b === get_NULL())
		      throw SerializationException_init_$Create$_0("Element 'second' is missing");
		    if (c === get_NULL())
		      throw SerializationException_init_$Create$_0("Element 'third' is missing");
		    var tmp = (a == null ? true : !(a == null)) ? a : THROW_CCE();
		    var tmp_0 = (b == null ? true : !(b == null)) ? b : THROW_CCE();
		    return new Triple(tmp, tmp_0, (c == null ? true : !(c == null)) ? c : THROW_CCE());
		  }
		  function TripleSerializer$descriptor$lambda(this$0) {
		    return function ($this$buildClassSerialDescriptor) {
		      $this$buildClassSerialDescriptor.ig('first', this$0.iz_1.xf());
		      $this$buildClassSerialDescriptor.ig('second', this$0.jz_1.xf());
		      $this$buildClassSerialDescriptor.ig('third', this$0.kz_1.xf());
		      return Unit_instance;
		    };
		  }
		  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
		    this.iz_1 = aSerializer;
		    this.jz_1 = bSerializer;
		    this.kz_1 = cSerializer;
		    var tmp = this;
		    tmp.lz_1 = buildClassSerialDescriptor('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this));
		  }
		  protoOf(TripleSerializer_0).xf = function () {
		    return this.lz_1;
		  };
		  protoOf(TripleSerializer_0).mz = function (encoder, value) {
		    var structuredEncoder = encoder.hj(this.lz_1);
		    structuredEncoder.yk(this.lz_1, 0, this.iz_1, value.be_1);
		    structuredEncoder.yk(this.lz_1, 1, this.jz_1, value.ce_1);
		    structuredEncoder.yk(this.lz_1, 2, this.kz_1, value.de_1);
		    structuredEncoder.ij(this.lz_1);
		  };
		  protoOf(TripleSerializer_0).yf = function (encoder, value) {
		    return this.mz(encoder, value instanceof Triple ? value : THROW_CCE());
		  };
		  protoOf(TripleSerializer_0).zf = function (decoder) {
		    var composite = decoder.hj(this.lz_1);
		    if (composite.xj()) {
		      return decodeSequentially_1(this, composite);
		    }
		    return decodeStructure(this, composite);
		  };
		  function KeyValueSerializer(keySerializer, valueSerializer) {
		    this.az_1 = keySerializer;
		    this.bz_1 = valueSerializer;
		  }
		  protoOf(KeyValueSerializer).cz = function (encoder, value) {
		    var structuredEncoder = encoder.hj(this.xf());
		    structuredEncoder.yk(this.xf(), 0, this.az_1, this.wy(value));
		    structuredEncoder.yk(this.xf(), 1, this.bz_1, this.yy(value));
		    structuredEncoder.ij(this.xf());
		  };
		  protoOf(KeyValueSerializer).yf = function (encoder, value) {
		    return this.cz(encoder, (value == null ? true : !(value == null)) ? value : THROW_CCE());
		  };
		  protoOf(KeyValueSerializer).zf = function (decoder) {
		    var composite = decoder.hj(this.xf());
		    if (composite.xj()) {
		      var key = composite.uj(this.xf(), 0, this.az_1);
		      var value = composite.uj(this.xf(), 1, this.bz_1);
		      return this.zy(key, value);
		    }
		    var key_0 = get_NULL();
		    var value_0 = get_NULL();
		    mainLoop: while (true) {
		      var idx = composite.yj(this.xf());
		      switch (idx) {
		        case -1:
		          break mainLoop;
		        case 0:
		          key_0 = composite.uj(this.xf(), 0, this.az_1);
		          break;
		        case 1:
		          value_0 = composite.uj(this.xf(), 1, this.bz_1);
		          break;
		        default:
		          throw SerializationException_init_$Create$_0('Invalid index: ' + idx);
		      }
		    }
		    composite.ij(this.xf());
		    if (key_0 === get_NULL())
		      throw SerializationException_init_$Create$_0("Element 'key' is missing");
		    if (value_0 === get_NULL())
		      throw SerializationException_init_$Create$_0("Element 'value' is missing");
		    var tmp = (key_0 == null ? true : !(key_0 == null)) ? key_0 : THROW_CCE();
		    return this.zy(tmp, (value_0 == null ? true : !(value_0 == null)) ? value_0 : THROW_CCE());
		  };
		  var properties_initialized_Tuples_kt_3vs7ar;
		  function _init_properties_Tuples_kt__dz0qyd() {
		    if (!properties_initialized_Tuples_kt_3vs7ar) {
		      properties_initialized_Tuples_kt_3vs7ar = true;
		      NULL = new Object();
		    }
		  }
		  function ULongSerializer() {
		    ULongSerializer_instance = this;
		    this.nz_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_4(Companion_getInstance_1()));
		  }
		  protoOf(ULongSerializer).xf = function () {
		    return this.nz_1;
		  };
		  protoOf(ULongSerializer).oz = function (encoder, value) {
		    var tmp = encoder.nk(this.nz_1);
		    // Inline function 'kotlin.ULong.toLong' call
		    var tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
		    tmp.hk(tmp$ret$0);
		  };
		  protoOf(ULongSerializer).yf = function (encoder, value) {
		    return this.oz(encoder, value instanceof ULong ? value.ef_1 : THROW_CCE());
		  };
		  protoOf(ULongSerializer).pz = function (decoder) {
		    // Inline function 'kotlin.toULong' call
		    var this_0 = decoder.ej(this.nz_1).yi();
		    return _ULong___init__impl__c78o9k(this_0);
		  };
		  protoOf(ULongSerializer).zf = function (decoder) {
		    return new ULong(this.pz(decoder));
		  };
		  var ULongSerializer_instance;
		  function ULongSerializer_getInstance() {
		    if (ULongSerializer_instance == null)
		      new ULongSerializer();
		    return ULongSerializer_instance;
		  }
		  function UIntSerializer() {
		    UIntSerializer_instance = this;
		    this.qz_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_6());
		  }
		  protoOf(UIntSerializer).xf = function () {
		    return this.qz_1;
		  };
		  protoOf(UIntSerializer).rz = function (encoder, value) {
		    var tmp = encoder.nk(this.qz_1);
		    // Inline function 'kotlin.UInt.toInt' call
		    var tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
		    tmp.gk(tmp$ret$0);
		  };
		  protoOf(UIntSerializer).yf = function (encoder, value) {
		    return this.rz(encoder, value instanceof UInt ? value.te_1 : THROW_CCE());
		  };
		  protoOf(UIntSerializer).sz = function (decoder) {
		    // Inline function 'kotlin.toUInt' call
		    var this_0 = decoder.ej(this.qz_1).xi();
		    return _UInt___init__impl__l7qpdl(this_0);
		  };
		  protoOf(UIntSerializer).zf = function (decoder) {
		    return new UInt(this.sz(decoder));
		  };
		  var UIntSerializer_instance;
		  function UIntSerializer_getInstance() {
		    if (UIntSerializer_instance == null)
		      new UIntSerializer();
		    return UIntSerializer_instance;
		  }
		  function UShortSerializer() {
		    UShortSerializer_instance = this;
		    this.tz_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_8());
		  }
		  protoOf(UShortSerializer).xf = function () {
		    return this.tz_1;
		  };
		  protoOf(UShortSerializer).uz = function (encoder, value) {
		    var tmp = encoder.nk(this.tz_1);
		    // Inline function 'kotlin.UShort.toShort' call
		    var tmp$ret$0 = _UShort___get_data__impl__g0245(value);
		    tmp.fk(tmp$ret$0);
		  };
		  protoOf(UShortSerializer).yf = function (encoder, value) {
		    return this.uz(encoder, value instanceof UShort ? value.pf_1 : THROW_CCE());
		  };
		  protoOf(UShortSerializer).vz = function (decoder) {
		    // Inline function 'kotlin.toUShort' call
		    var this_0 = decoder.ej(this.tz_1).wi();
		    return _UShort___init__impl__jigrne(this_0);
		  };
		  protoOf(UShortSerializer).zf = function (decoder) {
		    return new UShort(this.vz(decoder));
		  };
		  var UShortSerializer_instance;
		  function UShortSerializer_getInstance() {
		    if (UShortSerializer_instance == null)
		      new UShortSerializer();
		    return UShortSerializer_instance;
		  }
		  function UByteSerializer() {
		    UByteSerializer_instance = this;
		    this.wz_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_10());
		  }
		  protoOf(UByteSerializer).xf = function () {
		    return this.wz_1;
		  };
		  protoOf(UByteSerializer).xz = function (encoder, value) {
		    var tmp = encoder.nk(this.wz_1);
		    // Inline function 'kotlin.UByte.toByte' call
		    var tmp$ret$0 = _UByte___get_data__impl__jof9qr(value);
		    tmp.ek(tmp$ret$0);
		  };
		  protoOf(UByteSerializer).yf = function (encoder, value) {
		    return this.xz(encoder, value instanceof UByte ? value.ie_1 : THROW_CCE());
		  };
		  protoOf(UByteSerializer).yz = function (decoder) {
		    // Inline function 'kotlin.toUByte' call
		    var this_0 = decoder.ej(this.wz_1).vi();
		    return _UByte___init__impl__g9hnc4(this_0);
		  };
		  protoOf(UByteSerializer).zf = function (decoder) {
		    return new UByte(this.yz(decoder));
		  };
		  var UByteSerializer_instance;
		  function UByteSerializer_getInstance() {
		    if (UByteSerializer_instance == null)
		      new UByteSerializer();
		    return UByteSerializer_instance;
		  }
		  function get_EmptySerializersModuleLegacyJs() {
		    _init_properties_SerializersModule_kt__u78ha3();
		    return EmptySerializersModule;
		  }
		  var EmptySerializersModule;
		  function SerializersModule() {
		  }
		  protoOf(SerializersModule).eh = function (kClass, typeArgumentsSerializers, $super) {
		    typeArgumentsSerializers = typeArgumentsSerializers === VOID ? emptyList() : typeArgumentsSerializers;
		    return $super === VOID ? this.dh(kClass, typeArgumentsSerializers) : $super.dh.call(this, kClass, typeArgumentsSerializers);
		  };
		  function SerialModuleImpl(class2ContextualFactory, polyBase2Serializers, polyBase2DefaultSerializerProvider, polyBase2NamedSerializers, polyBase2DefaultDeserializerProvider) {
		    SerializersModule.call(this);
		    this.a10_1 = class2ContextualFactory;
		    this.b10_1 = polyBase2Serializers;
		    this.c10_1 = polyBase2DefaultSerializerProvider;
		    this.d10_1 = polyBase2NamedSerializers;
		    this.e10_1 = polyBase2DefaultDeserializerProvider;
		  }
		  protoOf(SerialModuleImpl).gl = function (baseClass, value) {
		    if (!isInstanceOf(value, baseClass))
		      return null;
		    var tmp0_safe_receiver = this.b10_1.u1(baseClass);
		    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u1(getKClassFromExpression(value));
		    var registered = (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
		    if (!(registered == null))
		      return registered;
		    var tmp_0 = this.c10_1.u1(baseClass);
		    var tmp1_safe_receiver = (!(tmp_0 == null) ? typeof tmp_0 === 'function' : false) ? tmp_0 : null;
		    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(value);
		  };
		  protoOf(SerialModuleImpl).fl = function (baseClass, serializedClassName) {
		    var tmp0_safe_receiver = this.d10_1.u1(baseClass);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.collections.get' call
		      tmp = (isInterface(tmp0_safe_receiver, KtMap) ? tmp0_safe_receiver : THROW_CCE()).u1(serializedClassName);
		    }
		    var tmp_0 = tmp;
		    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
		    if (!(registered == null))
		      return registered;
		    var tmp_1 = this.e10_1.u1(baseClass);
		    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
		    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
		  };
		  protoOf(SerialModuleImpl).dh = function (kClass, typeArgumentsSerializers) {
		    var tmp0_safe_receiver = this.a10_1.u1(kClass);
		    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f10(typeArgumentsSerializers);
		    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : null;
		  };
		  protoOf(SerialModuleImpl).zz = function (collector) {
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this.a10_1.x1().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var kclass = element.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var serial = element.r1();
		      if (serial instanceof Argless) {
		        var tmp = isInterface(kclass, KClass) ? kclass : THROW_CCE();
		        var tmp_0 = serial.i10_1;
		        collector.j10(tmp, isInterface(tmp_0, KSerializer) ? tmp_0 : THROW_CCE());
		      } else {
		        if (serial instanceof WithTypeArguments) {
		          collector.h10(kclass, serial.g10_1);
		        }
		      }
		    }
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_0 = this.b10_1.x1().i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var baseClass = element_0.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var classMap = element_0.r1();
		      // Inline function 'kotlin.collections.forEach' call
		      // Inline function 'kotlin.collections.iterator' call
		      var tmp0_iterator_1 = classMap.x1().i();
		      while (tmp0_iterator_1.j()) {
		        var element_1 = tmp0_iterator_1.k();
		        // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>.<anonymous>' call
		        // Inline function 'kotlin.collections.component1' call
		        var actualClass = element_1.q1();
		        // Inline function 'kotlin.collections.component2' call
		        var serializer = element_1.r1();
		        var tmp_1 = isInterface(baseClass, KClass) ? baseClass : THROW_CCE();
		        var tmp_2 = isInterface(actualClass, KClass) ? actualClass : THROW_CCE();
		        // Inline function 'kotlinx.serialization.internal.cast' call
		        var tmp$ret$9 = isInterface(serializer, KSerializer) ? serializer : THROW_CCE();
		        collector.k10(tmp_1, tmp_2, tmp$ret$9);
		      }
		    }
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_2 = this.c10_1.x1().i();
		    while (tmp0_iterator_2.j()) {
		      var element_2 = tmp0_iterator_2.k();
		      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var baseClass_0 = element_2.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var provider = element_2.r1();
		      var tmp_3 = isInterface(baseClass_0, KClass) ? baseClass_0 : THROW_CCE();
		      collector.l10(tmp_3, typeof provider === 'function' ? provider : THROW_CCE());
		    }
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_3 = this.e10_1.x1().i();
		    while (tmp0_iterator_3.j()) {
		      var element_3 = tmp0_iterator_3.k();
		      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var baseClass_1 = element_3.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var provider_0 = element_3.r1();
		      var tmp_4 = isInterface(baseClass_1, KClass) ? baseClass_1 : THROW_CCE();
		      collector.m10(tmp_4, typeof provider_0 === 'function' ? provider_0 : THROW_CCE());
		    }
		  };
		  function Argless() {
		  }
		  function WithTypeArguments() {
		  }
		  function ContextualProvider() {
		  }
		  var properties_initialized_SerializersModule_kt_fjigjn;
		  function _init_properties_SerializersModule_kt__u78ha3() {
		    if (!properties_initialized_SerializersModule_kt_fjigjn) {
		      properties_initialized_SerializersModule_kt_fjigjn = true;
		      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap(), emptyMap());
		    }
		  }
		  function EmptySerializersModule_0() {
		    return get_EmptySerializersModuleLegacyJs();
		  }
		  function SerializersModuleCollector$contextual$lambda($serializer) {
		    return function (it) {
		      return $serializer;
		    };
		  }
		  function SerializersModuleCollector() {
		  }
		  function SerializableWith(serializer) {
		    this.n10_1 = serializer;
		  }
		  protoOf(SerializableWith).equals = function (other) {
		    if (!(other instanceof SerializableWith))
		      return false;
		    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
		    if (!this.n10_1.equals(tmp0_other_with_cast.n10_1))
		      return false;
		    return true;
		  };
		  protoOf(SerializableWith).hashCode = function () {
		    return imul(getStringHashCode('serializer'), 127) ^ this.n10_1.hashCode();
		  };
		  protoOf(SerializableWith).toString = function () {
		    return '@kotlinx.serialization.SerializableWith(serializer=' + toString(this.n10_1) + ')';
		  };
		  function createCache(factory) {
		    return new createCache$1(factory);
		  }
		  function createParametrizedCache(factory) {
		    return new createParametrizedCache$1(factory);
		  }
		  function isInstanceOf(_this__u8e3s4, kclass) {
		    return kclass.t8(_this__u8e3s4);
		  }
		  function compiledSerializerImpl(_this__u8e3s4) {
		    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
		    var tmp;
		    if (tmp1_elvis_lhs == null) {
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp0_safe_receiver = get_js(_this__u8e3s4).Companion;
		      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
		      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
		    } else {
		      tmp = tmp1_elvis_lhs;
		    }
		    return tmp;
		  }
		  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
		    throw SerializationException_init_$Create$_0("Serializer for class '" + _this__u8e3s4.s8() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
		  }
		  function isReferenceArray(rootClass) {
		    return rootClass.equals(PrimitiveClasses_getInstance().q9());
		  }
		  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
		    var tmp;
		    try {
		      // Inline function 'kotlin.reflect.findAssociatedObject' call
		      var assocObject = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
		      var tmp_0;
		      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
		        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
		      } else {
		        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
		          var tmp_1 = assocObject.pr(args.slice());
		          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
		        } else {
		          if (get_isInterface(_this__u8e3s4)) {
		            tmp_0 = new PolymorphicSerializer(_this__u8e3s4);
		          } else {
		            tmp_0 = null;
		          }
		        }
		      }
		      tmp = tmp_0;
		    } catch ($p) {
		      var tmp_2;
		      tmp_2 = null;
		      tmp = tmp_2;
		    }
		    return tmp;
		  }
		  function get_isInterface(_this__u8e3s4) {
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp0_safe_receiver = get_js(_this__u8e3s4).$metadata$;
		    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kind) == 'interface';
		  }
		  function toNativeArrayImpl(_this__u8e3s4, eClass) {
		    // Inline function 'kotlin.collections.toTypedArray' call
		    return copyToArray(_this__u8e3s4);
		  }
		  function getChecked(_this__u8e3s4, index) {
		    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
		      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4).toString());
		    return _this__u8e3s4[index];
		  }
		  function getChecked_0(_this__u8e3s4, index) {
		    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
		      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices_0(_this__u8e3s4).toString());
		    return _this__u8e3s4[index];
		  }
		  function createCache$1($factory) {
		    this.o10_1 = $factory;
		  }
		  protoOf(createCache$1).fh = function (key) {
		    return this.o10_1(key);
		  };
		  function createParametrizedCache$1($factory) {
		    this.p10_1 = $factory;
		  }
		  protoOf(createParametrizedCache$1).gh = function (key, types) {
		    // Inline function 'kotlin.runCatching' call
		    var tmp;
		    try {
		      // Inline function 'kotlin.Companion.success' call
		      // Inline function 'kotlinx.serialization.internal.<no name provided>.get.<anonymous>' call
		      var value = this.p10_1(key, types);
		      tmp = _Result___init__impl__xyqfz8(value);
		    } catch ($p) {
		      var tmp_0;
		      if ($p instanceof Error) {
		        var e = $p;
		        // Inline function 'kotlin.Companion.failure' call
		        tmp_0 = _Result___init__impl__xyqfz8(createFailure(e));
		      } else {
		        throw $p;
		      }
		      tmp = tmp_0;
		    }
		    return tmp;
		  };
		  //region block: post-declaration
		  protoOf(SerialDescriptorImpl).hh = get_isNullable;
		  protoOf(SerialDescriptorImpl).nh = get_isInline;
		  protoOf(AbstractDecoder).uj = decodeSerializableElement$default;
		  protoOf(AbstractDecoder).gj = decodeSerializableValue;
		  protoOf(AbstractDecoder).xj = decodeSequentially;
		  protoOf(AbstractDecoder).zj = decodeCollectionSize;
		  protoOf(AbstractEncoder).cl = encodeNotNullMark;
		  protoOf(AbstractEncoder).dl = beginCollection;
		  protoOf(AbstractEncoder).zk = encodeSerializableValue;
		  protoOf(AbstractEncoder).bl = encodeNullableSerializableValue;
		  protoOf(AbstractEncoder).el = shouldEncodeElementDefault;
		  protoOf(ListLikeDescriptor).hh = get_isNullable;
		  protoOf(ListLikeDescriptor).nh = get_isInline;
		  protoOf(ListLikeDescriptor).lh = get_annotations;
		  protoOf(MapLikeDescriptor).hh = get_isNullable;
		  protoOf(MapLikeDescriptor).nh = get_isInline;
		  protoOf(MapLikeDescriptor).lh = get_annotations;
		  protoOf(PluginGeneratedSerialDescriptor).hh = get_isNullable;
		  protoOf(PluginGeneratedSerialDescriptor).nh = get_isInline;
		  protoOf(InlinePrimitiveDescriptor$1).hr = typeParametersSerializers;
		  protoOf(PrimitiveSerialDescriptor_0).hh = get_isNullable;
		  protoOf(PrimitiveSerialDescriptor_0).nh = get_isInline;
		  protoOf(PrimitiveSerialDescriptor_0).lh = get_annotations;
		  protoOf(TaggedEncoder).dl = beginCollection;
		  protoOf(TaggedEncoder).zk = encodeSerializableValue;
		  protoOf(TaggedEncoder).bl = encodeNullableSerializableValue;
		  protoOf(TaggedEncoder).el = shouldEncodeElementDefault;
		  protoOf(TaggedDecoder).uj = decodeSerializableElement$default;
		  protoOf(TaggedDecoder).gj = decodeSerializableValue;
		  protoOf(TaggedDecoder).xj = decodeSequentially;
		  protoOf(TaggedDecoder).zj = decodeCollectionSize;
		  //endregion
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = ObjectSerializer_init_$Create$;
		  _.$_$.b = SealedClassSerializer_init_$Create$;
		  _.$_$.c = SerializationException_init_$Init$_0;
		  _.$_$.d = SerializationException_init_$Create$_0;
		  _.$_$.e = UnknownFieldException_init_$Create$;
		  _.$_$.f = SEALED_getInstance;
		  _.$_$.g = STRING_getInstance;
		  _.$_$.h = CONTEXTUAL_getInstance;
		  _.$_$.i = ENUM_getInstance;
		  _.$_$.j = LIST_getInstance;
		  _.$_$.k = MAP_getInstance;
		  _.$_$.l = BooleanSerializer_getInstance;
		  _.$_$.m = DoubleSerializer_getInstance;
		  _.$_$.n = FloatSerializer_getInstance;
		  _.$_$.o = IntSerializer_getInstance;
		  _.$_$.p = LongSerializer_getInstance;
		  _.$_$.q = StringSerializer_getInstance;
		  _.$_$.r = UnitSerializer_getInstance;
		  _.$_$.s = ListSerializer;
		  _.$_$.t = MapSerializer;
		  _.$_$.u = get_nullable;
		  _.$_$.v = serializer_0;
		  _.$_$.w = serializer_9;
		  _.$_$.x = serializer_7;
		  _.$_$.y = serializer_11;
		  _.$_$.z = serializer_5;
		  _.$_$.a1 = PolymorphicKind;
		  _.$_$.b1 = PrimitiveKind;
		  _.$_$.c1 = PrimitiveSerialDescriptor;
		  _.$_$.d1 = get_annotations;
		  _.$_$.e1 = get_isInline;
		  _.$_$.f1 = get_isNullable;
		  _.$_$.g1 = SerialDescriptor;
		  _.$_$.h1 = ENUM;
		  _.$_$.i1 = buildSerialDescriptor;
		  _.$_$.j1 = getContextualDescriptor;
		  _.$_$.k1 = AbstractDecoder;
		  _.$_$.l1 = AbstractEncoder;
		  _.$_$.m1 = CompositeDecoder;
		  _.$_$.n1 = CompositeEncoder;
		  _.$_$.o1 = Decoder;
		  _.$_$.p1 = Encoder;
		  _.$_$.q1 = AbstractPolymorphicSerializer;
		  _.$_$.r1 = ArrayListSerializer;
		  _.$_$.s1 = ElementMarker;
		  _.$_$.t1 = EnumDescriptor;
		  _.$_$.u1 = EnumSerializer;
		  _.$_$.v1 = typeParametersSerializers;
		  _.$_$.w1 = GeneratedSerializer;
		  _.$_$.x1 = LinkedHashMapSerializer;
		  _.$_$.y1 = NamedValueDecoder;
		  _.$_$.z1 = NamedValueEncoder;
		  _.$_$.a2 = PluginGeneratedSerialDescriptor;
		  _.$_$.b2 = ReferenceArraySerializer;
		  _.$_$.c2 = SerializerFactory;
		  _.$_$.d2 = jsonCachedSerialNames;
		  _.$_$.e2 = throwMissingFieldException;
		  _.$_$.f2 = EmptySerializersModule_0;
		  _.$_$.g2 = contextual;
		  _.$_$.h2 = SerializersModuleCollector;
		  _.$_$.i2 = DeserializationStrategy;
		  _.$_$.j2 = KSerializer;
		  _.$_$.k2 = MissingFieldException;
		  _.$_$.l2 = SealedClassSerializer;
		  _.$_$.m2 = Serializable;
		  _.$_$.n2 = SerializationException;
		  _.$_$.o2 = findPolymorphicSerializer;
		  _.$_$.p2 = serializerOrNull;
		  _.$_$.q2 = serializer;
		  //endregion
		  return _;
		}));

		
} (kotlinxSerializationKotlinxSerializationCoreJsIr));
	return kotlinxSerializationKotlinxSerializationCoreJsIrExports;
}

var kotlinxSerializationKotlinxSerializationJsonJsIrExports = {};
var kotlinxSerializationKotlinxSerializationJsonJsIr = {
  get exports(){ return kotlinxSerializationKotlinxSerializationJsonJsIrExports; },
  set exports(v){ kotlinxSerializationKotlinxSerializationJsonJsIrExports = v; },
};

var hasRequiredKotlinxSerializationKotlinxSerializationJsonJsIr;

function requireKotlinxSerializationKotlinxSerializationJsonJsIr () {
	if (hasRequiredKotlinxSerializationKotlinxSerializationJsonJsIr) return kotlinxSerializationKotlinxSerializationJsonJsIrExports;
	hasRequiredKotlinxSerializationKotlinxSerializationJsonJsIr = 1;
	(function (module, exports) {
		(function (root, factory) {
		  factory(module.exports, requireKotlinxSerializationKotlinxSerializationCoreJsIr(), requireKotlinKotlinStdlib());
		}(globalThis, function (_, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_kotlin) {
		  //region block: imports
		  var imul = Math.imul;
		  var EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f2;
		  var protoOf = kotlin_kotlin.$_$.a8;
		  var initMetadataForObject = kotlin_kotlin.$_$.e7;
		  var VOID = kotlin_kotlin.$_$.f;
		  var Unit_instance = kotlin_kotlin.$_$.w3;
		  var initMetadataForClass = kotlin_kotlin.$_$.z6;
		  var toString = kotlin_kotlin.$_$.e8;
		  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.h1;
		  var charSequenceLength = kotlin_kotlin.$_$.o6;
		  var charSequenceGet = kotlin_kotlin.$_$.n6;
		  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.n1;
		  var equals = kotlin_kotlin.$_$.r6;
		  var SerializationException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
		  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
		  var buildSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
		  var getKClassFromExpression = kotlin_kotlin.$_$.d;
		  var serializerOrNull = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p2;
		  var THROW_CCE = kotlin_kotlin.$_$.y9;
		  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
		  var isInterface = kotlin_kotlin.$_$.m7;
		  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
		  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
		  var initMetadataForInterface = kotlin_kotlin.$_$.c7;
		  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
		  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.x;
		  var hashCode = kotlin_kotlin.$_$.y6;
		  var joinToString = kotlin_kotlin.$_$.k5;
		  var KtMap = kotlin_kotlin.$_$.f4;
		  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.g;
		  var lazy = kotlin_kotlin.$_$.ra;
		  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c2;
		  var getBooleanHashCode = kotlin_kotlin.$_$.u6;
		  var getStringHashCode = kotlin_kotlin.$_$.x6;
		  var KtList = kotlin_kotlin.$_$.d4;
		  var toInt = kotlin_kotlin.$_$.e9;
		  var toLong = kotlin_kotlin.$_$.g9;
		  var toDouble = kotlin_kotlin.$_$.c9;
		  var toLongOrNull = kotlin_kotlin.$_$.f9;
		  var toDoubleOrNull = kotlin_kotlin.$_$.b9;
		  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.r;
		  var StringCompanionObject_instance = kotlin_kotlin.$_$.l3;
		  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
		  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
		  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
		  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
		  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
		  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
		  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
		  var toULongOrNull = kotlin_kotlin.$_$.j9;
		  var ULong = kotlin_kotlin.$_$.ga;
		  var Companion_getInstance = kotlin_kotlin.$_$.u3;
		  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
		  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.o2;
		  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.j1;
		  var lazy_0 = kotlin_kotlin.$_$.sa;
		  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
		  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
		  var get_annotations = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
		  var KProperty1 = kotlin_kotlin.$_$.l8;
		  var getPropertyCallableRef = kotlin_kotlin.$_$.w6;
		  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
		  var CompositeEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
		  var toLong_0 = kotlin_kotlin.$_$.c8;
		  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.e2;
		  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.g2;
		  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.n2;
		  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.p2;
		  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.v1;
		  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.x1;
		  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.w2;
		  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.y2;
		  var ElementMarker = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
		  var captureStack = kotlin_kotlin.$_$.l6;
		  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n2;
		  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
		  var charSequenceSubSequence = kotlin_kotlin.$_$.p6;
		  var coerceAtLeast = kotlin_kotlin.$_$.f8;
		  var coerceAtMost = kotlin_kotlin.$_$.g8;
		  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.i;
		  var singleOrNull = kotlin_kotlin.$_$.z5;
		  var ensureNotNull = kotlin_kotlin.$_$.na;
		  var emptyMap = kotlin_kotlin.$_$.c5;
		  var getValue = kotlin_kotlin.$_$.g5;
		  var copyOf = kotlin_kotlin.$_$.x4;
		  var copyOf_0 = kotlin_kotlin.$_$.y4;
		  var fillArrayVal = kotlin_kotlin.$_$.t6;
		  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
		  var DeepRecursiveFunction = kotlin_kotlin.$_$.p9;
		  var invoke = kotlin_kotlin.$_$.oa;
		  var CoroutineImpl = kotlin_kotlin.$_$.i6;
		  var DeepRecursiveScope = kotlin_kotlin.$_$.q9;
		  var Unit = kotlin_kotlin.$_$.ja;
		  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.h6;
		  var initMetadataForLambda = kotlin_kotlin.$_$.d7;
		  var initMetadataForCoroutine = kotlin_kotlin.$_$.b7;
		  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
		  var getKClass = kotlin_kotlin.$_$.e;
		  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i2;
		  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l2;
		  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d2;
		  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
		  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
		  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
		  var CONTEXTUAL_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
		  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
		  var contextual = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g2;
		  var SerializersModuleCollector = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h2;
		  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
		  var plus = kotlin_kotlin.$_$.ua;
		  var MissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k2;
		  var IllegalArgumentException = kotlin_kotlin.$_$.t9;
		  var isFinite = kotlin_kotlin.$_$.qa;
		  var isFinite_0 = kotlin_kotlin.$_$.pa;
		  var toUInt = kotlin_kotlin.$_$.i9;
		  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.f2;
		  var toULong = kotlin_kotlin.$_$.k9;
		  var toUByte = kotlin_kotlin.$_$.h9;
		  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.w1;
		  var toUShort = kotlin_kotlin.$_$.l9;
		  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.x2;
		  var objectCreate = kotlin_kotlin.$_$.z7;
		  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
		  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o2;
		  var toString_0 = kotlin_kotlin.$_$.q1;
		  var Companion_getInstance_0 = kotlin_kotlin.$_$.t3;
		  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
		  var Companion_getInstance_1 = kotlin_kotlin.$_$.s3;
		  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
		  var Companion_getInstance_2 = kotlin_kotlin.$_$.v3;
		  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
		  var setOf = kotlin_kotlin.$_$.y5;
		  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.p1;
		  var numberToChar = kotlin_kotlin.$_$.v7;
		  var equals_0 = kotlin_kotlin.$_$.o8;
		  var noWhenBranchMatchedException = kotlin_kotlin.$_$.ta;
		  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
		  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.f1;
		  var toByte = kotlin_kotlin.$_$.b8;
		  var toShort = kotlin_kotlin.$_$.d8;
		  var single = kotlin_kotlin.$_$.v8;
		  var Char = kotlin_kotlin.$_$.o9;
		  var emptySet = kotlin_kotlin.$_$.d5;
		  var plus_0 = kotlin_kotlin.$_$.v5;
		  var toList = kotlin_kotlin.$_$.c6;
		  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.wa;
		  var NamedValueEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z1;
		  var Enum = kotlin_kotlin.$_$.r9;
		  var getContextualDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
		  var last = kotlin_kotlin.$_$.o5;
		  var removeLast = kotlin_kotlin.$_$.w5;
		  var lastIndexOf = kotlin_kotlin.$_$.s8;
		  var Long = kotlin_kotlin.$_$.u9;
		  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.o1;
		  var charArray = kotlin_kotlin.$_$.m6;
		  var indexOf = kotlin_kotlin.$_$.p8;
		  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.w;
		  var HashMap_init_$Create$ = kotlin_kotlin.$_$.k;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForClass(Json, 'Json');
		  initMetadataForObject(Default, 'Default', VOID, Json);
		  initMetadataForClass(JsonBuilder, 'JsonBuilder');
		  initMetadataForClass(JsonImpl, 'JsonImpl', VOID, Json);
		  initMetadataForClass(JsonClassDiscriminator, 'JsonClassDiscriminator');
		  initMetadataForClass(JsonNames, 'JsonNames');
		  initMetadataForClass(JsonConfiguration, 'JsonConfiguration');
		  initMetadataForClass(JsonContentPolymorphicSerializer, 'JsonContentPolymorphicSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForInterface(JsonDecoder, 'JsonDecoder', VOID, VOID, [Decoder, CompositeDecoder]);
		  initMetadataForCompanion(Companion);
		  initMetadataForClass(JsonElement, 'JsonElement', VOID, VOID, VOID, VOID, VOID, {0: JsonElementSerializer_getInstance});
		  initMetadataForCompanion(Companion_0);
		  initMetadataForClass(JsonObject, 'JsonObject', VOID, JsonElement, [JsonElement, KtMap], VOID, VOID, {0: JsonObjectSerializer_getInstance});
		  initMetadataForClass(JsonPrimitive, 'JsonPrimitive', VOID, JsonElement, VOID, VOID, VOID, {0: JsonPrimitiveSerializer_getInstance});
		  initMetadataForObject(JsonNull, 'JsonNull', VOID, JsonPrimitive, [JsonPrimitive, SerializerFactory], VOID, VOID, {0: JsonNullSerializer_getInstance});
		  initMetadataForCompanion(Companion_1);
		  initMetadataForClass(JsonLiteral, 'JsonLiteral', VOID, JsonPrimitive);
		  initMetadataForCompanion(Companion_2);
		  initMetadataForClass(JsonArray, 'JsonArray', VOID, JsonElement, [JsonElement, KtList], VOID, VOID, {0: JsonArraySerializer_getInstance});
		  initMetadataForClass(JsonObjectBuilder, 'JsonObjectBuilder');
		  initMetadataForObject(JsonElementSerializer, 'JsonElementSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(JsonObjectDescriptor, 'JsonObjectDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForObject(JsonObjectSerializer, 'JsonObjectSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(JsonArrayDescriptor, 'JsonArrayDescriptor', VOID, VOID, [SerialDescriptor]);
		  initMetadataForObject(JsonArraySerializer, 'JsonArraySerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(JsonPrimitiveSerializer, 'JsonPrimitiveSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(JsonNullSerializer, 'JsonNullSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForObject(JsonLiteralSerializer, 'JsonLiteralSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(defer$1, VOID, VOID, VOID, [SerialDescriptor]);
		  initMetadataForInterface(JsonEncoder, 'JsonEncoder', VOID, VOID, [Encoder, CompositeEncoder]);
		  initMetadataForClass(Composer, 'Composer');
		  initMetadataForClass(ComposerForUnsignedNumbers, 'ComposerForUnsignedNumbers', VOID, Composer);
		  initMetadataForClass(ComposerWithPrettyPrint, 'ComposerWithPrettyPrint', VOID, Composer);
		  initMetadataForClass(JsonElementMarker, 'JsonElementMarker');
		  initMetadataForClass(JsonException, 'JsonException', VOID, SerializationException);
		  initMetadataForClass(JsonEncodingException, 'JsonEncodingException', VOID, JsonException);
		  initMetadataForClass(JsonDecodingException, 'JsonDecodingException', VOID, JsonException);
		  initMetadataForObject(Tombstone, 'Tombstone');
		  initMetadataForClass(JsonPath, 'JsonPath', JsonPath);
		  initMetadataForLambda(JsonTreeReader$readDeepRecursive$slambda, CoroutineImpl, VOID, [2]);
		  initMetadataForCoroutine($readObjectCOROUTINE$0, CoroutineImpl);
		  initMetadataForClass(JsonTreeReader, 'JsonTreeReader', VOID, VOID, VOID, [0]);
		  initMetadataForClass(PolymorphismValidator, 'PolymorphismValidator', VOID, VOID, [SerializersModuleCollector]);
		  initMetadataForClass(Key, 'Key', Key);
		  initMetadataForClass(DescriptorSchemaCache, 'DescriptorSchemaCache', DescriptorSchemaCache);
		  initMetadataForClass(DiscriminatorHolder, 'DiscriminatorHolder');
		  initMetadataForClass(StreamingJsonDecoder, 'StreamingJsonDecoder', VOID, AbstractDecoder, [JsonDecoder, AbstractDecoder]);
		  initMetadataForClass(JsonDecoderForUnsignedTypes, 'JsonDecoderForUnsignedTypes', VOID, AbstractDecoder);
		  initMetadataForClass(StreamingJsonEncoder, 'StreamingJsonEncoder', VOID, AbstractEncoder, [JsonEncoder, AbstractEncoder]);
		  initMetadataForClass(AbstractJsonTreeDecoder, 'AbstractJsonTreeDecoder', VOID, NamedValueDecoder, [NamedValueDecoder, JsonDecoder]);
		  initMetadataForClass(JsonTreeDecoder, 'JsonTreeDecoder', VOID, AbstractJsonTreeDecoder);
		  initMetadataForClass(JsonTreeListDecoder, 'JsonTreeListDecoder', VOID, AbstractJsonTreeDecoder);
		  initMetadataForClass(JsonPrimitiveDecoder, 'JsonPrimitiveDecoder', VOID, AbstractJsonTreeDecoder);
		  initMetadataForClass(JsonTreeMapDecoder, 'JsonTreeMapDecoder', VOID, JsonTreeDecoder);
		  initMetadataForClass(AbstractJsonTreeEncoder, 'AbstractJsonTreeEncoder', VOID, NamedValueEncoder, [NamedValueEncoder, JsonEncoder]);
		  initMetadataForClass(JsonTreeEncoder, 'JsonTreeEncoder', VOID, AbstractJsonTreeEncoder);
		  initMetadataForClass(AbstractJsonTreeEncoder$encodeTaggedInline$1, VOID, VOID, AbstractEncoder);
		  initMetadataForClass(JsonPrimitiveEncoder, 'JsonPrimitiveEncoder', VOID, AbstractJsonTreeEncoder);
		  initMetadataForClass(JsonTreeListEncoder, 'JsonTreeListEncoder', VOID, AbstractJsonTreeEncoder);
		  initMetadataForClass(JsonTreeMapEncoder, 'JsonTreeMapEncoder', VOID, JsonTreeEncoder);
		  initMetadataForClass(WriteMode, 'WriteMode', VOID, Enum);
		  initMetadataForClass(AbstractJsonLexer, 'AbstractJsonLexer');
		  initMetadataForObject(CharMappings, 'CharMappings');
		  initMetadataForClass(StringJsonLexer, 'StringJsonLexer', VOID, AbstractJsonLexer);
		  initMetadataForClass(JsonToStringWriter, 'JsonToStringWriter', JsonToStringWriter);
		  //endregion
		  function Default() {
		    Default_instance = this;
		    Json.call(this, new JsonConfiguration(), EmptySerializersModule());
		  }
		  var Default_instance;
		  function Default_getInstance() {
		    if (Default_instance == null)
		      new Default();
		    return Default_instance;
		  }
		  function Json(configuration, serializersModule) {
		    Default_getInstance();
		    this.z10_1 = configuration;
		    this.a11_1 = serializersModule;
		    this.b11_1 = new DescriptorSchemaCache();
		  }
		  protoOf(Json).wj = function () {
		    return this.a11_1;
		  };
		  protoOf(Json).c11 = function (serializer, value) {
		    var result = new JsonToStringWriter();
		    try {
		      encodeByWriter(this, result, serializer, value);
		      return result.toString();
		    }finally {
		      result.i11();
		    }
		  };
		  protoOf(Json).d11 = function (deserializer, string) {
		    var lexer = new StringJsonLexer(string);
		    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer, deserializer.xf(), null);
		    var result = input.gj(deserializer);
		    lexer.v11();
		    return result;
		  };
		  protoOf(Json).e11 = function (serializer, value) {
		    return writeJson(this, value, serializer);
		  };
		  protoOf(Json).f11 = function (deserializer, element) {
		    return readJson(this, element, deserializer);
		  };
		  protoOf(Json).g11 = function (string) {
		    return this.d11(JsonElementSerializer_getInstance(), string);
		  };
		  function Json_0(from, builderAction) {
		    from = from === VOID ? Default_getInstance() : from;
		    var builder = new JsonBuilder(from);
		    builderAction(builder);
		    var conf = builder.j12();
		    return new JsonImpl(conf, builder.i12_1);
		  }
		  function JsonBuilder(json) {
		    this.w11_1 = json.z10_1.k12_1;
		    this.x11_1 = json.z10_1.p12_1;
		    this.y11_1 = json.z10_1.l12_1;
		    this.z11_1 = json.z10_1.m12_1;
		    this.a12_1 = json.z10_1.n12_1;
		    this.b12_1 = json.z10_1.o12_1;
		    this.c12_1 = json.z10_1.q12_1;
		    this.d12_1 = json.z10_1.r12_1;
		    this.e12_1 = json.z10_1.s12_1;
		    this.f12_1 = json.z10_1.t12_1;
		    this.g12_1 = json.z10_1.u12_1;
		    this.h12_1 = json.z10_1.v12_1;
		    this.i12_1 = json.wj();
		  }
		  protoOf(JsonBuilder).j12 = function () {
		    if (this.e12_1) {
		      // Inline function 'kotlin.require' call
		      // Inline function 'kotlin.contracts.contract' call
		      if (!(this.f12_1 === 'type')) {
		        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
		        var message = 'Class discriminator should not be specified when array polymorphism is specified';
		        throw IllegalArgumentException_init_$Create$(toString(message));
		      }
		    }
		    if (!this.b12_1) {
		      // Inline function 'kotlin.require' call
		      // Inline function 'kotlin.contracts.contract' call
		      if (!(this.c12_1 === '    ')) {
		        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
		        var message_0 = 'Indent should not be specified when default printing mode is used';
		        throw IllegalArgumentException_init_$Create$(toString(message_0));
		      }
		    } else if (!(this.c12_1 === '    ')) {
		      var tmp$ret$3;
		      $l$block: {
		        // Inline function 'kotlin.text.all' call
		        var indexedObject = this.c12_1;
		        var inductionVariable = 0;
		        while (inductionVariable < charSequenceLength(indexedObject)) {
		          var element = charSequenceGet(indexedObject, inductionVariable);
		          inductionVariable = inductionVariable + 1 | 0;
		          // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
		          if (!(element === _Char___init__impl__6a9atx(32) || element === _Char___init__impl__6a9atx(9) || element === _Char___init__impl__6a9atx(13) || element === _Char___init__impl__6a9atx(10))) {
		            tmp$ret$3 = false;
		            break $l$block;
		          }
		        }
		        tmp$ret$3 = true;
		      }
		      var allWhitespaces = tmp$ret$3;
		      // Inline function 'kotlin.require' call
		      // Inline function 'kotlin.contracts.contract' call
		      if (!allWhitespaces) {
		        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
		        var message_1 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.c12_1;
		        throw IllegalArgumentException_init_$Create$(toString(message_1));
		      }
		    }
		    return new JsonConfiguration(this.w11_1, this.y11_1, this.z11_1, this.a12_1, this.b12_1, this.x11_1, this.c12_1, this.d12_1, this.e12_1, this.f12_1, this.g12_1, this.h12_1);
		  };
		  function validateConfiguration($this) {
		    if (equals($this.wj(), EmptySerializersModule()))
		      return Unit_instance;
		    var collector = new PolymorphismValidator($this.z10_1.s12_1, $this.z10_1.t12_1);
		    $this.wj().zz(collector);
		  }
		  function JsonImpl(configuration, module_0) {
		    Json.call(this, configuration, module_0);
		    validateConfiguration(this);
		  }
		  function JsonClassDiscriminator() {
		  }
		  function JsonNames() {
		  }
		  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames) {
		    encodeDefaults = encodeDefaults === VOID ? false : encodeDefaults;
		    ignoreUnknownKeys = ignoreUnknownKeys === VOID ? false : ignoreUnknownKeys;
		    isLenient = isLenient === VOID ? false : isLenient;
		    allowStructuredMapKeys = allowStructuredMapKeys === VOID ? false : allowStructuredMapKeys;
		    prettyPrint = prettyPrint === VOID ? false : prettyPrint;
		    explicitNulls = explicitNulls === VOID ? true : explicitNulls;
		    prettyPrintIndent = prettyPrintIndent === VOID ? '    ' : prettyPrintIndent;
		    coerceInputValues = coerceInputValues === VOID ? false : coerceInputValues;
		    useArrayPolymorphism = useArrayPolymorphism === VOID ? false : useArrayPolymorphism;
		    classDiscriminator = classDiscriminator === VOID ? 'type' : classDiscriminator;
		    allowSpecialFloatingPointValues = allowSpecialFloatingPointValues === VOID ? false : allowSpecialFloatingPointValues;
		    useAlternativeNames = useAlternativeNames === VOID ? true : useAlternativeNames;
		    this.k12_1 = encodeDefaults;
		    this.l12_1 = ignoreUnknownKeys;
		    this.m12_1 = isLenient;
		    this.n12_1 = allowStructuredMapKeys;
		    this.o12_1 = prettyPrint;
		    this.p12_1 = explicitNulls;
		    this.q12_1 = prettyPrintIndent;
		    this.r12_1 = coerceInputValues;
		    this.s12_1 = useArrayPolymorphism;
		    this.t12_1 = classDiscriminator;
		    this.u12_1 = allowSpecialFloatingPointValues;
		    this.v12_1 = useAlternativeNames;
		  }
		  protoOf(JsonConfiguration).toString = function () {
		    return 'JsonConfiguration(encodeDefaults=' + this.k12_1 + ', ignoreUnknownKeys=' + this.l12_1 + ', isLenient=' + this.m12_1 + ', ' + ('allowStructuredMapKeys=' + this.n12_1 + ', prettyPrint=' + this.o12_1 + ', explicitNulls=' + this.p12_1 + ', ') + ("prettyPrintIndent='" + this.q12_1 + "', coerceInputValues=" + this.r12_1 + ', useArrayPolymorphism=' + this.s12_1 + ', ') + ("classDiscriminator='" + this.t12_1 + "', allowSpecialFloatingPointValues=" + this.u12_1 + ')');
		  };
		  function throwSubtypeNotRegistered($this, subClass, baseClass) {
		    var tmp0_elvis_lhs = subClass.s8();
		    var subClassName = tmp0_elvis_lhs == null ? toString(subClass) : tmp0_elvis_lhs;
		    var scope = "in the scope of '" + baseClass.s8() + "'";
		    throw SerializationException_init_$Create$("Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
		  }
		  function JsonContentPolymorphicSerializer(baseClass) {
		    this.w12_1 = baseClass;
		    this.x12_1 = buildSerialDescriptor('JsonContentPolymorphicSerializer<' + this.w12_1.s8() + '>', SEALED_getInstance(), []);
		  }
		  protoOf(JsonContentPolymorphicSerializer).xf = function () {
		    return this.x12_1;
		  };
		  protoOf(JsonContentPolymorphicSerializer).ng = function (encoder, value) {
		    var tmp0_elvis_lhs = encoder.wj().gl(this.w12_1, value);
		    var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? serializerOrNull(getKClassFromExpression(value)) : tmp0_elvis_lhs;
		    var tmp;
		    if (tmp1_elvis_lhs == null) {
		      throwSubtypeNotRegistered(this, getKClassFromExpression(value), this.w12_1);
		    } else {
		      tmp = tmp1_elvis_lhs;
		    }
		    var actualSerializer = tmp;
		    (isInterface(actualSerializer, KSerializer) ? actualSerializer : THROW_CCE()).yf(encoder, value);
		  };
		  protoOf(JsonContentPolymorphicSerializer).yf = function (encoder, value) {
		    return this.ng(encoder, !(value == null) ? value : THROW_CCE());
		  };
		  protoOf(JsonContentPolymorphicSerializer).zf = function (decoder) {
		    var input = asJsonDecoder(decoder);
		    var tree = input.y12();
		    var tmp = this.z12(tree);
		    var actualSerializer = isInterface(tmp, KSerializer) ? tmp : THROW_CCE();
		    return input.a13().f11(actualSerializer, tree);
		  };
		  function JsonDecoder() {
		  }
		  function Companion() {
		  }
		  function JsonElement() {
		  }
		  function Companion_0() {
		  }
		  protoOf(Companion_0).b13 = function () {
		    return JsonObjectSerializer_getInstance();
		  };
		  var Companion_instance_0;
		  function JsonObject$toString$lambda(_name_for_destructuring_parameter_0__wldtmu) {
		    // Inline function 'kotlin.collections.component1' call
		    var k = _name_for_destructuring_parameter_0__wldtmu.q1();
		    // Inline function 'kotlin.collections.component2' call
		    var v = _name_for_destructuring_parameter_0__wldtmu.r1();
		    // Inline function 'kotlin.text.buildString' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.apply' call
		    var this_0 = StringBuilder_init_$Create$();
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlinx.serialization.json.JsonObject.toString.<anonymous>.<anonymous>' call
		    printQuoted(this_0, k);
		    this_0.j7(_Char___init__impl__6a9atx(58));
		    this_0.h7(v);
		    return this_0.toString();
		  }
		  function JsonObject(content) {
		    JsonElement.call(this);
		    this.c13_1 = content;
		  }
		  protoOf(JsonObject).x1 = function () {
		    return this.c13_1.x1();
		  };
		  protoOf(JsonObject).v1 = function () {
		    return this.c13_1.v1();
		  };
		  protoOf(JsonObject).l = function () {
		    return this.c13_1.l();
		  };
		  protoOf(JsonObject).w1 = function () {
		    return this.c13_1.w1();
		  };
		  protoOf(JsonObject).d13 = function (key) {
		    return this.c13_1.s1(key);
		  };
		  protoOf(JsonObject).s1 = function (key) {
		    if (!(!(key == null) ? typeof key === 'string' : false))
		      return false;
		    return this.d13((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
		  };
		  protoOf(JsonObject).e13 = function (key) {
		    return this.c13_1.u1(key);
		  };
		  protoOf(JsonObject).u1 = function (key) {
		    if (!(!(key == null) ? typeof key === 'string' : false))
		      return null;
		    return this.e13((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
		  };
		  protoOf(JsonObject).n = function () {
		    return this.c13_1.n();
		  };
		  protoOf(JsonObject).equals = function (other) {
		    return equals(this.c13_1, other);
		  };
		  protoOf(JsonObject).hashCode = function () {
		    return hashCode(this.c13_1);
		  };
		  protoOf(JsonObject).toString = function () {
		    var tmp = this.c13_1.x1();
		    return joinToString(tmp, ',', '{', '}', VOID, VOID, JsonObject$toString$lambda);
		  };
		  function JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1() {
		    return JsonNullSerializer_getInstance();
		  }
		  function JsonNull() {
		    JsonNull_instance = this;
		    JsonPrimitive.call(this);
		    this.f13_1 = 'null';
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.g13_1 = lazy(tmp_0, JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1);
		  }
		  protoOf(JsonNull).h13 = function () {
		    return this.f13_1;
		  };
		  protoOf(JsonNull).b13 = function () {
		    return this.g13_1.r1();
		  };
		  protoOf(JsonNull).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var JsonNull_instance;
		  function JsonNull_getInstance() {
		    if (JsonNull_instance == null)
		      new JsonNull();
		    return JsonNull_instance;
		  }
		  function Companion_1() {
		  }
		  function JsonPrimitive() {
		    JsonElement.call(this);
		  }
		  protoOf(JsonPrimitive).toString = function () {
		    return this.h13();
		  };
		  function JsonPrimitive_0(value) {
		    if (value == null)
		      return JsonNull_getInstance();
		    return new JsonLiteral(value, false);
		  }
		  function JsonPrimitive_1(value) {
		    if (value == null)
		      return JsonNull_getInstance();
		    return new JsonLiteral(value, false);
		  }
		  function JsonPrimitive_2(value) {
		    if (value == null)
		      return JsonNull_getInstance();
		    return new JsonLiteral(value, true);
		  }
		  function JsonLiteral(body, isString) {
		    JsonPrimitive.call(this);
		    this.i13_1 = isString;
		    this.j13_1 = toString(body);
		  }
		  protoOf(JsonLiteral).h13 = function () {
		    return this.j13_1;
		  };
		  protoOf(JsonLiteral).toString = function () {
		    var tmp;
		    if (this.i13_1) {
		      // Inline function 'kotlin.text.buildString' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlin.apply' call
		      var this_0 = StringBuilder_init_$Create$();
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.json.JsonLiteral.toString.<anonymous>' call
		      printQuoted(this_0, this.j13_1);
		      tmp = this_0.toString();
		    } else {
		      tmp = this.j13_1;
		    }
		    return tmp;
		  };
		  protoOf(JsonLiteral).equals = function (other) {
		    if (this === other)
		      return true;
		    if (other == null || !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
		      return false;
		    if (!(other instanceof JsonLiteral))
		      THROW_CCE();
		    if (!(this.i13_1 === other.i13_1))
		      return false;
		    if (!(this.j13_1 === other.j13_1))
		      return false;
		    return true;
		  };
		  protoOf(JsonLiteral).hashCode = function () {
		    var result = getBooleanHashCode(this.i13_1);
		    result = imul(31, result) + getStringHashCode(this.j13_1) | 0;
		    return result;
		  };
		  function Companion_2() {
		  }
		  function JsonArray(content) {
		    JsonElement.call(this);
		    this.k13_1 = content;
		  }
		  protoOf(JsonArray).l = function () {
		    return this.k13_1.l();
		  };
		  protoOf(JsonArray).l13 = function (element) {
		    return this.k13_1.o1(element);
		  };
		  protoOf(JsonArray).o1 = function (element) {
		    if (!(element instanceof JsonElement))
		      return false;
		    return this.l13(element instanceof JsonElement ? element : THROW_CCE());
		  };
		  protoOf(JsonArray).m13 = function (elements) {
		    return this.k13_1.p1(elements);
		  };
		  protoOf(JsonArray).p1 = function (elements) {
		    return this.m13(elements);
		  };
		  protoOf(JsonArray).m = function (index) {
		    return this.k13_1.m(index);
		  };
		  protoOf(JsonArray).n = function () {
		    return this.k13_1.n();
		  };
		  protoOf(JsonArray).i = function () {
		    return this.k13_1.i();
		  };
		  protoOf(JsonArray).equals = function (other) {
		    return equals(this.k13_1, other);
		  };
		  protoOf(JsonArray).hashCode = function () {
		    return hashCode(this.k13_1);
		  };
		  protoOf(JsonArray).toString = function () {
		    return joinToString(this.k13_1, ',', '[', ']');
		  };
		  function get_booleanOrNull(_this__u8e3s4) {
		    return toBooleanStrictOrNull(_this__u8e3s4.h13());
		  }
		  function get_int(_this__u8e3s4) {
		    return toInt(_this__u8e3s4.h13());
		  }
		  function get_long(_this__u8e3s4) {
		    return toLong(_this__u8e3s4.h13());
		  }
		  function get_float(_this__u8e3s4) {
		    // Inline function 'kotlin.text.toFloat' call
		    var this_0 = _this__u8e3s4.h13();
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return toDouble(this_0);
		  }
		  function get_double(_this__u8e3s4) {
		    return toDouble(_this__u8e3s4.h13());
		  }
		  function get_contentOrNull(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 instanceof JsonNull) {
		      tmp = null;
		    } else {
		      tmp = _this__u8e3s4.h13();
		    }
		    return tmp;
		  }
		  function get_longOrNull(_this__u8e3s4) {
		    return toLongOrNull(_this__u8e3s4.h13());
		  }
		  function get_doubleOrNull(_this__u8e3s4) {
		    return toDoubleOrNull(_this__u8e3s4.h13());
		  }
		  function get_jsonPrimitive(_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      error(_this__u8e3s4, 'JsonPrimitive');
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function error(_this__u8e3s4, element) {
		    throw IllegalArgumentException_init_$Create$('Element ' + toString(getKClassFromExpression(_this__u8e3s4)) + ' is not a ' + element);
		  }
		  function get_jsonObject(_this__u8e3s4) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonObject ? _this__u8e3s4 : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      error(_this__u8e3s4, 'JsonObject');
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function JsonObjectBuilder() {
		    var tmp = this;
		    // Inline function 'kotlin.collections.linkedMapOf' call
		    tmp.n13_1 = LinkedHashMap_init_$Create$();
		  }
		  protoOf(JsonObjectBuilder).o13 = function (key, element) {
		    return this.n13_1.b2(key, element);
		  };
		  protoOf(JsonObjectBuilder).j12 = function () {
		    return new JsonObject(this.n13_1);
		  };
		  function put(_this__u8e3s4, key, value) {
		    return _this__u8e3s4.o13(key, JsonPrimitive_2(value));
		  }
		  function putJsonObject(_this__u8e3s4, key, builderAction) {
		    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
		    // Inline function 'kotlin.contracts.contract' call
		    var builder = new JsonObjectBuilder();
		    builderAction(builder);
		    var tmp$ret$0 = builder.j12();
		    return _this__u8e3s4.o13(key, tmp$ret$0);
		  }
		  function JsonElementSerializer$descriptor$lambda($this$buildSerialDescriptor) {
		    $this$buildSerialDescriptor.ig('JsonPrimitive', defer(JsonElementSerializer$descriptor$lambda$lambda));
		    $this$buildSerialDescriptor.ig('JsonNull', defer(JsonElementSerializer$descriptor$lambda$lambda_0));
		    $this$buildSerialDescriptor.ig('JsonLiteral', defer(JsonElementSerializer$descriptor$lambda$lambda_1));
		    $this$buildSerialDescriptor.ig('JsonObject', defer(JsonElementSerializer$descriptor$lambda$lambda_2));
		    $this$buildSerialDescriptor.ig('JsonArray', defer(JsonElementSerializer$descriptor$lambda$lambda_3));
		    return Unit_instance;
		  }
		  function JsonElementSerializer$descriptor$lambda$lambda() {
		    return JsonPrimitiveSerializer_getInstance().p13_1;
		  }
		  function JsonElementSerializer$descriptor$lambda$lambda_0() {
		    return JsonNullSerializer_getInstance().q13_1;
		  }
		  function JsonElementSerializer$descriptor$lambda$lambda_1() {
		    return JsonLiteralSerializer_getInstance().r13_1;
		  }
		  function JsonElementSerializer$descriptor$lambda$lambda_2() {
		    return JsonObjectSerializer_getInstance().s13_1;
		  }
		  function JsonElementSerializer$descriptor$lambda$lambda_3() {
		    return JsonArraySerializer_getInstance().t13_1;
		  }
		  function JsonElementSerializer() {
		    JsonElementSerializer_instance = this;
		    var tmp = this;
		    var tmp_0 = SEALED_getInstance();
		    tmp.u13_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda);
		  }
		  protoOf(JsonElementSerializer).xf = function () {
		    return this.u13_1;
		  };
		  protoOf(JsonElementSerializer).v13 = function (encoder, value) {
		    verify(encoder);
		    if (value instanceof JsonPrimitive) {
		      encoder.zk(JsonPrimitiveSerializer_getInstance(), value);
		    } else {
		      if (value instanceof JsonObject) {
		        encoder.zk(JsonObjectSerializer_getInstance(), value);
		      } else {
		        if (value instanceof JsonArray) {
		          encoder.zk(JsonArraySerializer_getInstance(), value);
		        }
		      }
		    }
		  };
		  protoOf(JsonElementSerializer).yf = function (encoder, value) {
		    return this.v13(encoder, value instanceof JsonElement ? value : THROW_CCE());
		  };
		  protoOf(JsonElementSerializer).zf = function (decoder) {
		    var input = asJsonDecoder(decoder);
		    return input.y12();
		  };
		  var JsonElementSerializer_instance;
		  function JsonElementSerializer_getInstance() {
		    if (JsonElementSerializer_instance == null)
		      new JsonElementSerializer();
		    return JsonElementSerializer_instance;
		  }
		  function JsonObjectDescriptor() {
		    JsonObjectDescriptor_instance = this;
		    this.w13_1 = MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).xf();
		    this.x13_1 = 'kotlinx.serialization.json.JsonObject';
		  }
		  protoOf(JsonObjectDescriptor).lh = function () {
		    return this.w13_1.lh();
		  };
		  protoOf(JsonObjectDescriptor).mh = function () {
		    return this.w13_1.mh();
		  };
		  protoOf(JsonObjectDescriptor).nh = function () {
		    return this.w13_1.nh();
		  };
		  protoOf(JsonObjectDescriptor).hh = function () {
		    return this.w13_1.hh();
		  };
		  protoOf(JsonObjectDescriptor).oh = function () {
		    return this.w13_1.oh();
		  };
		  protoOf(JsonObjectDescriptor).ph = function (index) {
		    return this.w13_1.ph(index);
		  };
		  protoOf(JsonObjectDescriptor).qh = function (index) {
		    return this.w13_1.qh(index);
		  };
		  protoOf(JsonObjectDescriptor).rh = function (name) {
		    return this.w13_1.rh(name);
		  };
		  protoOf(JsonObjectDescriptor).sh = function (index) {
		    return this.w13_1.sh(index);
		  };
		  protoOf(JsonObjectDescriptor).th = function (index) {
		    return this.w13_1.th(index);
		  };
		  protoOf(JsonObjectDescriptor).vg = function () {
		    return this.x13_1;
		  };
		  var JsonObjectDescriptor_instance;
		  function JsonObjectDescriptor_getInstance() {
		    if (JsonObjectDescriptor_instance == null)
		      new JsonObjectDescriptor();
		    return JsonObjectDescriptor_instance;
		  }
		  function JsonObjectSerializer() {
		    JsonObjectSerializer_instance = this;
		    this.s13_1 = JsonObjectDescriptor_getInstance();
		  }
		  protoOf(JsonObjectSerializer).xf = function () {
		    return this.s13_1;
		  };
		  protoOf(JsonObjectSerializer).y13 = function (encoder, value) {
		    verify(encoder);
		    MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).yf(encoder, value);
		  };
		  protoOf(JsonObjectSerializer).yf = function (encoder, value) {
		    return this.y13(encoder, value instanceof JsonObject ? value : THROW_CCE());
		  };
		  protoOf(JsonObjectSerializer).zf = function (decoder) {
		    verify_0(decoder);
		    return new JsonObject(MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).zf(decoder));
		  };
		  var JsonObjectSerializer_instance;
		  function JsonObjectSerializer_getInstance() {
		    if (JsonObjectSerializer_instance == null)
		      new JsonObjectSerializer();
		    return JsonObjectSerializer_instance;
		  }
		  function JsonArrayDescriptor() {
		    JsonArrayDescriptor_instance = this;
		    this.z13_1 = ListSerializer(JsonElementSerializer_getInstance()).xf();
		    this.a14_1 = 'kotlinx.serialization.json.JsonArray';
		  }
		  protoOf(JsonArrayDescriptor).lh = function () {
		    return this.z13_1.lh();
		  };
		  protoOf(JsonArrayDescriptor).mh = function () {
		    return this.z13_1.mh();
		  };
		  protoOf(JsonArrayDescriptor).nh = function () {
		    return this.z13_1.nh();
		  };
		  protoOf(JsonArrayDescriptor).hh = function () {
		    return this.z13_1.hh();
		  };
		  protoOf(JsonArrayDescriptor).oh = function () {
		    return this.z13_1.oh();
		  };
		  protoOf(JsonArrayDescriptor).ph = function (index) {
		    return this.z13_1.ph(index);
		  };
		  protoOf(JsonArrayDescriptor).qh = function (index) {
		    return this.z13_1.qh(index);
		  };
		  protoOf(JsonArrayDescriptor).rh = function (name) {
		    return this.z13_1.rh(name);
		  };
		  protoOf(JsonArrayDescriptor).sh = function (index) {
		    return this.z13_1.sh(index);
		  };
		  protoOf(JsonArrayDescriptor).th = function (index) {
		    return this.z13_1.th(index);
		  };
		  protoOf(JsonArrayDescriptor).vg = function () {
		    return this.a14_1;
		  };
		  var JsonArrayDescriptor_instance;
		  function JsonArrayDescriptor_getInstance() {
		    if (JsonArrayDescriptor_instance == null)
		      new JsonArrayDescriptor();
		    return JsonArrayDescriptor_instance;
		  }
		  function JsonArraySerializer() {
		    JsonArraySerializer_instance = this;
		    this.t13_1 = JsonArrayDescriptor_getInstance();
		  }
		  protoOf(JsonArraySerializer).xf = function () {
		    return this.t13_1;
		  };
		  protoOf(JsonArraySerializer).b14 = function (encoder, value) {
		    verify(encoder);
		    ListSerializer(JsonElementSerializer_getInstance()).yf(encoder, value);
		  };
		  protoOf(JsonArraySerializer).yf = function (encoder, value) {
		    return this.b14(encoder, value instanceof JsonArray ? value : THROW_CCE());
		  };
		  protoOf(JsonArraySerializer).zf = function (decoder) {
		    verify_0(decoder);
		    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).zf(decoder));
		  };
		  var JsonArraySerializer_instance;
		  function JsonArraySerializer_getInstance() {
		    if (JsonArraySerializer_instance == null)
		      new JsonArraySerializer();
		    return JsonArraySerializer_instance;
		  }
		  function defer(deferred) {
		    return new defer$1(deferred);
		  }
		  function JsonPrimitiveSerializer() {
		    JsonPrimitiveSerializer_instance = this;
		    this.p13_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonPrimitive', STRING_getInstance(), []);
		  }
		  protoOf(JsonPrimitiveSerializer).xf = function () {
		    return this.p13_1;
		  };
		  protoOf(JsonPrimitiveSerializer).c14 = function (encoder, value) {
		    verify(encoder);
		    var tmp;
		    if (value instanceof JsonNull) {
		      encoder.zk(JsonNullSerializer_getInstance(), JsonNull_getInstance());
		      tmp = Unit_instance;
		    } else {
		      var tmp_0 = JsonLiteralSerializer_getInstance();
		      encoder.zk(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
		      tmp = Unit_instance;
		    }
		    return tmp;
		  };
		  protoOf(JsonPrimitiveSerializer).yf = function (encoder, value) {
		    return this.c14(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
		  };
		  protoOf(JsonPrimitiveSerializer).zf = function (decoder) {
		    var result = asJsonDecoder(decoder).y12();
		    if (!(result instanceof JsonPrimitive))
		      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + toString(getKClassFromExpression(result)), toString(result));
		    return result;
		  };
		  var JsonPrimitiveSerializer_instance;
		  function JsonPrimitiveSerializer_getInstance() {
		    if (JsonPrimitiveSerializer_instance == null)
		      new JsonPrimitiveSerializer();
		    return JsonPrimitiveSerializer_instance;
		  }
		  function JsonNullSerializer() {
		    JsonNullSerializer_instance = this;
		    this.q13_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonNull', ENUM_getInstance(), []);
		  }
		  protoOf(JsonNullSerializer).xf = function () {
		    return this.q13_1;
		  };
		  protoOf(JsonNullSerializer).d14 = function (encoder, value) {
		    verify(encoder);
		    encoder.ck();
		  };
		  protoOf(JsonNullSerializer).yf = function (encoder, value) {
		    return this.d14(encoder, value instanceof JsonNull ? value : THROW_CCE());
		  };
		  protoOf(JsonNullSerializer).zf = function (decoder) {
		    verify_0(decoder);
		    if (decoder.si()) {
		      throw new JsonDecodingException("Expected 'null' literal");
		    }
		    decoder.ti();
		    return JsonNull_getInstance();
		  };
		  var JsonNullSerializer_instance;
		  function JsonNullSerializer_getInstance() {
		    if (JsonNullSerializer_instance == null)
		      new JsonNullSerializer();
		    return JsonNullSerializer_instance;
		  }
		  function JsonLiteralSerializer() {
		    JsonLiteralSerializer_instance = this;
		    this.r13_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
		  }
		  protoOf(JsonLiteralSerializer).xf = function () {
		    return this.r13_1;
		  };
		  protoOf(JsonLiteralSerializer).e14 = function (encoder, value) {
		    verify(encoder);
		    if (value.i13_1) {
		      return encoder.lk(value.j13_1);
		    }
		    var tmp0_safe_receiver = get_longOrNull(value);
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return encoder.hk(tmp0_safe_receiver);
		    }
		    var tmp1_safe_receiver = toULongOrNull(value.j13_1);
		    var tmp = tmp1_safe_receiver;
		    if ((tmp == null ? null : new ULong(tmp)) == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      var tmp_0 = tmp1_safe_receiver;
		      // Inline function 'kotlin.contracts.contract' call
		      var it = (tmp_0 == null ? null : new ULong(tmp_0)).ef_1;
		      var tmp_1 = encoder.nk(serializer_0(Companion_getInstance()).xf());
		      // Inline function 'kotlin.ULong.toLong' call
		      var tmp$ret$1 = _ULong___get_data__impl__fggpzb(it);
		      tmp_1.hk(tmp$ret$1);
		      return Unit_instance;
		    }
		    var tmp2_safe_receiver = get_doubleOrNull(value);
		    if (tmp2_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return encoder.jk(tmp2_safe_receiver);
		    }
		    var tmp3_safe_receiver = get_booleanOrNull(value);
		    if (tmp3_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return encoder.dk(tmp3_safe_receiver);
		    }
		    encoder.lk(value.j13_1);
		  };
		  protoOf(JsonLiteralSerializer).yf = function (encoder, value) {
		    return this.e14(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
		  };
		  protoOf(JsonLiteralSerializer).zf = function (decoder) {
		    var result = asJsonDecoder(decoder).y12();
		    if (!(result instanceof JsonLiteral))
		      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + toString(getKClassFromExpression(result)), toString(result));
		    return result;
		  };
		  var JsonLiteralSerializer_instance;
		  function JsonLiteralSerializer_getInstance() {
		    if (JsonLiteralSerializer_instance == null)
		      new JsonLiteralSerializer();
		    return JsonLiteralSerializer_instance;
		  }
		  function verify(encoder) {
		    asJsonEncoder(encoder);
		  }
		  function asJsonDecoder(_this__u8e3s4) {
		    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + toString(getKClassFromExpression(_this__u8e3s4))));
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function verify_0(decoder) {
		    asJsonDecoder(decoder);
		  }
		  function asJsonEncoder(_this__u8e3s4) {
		    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + toString(getKClassFromExpression(_this__u8e3s4))));
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function _get_original__l7ku1m($this) {
		    // Inline function 'kotlin.getValue' call
		    var this_0 = $this.f14_1;
		    original$factory();
		    return this_0.r1();
		  }
		  function defer$1($deferred) {
		    this.f14_1 = lazy_0($deferred);
		  }
		  protoOf(defer$1).vg = function () {
		    return _get_original__l7ku1m(this).vg();
		  };
		  protoOf(defer$1).oh = function () {
		    return _get_original__l7ku1m(this).oh();
		  };
		  protoOf(defer$1).mh = function () {
		    return _get_original__l7ku1m(this).mh();
		  };
		  protoOf(defer$1).sh = function (index) {
		    return _get_original__l7ku1m(this).sh(index);
		  };
		  protoOf(defer$1).rh = function (name) {
		    return _get_original__l7ku1m(this).rh(name);
		  };
		  protoOf(defer$1).ph = function (index) {
		    return _get_original__l7ku1m(this).ph(index);
		  };
		  protoOf(defer$1).qh = function (index) {
		    return _get_original__l7ku1m(this).qh(index);
		  };
		  protoOf(defer$1).th = function (index) {
		    return _get_original__l7ku1m(this).th(index);
		  };
		  function original$factory() {
		    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
		      return _get_original__l7ku1m(receiver);
		    }, null);
		  }
		  function JsonEncoder() {
		  }
		  function Composer(writer) {
		    this.g14_1 = writer;
		    this.h14_1 = true;
		  }
		  protoOf(Composer).i14 = function () {
		    this.h14_1 = true;
		  };
		  protoOf(Composer).j14 = function () {
		    return Unit_instance;
		  };
		  protoOf(Composer).k14 = function () {
		    this.h14_1 = false;
		  };
		  protoOf(Composer).l14 = function () {
		    return Unit_instance;
		  };
		  protoOf(Composer).m14 = function (v) {
		    return this.g14_1.n14(v);
		  };
		  protoOf(Composer).o14 = function (v) {
		    return this.g14_1.p14(v);
		  };
		  protoOf(Composer).q14 = function (v) {
		    return this.g14_1.p14(v.toString());
		  };
		  protoOf(Composer).r14 = function (v) {
		    return this.g14_1.p14(v.toString());
		  };
		  protoOf(Composer).s14 = function (v) {
		    return this.g14_1.t14(toLong_0(v));
		  };
		  protoOf(Composer).u14 = function (v) {
		    return this.g14_1.t14(toLong_0(v));
		  };
		  protoOf(Composer).v14 = function (v) {
		    return this.g14_1.t14(toLong_0(v));
		  };
		  protoOf(Composer).w14 = function (v) {
		    return this.g14_1.t14(v);
		  };
		  protoOf(Composer).x14 = function (v) {
		    return this.g14_1.p14(v.toString());
		  };
		  protoOf(Composer).y14 = function (value) {
		    return this.g14_1.z14(value);
		  };
		  function Composer_0(sb, json) {
		    return json.z10_1.o12_1 ? new ComposerWithPrettyPrint(sb, json) : new Composer(sb);
		  }
		  function ComposerForUnsignedNumbers(writer, forceQuoting) {
		    Composer.call(this, writer);
		    this.c15_1 = forceQuoting;
		  }
		  protoOf(ComposerForUnsignedNumbers).v14 = function (v) {
		    if (this.c15_1) {
		      // Inline function 'kotlin.toUInt' call
		      var tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
		      this.y14(UInt__toString_impl_dbgl21(tmp$ret$0));
		    } else {
		      // Inline function 'kotlin.toUInt' call
		      var tmp$ret$1 = _UInt___init__impl__l7qpdl(v);
		      this.o14(UInt__toString_impl_dbgl21(tmp$ret$1));
		    }
		  };
		  protoOf(ComposerForUnsignedNumbers).w14 = function (v) {
		    if (this.c15_1) {
		      // Inline function 'kotlin.toULong' call
		      var tmp$ret$0 = _ULong___init__impl__c78o9k(v);
		      this.y14(ULong__toString_impl_f9au7k(tmp$ret$0));
		    } else {
		      // Inline function 'kotlin.toULong' call
		      var tmp$ret$1 = _ULong___init__impl__c78o9k(v);
		      this.o14(ULong__toString_impl_f9au7k(tmp$ret$1));
		    }
		  };
		  protoOf(ComposerForUnsignedNumbers).s14 = function (v) {
		    if (this.c15_1) {
		      // Inline function 'kotlin.toUByte' call
		      var tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
		      this.y14(UByte__toString_impl_v72jg(tmp$ret$0));
		    } else {
		      // Inline function 'kotlin.toUByte' call
		      var tmp$ret$1 = _UByte___init__impl__g9hnc4(v);
		      this.o14(UByte__toString_impl_v72jg(tmp$ret$1));
		    }
		  };
		  protoOf(ComposerForUnsignedNumbers).u14 = function (v) {
		    if (this.c15_1) {
		      // Inline function 'kotlin.toUShort' call
		      var tmp$ret$0 = _UShort___init__impl__jigrne(v);
		      this.y14(UShort__toString_impl_edaoee(tmp$ret$0));
		    } else {
		      // Inline function 'kotlin.toUShort' call
		      var tmp$ret$1 = _UShort___init__impl__jigrne(v);
		      this.o14(UShort__toString_impl_edaoee(tmp$ret$1));
		    }
		  };
		  function ComposerWithPrettyPrint(writer, json) {
		    Composer.call(this, writer);
		    this.f15_1 = json;
		    this.g15_1 = 0;
		  }
		  protoOf(ComposerWithPrettyPrint).i14 = function () {
		    this.h14_1 = true;
		    this.g15_1 = this.g15_1 + 1 | 0;
		  };
		  protoOf(ComposerWithPrettyPrint).j14 = function () {
		    this.g15_1 = this.g15_1 - 1 | 0;
		  };
		  protoOf(ComposerWithPrettyPrint).k14 = function () {
		    this.h14_1 = false;
		    this.o14('\n');
		    // Inline function 'kotlin.repeat' call
		    var times = this.g15_1;
		    // Inline function 'kotlin.contracts.contract' call
		    var inductionVariable = 0;
		    if (inductionVariable < times)
		      do {
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlinx.serialization.json.internal.ComposerWithPrettyPrint.nextItem.<anonymous>' call
		        this.o14(this.f15_1.z10_1.q12_1);
		      }
		       while (inductionVariable < times);
		  };
		  protoOf(ComposerWithPrettyPrint).l14 = function () {
		    this.m14(_Char___init__impl__6a9atx(32));
		  };
		  function readIfAbsent($this, descriptor, index) {
		    $this.i15_1 = (!descriptor.th(index) && descriptor.qh(index).hh());
		    return $this.i15_1;
		  }
		  function JsonElementMarker$readIfAbsent$ref($boundThis) {
		    var l = function (p0, p1) {
		      return readIfAbsent($boundThis, p0, p1);
		    };
		    l.callableName = 'readIfAbsent';
		    return l;
		  }
		  function JsonElementMarker(descriptor) {
		    var tmp = this;
		    tmp.h15_1 = new ElementMarker(descriptor, JsonElementMarker$readIfAbsent$ref(this));
		    this.i15_1 = false;
		  }
		  protoOf(JsonElementMarker).j15 = function (index) {
		    this.h15_1.jp(index);
		  };
		  protoOf(JsonElementMarker).k15 = function () {
		    return this.h15_1.kp();
		  };
		  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
		    _this__u8e3s4.l15('Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification', VOID, "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'");
		  }
		  function JsonEncodingException(message) {
		    JsonException.call(this, message);
		    captureStack(this, JsonEncodingException);
		  }
		  function InvalidKeyKindException(keyDescriptor) {
		    return new JsonEncodingException("Value of type '" + keyDescriptor.vg() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.oh().toString() + "'.\n") + "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.");
		  }
		  function InvalidFloatingPointEncoded(value, key, output) {
		    return new JsonEncodingException(unexpectedFpErrorMessage(value, key, output));
		  }
		  function JsonDecodingException(message) {
		    JsonException.call(this, message);
		    captureStack(this, JsonDecodingException);
		  }
		  function JsonDecodingException_0(offset, message, input) {
		    return JsonDecodingException_1(offset, message + '\nJSON input: ' + toString(minify(input, offset)));
		  }
		  function InvalidFloatingPointDecoded(value, key, output) {
		    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
		  }
		  function JsonDecodingException_1(offset, message) {
		    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
		  }
		  function UnknownKeyException(key, input) {
		    return JsonDecodingException_1(-1, "Encountered unknown key '" + key + "'.\n" + "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.\n" + ('Current input: ' + toString(minify(input))));
		  }
		  function InvalidFloatingPointEncoded_0(value, output) {
		    return new JsonEncodingException('Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + toString(minify(output))));
		  }
		  function JsonException(message) {
		    SerializationException_init_$Init$(message, this);
		    captureStack(this, JsonException);
		  }
		  function unexpectedFpErrorMessage(value, key, output) {
		    return 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + toString(minify(output)));
		  }
		  function minify(_this__u8e3s4, offset) {
		    offset = offset === VOID ? -1 : offset;
		    if (charSequenceLength(_this__u8e3s4) < 200)
		      return _this__u8e3s4;
		    if (offset === -1) {
		      var start = charSequenceLength(_this__u8e3s4) - 60 | 0;
		      if (start <= 0)
		        return _this__u8e3s4;
		      // Inline function 'kotlin.text.substring' call
		      var endIndex = charSequenceLength(_this__u8e3s4);
		      return '.....' + toString(charSequenceSubSequence(_this__u8e3s4, start, endIndex));
		    }
		    var start_0 = offset - 30 | 0;
		    var end = offset + 30 | 0;
		    var prefix = start_0 <= 0 ? '' : '.....';
		    var suffix = end >= charSequenceLength(_this__u8e3s4) ? '' : '.....';
		    // Inline function 'kotlin.text.substring' call
		    var startIndex = coerceAtLeast(start_0, 0);
		    var endIndex_0 = coerceAtMost(end, charSequenceLength(_this__u8e3s4));
		    return prefix + toString(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex_0)) + suffix;
		  }
		  function get_JsonAlternativeNamesKey() {
		    _init_properties_JsonNamesMap_kt__cbbp0k();
		    return JsonAlternativeNamesKey;
		  }
		  var JsonAlternativeNamesKey;
		  function getJsonNameIndex(_this__u8e3s4, json, name) {
		    _init_properties_JsonNamesMap_kt__cbbp0k();
		    var index = _this__u8e3s4.rh(name);
		    if (!(index === -3))
		      return index;
		    if (!json.z10_1.v12_1)
		      return index;
		    var tmp = get_schemaCache(json);
		    var tmp_0 = get_JsonAlternativeNamesKey();
		    var alternativeNamesMap = tmp.n15(_this__u8e3s4, tmp_0, buildAlternativeNamesMap$ref(_this__u8e3s4));
		    var tmp0_elvis_lhs = alternativeNamesMap.u1(name);
		    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
		  }
		  function getJsonNameIndexOrThrow(_this__u8e3s4, json, name, suffix) {
		    suffix = suffix === VOID ? '' : suffix;
		    _init_properties_JsonNamesMap_kt__cbbp0k();
		    var index = getJsonNameIndex(_this__u8e3s4, json, name);
		    if (index === -3)
		      throw SerializationException_init_$Create$(_this__u8e3s4.vg() + " does not contain element with name '" + name + "'" + suffix);
		    return index;
		  }
		  function buildAlternativeNamesMap(_this__u8e3s4) {
		    _init_properties_JsonNamesMap_kt__cbbp0k();
		    var builder = null;
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.mh();
		    if (inductionVariable < last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.collections.filterIsInstance' call
		        // Inline function 'kotlin.collections.filterIsInstanceTo' call
		        var this_0 = _this__u8e3s4.ph(i);
		        var destination = ArrayList_init_$Create$();
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var element = tmp0_iterator.k();
		          if (element instanceof JsonNames) {
		            destination.d(element);
		          }
		        }
		        var tmp1_safe_receiver = singleOrNull(destination);
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o15_1;
		        if (tmp2_safe_receiver == null)
		          ;
		        else {
		          // Inline function 'kotlin.collections.forEach' call
		          var inductionVariable_0 = 0;
		          var last_0 = tmp2_safe_receiver.length;
		          while (inductionVariable_0 < last_0) {
		            var element_0 = tmp2_safe_receiver[inductionVariable_0];
		            inductionVariable_0 = inductionVariable_0 + 1 | 0;
		            // Inline function 'kotlinx.serialization.json.internal.buildAlternativeNamesMap.<anonymous>' call
		            if (builder == null)
		              builder = createMapForCache(_this__u8e3s4.mh());
		            buildAlternativeNamesMap$putOrThrow(ensureNotNull(builder), _this__u8e3s4, element_0, i);
		          }
		        }
		      }
		       while (inductionVariable < last);
		    var tmp3_elvis_lhs = builder;
		    return tmp3_elvis_lhs == null ? emptyMap() : tmp3_elvis_lhs;
		  }
		  function buildAlternativeNamesMap$putOrThrow(_this__u8e3s4, $this_buildAlternativeNamesMap, name, index) {
		    // Inline function 'kotlin.collections.contains' call
		    // Inline function 'kotlin.collections.containsKey' call
		    if ((isInterface(_this__u8e3s4, KtMap) ? _this__u8e3s4 : THROW_CCE()).s1(name)) {
		      throw new JsonException("The suggested name '" + name + "' for property " + $this_buildAlternativeNamesMap.sh(index) + ' is already one of the names for property ' + ($this_buildAlternativeNamesMap.sh(getValue(_this__u8e3s4, name)) + ' in ' + toString($this_buildAlternativeNamesMap)));
		    }
		    // Inline function 'kotlin.collections.set' call
		    _this__u8e3s4.b2(name, index);
		  }
		  function buildAlternativeNamesMap$ref($boundThis) {
		    var l = function () {
		      return buildAlternativeNamesMap($boundThis);
		    };
		    l.callableName = 'buildAlternativeNamesMap';
		    return l;
		  }
		  var properties_initialized_JsonNamesMap_kt_ljpf42;
		  function _init_properties_JsonNamesMap_kt__cbbp0k() {
		    if (!properties_initialized_JsonNamesMap_kt_ljpf42) {
		      properties_initialized_JsonNamesMap_kt_ljpf42 = true;
		      JsonAlternativeNamesKey = new Key();
		    }
		  }
		  function Tombstone() {
		  }
		  var Tombstone_instance;
		  function resize($this) {
		    var newSize = imul($this.r15_1, 2);
		    $this.p15_1 = copyOf($this.p15_1, newSize);
		    $this.q15_1 = copyOf_0($this.q15_1, newSize);
		  }
		  function JsonPath() {
		    var tmp = this;
		    // Inline function 'kotlin.arrayOfNulls' call
		    tmp.p15_1 = fillArrayVal(Array(8), null);
		    var tmp_0 = this;
		    var tmp_1 = 0;
		    var tmp_2 = new Int32Array(8);
		    while (tmp_1 < 8) {
		      tmp_2[tmp_1] = -1;
		      tmp_1 = tmp_1 + 1 | 0;
		    }
		    tmp_0.q15_1 = tmp_2;
		    this.r15_1 = -1;
		  }
		  protoOf(JsonPath).s15 = function (sd) {
		    this.r15_1 = this.r15_1 + 1 | 0;
		    var depth = this.r15_1;
		    if (depth === this.p15_1.length) {
		      resize(this);
		    }
		    this.p15_1[depth] = sd;
		  };
		  protoOf(JsonPath).t15 = function (index) {
		    this.q15_1[this.r15_1] = index;
		  };
		  protoOf(JsonPath).u15 = function (key) {
		    var tmp;
		    if (!(this.q15_1[this.r15_1] === -2)) {
		      this.r15_1 = this.r15_1 + 1 | 0;
		      tmp = this.r15_1 === this.p15_1.length;
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      resize(this);
		    }
		    this.p15_1[this.r15_1] = key;
		    this.q15_1[this.r15_1] = -2;
		  };
		  protoOf(JsonPath).v15 = function () {
		    if (this.q15_1[this.r15_1] === -2) {
		      this.p15_1[this.r15_1] = Tombstone_instance;
		    }
		  };
		  protoOf(JsonPath).w15 = function () {
		    var depth = this.r15_1;
		    if (this.q15_1[depth] === -2) {
		      this.q15_1[depth] = -1;
		      this.r15_1 = this.r15_1 - 1 | 0;
		    }
		    if (!(this.r15_1 === -1)) {
		      this.r15_1 = this.r15_1 - 1 | 0;
		    }
		  };
		  protoOf(JsonPath).x15 = function () {
		    // Inline function 'kotlin.text.buildString' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.apply' call
		    var this_0 = StringBuilder_init_$Create$();
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>' call
		    this_0.i7('$');
		    // Inline function 'kotlin.repeat' call
		    var times = this.r15_1 + 1 | 0;
		    // Inline function 'kotlin.contracts.contract' call
		    var inductionVariable = 0;
		    if (inductionVariable < times)
		      do {
		        var index = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>.<anonymous>' call
		        var element = this.p15_1[index];
		        if (!(element == null) ? isInterface(element, SerialDescriptor) : false) {
		          if (equals(element.oh(), LIST_getInstance())) {
		            if (!(this.q15_1[index] === -1)) {
		              this_0.i7('[');
		              this_0.h7(this.q15_1[index]);
		              this_0.i7(']');
		            }
		          } else {
		            var idx = this.q15_1[index];
		            if (idx >= 0) {
		              this_0.i7('.');
		              this_0.i7(element.sh(idx));
		            }
		          }
		        } else {
		          if (!(element === Tombstone_instance)) {
		            this_0.i7('[');
		            this_0.i7("'");
		            this_0.h7(element);
		            this_0.i7("'");
		            this_0.i7(']');
		          }
		        }
		      }
		       while (inductionVariable < times);
		    return this_0.toString();
		  };
		  protoOf(JsonPath).toString = function () {
		    return this.x15();
		  };
		  function encodeByWriter(_this__u8e3s4, writer, serializer, value) {
		    var tmp = WriteMode_OBJ_getInstance();
		    // Inline function 'kotlin.arrayOfNulls' call
		    var size = values().length;
		    var tmp$ret$0 = fillArrayVal(Array(size), null);
		    var encoder = StreamingJsonEncoder_init_$Create$(writer, _this__u8e3s4, tmp, tmp$ret$0);
		    encoder.zk(serializer, value);
		  }
		  function readObject($this) {
		    // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObjectImpl' call
		    var lastToken = $this.g16_1.j16(6);
		    if ($this.g16_1.k16() === 4) {
		      $this.g16_1.l15('Unexpected leading comma');
		    }
		    // Inline function 'kotlin.collections.linkedMapOf' call
		    var result = LinkedHashMap_init_$Create$();
		    $l$loop: while ($this.g16_1.l16()) {
		      var key = $this.h16_1 ? $this.g16_1.n16() : $this.g16_1.m16();
		      $this.g16_1.j16(5);
		      // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObject.<anonymous>' call
		      var element = $this.o16();
		      // Inline function 'kotlin.collections.set' call
		      result.b2(key, element);
		      lastToken = $this.g16_1.p16();
		      var tmp0_subject = lastToken;
		      if (tmp0_subject !== 4)
		        if (tmp0_subject === 7)
		          break $l$loop;
		        else {
		          $this.g16_1.l15('Expected end of the object or comma');
		        }
		    }
		    if (lastToken === 6) {
		      $this.g16_1.j16(7);
		    } else if (lastToken === 4) {
		      $this.g16_1.l15('Unexpected trailing comma');
		    }
		    return new JsonObject(result);
		  }
		  function readObject_0(_this__u8e3s4, $this, $completion) {
		    var tmp = new $readObjectCOROUTINE$0($this, _this__u8e3s4, $completion);
		    tmp.y7_1 = Unit_instance;
		    tmp.z7_1 = null;
		    return tmp.e8();
		  }
		  function readArray($this) {
		    var lastToken = $this.g16_1.p16();
		    if ($this.g16_1.k16() === 4) {
		      $this.g16_1.l15('Unexpected leading comma');
		    }
		    // Inline function 'kotlin.collections.arrayListOf' call
		    var result = ArrayList_init_$Create$();
		    while ($this.g16_1.l16()) {
		      var element = $this.o16();
		      result.d(element);
		      lastToken = $this.g16_1.p16();
		      if (!(lastToken === 4)) {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
		        var this_0 = $this.g16_1;
		        var condition = lastToken === 9;
		        var position = this_0.r11_1;
		        if (!condition) {
		          // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readArray.<anonymous>' call
		          var tmp$ret$1 = 'Expected end of the array or comma';
		          this_0.l15(tmp$ret$1, position);
		        }
		      }
		    }
		    if (lastToken === 8) {
		      $this.g16_1.j16(9);
		    } else if (lastToken === 4) {
		      $this.g16_1.l15('Unexpected trailing comma');
		    }
		    return new JsonArray(result);
		  }
		  function readValue($this, isString) {
		    var tmp;
		    if ($this.h16_1 || !isString) {
		      tmp = $this.g16_1.n16();
		    } else {
		      tmp = $this.g16_1.m16();
		    }
		    var string = tmp;
		    if (!isString && string === 'null')
		      return JsonNull_getInstance();
		    return new JsonLiteral(string, isString);
		  }
		  function readDeepRecursive($this) {
		    return invoke(new DeepRecursiveFunction(JsonTreeReader$readDeepRecursive$slambda_0($this, null)), Unit_instance);
		  }
		  function JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation) {
		    this.m17_1 = this$0;
		    CoroutineImpl.call(this, resultContinuation);
		  }
		  protoOf(JsonTreeReader$readDeepRecursive$slambda).r17 = function ($this$$receiver, it, $completion) {
		    var tmp = this.s17($this$$receiver, it, $completion);
		    tmp.y7_1 = Unit_instance;
		    tmp.z7_1 = null;
		    return tmp.e8();
		  };
		  protoOf(JsonTreeReader$readDeepRecursive$slambda).vd = function (p1, p2, $completion) {
		    var tmp = p1 instanceof DeepRecursiveScope ? p1 : THROW_CCE();
		    return this.r17(tmp, p2 instanceof Unit ? p2 : THROW_CCE(), $completion);
		  };
		  protoOf(JsonTreeReader$readDeepRecursive$slambda).e8 = function () {
		    var suspendResult = this.y7_1;
		    $sm: do
		      try {
		        var tmp = this.w7_1;
		        switch (tmp) {
		          case 0:
		            this.x7_1 = 3;
		            this.p17_1 = this.m17_1.g16_1.k16();
		            if (this.p17_1 === 1) {
		              this.q17_1 = readValue(this.m17_1, true);
		              this.w7_1 = 2;
		              continue $sm;
		            } else {
		              if (this.p17_1 === 0) {
		                this.q17_1 = readValue(this.m17_1, false);
		                this.w7_1 = 2;
		                continue $sm;
		              } else {
		                if (this.p17_1 === 6) {
		                  this.w7_1 = 1;
		                  suspendResult = readObject_0(this.n17_1, this.m17_1, this);
		                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
		                    return suspendResult;
		                  }
		                  continue $sm;
		                } else {
		                  if (this.p17_1 === 8) {
		                    this.q17_1 = readArray(this.m17_1);
		                    this.w7_1 = 2;
		                    continue $sm;
		                  } else {
		                    var tmp_0 = this;
		                    this.m17_1.g16_1.l15("Can't begin reading element, unexpected token");
		                  }
		                }
		              }
		            }

		            break;
		          case 1:
		            this.q17_1 = suspendResult;
		            this.w7_1 = 2;
		            continue $sm;
		          case 2:
		            return this.q17_1;
		          case 3:
		            throw this.z7_1;
		        }
		      } catch ($p) {
		        var e = $p;
		        if (this.x7_1 === 3) {
		          throw e;
		        } else {
		          this.w7_1 = this.x7_1;
		          this.z7_1 = e;
		        }
		      }
		     while (true);
		  };
		  protoOf(JsonTreeReader$readDeepRecursive$slambda).s17 = function ($this$$receiver, it, completion) {
		    var i = new JsonTreeReader$readDeepRecursive$slambda(this.m17_1, completion);
		    i.n17_1 = $this$$receiver;
		    i.o17_1 = it;
		    return i;
		  };
		  function JsonTreeReader$readDeepRecursive$slambda_0(this$0, resultContinuation) {
		    var i = new JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation);
		    var l = function ($this$$receiver, it, $completion) {
		      return i.r17($this$$receiver, it, $completion);
		    };
		    l.$arity = 2;
		    return l;
		  }
		  function $readObjectCOROUTINE$0(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
		    CoroutineImpl.call(this, resultContinuation);
		    this.y16_1 = _this__u8e3s4;
		    this.z16_1 = _this__u8e3s4_0;
		  }
		  protoOf($readObjectCOROUTINE$0).e8 = function () {
		    var suspendResult = this.y7_1;
		    $sm: do
		      try {
		        var tmp = this.w7_1;
		        switch (tmp) {
		          case 0:
		            this.x7_1 = 5;
		            var tmp_0 = this;
		            tmp_0.a17_1 = this.y16_1;
		            this.b17_1 = this.a17_1.g16_1.j16(6);
		            if (this.a17_1.g16_1.k16() === 4) {
		              this.a17_1.g16_1.l15('Unexpected leading comma');
		            }

		            var tmp_1 = this;
		            tmp_1.c17_1 = LinkedHashMap_init_$Create$();
		            this.w7_1 = 1;
		            continue $sm;
		          case 1:
		            if (!this.a17_1.g16_1.l16()) {
		              this.w7_1 = 4;
		              continue $sm;
		            }

		            this.d17_1 = this.a17_1.h16_1 ? this.a17_1.g16_1.n16() : this.a17_1.g16_1.m16();
		            this.a17_1.g16_1.j16(5);
		            this.w7_1 = 2;
		            suspendResult = this.z16_1.nd(Unit_instance, this);
		            if (suspendResult === get_COROUTINE_SUSPENDED()) {
		              return suspendResult;
		            }

		            continue $sm;
		          case 2:
		            var element = suspendResult;
		            var this_0 = this.c17_1;
		            var key = this.d17_1;
		            this_0.b2(key, element);
		            this.b17_1 = this.a17_1.g16_1.p16();
		            var tmp0_subject = this.b17_1;
		            if (tmp0_subject === 4) {
		              this.w7_1 = 3;
		              continue $sm;
		            } else {
		              if (tmp0_subject === 7) {
		                this.w7_1 = 4;
		                continue $sm;
		              } else {
		                this.a17_1.g16_1.l15('Expected end of the object or comma');
		              }
		            }

		            break;
		          case 3:
		            this.w7_1 = 1;
		            continue $sm;
		          case 4:
		            if (this.b17_1 === 6) {
		              this.a17_1.g16_1.j16(7);
		            } else if (this.b17_1 === 4) {
		              this.a17_1.g16_1.l15('Unexpected trailing comma');
		            }

		            return new JsonObject(this.c17_1);
		          case 5:
		            throw this.z7_1;
		        }
		      } catch ($p) {
		        var e = $p;
		        if (this.x7_1 === 5) {
		          throw e;
		        } else {
		          this.w7_1 = this.x7_1;
		          this.z7_1 = e;
		        }
		      }
		     while (true);
		  };
		  function JsonTreeReader(configuration, lexer) {
		    this.g16_1 = lexer;
		    this.h16_1 = configuration.m12_1;
		    this.i16_1 = 0;
		  }
		  protoOf(JsonTreeReader).o16 = function () {
		    var token = this.g16_1.k16();
		    var tmp;
		    if (token === 1) {
		      tmp = readValue(this, true);
		    } else if (token === 0) {
		      tmp = readValue(this, false);
		    } else if (token === 6) {
		      var tmp_0;
		      this.i16_1 = this.i16_1 + 1 | 0;
		      if (this.i16_1 === 200) {
		        tmp_0 = readDeepRecursive(this);
		      } else {
		        tmp_0 = readObject(this);
		      }
		      var result = tmp_0;
		      this.i16_1 = this.i16_1 - 1 | 0;
		      tmp = result;
		    } else if (token === 8) {
		      tmp = readArray(this);
		    } else {
		      this.g16_1.l15('Cannot begin reading element, unexpected token: ' + token);
		    }
		    return tmp;
		  };
		  function classDiscriminator(_this__u8e3s4, json) {
		    var tmp0_iterator = _this__u8e3s4.lh().i();
		    while (tmp0_iterator.j()) {
		      var annotation = tmp0_iterator.k();
		      if (annotation instanceof JsonClassDiscriminator)
		        return annotation.t17_1;
		    }
		    return json.z10_1.t12_1;
		  }
		  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
		    var tmp;
		    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
		      tmp = true;
		    } else {
		      tmp = _this__u8e3s4.a13().z10_1.s12_1;
		    }
		    if (tmp) {
		      return deserializer.zf(_this__u8e3s4);
		    }
		    var discriminator = classDiscriminator(deserializer.xf(), _this__u8e3s4.a13());
		    // Inline function 'kotlinx.serialization.json.internal.cast' call
		    var value = _this__u8e3s4.y12();
		    var descriptor = deserializer.xf();
		    if (!(value instanceof JsonObject)) {
		      throw JsonDecodingException_1(-1, 'Expected ' + toString(getKClass(JsonObject)) + ' as the serialized body of ' + descriptor.vg() + ', but had ' + toString(getKClassFromExpression(value)));
		    }
		    var jsonTree = value;
		    var tmp0_safe_receiver = jsonTree.e13(discriminator);
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
		    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h13();
		    var tmp2_elvis_lhs = deserializer.og(_this__u8e3s4, type);
		    var tmp_0;
		    if (tmp2_elvis_lhs == null) {
		      throwSerializerNotFound(type, jsonTree);
		    } else {
		      tmp_0 = tmp2_elvis_lhs;
		    }
		    var actualSerializer = tmp_0;
		    var tmp_1 = _this__u8e3s4.a13();
		    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
		  }
		  function throwSerializerNotFound(type, jsonTree) {
		    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
		    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
		  }
		  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
		    if (!(serializer instanceof SealedClassSerializer))
		      return Unit_instance;
		    if (jsonCachedSerialNames(actualSerializer.xf()).o1(classDiscriminator)) {
		      var baseName = serializer.xf().vg();
		      var actualName = actualSerializer.xf().vg();
		      // Inline function 'kotlin.error' call
		      var message = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
		      throw IllegalStateException_init_$Create$(toString(message));
		    }
		  }
		  function checkKind(kind) {
		    if (kind instanceof ENUM) {
		      // Inline function 'kotlin.error' call
		      var message = "Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
		      throw IllegalStateException_init_$Create$(toString(message));
		    }
		    if (kind instanceof PrimitiveKind) {
		      // Inline function 'kotlin.error' call
		      var message_0 = "Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
		      throw IllegalStateException_init_$Create$(toString(message_0));
		    }
		    if (kind instanceof PolymorphicKind) {
		      // Inline function 'kotlin.error' call
		      var message_1 = 'Actual serializer for polymorphic cannot be polymorphic itself';
		      throw IllegalStateException_init_$Create$(toString(message_1));
		    }
		  }
		  function validateIfSealed$accessor$1ad0flx(serializer, actualSerializer, classDiscriminator) {
		    return validateIfSealed(serializer, actualSerializer, classDiscriminator);
		  }
		  function checkKind_0($this, descriptor, actualClass) {
		    var kind = descriptor.oh();
		    var tmp;
		    if (kind instanceof PolymorphicKind) {
		      tmp = true;
		    } else {
		      tmp = equals(kind, CONTEXTUAL_getInstance());
		    }
		    if (tmp) {
		      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.s8() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind.toString() + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
		    }
		    if ($this.u17_1)
		      return Unit_instance;
		    var tmp_0;
		    var tmp_1;
		    if (equals(kind, LIST_getInstance()) || equals(kind, MAP_getInstance())) {
		      tmp_1 = true;
		    } else {
		      tmp_1 = kind instanceof PrimitiveKind;
		    }
		    if (tmp_1) {
		      tmp_0 = true;
		    } else {
		      tmp_0 = kind instanceof ENUM;
		    }
		    if (tmp_0) {
		      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.s8() + ' of kind ' + kind.toString() + ' cannot be serialized polymorphically with class discriminator.');
		    }
		  }
		  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
		    var inductionVariable = 0;
		    var last = descriptor.mh();
		    if (inductionVariable < last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var name = descriptor.sh(i);
		        if (name === $this.v17_1) {
		          throw IllegalArgumentException_init_$Create$('Polymorphic serializer for ' + toString(actualClass) + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
		        }
		      }
		       while (inductionVariable < last);
		  }
		  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
		    this.u17_1 = useArrayPolymorphism;
		    this.v17_1 = discriminator;
		  }
		  protoOf(PolymorphismValidator).h10 = function (kClass, provider) {
		  };
		  protoOf(PolymorphismValidator).k10 = function (baseClass, actualClass, actualSerializer) {
		    var descriptor = actualSerializer.xf();
		    checkKind_0(this, descriptor, actualClass);
		    if (!this.u17_1) {
		      checkDiscriminatorCollisions(this, descriptor, actualClass);
		    }
		  };
		  protoOf(PolymorphismValidator).l10 = function (baseClass, defaultSerializerProvider) {
		  };
		  protoOf(PolymorphismValidator).m10 = function (baseClass, defaultDeserializerProvider) {
		  };
		  function Key() {
		  }
		  function DescriptorSchemaCache() {
		    this.m15_1 = createMapForCache(1);
		  }
		  protoOf(DescriptorSchemaCache).w17 = function (descriptor, key, value) {
		    // Inline function 'kotlin.collections.set' call
		    // Inline function 'kotlin.collections.getOrPut' call
		    var this_0 = this.m15_1;
		    var value_0 = this_0.u1(descriptor);
		    var tmp;
		    if (value_0 == null) {
		      // Inline function 'kotlinx.serialization.json.internal.DescriptorSchemaCache.set.<anonymous>' call
		      var answer = createMapForCache(1);
		      this_0.b2(descriptor, answer);
		      tmp = answer;
		    } else {
		      tmp = value_0;
		    }
		    var this_1 = tmp;
		    var key_0 = key instanceof Key ? key : THROW_CCE();
		    var value_1 = !(value == null) ? value : THROW_CCE();
		    this_1.b2(key_0, value_1);
		  };
		  protoOf(DescriptorSchemaCache).n15 = function (descriptor, key, defaultValue) {
		    var tmp0_safe_receiver = this.x17(descriptor, key);
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      return tmp0_safe_receiver;
		    }
		    var value = defaultValue();
		    this.w17(descriptor, key, value);
		    return value;
		  };
		  protoOf(DescriptorSchemaCache).x17 = function (descriptor, key) {
		    var tmp0_safe_receiver = this.m15_1.u1(descriptor);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      tmp = tmp0_safe_receiver.u1(key instanceof Key ? key : THROW_CCE());
		    }
		    var tmp_0 = tmp;
		    return !(tmp_0 == null) ? tmp_0 : null;
		  };
		  function DiscriminatorHolder(discriminatorToSkip) {
		    this.y17_1 = discriminatorToSkip;
		  }
		  function trySkip(_this__u8e3s4, $this, unknownKey) {
		    if (_this__u8e3s4 == null)
		      return false;
		    if (_this__u8e3s4.y17_1 === unknownKey) {
		      _this__u8e3s4.y17_1 = null;
		      return true;
		    }
		    return false;
		  }
		  function skipLeftoverElements($this, descriptor) {
		    while (!($this.yj(descriptor) === -1)) {
		    }
		  }
		  function checkLeadingComma($this) {
		    if ($this.l11_1.k16() === 4) {
		      $this.l11_1.l15('Unexpected leading comma');
		    }
		  }
		  function decodeMapIndex($this) {
		    var hasComma = false;
		    var decodingKey = !(($this.n11_1 % 2 | 0) === 0);
		    if (decodingKey) {
		      if (!($this.n11_1 === -1)) {
		        hasComma = $this.l11_1.a18();
		      }
		    } else {
		      $this.l11_1.z17(_Char___init__impl__6a9atx(58));
		    }
		    var tmp;
		    if ($this.l11_1.l16()) {
		      if (decodingKey) {
		        if ($this.n11_1 === -1) {
		          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
		          var this_0 = $this.l11_1;
		          var condition = !hasComma;
		          var position = this_0.r11_1;
		          if (!condition) {
		            // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
		            var tmp$ret$0 = 'Unexpected trailing comma';
		            this_0.l15(tmp$ret$0, position);
		          }
		        } else {
		          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
		          var this_1 = $this.l11_1;
		          var condition_0 = hasComma;
		          var position_0 = this_1.r11_1;
		          if (!condition_0) {
		            // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
		            var tmp$ret$1 = 'Expected comma after the key-value pair';
		            this_1.l15(tmp$ret$1, position_0);
		          }
		        }
		      }
		      $this.n11_1 = $this.n11_1 + 1 | 0;
		      tmp = $this.n11_1;
		    } else {
		      if (hasComma) {
		        $this.l11_1.l15("Expected '}', but had ',' instead");
		      }
		      tmp = -1;
		    }
		    return tmp;
		  }
		  function coerceInputValue($this, descriptor, index) {
		    var tmp$ret$1;
		    $l$block_1: {
		      // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
		      var this_0 = $this.j11_1;
		      var elementDescriptor = descriptor.qh(index);
		      var tmp;
		      if (!elementDescriptor.hh()) {
		        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
		        tmp = !$this.l11_1.b18();
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$1 = true;
		        break $l$block_1;
		      }
		      if (equals(elementDescriptor.oh(), ENUM_getInstance())) {
		        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
		        var tmp0_elvis_lhs = $this.l11_1.c18($this.p11_1.m12_1);
		        var tmp_0;
		        if (tmp0_elvis_lhs == null) {
		          tmp$ret$1 = false;
		          break $l$block_1;
		        } else {
		          tmp_0 = tmp0_elvis_lhs;
		        }
		        var enumValue = tmp_0;
		        var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
		        if (enumIndex === -3) {
		          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
		          $this.l11_1.m16();
		          tmp$ret$1 = true;
		          break $l$block_1;
		        }
		      }
		      tmp$ret$1 = false;
		    }
		    return tmp$ret$1;
		  }
		  function decodeObjectIndex($this, descriptor) {
		    var hasComma = $this.l11_1.a18();
		    while ($this.l11_1.l16()) {
		      hasComma = false;
		      var key = decodeStringKey($this);
		      $this.l11_1.z17(_Char___init__impl__6a9atx(58));
		      var index = getJsonNameIndex(descriptor, $this.j11_1, key);
		      var tmp;
		      if (!(index === -3)) {
		        var tmp_0;
		        if ($this.p11_1.r12_1 && coerceInputValue($this, descriptor, index)) {
		          hasComma = $this.l11_1.a18();
		          tmp_0 = false;
		        } else {
		          var tmp0_safe_receiver = $this.q11_1;
		          if (tmp0_safe_receiver == null)
		            ;
		          else {
		            tmp0_safe_receiver.j15(index);
		          }
		          return index;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = true;
		      }
		      var isUnknown = tmp;
		      if (isUnknown) {
		        hasComma = handleUnknown($this, key);
		      }
		    }
		    if (hasComma) {
		      $this.l11_1.l15('Unexpected trailing comma');
		    }
		    var tmp1_safe_receiver = $this.q11_1;
		    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.k15();
		    return tmp2_elvis_lhs == null ? -1 : tmp2_elvis_lhs;
		  }
		  function handleUnknown($this, key) {
		    if ($this.p11_1.l12_1 || trySkip($this.o11_1, $this, key)) {
		      $this.l11_1.e18($this.p11_1.m12_1);
		    } else {
		      $this.l11_1.d18(key);
		    }
		    return $this.l11_1.a18();
		  }
		  function decodeListIndex($this) {
		    var hasComma = $this.l11_1.a18();
		    var tmp;
		    if ($this.l11_1.l16()) {
		      if (!($this.n11_1 === -1) && !hasComma) {
		        $this.l11_1.l15('Expected end of the array or comma');
		      }
		      $this.n11_1 = $this.n11_1 + 1 | 0;
		      tmp = $this.n11_1;
		    } else {
		      if (hasComma) {
		        $this.l11_1.l15('Unexpected trailing comma');
		      }
		      tmp = -1;
		    }
		    return tmp;
		  }
		  function decodeStringKey($this) {
		    var tmp;
		    if ($this.p11_1.m12_1) {
		      tmp = $this.l11_1.g18();
		    } else {
		      tmp = $this.l11_1.f18();
		    }
		    return tmp;
		  }
		  function StreamingJsonDecoder(json, mode, lexer, descriptor, discriminatorHolder) {
		    AbstractDecoder.call(this);
		    this.j11_1 = json;
		    this.k11_1 = mode;
		    this.l11_1 = lexer;
		    this.m11_1 = this.j11_1.wj();
		    this.n11_1 = -1;
		    this.o11_1 = discriminatorHolder;
		    this.p11_1 = this.j11_1.z10_1;
		    this.q11_1 = this.p11_1.p12_1 ? null : new JsonElementMarker(descriptor);
		  }
		  protoOf(StreamingJsonDecoder).a13 = function () {
		    return this.j11_1;
		  };
		  protoOf(StreamingJsonDecoder).wj = function () {
		    return this.m11_1;
		  };
		  protoOf(StreamingJsonDecoder).y12 = function () {
		    return (new JsonTreeReader(this.j11_1.z10_1, this.l11_1)).o16();
		  };
		  protoOf(StreamingJsonDecoder).gj = function (deserializer) {
		    try {
		      var tmp;
		      if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
		        tmp = true;
		      } else {
		        tmp = this.j11_1.z10_1.s12_1;
		      }
		      if (tmp) {
		        return deserializer.zf(this);
		      }
		      var discriminator = classDiscriminator(deserializer.xf(), this.j11_1);
		      var type = this.l11_1.h18(discriminator, this.p11_1.m12_1);
		      var actualSerializer = null;
		      if (!(type == null)) {
		        actualSerializer = deserializer.og(this, type);
		      }
		      if (actualSerializer == null) {
		        return decodeSerializableValuePolymorphic(this, isInterface(deserializer, DeserializationStrategy) ? deserializer : THROW_CCE());
		      }
		      this.o11_1 = new DiscriminatorHolder(discriminator);
		      var tmp_0 = actualSerializer.zf(this);
		      var result = !(tmp_0 == null) ? tmp_0 : THROW_CCE();
		      return result;
		    } catch ($p) {
		      if ($p instanceof MissingFieldException) {
		        var e = $p;
		        throw new MissingFieldException(e.ah_1, plus(e.message, ' at path: ') + this.l11_1.s11_1.x15(), e);
		      } else {
		        throw $p;
		      }
		    }
		  };
		  protoOf(StreamingJsonDecoder).hj = function (descriptor) {
		    var newMode = switchMode(this.j11_1, descriptor);
		    this.l11_1.s11_1.s15(descriptor);
		    this.l11_1.z17(newMode.k18_1);
		    checkLeadingComma(this);
		    var tmp;
		    switch (newMode.e2_1) {
		      case 1:
		      case 2:
		      case 3:
		        tmp = new StreamingJsonDecoder(this.j11_1, newMode, this.l11_1, descriptor, this.o11_1);
		        break;
		      default:
		        var tmp_0;
		        if (this.k11_1.equals(newMode) && this.j11_1.z10_1.p12_1) {
		          tmp_0 = this;
		        } else {
		          tmp_0 = new StreamingJsonDecoder(this.j11_1, newMode, this.l11_1, descriptor, this.o11_1);
		        }

		        tmp = tmp_0;
		        break;
		    }
		    return tmp;
		  };
		  protoOf(StreamingJsonDecoder).ij = function (descriptor) {
		    if (this.j11_1.z10_1.l12_1 && descriptor.mh() === 0) {
		      skipLeftoverElements(this, descriptor);
		    }
		    this.l11_1.z17(this.k11_1.l18_1);
		    this.l11_1.s11_1.w15();
		  };
		  protoOf(StreamingJsonDecoder).si = function () {
		    var tmp;
		    var tmp0_safe_receiver = this.q11_1;
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i15_1;
		    if (!(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs)) {
		      tmp = this.l11_1.b18();
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(StreamingJsonDecoder).ti = function () {
		    return null;
		  };
		  protoOf(StreamingJsonDecoder).tj = function (descriptor, index, deserializer, previousValue) {
		    var isMapKey = this.k11_1.equals(WriteMode_MAP_getInstance()) && (index & 1) === 0;
		    if (isMapKey) {
		      this.l11_1.s11_1.v15();
		    }
		    var value = protoOf(AbstractDecoder).tj.call(this, descriptor, index, deserializer, previousValue);
		    if (isMapKey) {
		      this.l11_1.s11_1.u15(value);
		    }
		    return value;
		  };
		  protoOf(StreamingJsonDecoder).yj = function (descriptor) {
		    var index;
		    switch (this.k11_1.e2_1) {
		      case 0:
		        index = decodeObjectIndex(this, descriptor);
		        break;
		      case 2:
		        index = decodeMapIndex(this);
		        break;
		      default:
		        index = decodeListIndex(this);
		        break;
		    }
		    if (!this.k11_1.equals(WriteMode_MAP_getInstance())) {
		      this.l11_1.s11_1.t15(index);
		    }
		    return index;
		  };
		  protoOf(StreamingJsonDecoder).ui = function () {
		    var tmp;
		    if (this.p11_1.m12_1) {
		      tmp = this.l11_1.n18();
		    } else {
		      tmp = this.l11_1.m18();
		    }
		    return tmp;
		  };
		  protoOf(StreamingJsonDecoder).vi = function () {
		    var value = this.l11_1.o18();
		    if (!value.equals(toLong_0(value.z2()))) {
		      this.l11_1.l15("Failed to parse byte for input '" + value.toString() + "'");
		    }
		    return value.z2();
		  };
		  protoOf(StreamingJsonDecoder).wi = function () {
		    var value = this.l11_1.o18();
		    if (!value.equals(toLong_0(value.a3()))) {
		      this.l11_1.l15("Failed to parse short for input '" + value.toString() + "'");
		    }
		    return value.a3();
		  };
		  protoOf(StreamingJsonDecoder).xi = function () {
		    var value = this.l11_1.o18();
		    if (!value.equals(toLong_0(value.b3()))) {
		      this.l11_1.l15("Failed to parse int for input '" + value.toString() + "'");
		    }
		    return value.b3();
		  };
		  protoOf(StreamingJsonDecoder).yi = function () {
		    return this.l11_1.o18();
		  };
		  protoOf(StreamingJsonDecoder).zi = function () {
		    var tmp$ret$4;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.l11_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeFloat.<anonymous>' call
		        // Inline function 'kotlin.text.toFloat' call
		        // Inline function 'kotlin.js.unsafeCast' call
		        // Inline function 'kotlin.js.asDynamic' call
		        tmp$ret$4 = toDouble(input);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'float' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    var result = tmp$ret$4;
		    var specialFp = this.j11_1.z10_1.u12_1;
		    if (specialFp || isFinite(result))
		      return result;
		    throwInvalidFloatingPointDecoded(this.l11_1, result);
		  };
		  protoOf(StreamingJsonDecoder).aj = function () {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.l11_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeDouble.<anonymous>' call
		        tmp$ret$1 = toDouble(input);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'double' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    var result = tmp$ret$1;
		    var specialFp = this.j11_1.z10_1.u12_1;
		    if (specialFp || isFinite_0(result))
		      return result;
		    throwInvalidFloatingPointDecoded(this.l11_1, result);
		  };
		  protoOf(StreamingJsonDecoder).bj = function () {
		    var string = this.l11_1.n16();
		    if (!(string.length === 1)) {
		      this.l11_1.l15("Expected single char, but got '" + string + "'");
		    }
		    return charSequenceGet(string, 0);
		  };
		  protoOf(StreamingJsonDecoder).cj = function () {
		    var tmp;
		    if (this.p11_1.m12_1) {
		      tmp = this.l11_1.g18();
		    } else {
		      tmp = this.l11_1.m16();
		    }
		    return tmp;
		  };
		  protoOf(StreamingJsonDecoder).ej = function (descriptor) {
		    return get_isUnsignedNumber(descriptor) ? new JsonDecoderForUnsignedTypes(this.l11_1, this.j11_1) : protoOf(AbstractDecoder).ej.call(this, descriptor);
		  };
		  protoOf(StreamingJsonDecoder).dj = function (enumDescriptor) {
		    return getJsonNameIndexOrThrow(enumDescriptor, this.j11_1, this.cj(), ' at path ' + this.l11_1.s11_1.x15());
		  };
		  function JsonDecoderForUnsignedTypes(lexer, json) {
		    AbstractDecoder.call(this);
		    this.p18_1 = lexer;
		    this.q18_1 = json.wj();
		  }
		  protoOf(JsonDecoderForUnsignedTypes).wj = function () {
		    return this.q18_1;
		  };
		  protoOf(JsonDecoderForUnsignedTypes).yj = function (descriptor) {
		    var message = 'unsupported';
		    throw IllegalStateException_init_$Create$(toString(message));
		  };
		  protoOf(JsonDecoderForUnsignedTypes).xi = function () {
		    var tmp$ret$2;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.p18_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeInt.<anonymous>' call
		        // Inline function 'kotlin.UInt.toInt' call
		        var this_1 = toUInt(input);
		        tmp$ret$2 = _UInt___get_data__impl__f0vqqw(this_1);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'UInt' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$2;
		  };
		  protoOf(JsonDecoderForUnsignedTypes).yi = function () {
		    var tmp$ret$2;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.p18_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeLong.<anonymous>' call
		        // Inline function 'kotlin.ULong.toLong' call
		        var this_1 = toULong(input);
		        tmp$ret$2 = _ULong___get_data__impl__fggpzb(this_1);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'ULong' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$2;
		  };
		  protoOf(JsonDecoderForUnsignedTypes).vi = function () {
		    var tmp$ret$2;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.p18_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeByte.<anonymous>' call
		        // Inline function 'kotlin.UByte.toByte' call
		        var this_1 = toUByte(input);
		        tmp$ret$2 = _UByte___get_data__impl__jof9qr(this_1);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'UByte' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$2;
		  };
		  protoOf(JsonDecoderForUnsignedTypes).wi = function () {
		    var tmp$ret$2;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.parseString' call
		      var this_0 = this.p18_1;
		      var input = this_0.n16();
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeShort.<anonymous>' call
		        // Inline function 'kotlin.UShort.toShort' call
		        var this_1 = toUShort(input);
		        tmp$ret$2 = _UShort___get_data__impl__g0245(this_1);
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          this_0.l15("Failed to parse type '" + 'UShort' + "' for input '" + input + "'");
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$2;
		  };
		  function get_unsignedNumberDescriptors() {
		    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
		    return unsignedNumberDescriptors;
		  }
		  var unsignedNumberDescriptors;
		  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
		    StreamingJsonEncoder.call($this, Composer_0(output, json), json, mode, modeReuseCache);
		    return $this;
		  }
		  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
		    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, objectCreate(protoOf(StreamingJsonEncoder)));
		  }
		  function encodeTypeInfo($this, descriptor) {
		    $this.y15_1.k14();
		    $this.lk(ensureNotNull($this.f16_1));
		    $this.y15_1.m14(_Char___init__impl__6a9atx(58));
		    $this.y15_1.l14();
		    $this.lk(descriptor.vg());
		  }
		  function composerForUnsignedNumbers($this) {
		    var tmp;
		    var tmp_0 = $this.y15_1;
		    if (tmp_0 instanceof ComposerForUnsignedNumbers) {
		      tmp = $this.y15_1;
		    } else {
		      tmp = new ComposerForUnsignedNumbers($this.y15_1.g14_1, $this.e16_1);
		    }
		    return tmp;
		  }
		  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
		    AbstractEncoder.call(this);
		    this.y15_1 = composer;
		    this.z15_1 = json;
		    this.a16_1 = mode;
		    this.b16_1 = modeReuseCache;
		    this.c16_1 = this.z15_1.wj();
		    this.d16_1 = this.z15_1.z10_1;
		    this.e16_1 = false;
		    this.f16_1 = null;
		    var i = this.a16_1.e2_1;
		    if (!(this.b16_1 == null)) {
		      if (!(this.b16_1[i] === null) || !(this.b16_1[i] === this)) {
		        this.b16_1[i] = this;
		      }
		    }
		  }
		  protoOf(StreamingJsonEncoder).a13 = function () {
		    return this.z15_1;
		  };
		  protoOf(StreamingJsonEncoder).wj = function () {
		    return this.c16_1;
		  };
		  protoOf(StreamingJsonEncoder).el = function (descriptor, index) {
		    return this.d16_1.k12_1;
		  };
		  protoOf(StreamingJsonEncoder).zk = function (serializer, value) {
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
		      var tmp;
		      if (!(serializer instanceof AbstractPolymorphicSerializer)) {
		        tmp = true;
		      } else {
		        tmp = this.a13().z10_1.s12_1;
		      }
		      if (tmp) {
		        serializer.yf(this, value);
		        break $l$block;
		      }
		      var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
		      var baseClassDiscriminator = classDiscriminator(serializer.xf(), this.a13());
		      var actualSerializer = findPolymorphicSerializer(casted, this, !(value == null) ? value : THROW_CCE());
		      validateIfSealed$accessor$1ad0flx(casted, actualSerializer, baseClassDiscriminator);
		      checkKind(actualSerializer.xf().oh());
		      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeSerializableValue.<anonymous>' call
		      this.f16_1 = baseClassDiscriminator;
		      actualSerializer.yf(this, value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).hj = function (descriptor) {
		    var newMode = switchMode(this.z15_1, descriptor);
		    if (!(newMode.k18_1 === _Char___init__impl__6a9atx(0))) {
		      this.y15_1.m14(newMode.k18_1);
		      this.y15_1.i14();
		    }
		    if (!(this.f16_1 == null)) {
		      encodeTypeInfo(this, descriptor);
		      this.f16_1 = null;
		    }
		    if (this.a16_1.equals(newMode)) {
		      return this;
		    }
		    var tmp0_safe_receiver = this.b16_1;
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.e2_1];
		    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.y15_1, this.z15_1, newMode, this.b16_1) : tmp1_elvis_lhs;
		  };
		  protoOf(StreamingJsonEncoder).ij = function (descriptor) {
		    if (!(this.a16_1.l18_1 === _Char___init__impl__6a9atx(0))) {
		      this.y15_1.j14();
		      this.y15_1.k14();
		      this.y15_1.m14(this.a16_1.l18_1);
		    }
		  };
		  protoOf(StreamingJsonEncoder).ak = function (descriptor, index) {
		    switch (this.a16_1.e2_1) {
		      case 1:
		        if (!this.y15_1.h14_1) {
		          this.y15_1.m14(_Char___init__impl__6a9atx(44));
		        }

		        this.y15_1.k14();
		        break;
		      case 2:
		        if (!this.y15_1.h14_1) {
		          var tmp = this;
		          var tmp_0;
		          if ((index % 2 | 0) === 0) {
		            this.y15_1.m14(_Char___init__impl__6a9atx(44));
		            this.y15_1.k14();
		            tmp_0 = true;
		          } else {
		            this.y15_1.m14(_Char___init__impl__6a9atx(58));
		            this.y15_1.l14();
		            tmp_0 = false;
		          }
		          tmp.e16_1 = tmp_0;
		        } else {
		          this.e16_1 = true;
		          this.y15_1.k14();
		        }

		        break;
		      case 3:
		        if (index === 0)
		          this.e16_1 = true;
		        if (index === 1) {
		          this.y15_1.m14(_Char___init__impl__6a9atx(44));
		          this.y15_1.l14();
		          this.e16_1 = false;
		        }

		        break;
		      default:
		        if (!this.y15_1.h14_1) {
		          this.y15_1.m14(_Char___init__impl__6a9atx(44));
		        }

		        this.y15_1.k14();
		        this.lk(descriptor.sh(index));
		        this.y15_1.m14(_Char___init__impl__6a9atx(58));
		        this.y15_1.l14();
		        break;
		    }
		    return true;
		  };
		  protoOf(StreamingJsonEncoder).al = function (descriptor, index, serializer, value) {
		    if (!(value == null) || this.d16_1.p12_1) {
		      protoOf(AbstractEncoder).al.call(this, descriptor, index, serializer, value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).nk = function (descriptor) {
		    return get_isUnsignedNumber(descriptor) ? new StreamingJsonEncoder(composerForUnsignedNumbers(this), this.z15_1, this.a16_1, null) : protoOf(AbstractEncoder).nk.call(this, descriptor);
		  };
		  protoOf(StreamingJsonEncoder).ck = function () {
		    this.y15_1.o14('null');
		  };
		  protoOf(StreamingJsonEncoder).dk = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.x14(value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).ek = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.s14(value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).fk = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.u14(value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).gk = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.v14(value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).hk = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.w14(value);
		    }
		  };
		  protoOf(StreamingJsonEncoder).ik = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.q14(value);
		    }
		    if (!this.d16_1.u12_1 && !isFinite(value)) {
		      throw InvalidFloatingPointEncoded_0(value, toString(this.y15_1.g14_1));
		    }
		  };
		  protoOf(StreamingJsonEncoder).jk = function (value) {
		    if (this.e16_1) {
		      this.lk(value.toString());
		    } else {
		      this.y15_1.r14(value);
		    }
		    if (!this.d16_1.u12_1 && !isFinite_0(value)) {
		      throw InvalidFloatingPointEncoded_0(value, toString(this.y15_1.g14_1));
		    }
		  };
		  protoOf(StreamingJsonEncoder).kk = function (value) {
		    this.lk(toString_0(value));
		  };
		  protoOf(StreamingJsonEncoder).lk = function (value) {
		    return this.y15_1.y14(value);
		  };
		  protoOf(StreamingJsonEncoder).mk = function (enumDescriptor, index) {
		    this.lk(enumDescriptor.sh(index));
		  };
		  function get_isUnsignedNumber(_this__u8e3s4) {
		    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
		    return _this__u8e3s4.nh() && get_unsignedNumberDescriptors().o1(_this__u8e3s4);
		  }
		  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
		  function _init_properties_StreamingJsonEncoder_kt__pn1bsi() {
		    if (!properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
		      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
		      unsignedNumberDescriptors = setOf([serializer_1(Companion_getInstance_0()).xf(), serializer_0(Companion_getInstance()).xf(), serializer_2(Companion_getInstance_1()).xf(), serializer_3(Companion_getInstance_2()).xf()]);
		    }
		  }
		  function get_ESCAPE_STRINGS() {
		    _init_properties_StringOps_kt__fcy1db();
		    return ESCAPE_STRINGS;
		  }
		  var ESCAPE_STRINGS;
		  function toHexChar(i) {
		    _init_properties_StringOps_kt__fcy1db();
		    var d = i & 15;
		    var tmp;
		    if (d < 10) {
		      // Inline function 'kotlin.code' call
		      var this_0 = _Char___init__impl__6a9atx(48);
		      var tmp$ret$0 = Char__toInt_impl_vasixd(this_0);
		      tmp = numberToChar(d + tmp$ret$0 | 0);
		    } else {
		      var tmp_0 = d - 10 | 0;
		      // Inline function 'kotlin.code' call
		      var this_1 = _Char___init__impl__6a9atx(97);
		      var tmp$ret$1 = Char__toInt_impl_vasixd(this_1);
		      tmp = numberToChar(tmp_0 + tmp$ret$1 | 0);
		    }
		    return tmp;
		  }
		  function printQuoted(_this__u8e3s4, value) {
		    _init_properties_StringOps_kt__fcy1db();
		    _this__u8e3s4.j7(_Char___init__impl__6a9atx(34));
		    var lastPos = 0;
		    var inductionVariable = 0;
		    var last = charSequenceLength(value) - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.code' call
		        var this_0 = charSequenceGet(value, i);
		        var c = Char__toInt_impl_vasixd(this_0);
		        if (c < get_ESCAPE_STRINGS().length && !(get_ESCAPE_STRINGS()[c] == null)) {
		          _this__u8e3s4.ba(value, lastPos, i);
		          _this__u8e3s4.i7(get_ESCAPE_STRINGS()[c]);
		          lastPos = i + 1 | 0;
		        }
		      }
		       while (inductionVariable <= last);
		    if (!(lastPos === 0)) {
		      _this__u8e3s4.ba(value, lastPos, value.length);
		    } else {
		      _this__u8e3s4.i7(value);
		    }
		    _this__u8e3s4.j7(_Char___init__impl__6a9atx(34));
		  }
		  function toBooleanStrictOrNull(_this__u8e3s4) {
		    _init_properties_StringOps_kt__fcy1db();
		    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
		  }
		  var properties_initialized_StringOps_kt_wzaea7;
		  function _init_properties_StringOps_kt__fcy1db() {
		    if (!properties_initialized_StringOps_kt_wzaea7) {
		      properties_initialized_StringOps_kt_wzaea7 = true;
		      // Inline function 'kotlin.apply' call
		      // Inline function 'kotlin.arrayOfNulls' call
		      var this_0 = fillArrayVal(Array(93), null);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_STRINGS.<anonymous>' call
		      var inductionVariable = 0;
		      if (inductionVariable <= 31)
		        do {
		          var c = inductionVariable;
		          inductionVariable = inductionVariable + 1 | 0;
		          var c1 = toHexChar(c >> 12);
		          var c2 = toHexChar(c >> 8);
		          var c3 = toHexChar(c >> 4);
		          var c4 = toHexChar(c);
		          this_0[c] = '\\u' + toString_0(c1) + toString_0(c2) + toString_0(c3) + toString_0(c4);
		        }
		         while (inductionVariable <= 31);
		      // Inline function 'kotlin.code' call
		      var this_1 = _Char___init__impl__6a9atx(34);
		      this_0[Char__toInt_impl_vasixd(this_1)] = '\\"';
		      // Inline function 'kotlin.code' call
		      var this_2 = _Char___init__impl__6a9atx(92);
		      this_0[Char__toInt_impl_vasixd(this_2)] = '\\\\';
		      // Inline function 'kotlin.code' call
		      var this_3 = _Char___init__impl__6a9atx(9);
		      this_0[Char__toInt_impl_vasixd(this_3)] = '\\t';
		      // Inline function 'kotlin.code' call
		      var this_4 = _Char___init__impl__6a9atx(8);
		      this_0[Char__toInt_impl_vasixd(this_4)] = '\\b';
		      // Inline function 'kotlin.code' call
		      var this_5 = _Char___init__impl__6a9atx(10);
		      this_0[Char__toInt_impl_vasixd(this_5)] = '\\n';
		      // Inline function 'kotlin.code' call
		      var this_6 = _Char___init__impl__6a9atx(13);
		      this_0[Char__toInt_impl_vasixd(this_6)] = '\\r';
		      this_0[12] = '\\f';
		      ESCAPE_STRINGS = this_0;
		      // Inline function 'kotlin.apply' call
		      var this_7 = new Int8Array(93);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_MARKERS.<anonymous>' call
		      var inductionVariable_0 = 0;
		      if (inductionVariable_0 <= 31)
		        do {
		          var c_0 = inductionVariable_0;
		          inductionVariable_0 = inductionVariable_0 + 1 | 0;
		          this_7[c_0] = 1;
		        }
		         while (inductionVariable_0 <= 31);
		      // Inline function 'kotlin.code' call
		      var this_8 = _Char___init__impl__6a9atx(34);
		      this_7[Char__toInt_impl_vasixd(this_8)] = 34;
		      // Inline function 'kotlin.code' call
		      var this_9 = _Char___init__impl__6a9atx(92);
		      this_7[Char__toInt_impl_vasixd(this_9)] = 92;
		      // Inline function 'kotlin.code' call
		      var this_10 = _Char___init__impl__6a9atx(9);
		      this_7[Char__toInt_impl_vasixd(this_10)] = 116;
		      // Inline function 'kotlin.code' call
		      var this_11 = _Char___init__impl__6a9atx(8);
		      this_7[Char__toInt_impl_vasixd(this_11)] = 98;
		      // Inline function 'kotlin.code' call
		      var this_12 = _Char___init__impl__6a9atx(10);
		      this_7[Char__toInt_impl_vasixd(this_12)] = 110;
		      // Inline function 'kotlin.code' call
		      var this_13 = _Char___init__impl__6a9atx(13);
		      this_7[Char__toInt_impl_vasixd(this_13)] = 114;
		      this_7[12] = 102;
		    }
		  }
		  function readJson(_this__u8e3s4, element, deserializer) {
		    var tmp;
		    if (element instanceof JsonObject) {
		      tmp = new JsonTreeDecoder(_this__u8e3s4, element);
		    } else {
		      if (element instanceof JsonArray) {
		        tmp = new JsonTreeListDecoder(_this__u8e3s4, element);
		      } else {
		        var tmp_0;
		        if (element instanceof JsonLiteral) {
		          tmp_0 = true;
		        } else {
		          tmp_0 = equals(element, JsonNull_getInstance());
		        }
		        if (tmp_0) {
		          tmp = new JsonPrimitiveDecoder(_this__u8e3s4, element instanceof JsonPrimitive ? element : THROW_CCE());
		        } else {
		          noWhenBranchMatchedException();
		        }
		      }
		    }
		    var input = tmp;
		    return input.gj(deserializer);
		  }
		  function currentObject($this) {
		    var tmp0_safe_receiver = $this.fx();
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.currentObject.<anonymous>' call
		      tmp = $this.w18(tmp0_safe_receiver);
		    }
		    var tmp1_elvis_lhs = tmp;
		    return tmp1_elvis_lhs == null ? $this.r1() : tmp1_elvis_lhs;
		  }
		  function unparsedPrimitive($this, primitive) {
		    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
		  }
		  function asLiteral(_this__u8e3s4, $this, type) {
		    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonLiteral ? _this__u8e3s4 : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw JsonDecodingException_1(-1, "Unexpected 'null' when " + type + ' was expected');
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  }
		  function AbstractJsonTreeDecoder(json, value) {
		    NamedValueDecoder.call(this);
		    this.t18_1 = json;
		    this.u18_1 = value;
		    this.v18_1 = this.a13().z10_1;
		  }
		  protoOf(AbstractJsonTreeDecoder).a13 = function () {
		    return this.t18_1;
		  };
		  protoOf(AbstractJsonTreeDecoder).r1 = function () {
		    return this.u18_1;
		  };
		  protoOf(AbstractJsonTreeDecoder).wj = function () {
		    return this.a13().wj();
		  };
		  protoOf(AbstractJsonTreeDecoder).y12 = function () {
		    return currentObject(this);
		  };
		  protoOf(AbstractJsonTreeDecoder).gj = function (deserializer) {
		    return decodeSerializableValuePolymorphic(this, deserializer);
		  };
		  protoOf(AbstractJsonTreeDecoder).gx = function (parentName, childName) {
		    return childName;
		  };
		  protoOf(AbstractJsonTreeDecoder).hj = function (descriptor) {
		    var currentObject_0 = currentObject(this);
		    var tmp0_subject = descriptor.oh();
		    var tmp;
		    var tmp_0;
		    if (equals(tmp0_subject, LIST_getInstance())) {
		      tmp_0 = true;
		    } else {
		      tmp_0 = tmp0_subject instanceof PolymorphicKind;
		    }
		    if (tmp_0) {
		      var tmp_1 = this.a13();
		      // Inline function 'kotlinx.serialization.json.internal.cast' call
		      if (!(currentObject_0 instanceof JsonArray)) {
		        throw JsonDecodingException_1(-1, 'Expected ' + toString(getKClass(JsonArray)) + ' as the serialized body of ' + descriptor.vg() + ', but had ' + toString(getKClassFromExpression(currentObject_0)));
		      }
		      tmp = new JsonTreeListDecoder(tmp_1, currentObject_0);
		    } else {
		      if (equals(tmp0_subject, MAP_getInstance())) {
		        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
		        var this_0 = this.a13();
		        var keyDescriptor = carrierDescriptor(descriptor.qh(0), this_0.wj());
		        var keyKind = keyDescriptor.oh();
		        var tmp_2;
		        var tmp_3;
		        if (keyKind instanceof PrimitiveKind) {
		          tmp_3 = true;
		        } else {
		          tmp_3 = equals(keyKind, ENUM_getInstance());
		        }
		        if (tmp_3) {
		          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
		          var tmp_4 = this.a13();
		          // Inline function 'kotlinx.serialization.json.internal.cast' call
		          if (!(currentObject_0 instanceof JsonObject)) {
		            throw JsonDecodingException_1(-1, 'Expected ' + toString(getKClass(JsonObject)) + ' as the serialized body of ' + descriptor.vg() + ', but had ' + toString(getKClassFromExpression(currentObject_0)));
		          }
		          tmp_2 = new JsonTreeMapDecoder(tmp_4, currentObject_0);
		        } else {
		          if (this_0.z10_1.n12_1) {
		            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
		            var tmp_5 = this.a13();
		            // Inline function 'kotlinx.serialization.json.internal.cast' call
		            if (!(currentObject_0 instanceof JsonArray)) {
		              throw JsonDecodingException_1(-1, 'Expected ' + toString(getKClass(JsonArray)) + ' as the serialized body of ' + descriptor.vg() + ', but had ' + toString(getKClassFromExpression(currentObject_0)));
		            }
		            tmp_2 = new JsonTreeListDecoder(tmp_5, currentObject_0);
		          } else {
		            throw InvalidKeyKindException(keyDescriptor);
		          }
		        }
		        tmp = tmp_2;
		      } else {
		        var tmp_6 = this.a13();
		        // Inline function 'kotlinx.serialization.json.internal.cast' call
		        if (!(currentObject_0 instanceof JsonObject)) {
		          throw JsonDecodingException_1(-1, 'Expected ' + toString(getKClass(JsonObject)) + ' as the serialized body of ' + descriptor.vg() + ', but had ' + toString(getKClassFromExpression(currentObject_0)));
		        }
		        tmp = new JsonTreeDecoder(tmp_6, currentObject_0);
		      }
		    }
		    return tmp;
		  };
		  protoOf(AbstractJsonTreeDecoder).ij = function (descriptor) {
		  };
		  protoOf(AbstractJsonTreeDecoder).si = function () {
		    var tmp = currentObject(this);
		    return !(tmp instanceof JsonNull);
		  };
		  protoOf(AbstractJsonTreeDecoder).x18 = function (tag) {
		    var currentElement = this.w18(tag);
		    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + toString(currentElement), toString(currentObject(this)));
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    return tmp;
		  };
		  protoOf(AbstractJsonTreeDecoder).y18 = function (tag, enumDescriptor) {
		    return getJsonNameIndexOrThrow(enumDescriptor, this.a13(), this.x18(tag).h13());
		  };
		  protoOf(AbstractJsonTreeDecoder).oy = function (tag, enumDescriptor) {
		    return this.y18((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), enumDescriptor);
		  };
		  protoOf(AbstractJsonTreeDecoder).z18 = function (tag) {
		    return !(this.w18(tag) === JsonNull_getInstance());
		  };
		  protoOf(AbstractJsonTreeDecoder).ey = function (tag) {
		    return this.z18((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).a19 = function (tag) {
		    var value = this.x18(tag);
		    if (!this.a13().z10_1.m12_1) {
		      var literal = asLiteral(value, this, 'boolean');
		      if (literal.i13_1)
		        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", toString(currentObject(this)));
		    }
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedBoolean.<anonymous>' call
		        var tmp0_elvis_lhs = get_booleanOrNull(value);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          throw IllegalArgumentException_init_$Create$_0();
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        var tmp0_elvis_lhs_0 = tmp;
		        var tmp_0;
		        if (tmp0_elvis_lhs_0 == null) {
		          unparsedPrimitive(this, 'boolean');
		        } else {
		          tmp_0 = tmp0_elvis_lhs_0;
		        }
		        tmp$ret$1 = tmp_0;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'boolean');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).fy = function (tag) {
		    return this.a19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).b19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedByte.<anonymous>' call
		        var result = get_int(this_0);
		        var tmp0_elvis_lhs = (-128 <= result ? result <= 127 : false) ? toByte(result) : null;
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'byte');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'byte');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).gy = function (tag) {
		    return this.b19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).c19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedShort.<anonymous>' call
		        var result = get_int(this_0);
		        var tmp0_elvis_lhs = (-32768 <= result ? result <= 32767 : false) ? toShort(result) : null;
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'short');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'short');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).hy = function (tag) {
		    return this.c19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).d19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedInt.<anonymous>' call
		        var tmp0_elvis_lhs = get_int(this_0);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'int');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'int');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).iy = function (tag) {
		    return this.d19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).e19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedLong.<anonymous>' call
		        var tmp0_elvis_lhs = get_long(this_0);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'long');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'long');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).jy = function (tag) {
		    return this.e19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).f19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedFloat.<anonymous>' call
		        var tmp0_elvis_lhs = get_float(this_0);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'float');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'float');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    var result = tmp$ret$1;
		    var specialFp = this.a13().z10_1.u12_1;
		    if (specialFp || isFinite(result))
		      return result;
		    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
		  };
		  protoOf(AbstractJsonTreeDecoder).ky = function (tag) {
		    return this.f19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).g19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedDouble.<anonymous>' call
		        var tmp0_elvis_lhs = get_double(this_0);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'double');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'double');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    var result = tmp$ret$1;
		    var specialFp = this.a13().z10_1.u12_1;
		    if (specialFp || isFinite_0(result))
		      return result;
		    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
		  };
		  protoOf(AbstractJsonTreeDecoder).ly = function (tag) {
		    return this.g19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).h19 = function (tag) {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
		      var this_0 = this.x18(tag);
		      try {
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedChar.<anonymous>' call
		        var tmp0_elvis_lhs = new Char(single(this_0.h13()));
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          unparsedPrimitive(this, 'char');
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        tmp$ret$1 = tmp.b1_1;
		        break $l$block;
		      } catch ($p) {
		        if ($p instanceof IllegalArgumentException) {
		          unparsedPrimitive(this, 'char');
		        } else {
		          throw $p;
		        }
		      }
		    }
		    return tmp$ret$1;
		  };
		  protoOf(AbstractJsonTreeDecoder).my = function (tag) {
		    return this.h19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).i19 = function (tag) {
		    var value = this.x18(tag);
		    if (!this.a13().z10_1.m12_1) {
		      var literal = asLiteral(value, this, 'string');
		      if (!literal.i13_1)
		        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", toString(currentObject(this)));
		    }
		    if (value instanceof JsonNull)
		      throw JsonDecodingException_0(-1, "Unexpected 'null' value instead of string literal", toString(currentObject(this)));
		    return value.h13();
		  };
		  protoOf(AbstractJsonTreeDecoder).ny = function (tag) {
		    return this.i19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeDecoder).j19 = function (tag, inlineDescriptor) {
		    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(new StringJsonLexer(this.x18(tag).h13()), this.a13()) : protoOf(NamedValueDecoder).py.call(this, tag, inlineDescriptor);
		  };
		  protoOf(AbstractJsonTreeDecoder).py = function (tag, inlineDescriptor) {
		    return this.j19((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
		  };
		  function coerceInputValue_0($this, descriptor, index, tag) {
		    var tmp$ret$1;
		    $l$block_1: {
		      // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
		      var this_0 = $this.a13();
		      var elementDescriptor = descriptor.qh(index);
		      var tmp;
		      if (!elementDescriptor.hh()) {
		        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
		        var tmp_0 = $this.w18(tag);
		        tmp = tmp_0 instanceof JsonNull;
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        tmp$ret$1 = true;
		        break $l$block_1;
		      }
		      if (equals(elementDescriptor.oh(), ENUM_getInstance())) {
		        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
		        var tmp_1 = $this.w18(tag);
		        var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
		        var tmp0_elvis_lhs = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
		        var tmp_2;
		        if (tmp0_elvis_lhs == null) {
		          tmp$ret$1 = false;
		          break $l$block_1;
		        } else {
		          tmp_2 = tmp0_elvis_lhs;
		        }
		        var enumValue = tmp_2;
		        var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
		        if (enumIndex === -3) {
		          // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue.<anonymous>' call
		          tmp$ret$1 = true;
		          break $l$block_1;
		        }
		      }
		      tmp$ret$1 = false;
		    }
		    return tmp$ret$1;
		  }
		  function absenceIsNull($this, descriptor, index) {
		    $this.t19_1 = (!$this.a13().z10_1.p12_1 && !descriptor.th(index) && descriptor.qh(index).hh());
		    return $this.t19_1;
		  }
		  function buildAlternativeNamesMap$ref_0($boundThis) {
		    var l = function () {
		      return buildAlternativeNamesMap($boundThis);
		    };
		    l.callableName = 'buildAlternativeNamesMap';
		    return l;
		  }
		  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
		    polyDiscriminator = polyDiscriminator === VOID ? null : polyDiscriminator;
		    polyDescriptor = polyDescriptor === VOID ? null : polyDescriptor;
		    AbstractJsonTreeDecoder.call(this, json, value);
		    this.p19_1 = value;
		    this.q19_1 = polyDiscriminator;
		    this.r19_1 = polyDescriptor;
		    this.s19_1 = 0;
		    this.t19_1 = false;
		  }
		  protoOf(JsonTreeDecoder).r1 = function () {
		    return this.p19_1;
		  };
		  protoOf(JsonTreeDecoder).yj = function (descriptor) {
		    while (this.s19_1 < descriptor.mh()) {
		      var tmp1 = this.s19_1;
		      this.s19_1 = tmp1 + 1 | 0;
		      var name = this.bx(descriptor, tmp1);
		      var index = this.s19_1 - 1 | 0;
		      this.t19_1 = false;
		      var tmp;
		      var tmp_0;
		      // Inline function 'kotlin.collections.contains' call
		      // Inline function 'kotlin.collections.containsKey' call
		      var this_0 = this.r1();
		      if ((isInterface(this_0, KtMap) ? this_0 : THROW_CCE()).s1(name)) {
		        tmp_0 = true;
		      } else {
		        tmp_0 = absenceIsNull(this, descriptor, index);
		      }
		      if (tmp_0) {
		        tmp = !this.v18_1.r12_1 || !coerceInputValue_0(this, descriptor, index, name);
		      } else {
		        tmp = false;
		      }
		      if (tmp) {
		        return index;
		      }
		    }
		    return -1;
		  };
		  protoOf(JsonTreeDecoder).si = function () {
		    return !this.t19_1 && protoOf(AbstractJsonTreeDecoder).si.call(this);
		  };
		  protoOf(JsonTreeDecoder).cx = function (desc, index) {
		    var mainName = desc.sh(index);
		    if (!this.v18_1.v12_1)
		      return mainName;
		    if (this.r1().v1().o1(mainName))
		      return mainName;
		    var tmp = get_schemaCache(this.a13());
		    var tmp_0 = get_JsonAlternativeNamesKey();
		    var alternativeNamesMap = tmp.n15(desc, tmp_0, buildAlternativeNamesMap$ref_0(desc));
		    // Inline function 'kotlin.collections.find' call
		    var this_0 = this.r1().v1();
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.collections.firstOrNull' call
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.elementName.<anonymous>' call
		        if (alternativeNamesMap.u1(element) === index) {
		          tmp$ret$1 = element;
		          break $l$block;
		        }
		      }
		      tmp$ret$1 = null;
		    }
		    var nameInObject = tmp$ret$1;
		    return nameInObject == null ? mainName : nameInObject;
		  };
		  protoOf(JsonTreeDecoder).w18 = function (tag) {
		    return getValue(this.r1(), tag);
		  };
		  protoOf(JsonTreeDecoder).hj = function (descriptor) {
		    if (descriptor === this.r19_1)
		      return this;
		    return protoOf(AbstractJsonTreeDecoder).hj.call(this, descriptor);
		  };
		  protoOf(JsonTreeDecoder).ij = function (descriptor) {
		    var tmp;
		    if (this.v18_1.l12_1) {
		      tmp = true;
		    } else {
		      var tmp_0 = descriptor.oh();
		      tmp = tmp_0 instanceof PolymorphicKind;
		    }
		    if (tmp)
		      return Unit_instance;
		    var tmp_1;
		    if (!this.v18_1.v12_1) {
		      tmp_1 = jsonCachedSerialNames(descriptor);
		    } else {
		      var tmp_2 = jsonCachedSerialNames(descriptor);
		      // Inline function 'kotlin.collections.orEmpty' call
		      var tmp0_safe_receiver = get_schemaCache(this.a13()).x17(descriptor, get_JsonAlternativeNamesKey());
		      var tmp0_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v1();
		      var tmp$ret$0 = tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
		      tmp_1 = plus_0(tmp_2, tmp$ret$0);
		    }
		    var names = tmp_1;
		    var tmp1_iterator = this.r1().v1().i();
		    while (tmp1_iterator.j()) {
		      var key = tmp1_iterator.k();
		      if (!names.o1(key) && !(key === this.q19_1)) {
		        throw UnknownKeyException(key, this.r1().toString());
		      }
		    }
		  };
		  function JsonTreeListDecoder(json, value) {
		    AbstractJsonTreeDecoder.call(this, json, value);
		    this.z19_1 = value;
		    this.a1a_1 = this.z19_1.l();
		    this.b1a_1 = -1;
		  }
		  protoOf(JsonTreeListDecoder).r1 = function () {
		    return this.z19_1;
		  };
		  protoOf(JsonTreeListDecoder).cx = function (desc, index) {
		    return index.toString();
		  };
		  protoOf(JsonTreeListDecoder).w18 = function (tag) {
		    return this.z19_1.m(toInt(tag));
		  };
		  protoOf(JsonTreeListDecoder).yj = function (descriptor) {
		    while (this.b1a_1 < (this.a1a_1 - 1 | 0)) {
		      this.b1a_1 = this.b1a_1 + 1 | 0;
		      return this.b1a_1;
		    }
		    return -1;
		  };
		  function JsonPrimitiveDecoder(json, value) {
		    AbstractJsonTreeDecoder.call(this, json, value);
		    this.h1a_1 = value;
		    this.xx('primitive');
		  }
		  protoOf(JsonPrimitiveDecoder).r1 = function () {
		    return this.h1a_1;
		  };
		  protoOf(JsonPrimitiveDecoder).yj = function (descriptor) {
		    return 0;
		  };
		  protoOf(JsonPrimitiveDecoder).w18 = function (tag) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(tag === 'primitive')) {
		      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveDecoder.currentElement.<anonymous>' call
		      var message = "This input can only handle primitives with 'primitive' tag";
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    return this.h1a_1;
		  };
		  function JsonTreeMapDecoder(json, value) {
		    JsonTreeDecoder.call(this, json, value);
		    this.s1a_1 = value;
		    this.t1a_1 = toList(this.s1a_1.v1());
		    this.u1a_1 = imul(this.t1a_1.l(), 2);
		    this.v1a_1 = -1;
		  }
		  protoOf(JsonTreeMapDecoder).r1 = function () {
		    return this.s1a_1;
		  };
		  protoOf(JsonTreeMapDecoder).cx = function (desc, index) {
		    var i = index / 2 | 0;
		    return this.t1a_1.m(i);
		  };
		  protoOf(JsonTreeMapDecoder).yj = function (descriptor) {
		    while (this.v1a_1 < (this.u1a_1 - 1 | 0)) {
		      this.v1a_1 = this.v1a_1 + 1 | 0;
		      return this.v1a_1;
		    }
		    return -1;
		  };
		  protoOf(JsonTreeMapDecoder).w18 = function (tag) {
		    return (this.v1a_1 % 2 | 0) === 0 ? JsonPrimitive_2(tag) : getValue(this.s1a_1, tag);
		  };
		  protoOf(JsonTreeMapDecoder).ij = function (descriptor) {
		  };
		  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
		    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.xf())).gj(deserializer);
		  }
		  function writeJson(_this__u8e3s4, value, serializer) {
		    var result = {_v: null};
		    var encoder = new JsonTreeEncoder(_this__u8e3s4, writeJson$lambda(result));
		    encoder.zk(serializer, value);
		    var tmp;
		    if (result._v == null) {
		      throwUninitializedPropertyAccessException('result');
		    } else {
		      tmp = result._v;
		    }
		    return tmp;
		  }
		  function JsonTreeEncoder(json, nodeConsumer) {
		    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
		    var tmp = this;
		    // Inline function 'kotlin.collections.linkedMapOf' call
		    tmp.g1b_1 = LinkedHashMap_init_$Create$();
		  }
		  protoOf(JsonTreeEncoder).h1b = function (key, element) {
		    // Inline function 'kotlin.collections.set' call
		    this.g1b_1.b2(key, element);
		  };
		  protoOf(JsonTreeEncoder).al = function (descriptor, index, serializer, value) {
		    if (!(value == null) || this.z1a_1.p12_1) {
		      protoOf(AbstractJsonTreeEncoder).al.call(this, descriptor, index, serializer, value);
		    }
		  };
		  protoOf(JsonTreeEncoder).i1b = function () {
		    return new JsonObject(this.g1b_1);
		  };
		  function AbstractJsonTreeEncoder$encodeTaggedInline$1(this$0, $tag) {
		    this.x1b_1 = this$0;
		    this.y1b_1 = $tag;
		    AbstractEncoder.call(this);
		    this.w1b_1 = this$0.x1a_1.wj();
		  }
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).wj = function () {
		    return this.w1b_1;
		  };
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).z1b = function (s) {
		    return this.x1b_1.h1b(this.y1b_1, new JsonLiteral(s, false));
		  };
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).gk = function (value) {
		    // Inline function 'kotlin.toUInt' call
		    var tmp$ret$0 = _UInt___init__impl__l7qpdl(value);
		    return this.z1b(UInt__toString_impl_dbgl21(tmp$ret$0));
		  };
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).hk = function (value) {
		    // Inline function 'kotlin.toULong' call
		    var tmp$ret$0 = _ULong___init__impl__c78o9k(value);
		    return this.z1b(ULong__toString_impl_f9au7k(tmp$ret$0));
		  };
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).ek = function (value) {
		    // Inline function 'kotlin.toUByte' call
		    var tmp$ret$0 = _UByte___init__impl__g9hnc4(value);
		    return this.z1b(UByte__toString_impl_v72jg(tmp$ret$0));
		  };
		  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).fk = function (value) {
		    // Inline function 'kotlin.toUShort' call
		    var tmp$ret$0 = _UShort___init__impl__jigrne(value);
		    return this.z1b(UShort__toString_impl_edaoee(tmp$ret$0));
		  };
		  function AbstractJsonTreeEncoder$beginStructure$lambda(this$0) {
		    return function (node) {
		      this$0.h1b(this$0.wx(), node);
		      return Unit_instance;
		    };
		  }
		  function AbstractJsonTreeEncoder(json, nodeConsumer) {
		    NamedValueEncoder.call(this);
		    this.x1a_1 = json;
		    this.y1a_1 = nodeConsumer;
		    this.z1a_1 = this.x1a_1.z10_1;
		    this.a1b_1 = null;
		  }
		  protoOf(AbstractJsonTreeEncoder).a13 = function () {
		    return this.x1a_1;
		  };
		  protoOf(AbstractJsonTreeEncoder).wj = function () {
		    return this.x1a_1.wj();
		  };
		  protoOf(AbstractJsonTreeEncoder).el = function (descriptor, index) {
		    return this.z1a_1.k12_1;
		  };
		  protoOf(AbstractJsonTreeEncoder).gx = function (parentName, childName) {
		    return childName;
		  };
		  protoOf(AbstractJsonTreeEncoder).cl = function () {
		  };
		  protoOf(AbstractJsonTreeEncoder).ck = function () {
		    var tmp0_elvis_lhs = this.fx();
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return this.y1a_1(JsonNull_getInstance());
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var tag = tmp;
		    this.j1b(tag);
		  };
		  protoOf(AbstractJsonTreeEncoder).j1b = function (tag) {
		    return this.h1b(tag, JsonNull_getInstance());
		  };
		  protoOf(AbstractJsonTreeEncoder).jx = function (tag) {
		    return this.j1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
		  };
		  protoOf(AbstractJsonTreeEncoder).k1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_0(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).kx = function (tag, value) {
		    return this.k1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).l1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_0(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).lx = function (tag, value) {
		    return this.l1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).m1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_0(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).mx = function (tag, value) {
		    return this.m1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).n1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_0(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).nx = function (tag, value) {
		    return this.n1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).o1b = function (tag, value) {
		    this.h1b(tag, JsonPrimitive_0(value));
		    if (!this.z1a_1.u12_1 && !isFinite(value)) {
		      throw InvalidFloatingPointEncoded(value, tag, toString(this.i1b()));
		    }
		  };
		  protoOf(AbstractJsonTreeEncoder).ox = function (tag, value) {
		    return this.o1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).zk = function (serializer, value) {
		    if (!(this.fx() == null) || !get_requiresTopLevelTag(carrierDescriptor(serializer.xf(), this.wj()))) {
		      $l$block: {
		        // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
		        var tmp;
		        if (!(serializer instanceof AbstractPolymorphicSerializer)) {
		          tmp = true;
		        } else {
		          tmp = this.a13().z10_1.s12_1;
		        }
		        if (tmp) {
		          serializer.yf(this, value);
		          break $l$block;
		        }
		        var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
		        var baseClassDiscriminator = classDiscriminator(serializer.xf(), this.a13());
		        var actualSerializer = findPolymorphicSerializer(casted, this, !(value == null) ? value : THROW_CCE());
		        validateIfSealed$accessor$1ad0flx(casted, actualSerializer, baseClassDiscriminator);
		        checkKind(actualSerializer.xf().oh());
		        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
		        this.a1b_1 = baseClassDiscriminator;
		        actualSerializer.yf(this, value);
		      }
		    } else {
		      // Inline function 'kotlin.apply' call
		      var this_0 = new JsonPrimitiveEncoder(this.x1a_1, this.y1a_1);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
		      this_0.zk(serializer, value);
		      this_0.vx(serializer.xf());
		    }
		  };
		  protoOf(AbstractJsonTreeEncoder).p1b = function (tag, value) {
		    this.h1b(tag, JsonPrimitive_0(value));
		    if (!this.z1a_1.u12_1 && !isFinite_0(value)) {
		      throw InvalidFloatingPointEncoded(value, tag, toString(this.i1b()));
		    }
		  };
		  protoOf(AbstractJsonTreeEncoder).px = function (tag, value) {
		    return this.p1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).q1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_1(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).qx = function (tag, value) {
		    return this.q1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).r1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_2(toString_0(value)));
		  };
		  protoOf(AbstractJsonTreeEncoder).rx = function (tag, value) {
		    return this.r1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).s1b = function (tag, value) {
		    return this.h1b(tag, JsonPrimitive_2(value));
		  };
		  protoOf(AbstractJsonTreeEncoder).sx = function (tag, value) {
		    return this.s1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).t1b = function (tag, enumDescriptor, ordinal) {
		    return this.h1b(tag, JsonPrimitive_2(enumDescriptor.sh(ordinal)));
		  };
		  protoOf(AbstractJsonTreeEncoder).tx = function (tag, enumDescriptor, ordinal) {
		    return this.t1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), enumDescriptor, ordinal);
		  };
		  protoOf(AbstractJsonTreeEncoder).u1b = function (tag, value) {
		    this.h1b(tag, JsonPrimitive_2(toString(value)));
		  };
		  protoOf(AbstractJsonTreeEncoder).hx = function (tag, value) {
		    return this.u1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
		  };
		  protoOf(AbstractJsonTreeEncoder).v1b = function (tag, inlineDescriptor) {
		    var tmp;
		    if (get_isUnsignedNumber(inlineDescriptor)) {
		      tmp = new AbstractJsonTreeEncoder$encodeTaggedInline$1(this, tag);
		    } else {
		      tmp = protoOf(NamedValueEncoder).ux.call(this, tag, inlineDescriptor);
		    }
		    return tmp;
		  };
		  protoOf(AbstractJsonTreeEncoder).ux = function (tag, inlineDescriptor) {
		    return this.v1b((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
		  };
		  protoOf(AbstractJsonTreeEncoder).hj = function (descriptor) {
		    var tmp;
		    if (this.fx() == null) {
		      tmp = this.y1a_1;
		    } else {
		      tmp = AbstractJsonTreeEncoder$beginStructure$lambda(this);
		    }
		    var consumer = tmp;
		    var tmp0_subject = descriptor.oh();
		    var tmp_0;
		    var tmp_1;
		    if (equals(tmp0_subject, LIST_getInstance())) {
		      tmp_1 = true;
		    } else {
		      tmp_1 = tmp0_subject instanceof PolymorphicKind;
		    }
		    if (tmp_1) {
		      tmp_0 = new JsonTreeListEncoder(this.x1a_1, consumer);
		    } else {
		      if (equals(tmp0_subject, MAP_getInstance())) {
		        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
		        var this_0 = this.x1a_1;
		        var keyDescriptor = carrierDescriptor(descriptor.qh(0), this_0.wj());
		        var keyKind = keyDescriptor.oh();
		        var tmp_2;
		        var tmp_3;
		        if (keyKind instanceof PrimitiveKind) {
		          tmp_3 = true;
		        } else {
		          tmp_3 = equals(keyKind, ENUM_getInstance());
		        }
		        if (tmp_3) {
		          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
		          tmp_2 = new JsonTreeMapEncoder(this.x1a_1, consumer);
		        } else {
		          if (this_0.z10_1.n12_1) {
		            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
		            tmp_2 = new JsonTreeListEncoder(this.x1a_1, consumer);
		          } else {
		            throw InvalidKeyKindException(keyDescriptor);
		          }
		        }
		        tmp_0 = tmp_2;
		      } else {
		        tmp_0 = new JsonTreeEncoder(this.x1a_1, consumer);
		      }
		    }
		    var encoder = tmp_0;
		    if (!(this.a1b_1 == null)) {
		      encoder.h1b(ensureNotNull(this.a1b_1), JsonPrimitive_2(descriptor.vg()));
		      this.a1b_1 = null;
		    }
		    return encoder;
		  };
		  protoOf(AbstractJsonTreeEncoder).vx = function (descriptor) {
		    this.y1a_1(this.i1b());
		  };
		  function get_requiresTopLevelTag(_this__u8e3s4) {
		    var tmp;
		    var tmp_0 = _this__u8e3s4.oh();
		    if (tmp_0 instanceof PrimitiveKind) {
		      tmp = true;
		    } else {
		      tmp = _this__u8e3s4.oh() === ENUM_getInstance();
		    }
		    return tmp;
		  }
		  function JsonPrimitiveEncoder(json, nodeConsumer) {
		    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
		    this.f1c_1 = null;
		    this.xx('primitive');
		  }
		  protoOf(JsonPrimitiveEncoder).h1b = function (key, element) {
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(key === 'primitive')) {
		      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
		      var message = "This output can only consume primitives with 'primitive' tag";
		      throw IllegalArgumentException_init_$Create$(toString(message));
		    }
		    // Inline function 'kotlin.require' call
		    // Inline function 'kotlin.contracts.contract' call
		    if (!(this.f1c_1 == null)) {
		      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
		      var message_0 = 'Primitive element was already recorded. Does call to .encodeXxx happen more than once?';
		      throw IllegalArgumentException_init_$Create$(toString(message_0));
		    }
		    this.f1c_1 = element;
		  };
		  protoOf(JsonPrimitiveEncoder).i1b = function () {
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.requireNotNull' call
		      var value = this.f1c_1;
		      // Inline function 'kotlin.contracts.contract' call
		      if (value == null) {
		        // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.getCurrent.<anonymous>' call
		        var message = 'Primitive element has not been recorded. Is call to .encodeXxx is missing in serializer?';
		        throw IllegalArgumentException_init_$Create$(toString(message));
		      } else {
		        tmp$ret$1 = value;
		        break $l$block;
		      }
		    }
		    return tmp$ret$1;
		  };
		  function JsonTreeListEncoder(json, nodeConsumer) {
		    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
		    var tmp = this;
		    // Inline function 'kotlin.collections.arrayListOf' call
		    tmp.l1c_1 = ArrayList_init_$Create$();
		  }
		  protoOf(JsonTreeListEncoder).cx = function (descriptor, index) {
		    return index.toString();
		  };
		  protoOf(JsonTreeListEncoder).h1b = function (key, element) {
		    var idx = toInt(key);
		    this.l1c_1.a4(idx, element);
		  };
		  protoOf(JsonTreeListEncoder).i1b = function () {
		    return new JsonArray(this.l1c_1);
		  };
		  function _get_tag__e6h4qf($this) {
		    var tmp = $this.s1c_1;
		    if (!(tmp == null))
		      return tmp;
		    else {
		      throwUninitializedPropertyAccessException('tag');
		    }
		  }
		  function JsonTreeMapEncoder(json, nodeConsumer) {
		    JsonTreeEncoder.call(this, json, nodeConsumer);
		    this.t1c_1 = true;
		  }
		  protoOf(JsonTreeMapEncoder).h1b = function (key, element) {
		    if (this.t1c_1) {
		      var tmp = this;
		      var tmp_0;
		      if (element instanceof JsonPrimitive) {
		        tmp_0 = element.h13();
		      } else {
		        if (element instanceof JsonObject) {
		          throw InvalidKeyKindException(JsonObjectSerializer_getInstance().s13_1);
		        } else {
		          if (element instanceof JsonArray) {
		            throw InvalidKeyKindException(JsonArraySerializer_getInstance().t13_1);
		          } else {
		            noWhenBranchMatchedException();
		          }
		        }
		      }
		      tmp.s1c_1 = tmp_0;
		      this.t1c_1 = false;
		    } else {
		      // Inline function 'kotlin.collections.set' call
		      var this_0 = this.g1b_1;
		      var key_0 = _get_tag__e6h4qf(this);
		      this_0.b2(key_0, element);
		      this.t1c_1 = true;
		    }
		  };
		  protoOf(JsonTreeMapEncoder).i1b = function () {
		    return new JsonObject(this.g1b_1);
		  };
		  function writeJson$lambda($result) {
		    return function (it) {
		      $result._v = it;
		      return Unit_instance;
		    };
		  }
		  var WriteMode_OBJ_instance;
		  var WriteMode_LIST_instance;
		  var WriteMode_MAP_instance;
		  var WriteMode_POLY_OBJ_instance;
		  function values() {
		    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
		  }
		  var WriteMode_entriesInitialized;
		  function WriteMode_initEntries() {
		    if (WriteMode_entriesInitialized)
		      return Unit_instance;
		    WriteMode_entriesInitialized = true;
		    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, _Char___init__impl__6a9atx(123), _Char___init__impl__6a9atx(125));
		    WriteMode_LIST_instance = new WriteMode('LIST', 1, _Char___init__impl__6a9atx(91), _Char___init__impl__6a9atx(93));
		    WriteMode_MAP_instance = new WriteMode('MAP', 2, _Char___init__impl__6a9atx(123), _Char___init__impl__6a9atx(125));
		    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, _Char___init__impl__6a9atx(91), _Char___init__impl__6a9atx(93));
		  }
		  function WriteMode(name, ordinal, begin, end) {
		    Enum.call(this, name, ordinal);
		    this.k18_1 = begin;
		    this.l18_1 = end;
		  }
		  function switchMode(_this__u8e3s4, desc) {
		    var tmp0_subject = desc.oh();
		    var tmp;
		    if (tmp0_subject instanceof PolymorphicKind) {
		      tmp = WriteMode_POLY_OBJ_getInstance();
		    } else {
		      if (equals(tmp0_subject, LIST_getInstance())) {
		        tmp = WriteMode_LIST_getInstance();
		      } else {
		        if (equals(tmp0_subject, MAP_getInstance())) {
		          // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
		          var keyDescriptor = carrierDescriptor(desc.qh(0), _this__u8e3s4.wj());
		          var keyKind = keyDescriptor.oh();
		          var tmp_0;
		          var tmp_1;
		          if (keyKind instanceof PrimitiveKind) {
		            tmp_1 = true;
		          } else {
		            tmp_1 = equals(keyKind, ENUM_getInstance());
		          }
		          if (tmp_1) {
		            // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
		            tmp_0 = WriteMode_MAP_getInstance();
		          } else {
		            if (_this__u8e3s4.z10_1.n12_1) {
		              // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
		              tmp_0 = WriteMode_LIST_getInstance();
		            } else {
		              throw InvalidKeyKindException(keyDescriptor);
		            }
		          }
		          tmp = tmp_0;
		        } else {
		          tmp = WriteMode_OBJ_getInstance();
		        }
		      }
		    }
		    return tmp;
		  }
		  function carrierDescriptor(_this__u8e3s4, module_0) {
		    var tmp;
		    if (equals(_this__u8e3s4.oh(), CONTEXTUAL_getInstance())) {
		      var tmp0_safe_receiver = getContextualDescriptor(module_0, _this__u8e3s4);
		      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : carrierDescriptor(tmp0_safe_receiver, module_0);
		      tmp = tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
		    } else if (_this__u8e3s4.nh()) {
		      tmp = carrierDescriptor(_this__u8e3s4.qh(0), module_0);
		    } else {
		      tmp = _this__u8e3s4;
		    }
		    return tmp;
		  }
		  function WriteMode_OBJ_getInstance() {
		    WriteMode_initEntries();
		    return WriteMode_OBJ_instance;
		  }
		  function WriteMode_LIST_getInstance() {
		    WriteMode_initEntries();
		    return WriteMode_LIST_instance;
		  }
		  function WriteMode_MAP_getInstance() {
		    WriteMode_initEntries();
		    return WriteMode_MAP_instance;
		  }
		  function WriteMode_POLY_OBJ_getInstance() {
		    WriteMode_initEntries();
		    return WriteMode_POLY_OBJ_instance;
		  }
		  function appendEscape($this, lastPosition, current) {
		    $this.u1c(lastPosition, current);
		    return appendEsc($this, current + 1 | 0);
		  }
		  function decodedString($this, lastPosition, currentPosition) {
		    $this.u1c(lastPosition, currentPosition);
		    var result = $this.u11_1.toString();
		    $this.u11_1.ga(0);
		    return result;
		  }
		  function takePeeked($this) {
		    // Inline function 'kotlin.also' call
		    var this_0 = ensureNotNull($this.t11_1);
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.takePeeked.<anonymous>' call
		    $this.t11_1 = null;
		    return this_0;
		  }
		  function wasUnquotedString($this) {
		    return !(charSequenceGet($this.v1c(), $this.r11_1 - 1 | 0) === _Char___init__impl__6a9atx(34));
		  }
		  function appendEsc($this, startPosition) {
		    var currentPosition = startPosition;
		    currentPosition = $this.w1c(currentPosition);
		    if (currentPosition === -1) {
		      $this.l15('Expected escape sequence to continue, got EOF');
		    }
		    var tmp = $this.v1c();
		    var tmp0 = currentPosition;
		    currentPosition = tmp0 + 1 | 0;
		    var currentChar = charSequenceGet(tmp, tmp0);
		    if (currentChar === _Char___init__impl__6a9atx(117)) {
		      return appendHex($this, $this.v1c(), currentPosition);
		    }
		    // Inline function 'kotlin.code' call
		    var tmp$ret$0 = Char__toInt_impl_vasixd(currentChar);
		    var c = escapeToChar(tmp$ret$0);
		    if (c === _Char___init__impl__6a9atx(0)) {
		      $this.l15("Invalid escaped char '" + toString_0(currentChar) + "'");
		    }
		    $this.u11_1.j7(c);
		    return currentPosition;
		  }
		  function appendHex($this, source, startPos) {
		    if ((startPos + 4 | 0) >= charSequenceLength(source)) {
		      $this.r11_1 = startPos;
		      $this.x1c();
		      if (($this.r11_1 + 4 | 0) >= charSequenceLength(source)) {
		        $this.l15('Unexpected EOF during unicode escape');
		      }
		      return appendHex($this, source, $this.r11_1);
		    }
		    $this.u11_1.j7(numberToChar((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
		    return startPos + 4 | 0;
		  }
		  function fromHexChar($this, source, currentPosition) {
		    var character = charSequenceGet(source, currentPosition);
		    var tmp;
		    if (_Char___init__impl__6a9atx(48) <= character ? character <= _Char___init__impl__6a9atx(57) : false) {
		      // Inline function 'kotlin.code' call
		      var tmp_0 = Char__toInt_impl_vasixd(character);
		      // Inline function 'kotlin.code' call
		      var this_0 = _Char___init__impl__6a9atx(48);
		      tmp = tmp_0 - Char__toInt_impl_vasixd(this_0) | 0;
		    } else if (_Char___init__impl__6a9atx(97) <= character ? character <= _Char___init__impl__6a9atx(102) : false) {
		      // Inline function 'kotlin.code' call
		      var tmp_1 = Char__toInt_impl_vasixd(character);
		      // Inline function 'kotlin.code' call
		      var this_1 = _Char___init__impl__6a9atx(97);
		      tmp = (tmp_1 - Char__toInt_impl_vasixd(this_1) | 0) + 10 | 0;
		    } else if (_Char___init__impl__6a9atx(65) <= character ? character <= _Char___init__impl__6a9atx(70) : false) {
		      // Inline function 'kotlin.code' call
		      var tmp_2 = Char__toInt_impl_vasixd(character);
		      // Inline function 'kotlin.code' call
		      var this_2 = _Char___init__impl__6a9atx(65);
		      tmp = (tmp_2 - Char__toInt_impl_vasixd(this_2) | 0) + 10 | 0;
		    } else {
		      $this.l15("Invalid toHexChar char '" + toString_0(character) + "' in unicode escape");
		    }
		    return tmp;
		  }
		  function consumeBoolean2($this, start) {
		    var current = $this.w1c(start);
		    if (current >= charSequenceLength($this.v1c()) || current === -1) {
		      $this.l15('EOF');
		    }
		    // Inline function 'kotlin.code' call
		    var tmp = $this.v1c();
		    var tmp0 = current;
		    current = tmp0 + 1 | 0;
		    var this_0 = charSequenceGet(tmp, tmp0);
		    var tmp1_subject = Char__toInt_impl_vasixd(this_0) | 32;
		    var tmp_0;
		    // Inline function 'kotlin.code' call
		    var this_1 = _Char___init__impl__6a9atx(116);
		    if (tmp1_subject === Char__toInt_impl_vasixd(this_1)) {
		      consumeBooleanLiteral($this, 'rue', current);
		      tmp_0 = true;
		    } else {
		      // Inline function 'kotlin.code' call
		      var this_2 = _Char___init__impl__6a9atx(102);
		      if (tmp1_subject === Char__toInt_impl_vasixd(this_2)) {
		        consumeBooleanLiteral($this, 'alse', current);
		        tmp_0 = false;
		      } else {
		        $this.l15("Expected valid boolean literal prefix, but had '" + $this.n16() + "'");
		      }
		    }
		    return tmp_0;
		  }
		  function consumeBooleanLiteral($this, literalSuffix, current) {
		    if ((charSequenceLength($this.v1c()) - current | 0) < literalSuffix.length) {
		      $this.l15('Unexpected end of boolean literal');
		    }
		    var inductionVariable = 0;
		    var last = charSequenceLength(literalSuffix) - 1 | 0;
		    if (inductionVariable <= last)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        var expected = charSequenceGet(literalSuffix, i);
		        var actual = charSequenceGet($this.v1c(), current + i | 0);
		        // Inline function 'kotlin.code' call
		        var tmp = Char__toInt_impl_vasixd(expected);
		        // Inline function 'kotlin.code' call
		        if (!(tmp === (Char__toInt_impl_vasixd(actual) | 32))) {
		          $this.l15("Expected valid boolean literal prefix, but had '" + $this.n16() + "'");
		        }
		      }
		       while (inductionVariable <= last);
		    $this.r11_1 = current + literalSuffix.length | 0;
		  }
		  function AbstractJsonLexer() {
		    this.r11_1 = 0;
		    this.s11_1 = new JsonPath();
		    this.t11_1 = null;
		    this.u11_1 = StringBuilder_init_$Create$();
		  }
		  protoOf(AbstractJsonLexer).x1c = function () {
		  };
		  protoOf(AbstractJsonLexer).y1c = function (c) {
		    return (((c === _Char___init__impl__6a9atx(125) ? true : c === _Char___init__impl__6a9atx(93)) ? true : c === _Char___init__impl__6a9atx(58)) ? true : c === _Char___init__impl__6a9atx(44)) ? false : true;
		  };
		  protoOf(AbstractJsonLexer).v11 = function () {
		    var nextToken = this.p16();
		    if (!(nextToken === 10)) {
		      this.l15('Expected EOF after parsing, but had ' + toString_0(charSequenceGet(this.v1c(), this.r11_1 - 1 | 0)) + ' instead');
		    }
		  };
		  protoOf(AbstractJsonLexer).j16 = function (expected) {
		    var token = this.p16();
		    if (!(token === expected)) {
		      this.z1c(expected);
		    }
		    return token;
		  };
		  protoOf(AbstractJsonLexer).z17 = function (expected) {
		    this.x1c();
		    var source = this.v1c();
		    var cpos = this.r11_1;
		    $l$loop_0: while (true) {
		      cpos = this.w1c(cpos);
		      if (cpos === -1)
		        break $l$loop_0;
		      var tmp0 = cpos;
		      cpos = tmp0 + 1 | 0;
		      var c = charSequenceGet(source, tmp0);
		      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9))
		        continue $l$loop_0;
		      this.r11_1 = cpos;
		      if (c === expected)
		        return Unit_instance;
		      this.a1d(expected);
		    }
		    this.r11_1 = cpos;
		    this.a1d(expected);
		  };
		  protoOf(AbstractJsonLexer).a1d = function (expected) {
		    this.r11_1 = this.r11_1 - 1 | 0;
		    if (this.r11_1 >= 0 && expected === _Char___init__impl__6a9atx(34) && this.n16() === 'null') {
		      this.b1d("Expected string literal but 'null' literal was found", this.r11_1 - 4 | 0, "Use 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.");
		    }
		    this.z1c(charToTokenClass(expected));
		  };
		  protoOf(AbstractJsonLexer).z1c = function (expectedToken) {
		    var expected = expectedToken === 1 ? "quotation mark '\"'" : expectedToken === 4 ? "comma ','" : expectedToken === 5 ? "colon ':'" : expectedToken === 6 ? "start of the object '{'" : expectedToken === 7 ? "end of the object '}'" : expectedToken === 8 ? "start of the array '['" : expectedToken === 9 ? "end of the array ']'" : 'valid token';
		    var s = this.r11_1 === charSequenceLength(this.v1c()) || this.r11_1 <= 0 ? 'EOF' : toString_0(charSequenceGet(this.v1c(), this.r11_1 - 1 | 0));
		    this.l15('Expected ' + expected + ", but had '" + s + "' instead", this.r11_1 - 1 | 0);
		  };
		  protoOf(AbstractJsonLexer).k16 = function () {
		    var source = this.v1c();
		    var cpos = this.r11_1;
		    $l$loop_0: while (true) {
		      cpos = this.w1c(cpos);
		      if (cpos === -1)
		        break $l$loop_0;
		      var ch = charSequenceGet(source, cpos);
		      if (ch === _Char___init__impl__6a9atx(32) || ch === _Char___init__impl__6a9atx(10) || ch === _Char___init__impl__6a9atx(13) || ch === _Char___init__impl__6a9atx(9)) {
		        cpos = cpos + 1 | 0;
		        continue $l$loop_0;
		      }
		      this.r11_1 = cpos;
		      return charToTokenClass(ch);
		    }
		    this.r11_1 = cpos;
		    return 10;
		  };
		  protoOf(AbstractJsonLexer).b18 = function () {
		    var current = this.c1d();
		    current = this.w1c(current);
		    var len = charSequenceLength(this.v1c()) - current | 0;
		    if (len < 4 || current === -1)
		      return true;
		    var inductionVariable = 0;
		    if (inductionVariable <= 3)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (!(charSequenceGet('null', i) === charSequenceGet(this.v1c(), current + i | 0)))
		          return true;
		      }
		       while (inductionVariable <= 3);
		    if (len > 4 && charToTokenClass(charSequenceGet(this.v1c(), current + 4 | 0)) === 0)
		      return true;
		    this.r11_1 = current + 4 | 0;
		    return false;
		  };
		  protoOf(AbstractJsonLexer).c1d = function () {
		    var current = this.r11_1;
		    $l$loop_0: while (true) {
		      current = this.w1c(current);
		      if (current === -1)
		        break $l$loop_0;
		      var c = charSequenceGet(this.v1c(), current);
		      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
		        current = current + 1 | 0;
		      } else {
		        break $l$loop_0;
		      }
		    }
		    this.r11_1 = current;
		    return current;
		  };
		  protoOf(AbstractJsonLexer).c18 = function (isLenient) {
		    var token = this.k16();
		    var tmp;
		    if (isLenient) {
		      if (!(token === 1) && !(token === 0))
		        return null;
		      tmp = this.n16();
		    } else {
		      if (!(token === 1))
		        return null;
		      tmp = this.m16();
		    }
		    var string = tmp;
		    this.t11_1 = string;
		    return string;
		  };
		  protoOf(AbstractJsonLexer).d1d = function (startPos, endPos) {
		    // Inline function 'kotlin.text.substring' call
		    var this_0 = this.v1c();
		    return toString(charSequenceSubSequence(this_0, startPos, endPos));
		  };
		  protoOf(AbstractJsonLexer).m16 = function () {
		    if (!(this.t11_1 == null)) {
		      return takePeeked(this);
		    }
		    return this.f18();
		  };
		  protoOf(AbstractJsonLexer).consumeString2 = function (source, startPosition, current) {
		    var currentPosition = current;
		    var lastPosition = startPosition;
		    var char = charSequenceGet(source, currentPosition);
		    var usedAppend = false;
		    while (!(char === _Char___init__impl__6a9atx(34))) {
		      if (char === _Char___init__impl__6a9atx(92)) {
		        usedAppend = true;
		        currentPosition = this.w1c(appendEscape(this, lastPosition, currentPosition));
		        if (currentPosition === -1) {
		          this.l15('EOF', currentPosition);
		        }
		        lastPosition = currentPosition;
		      } else {
		        currentPosition = currentPosition + 1 | 0;
		        if (currentPosition >= charSequenceLength(source)) {
		          usedAppend = true;
		          this.u1c(lastPosition, currentPosition);
		          currentPosition = this.w1c(currentPosition);
		          if (currentPosition === -1) {
		            this.l15('EOF', currentPosition);
		          }
		          lastPosition = currentPosition;
		        }
		      }
		      char = charSequenceGet(source, currentPosition);
		    }
		    var tmp;
		    if (!usedAppend) {
		      tmp = this.d1d(lastPosition, currentPosition);
		    } else {
		      tmp = decodedString(this, lastPosition, currentPosition);
		    }
		    var string = tmp;
		    this.r11_1 = currentPosition + 1 | 0;
		    return string;
		  };
		  protoOf(AbstractJsonLexer).g18 = function () {
		    var result = this.n16();
		    if (result === 'null' && wasUnquotedString(this)) {
		      this.l15("Unexpected 'null' value instead of string literal");
		    }
		    return result;
		  };
		  protoOf(AbstractJsonLexer).n16 = function () {
		    if (!(this.t11_1 == null)) {
		      return takePeeked(this);
		    }
		    var current = this.c1d();
		    if (current >= charSequenceLength(this.v1c()) || current === -1) {
		      this.l15('EOF', current);
		    }
		    var token = charToTokenClass(charSequenceGet(this.v1c(), current));
		    if (token === 1) {
		      return this.m16();
		    }
		    if (!(token === 0)) {
		      this.l15('Expected beginning of the string, but got ' + toString_0(charSequenceGet(this.v1c(), current)));
		    }
		    var usedAppend = false;
		    while (charToTokenClass(charSequenceGet(this.v1c(), current)) === 0) {
		      current = current + 1 | 0;
		      if (current >= charSequenceLength(this.v1c())) {
		        usedAppend = true;
		        this.u1c(this.r11_1, current);
		        var eof = this.w1c(current);
		        if (eof === -1) {
		          this.r11_1 = current;
		          return decodedString(this, 0, 0);
		        } else {
		          current = eof;
		        }
		      }
		    }
		    var tmp;
		    if (!usedAppend) {
		      tmp = this.d1d(this.r11_1, current);
		    } else {
		      tmp = decodedString(this, this.r11_1, current);
		    }
		    var result = tmp;
		    this.r11_1 = current;
		    return result;
		  };
		  protoOf(AbstractJsonLexer).u1c = function (fromIndex, toIndex) {
		    this.u11_1.ba(this.v1c(), fromIndex, toIndex);
		  };
		  protoOf(AbstractJsonLexer).e18 = function (allowLenientStrings) {
		    // Inline function 'kotlin.collections.mutableListOf' call
		    var tokenStack = ArrayList_init_$Create$();
		    var lastToken = this.k16();
		    if (!(lastToken === 8) && !(lastToken === 6)) {
		      this.n16();
		      return Unit_instance;
		    }
		    $l$loop: while (true) {
		      lastToken = this.k16();
		      if (lastToken === 1) {
		        if (allowLenientStrings) {
		          this.n16();
		        } else {
		          this.f18();
		        }
		        continue $l$loop;
		      }
		      var tmp0_subject = lastToken;
		      if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
		        tokenStack.d(lastToken);
		      } else if (tmp0_subject === 9) {
		        if (!(last(tokenStack) === 8))
		          throw JsonDecodingException_0(this.r11_1, 'found ] instead of } at path: ' + this.s11_1.toString(), this.v1c());
		        removeLast(tokenStack);
		      } else if (tmp0_subject === 7) {
		        if (!(last(tokenStack) === 6))
		          throw JsonDecodingException_0(this.r11_1, 'found } instead of ] at path: ' + this.s11_1.toString(), this.v1c());
		        removeLast(tokenStack);
		      } else if (tmp0_subject === 10) {
		        this.l15('Unexpected end of input due to malformed JSON during ignoring unknown keys');
		      }
		      this.p16();
		      if (tokenStack.l() === 0)
		        return Unit_instance;
		    }
		  };
		  protoOf(AbstractJsonLexer).toString = function () {
		    return "JsonReader(source='" + toString(this.v1c()) + "', currentPosition=" + this.r11_1 + ')';
		  };
		  protoOf(AbstractJsonLexer).d18 = function (key) {
		    var processed = this.d1d(0, this.r11_1);
		    var lastIndexOf_0 = lastIndexOf(processed, key);
		    this.b1d("Encountered an unknown key '" + key + "'", lastIndexOf_0, "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.");
		  };
		  protoOf(AbstractJsonLexer).b1d = function (message, position, hint) {
		    var tmp;
		    // Inline function 'kotlin.text.isEmpty' call
		    if (charSequenceLength(hint) === 0) {
		      tmp = '';
		    } else {
		      tmp = '\n' + hint;
		    }
		    var hintMessage = tmp;
		    throw JsonDecodingException_0(position, message + ' at path: ' + this.s11_1.x15() + hintMessage, this.v1c());
		  };
		  protoOf(AbstractJsonLexer).l15 = function (message, position, hint, $super) {
		    position = position === VOID ? this.r11_1 : position;
		    hint = hint === VOID ? '' : hint;
		    return $super === VOID ? this.b1d(message, position, hint) : $super.b1d.call(this, message, position, hint);
		  };
		  protoOf(AbstractJsonLexer).o18 = function () {
		    var current = this.c1d();
		    current = this.w1c(current);
		    if (current >= charSequenceLength(this.v1c()) || current === -1) {
		      this.l15('EOF');
		    }
		    var tmp;
		    if (charSequenceGet(this.v1c(), current) === _Char___init__impl__6a9atx(34)) {
		      current = current + 1 | 0;
		      if (current === charSequenceLength(this.v1c())) {
		        this.l15('EOF');
		      }
		      tmp = true;
		    } else {
		      tmp = false;
		    }
		    var hasQuotation = tmp;
		    var accumulator = new Long(0, 0);
		    var isNegative = false;
		    var start = current;
		    var hasChars = true;
		    $l$loop_0: while (hasChars) {
		      var ch = charSequenceGet(this.v1c(), current);
		      if (ch === _Char___init__impl__6a9atx(45)) {
		        if (!(current === start)) {
		          this.l15("Unexpected symbol '-' in numeric literal");
		        }
		        isNegative = true;
		        current = current + 1 | 0;
		        continue $l$loop_0;
		      }
		      var token = charToTokenClass(ch);
		      if (!(token === 0))
		        break $l$loop_0;
		      current = current + 1 | 0;
		      hasChars = !(current === charSequenceLength(this.v1c()));
		      var digit = Char__minus_impl_a2frrh(ch, _Char___init__impl__6a9atx(48));
		      if (!(0 <= digit ? digit <= 9 : false)) {
		        this.l15("Unexpected symbol '" + toString_0(ch) + "' in numeric literal");
		      }
		      // Inline function 'kotlin.Long.minus' call
		      // Inline function 'kotlin.Long.times' call
		      accumulator = accumulator.o2(toLong_0(10)).n2(toLong_0(digit));
		      if (accumulator.v(new Long(0, 0)) > 0) {
		        this.l15('Numeric value overflow');
		      }
		    }
		    if (start === current || (isNegative && start === (current - 1 | 0))) {
		      this.l15('Expected numeric literal');
		    }
		    if (hasQuotation) {
		      if (!hasChars) {
		        this.l15('EOF');
		      }
		      if (!(charSequenceGet(this.v1c(), current) === _Char___init__impl__6a9atx(34))) {
		        this.l15('Expected closing quotation mark');
		      }
		      current = current + 1 | 0;
		    }
		    this.r11_1 = current;
		    var tmp_0;
		    if (isNegative) {
		      tmp_0 = accumulator;
		    } else if (!accumulator.equals(new Long(0, -2147483648))) {
		      tmp_0 = accumulator.r2();
		    } else {
		      this.l15('Numeric value overflow');
		    }
		    return tmp_0;
		  };
		  protoOf(AbstractJsonLexer).m18 = function () {
		    return consumeBoolean2(this, this.c1d());
		  };
		  protoOf(AbstractJsonLexer).n18 = function () {
		    var current = this.c1d();
		    if (current === charSequenceLength(this.v1c())) {
		      this.l15('EOF');
		    }
		    var tmp;
		    if (charSequenceGet(this.v1c(), current) === _Char___init__impl__6a9atx(34)) {
		      current = current + 1 | 0;
		      tmp = true;
		    } else {
		      tmp = false;
		    }
		    var hasQuotation = tmp;
		    var result = consumeBoolean2(this, current);
		    if (hasQuotation) {
		      if (this.r11_1 === charSequenceLength(this.v1c())) {
		        this.l15('EOF');
		      }
		      if (!(charSequenceGet(this.v1c(), this.r11_1) === _Char___init__impl__6a9atx(34))) {
		        this.l15('Expected closing quotation mark');
		      }
		      this.r11_1 = this.r11_1 + 1 | 0;
		    }
		    return result;
		  };
		  function charToTokenClass(c) {
		    var tmp;
		    // Inline function 'kotlin.code' call
		    if (Char__toInt_impl_vasixd(c) < 126) {
		      var tmp_0 = CharMappings_getInstance().f1d_1;
		      // Inline function 'kotlin.code' call
		      tmp = tmp_0[Char__toInt_impl_vasixd(c)];
		    } else {
		      tmp = 0;
		    }
		    return tmp;
		  }
		  function escapeToChar(c) {
		    return c < 117 ? CharMappings_getInstance().e1d_1[c] : _Char___init__impl__6a9atx(0);
		  }
		  function initEscape($this) {
		    var inductionVariable = 0;
		    if (inductionVariable <= 31)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
		      }
		       while (inductionVariable <= 31);
		    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
		    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
		    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
		    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
		    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
		    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
		    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
		    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
		  }
		  function initCharToToken($this) {
		    var inductionVariable = 0;
		    if (inductionVariable <= 32)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        initC2TC($this, i, 127);
		      }
		       while (inductionVariable <= 32);
		    initC2TC($this, 9, 3);
		    initC2TC($this, 10, 3);
		    initC2TC($this, 13, 3);
		    initC2TC($this, 32, 3);
		    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
		    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
		    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
		    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
		    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
		    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
		    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
		    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
		  }
		  function initC2ESC($this, c, esc) {
		    if (!(esc === _Char___init__impl__6a9atx(117))) {
		      // Inline function 'kotlin.code' call
		      var tmp$ret$0 = Char__toInt_impl_vasixd(esc);
		      $this.e1d_1[tmp$ret$0] = numberToChar(c);
		    }
		  }
		  function initC2ESC_0($this, c, esc) {
		    // Inline function 'kotlin.code' call
		    var tmp$ret$0 = Char__toInt_impl_vasixd(c);
		    return initC2ESC($this, tmp$ret$0, esc);
		  }
		  function initC2TC($this, c, cl) {
		    $this.f1d_1[c] = cl;
		  }
		  function initC2TC_0($this, c, cl) {
		    // Inline function 'kotlin.code' call
		    var tmp$ret$0 = Char__toInt_impl_vasixd(c);
		    return initC2TC($this, tmp$ret$0, cl);
		  }
		  function CharMappings() {
		    CharMappings_instance = this;
		    this.e1d_1 = charArray(117);
		    this.f1d_1 = new Int8Array(126);
		    initEscape(this);
		    initCharToToken(this);
		  }
		  var CharMappings_instance;
		  function CharMappings_getInstance() {
		    if (CharMappings_instance == null)
		      new CharMappings();
		    return CharMappings_instance;
		  }
		  function StringJsonLexer(source) {
		    AbstractJsonLexer.call(this);
		    this.k1d_1 = source;
		  }
		  protoOf(StringJsonLexer).v1c = function () {
		    return this.k1d_1;
		  };
		  protoOf(StringJsonLexer).w1c = function (position) {
		    return position < this.k1d_1.length ? position : -1;
		  };
		  protoOf(StringJsonLexer).p16 = function () {
		    var source = this.k1d_1;
		    $l$loop: while (!(this.r11_1 === -1) && this.r11_1 < source.length) {
		      var tmp1 = this.r11_1;
		      this.r11_1 = tmp1 + 1 | 0;
		      var ch = charSequenceGet(source, tmp1);
		      var tc = charToTokenClass(ch);
		      var tmp;
		      if (tc === 3) {
		        continue $l$loop;
		      } else {
		        tmp = tc;
		      }
		      return tmp;
		    }
		    return 10;
		  };
		  protoOf(StringJsonLexer).a18 = function () {
		    var current = this.c1d();
		    if (current === this.k1d_1.length || current === -1)
		      return false;
		    if (charSequenceGet(this.k1d_1, current) === _Char___init__impl__6a9atx(44)) {
		      this.r11_1 = this.r11_1 + 1 | 0;
		      return true;
		    }
		    return false;
		  };
		  protoOf(StringJsonLexer).l16 = function () {
		    var current = this.r11_1;
		    if (current === -1)
		      return false;
		    $l$loop: while (current < this.k1d_1.length) {
		      var c = charSequenceGet(this.k1d_1, current);
		      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
		        current = current + 1 | 0;
		        continue $l$loop;
		      }
		      this.r11_1 = current;
		      return this.y1c(c);
		    }
		    this.r11_1 = current;
		    return false;
		  };
		  protoOf(StringJsonLexer).c1d = function () {
		    var current = this.r11_1;
		    if (current === -1)
		      return current;
		    $l$loop: while (current < this.k1d_1.length) {
		      var c = charSequenceGet(this.k1d_1, current);
		      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
		        current = current + 1 | 0;
		      } else {
		        break $l$loop;
		      }
		    }
		    this.r11_1 = current;
		    return current;
		  };
		  protoOf(StringJsonLexer).z17 = function (expected) {
		    if (this.r11_1 === -1) {
		      this.a1d(expected);
		    }
		    var source = this.k1d_1;
		    $l$loop: while (this.r11_1 < source.length) {
		      var tmp1 = this.r11_1;
		      this.r11_1 = tmp1 + 1 | 0;
		      var c = charSequenceGet(source, tmp1);
		      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9))
		        continue $l$loop;
		      if (c === expected)
		        return Unit_instance;
		      this.a1d(expected);
		    }
		    this.a1d(expected);
		  };
		  protoOf(StringJsonLexer).f18 = function () {
		    this.z17(_Char___init__impl__6a9atx(34));
		    var current = this.r11_1;
		    var closingQuote = indexOf(this.k1d_1, _Char___init__impl__6a9atx(34), current);
		    if (closingQuote === -1) {
		      this.z1c(1);
		    }
		    var inductionVariable = current;
		    if (inductionVariable < closingQuote)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        if (charSequenceGet(this.k1d_1, i) === _Char___init__impl__6a9atx(92)) {
		          return this.consumeString2(this.k1d_1, this.r11_1, i);
		        }
		      }
		       while (inductionVariable < closingQuote);
		    this.r11_1 = closingQuote + 1 | 0;
		    // Inline function 'kotlin.text.substring' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return this.k1d_1.substring(current, closingQuote);
		  };
		  protoOf(StringJsonLexer).h18 = function (keyToMatch, isLenient) {
		    var positionSnapshot = this.r11_1;
		    try {
		      if (!(this.p16() === 6))
		        return null;
		      var firstKey = isLenient ? this.f18() : this.g18();
		      if (firstKey === keyToMatch) {
		        if (!(this.p16() === 5))
		          return null;
		        var result = isLenient ? this.m16() : this.g18();
		        return result;
		      }
		      return null;
		    }finally {
		      this.r11_1 = positionSnapshot;
		    }
		  };
		  function get_schemaCache(_this__u8e3s4) {
		    return _this__u8e3s4.b11_1;
		  }
		  function JsonToStringWriter() {
		    this.h11_1 = StringBuilder_init_$Create$_0(128);
		  }
		  protoOf(JsonToStringWriter).t14 = function (value) {
		    this.h11_1.h7(value);
		  };
		  protoOf(JsonToStringWriter).n14 = function (char) {
		    this.h11_1.j7(char);
		  };
		  protoOf(JsonToStringWriter).p14 = function (text) {
		    this.h11_1.i7(text);
		  };
		  protoOf(JsonToStringWriter).z14 = function (text) {
		    printQuoted(this.h11_1, text);
		  };
		  protoOf(JsonToStringWriter).i11 = function () {
		    this.h11_1.ha();
		  };
		  protoOf(JsonToStringWriter).toString = function () {
		    return this.h11_1.toString();
		  };
		  function createMapForCache(initialCapacity) {
		    return HashMap_init_$Create$(initialCapacity);
		  }
		  //region block: post-declaration
		  protoOf(defer$1).hh = get_isNullable;
		  protoOf(defer$1).nh = get_isInline;
		  protoOf(defer$1).lh = get_annotations;
		  protoOf(PolymorphismValidator).j10 = contextual;
		  Companion_instance_0 = new Companion_0();
		  Tombstone_instance = new Tombstone();
		  //endregion
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = Default_getInstance;
		  _.$_$.b = JsonNull_getInstance;
		  _.$_$.c = Companion_instance_0;
		  _.$_$.d = JsonObjectSerializer_getInstance;
		  _.$_$.e = JsonArray;
		  _.$_$.f = JsonContentPolymorphicSerializer;
		  _.$_$.g = JsonElement;
		  _.$_$.h = JsonObjectBuilder;
		  _.$_$.i = JsonObject;
		  _.$_$.j = JsonPrimitive_2;
		  _.$_$.k = JsonPrimitive_0;
		  _.$_$.l = JsonPrimitive_1;
		  _.$_$.m = Json_0;
		  _.$_$.n = get_jsonObject;
		  _.$_$.o = get_jsonPrimitive;
		  _.$_$.p = putJsonObject;
		  _.$_$.q = put;
		  //endregion
		  return _;
		}));

		
} (kotlinxSerializationKotlinxSerializationJsonJsIr));
	return kotlinxSerializationKotlinxSerializationJsonJsIrExports;
}

var KotlinDateTimeLibraryKotlinxDatetimeJsIrExports = {};
var KotlinDateTimeLibraryKotlinxDatetimeJsIr = {
  get exports(){ return KotlinDateTimeLibraryKotlinxDatetimeJsIrExports; },
  set exports(v){ KotlinDateTimeLibraryKotlinxDatetimeJsIrExports = v; },
};

//! @version @js-joda/core - 5.6.1
//! @copyright (c) 2015-present, Philipp Thürwächter, Pattrick Hüper & js-joda contributors
//! @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
//! @license BSD-3-Clause (see LICENSE in the root directory of this source tree)

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */

function createErrorType(name, init, superErrorClass) {
  if (superErrorClass === void 0) {
    superErrorClass = Error;
  }
  function JsJodaException(message) {
    if (!Error.captureStackTrace) {
      this.stack = new Error().stack;
    } else {
      Error.captureStackTrace(this, this.constructor);
    }
    this.message = message;
    init && init.apply(this, arguments);
    this.toString = function () {
      return this.name + ": " + this.message;
    };
  }
  JsJodaException.prototype = Object.create(superErrorClass.prototype);
  JsJodaException.prototype.name = name;
  JsJodaException.prototype.constructor = JsJodaException;
  return JsJodaException;
}
var DateTimeException = createErrorType('DateTimeException', messageWithCause);
var DateTimeParseException = createErrorType('DateTimeParseException', messageForDateTimeParseException);
var UnsupportedTemporalTypeException = createErrorType('UnsupportedTemporalTypeException', null, DateTimeException);
var ArithmeticException = createErrorType('ArithmeticException');
var IllegalArgumentException = createErrorType('IllegalArgumentException');
var IllegalStateException = createErrorType('IllegalStateException');
var NullPointerException = createErrorType('NullPointerException');
function messageWithCause(message, cause) {
  if (cause === void 0) {
    cause = null;
  }
  var msg = message || this.name;
  if (cause !== null && cause instanceof Error) {
    msg += "\n-------\nCaused by: " + cause.stack + "\n-------\n";
  }
  this.message = msg;
}
function messageForDateTimeParseException(message, text, index, cause) {
  if (text === void 0) {
    text = '';
  }
  if (index === void 0) {
    index = 0;
  }
  if (cause === void 0) {
    cause = null;
  }
  var msg = message || this.name;
  msg += ": " + text + ", at index: " + index;
  if (cause !== null && cause instanceof Error) {
    msg += "\n-------\nCaused by: " + cause.stack + "\n-------\n";
  }
  this.message = msg;
  this.parsedString = function () {
    return text;
  };
  this.errorIndex = function () {
    return index;
  };
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
function assert(assertion, msg, error) {
  if (!assertion) {
    if (error) {
      throw new error(msg);
    } else {
      throw new Error(msg);
    }
  }
}
function requireNonNull(value, parameterName) {
  if (value == null) {
    throw new NullPointerException(parameterName + " must not be null");
  }
  return value;
}
function requireInstance(value, _class, parameterName) {
  if (!(value instanceof _class)) {
    throw new IllegalArgumentException(parameterName + " must be an instance of " + (_class.name ? _class.name : _class) + (value && value.constructor && value.constructor.name ? ", but is " + value.constructor.name : ''));
  }
  return value;
}
function abstractMethodFail(methodName) {
  throw new TypeError("abstract method \"" + methodName + "\" is not implemented");
}

var assert$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    assert: assert,
    requireNonNull: requireNonNull,
    requireInstance: requireInstance,
    abstractMethodFail: abstractMethodFail
});

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var MAX_SAFE_INTEGER = 9007199254740991;
var MIN_SAFE_INTEGER = -9007199254740991;
var MathUtil = function () {
  function MathUtil() {}
  MathUtil.intDiv = function intDiv(x, y) {
    var r = x / y;
    r = MathUtil.roundDown(r);
    return MathUtil.safeZero(r);
  };
  MathUtil.intMod = function intMod(x, y) {
    var r = x - MathUtil.intDiv(x, y) * y;
    r = MathUtil.roundDown(r);
    return MathUtil.safeZero(r);
  };
  MathUtil.roundDown = function roundDown(r) {
    if (r < 0) {
      return Math.ceil(r);
    } else {
      return Math.floor(r);
    }
  };
  MathUtil.floorDiv = function floorDiv(x, y) {
    var r = Math.floor(x / y);
    return MathUtil.safeZero(r);
  };
  MathUtil.floorMod = function floorMod(x, y) {
    var r = x - MathUtil.floorDiv(x, y) * y;
    return MathUtil.safeZero(r);
  };
  MathUtil.safeAdd = function safeAdd(x, y) {
    MathUtil.verifyInt(x);
    MathUtil.verifyInt(y);
    if (x === 0) {
      return MathUtil.safeZero(y);
    }
    if (y === 0) {
      return MathUtil.safeZero(x);
    }
    var r = MathUtil.safeToInt(x + y);
    if (r === x || r === y) {
      throw new ArithmeticException('Invalid addition beyond MAX_SAFE_INTEGER!');
    }
    return r;
  };
  MathUtil.safeSubtract = function safeSubtract(x, y) {
    MathUtil.verifyInt(x);
    MathUtil.verifyInt(y);
    if (x === 0 && y === 0) {
      return 0;
    } else if (x === 0) {
      return MathUtil.safeZero(-1 * y);
    } else if (y === 0) {
      return MathUtil.safeZero(x);
    }
    return MathUtil.safeToInt(x - y);
  };
  MathUtil.safeMultiply = function safeMultiply(x, y) {
    MathUtil.verifyInt(x);
    MathUtil.verifyInt(y);
    if (x === 1) {
      return MathUtil.safeZero(y);
    }
    if (y === 1) {
      return MathUtil.safeZero(x);
    }
    if (x === 0 || y === 0) {
      return 0;
    }
    var r = MathUtil.safeToInt(x * y);
    if (r / y !== x || x === MIN_SAFE_INTEGER && y === -1 || y === MIN_SAFE_INTEGER && x === -1) {
      throw new ArithmeticException("Multiplication overflows: " + x + " * " + y);
    }
    return r;
  };
  MathUtil.parseInt = function (_parseInt) {
    function parseInt(_x) {
      return _parseInt.apply(this, arguments);
    }
    parseInt.toString = function () {
      return _parseInt.toString();
    };
    return parseInt;
  }(function (value) {
    var r = parseInt(value);
    return MathUtil.safeToInt(r);
  });
  MathUtil.safeToInt = function safeToInt(value) {
    MathUtil.verifyInt(value);
    return MathUtil.safeZero(value);
  };
  MathUtil.verifyInt = function verifyInt(value) {
    if (value == null) {
      throw new ArithmeticException("Invalid value: '" + value + "', using null or undefined as argument");
    }
    if (isNaN(value)) {
      throw new ArithmeticException('Invalid int value, using NaN as argument');
    }
    if (value % 1 !== 0) {
      throw new ArithmeticException("Invalid value: '" + value + "' is a float");
    }
    if (value > MAX_SAFE_INTEGER || value < MIN_SAFE_INTEGER) {
      throw new ArithmeticException("Calculation overflows an int: " + value);
    }
  };
  MathUtil.safeZero = function safeZero(value) {
    return value === 0 ? 0 : +value;
  };
  MathUtil.compareNumbers = function compareNumbers(a, b) {
    if (a < b) {
      return -1;
    }
    if (a > b) {
      return 1;
    }
    return 0;
  };
  MathUtil.smi = function smi(int) {
    return int >>> 1 & 0x40000000 | int & 0xBFFFFFFF;
  };
  MathUtil.hash = function hash(number) {
    if (number !== number || number === Infinity) {
      return 0;
    }
    var result = number;
    while (number > 0xFFFFFFFF) {
      number /= 0xFFFFFFFF;
      result ^= number;
    }
    return MathUtil.smi(result);
  };
  MathUtil.hashCode = function hashCode() {
    var result = 17;
    for (var _len = arguments.length, numbers = new Array(_len), _key = 0; _key < _len; _key++) {
      numbers[_key] = arguments[_key];
    }
    for (var _i = 0, _numbers = numbers; _i < _numbers.length; _i++) {
      var n = _numbers[_i];
      result = (result << 5) - result + MathUtil.hash(n);
    }
    return MathUtil.hash(result);
  };
  return MathUtil;
}();
MathUtil.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;
MathUtil.MIN_SAFE_INTEGER = MIN_SAFE_INTEGER;

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var Enum = function () {
  function Enum(name) {
    this._name = name;
  }
  var _proto = Enum.prototype;
  _proto.equals = function equals(other) {
    return this === other;
  };
  _proto.toString = function toString() {
    return this._name;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return Enum;
}();

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var TemporalAmount = function () {
  function TemporalAmount() {}
  var _proto = TemporalAmount.prototype;
  _proto.get = function get(unit) {
    abstractMethodFail('get');
  };
  _proto.units = function units() {
    abstractMethodFail('units');
  };
  _proto.addTo = function addTo(temporal) {
    abstractMethodFail('addTo');
  };
  _proto.subtractFrom = function subtractFrom(temporal) {
    abstractMethodFail('subtractFrom');
  };
  return TemporalAmount;
}();
if (typeof Symbol !== 'undefined' && Symbol.toPrimitive) {
  TemporalAmount.prototype[Symbol.toPrimitive] = function (hint) {
    if (hint !== 'number') {
      return this.toString();
    }
    throw new TypeError('A conversion from TemporalAmount to a number is not allowed. ' + 'To compare use the methods .equals(), .compareTo(), .isBefore() ' + 'or one that is more suitable to your use case.');
  };
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var TemporalUnit = function () {
  function TemporalUnit() {}
  var _proto = TemporalUnit.prototype;
  _proto.duration = function duration() {
    abstractMethodFail('duration');
  };
  _proto.isDurationEstimated = function isDurationEstimated() {
    abstractMethodFail('isDurationEstimated');
  };
  _proto.isDateBased = function isDateBased() {
    abstractMethodFail('isDateBased');
  };
  _proto.isTimeBased = function isTimeBased() {
    abstractMethodFail('isTimeBased');
  };
  _proto.isSupportedBy = function isSupportedBy(temporal) {
    abstractMethodFail('isSupportedBy');
  };
  _proto.addTo = function addTo(dateTime, periodToAdd) {
    abstractMethodFail('addTo');
  };
  _proto.between = function between(temporal1, temporal2) {
    abstractMethodFail('between');
  };
  return TemporalUnit;
}();

var Duration = function (_TemporalAmount) {
  _inheritsLoose(Duration, _TemporalAmount);
  function Duration(seconds, nanos) {
    var _this;
    _this = _TemporalAmount.call(this) || this;
    _this._seconds = MathUtil.safeToInt(seconds);
    _this._nanos = MathUtil.safeToInt(nanos);
    return _this;
  }
  Duration.ofDays = function ofDays(days) {
    return Duration._create(MathUtil.safeMultiply(days, LocalTime.SECONDS_PER_DAY), 0);
  };
  Duration.ofHours = function ofHours(hours) {
    return Duration._create(MathUtil.safeMultiply(hours, LocalTime.SECONDS_PER_HOUR), 0);
  };
  Duration.ofMinutes = function ofMinutes(minutes) {
    return Duration._create(MathUtil.safeMultiply(minutes, LocalTime.SECONDS_PER_MINUTE), 0);
  };
  Duration.ofSeconds = function ofSeconds(seconds, nanoAdjustment) {
    if (nanoAdjustment === void 0) {
      nanoAdjustment = 0;
    }
    var secs = MathUtil.safeAdd(seconds, MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND));
    var nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
    return Duration._create(secs, nos);
  };
  Duration.ofMillis = function ofMillis(millis) {
    var secs = MathUtil.intDiv(millis, 1000);
    var mos = MathUtil.intMod(millis, 1000);
    if (mos < 0) {
      mos += 1000;
      secs--;
    }
    return Duration._create(secs, mos * 1000000);
  };
  Duration.ofNanos = function ofNanos(nanos) {
    var secs = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_SECOND);
    var nos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_SECOND);
    if (nos < 0) {
      nos += LocalTime.NANOS_PER_SECOND;
      secs--;
    }
    return this._create(secs, nos);
  };
  Duration.of = function of(amount, unit) {
    return Duration.ZERO.plus(amount, unit);
  };
  Duration.from = function from(amount) {
    requireNonNull(amount, 'amount');
    requireInstance(amount, TemporalAmount);
    var duration = Duration.ZERO;
    amount.units().forEach(function (unit) {
      duration = duration.plus(amount.get(unit), unit);
    });
    return duration;
  };
  Duration.between = function between(startInclusive, endExclusive) {
    requireNonNull(startInclusive, 'startInclusive');
    requireNonNull(endExclusive, 'endExclusive');
    var secs = startInclusive.until(endExclusive, ChronoUnit.SECONDS);
    var nanos = 0;
    if (startInclusive.isSupported(ChronoField.NANO_OF_SECOND) && endExclusive.isSupported(ChronoField.NANO_OF_SECOND)) {
      try {
        var startNos = startInclusive.getLong(ChronoField.NANO_OF_SECOND);
        nanos = endExclusive.getLong(ChronoField.NANO_OF_SECOND) - startNos;
        if (secs > 0 && nanos < 0) {
          nanos += LocalTime.NANOS_PER_SECOND;
        } else if (secs < 0 && nanos > 0) {
          nanos -= LocalTime.NANOS_PER_SECOND;
        } else if (secs === 0 && nanos !== 0) {
          var adjustedEnd = endExclusive.with(ChronoField.NANO_OF_SECOND, startNos);
          secs = startInclusive.until(adjustedEnd, ChronoUnit.SECONDS);
        }
      } catch (e) {}
    }
    return this.ofSeconds(secs, nanos);
  };
  Duration.parse = function parse(text) {
    requireNonNull(text, 'text');
    var PATTERN = new RegExp('([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?', 'i');
    var matches = PATTERN.exec(text);
    if (matches !== null) {
      if ('T' === matches[3] === false) {
        var negate = '-' === matches[1];
        var dayMatch = matches[2];
        var hourMatch = matches[4];
        var minuteMatch = matches[5];
        var secondMatch = matches[6];
        var fractionMatch = matches[7];
        if (dayMatch != null || hourMatch != null || minuteMatch != null || secondMatch != null) {
          var daysAsSecs = Duration._parseNumber(text, dayMatch, LocalTime.SECONDS_PER_DAY, 'days');
          var hoursAsSecs = Duration._parseNumber(text, hourMatch, LocalTime.SECONDS_PER_HOUR, 'hours');
          var minsAsSecs = Duration._parseNumber(text, minuteMatch, LocalTime.SECONDS_PER_MINUTE, 'minutes');
          var seconds = Duration._parseNumber(text, secondMatch, 1, 'seconds');
          var negativeSecs = secondMatch != null && secondMatch.charAt(0) === '-';
          var nanos = Duration._parseFraction(text, fractionMatch, negativeSecs ? -1 : 1);
          try {
            return Duration._create(negate, daysAsSecs, hoursAsSecs, minsAsSecs, seconds, nanos);
          } catch (ex) {
            throw new DateTimeParseException('Text cannot be parsed to a Duration: overflow', text, 0, ex);
          }
        }
      }
    }
    throw new DateTimeParseException('Text cannot be parsed to a Duration', text, 0);
  };
  Duration._parseNumber = function _parseNumber(text, parsed, multiplier, errorText) {
    if (parsed == null) {
      return 0;
    }
    try {
      if (parsed[0] === '+') {
        parsed = parsed.substring(1);
      }
      return MathUtil.safeMultiply(parseFloat(parsed), multiplier);
    } catch (ex) {
      throw new DateTimeParseException("Text cannot be parsed to a Duration: " + errorText, text, 0, ex);
    }
  };
  Duration._parseFraction = function _parseFraction(text, parsed, negate) {
    if (parsed == null || parsed.length === 0) {
      return 0;
    }
    parsed = (parsed + "000000000").substring(0, 9);
    return parseFloat(parsed) * negate;
  };
  Duration._create = function _create() {
    if (arguments.length <= 2) {
      return Duration._createSecondsNanos(arguments[0], arguments[1]);
    } else {
      return Duration._createNegateDaysHoursMinutesSecondsNanos(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    }
  };
  Duration._createNegateDaysHoursMinutesSecondsNanos = function _createNegateDaysHoursMinutesSecondsNanos(negate, daysAsSecs, hoursAsSecs, minsAsSecs, secs, nanos) {
    var seconds = MathUtil.safeAdd(daysAsSecs, MathUtil.safeAdd(hoursAsSecs, MathUtil.safeAdd(minsAsSecs, secs)));
    if (negate) {
      return Duration.ofSeconds(seconds, nanos).negated();
    }
    return Duration.ofSeconds(seconds, nanos);
  };
  Duration._createSecondsNanos = function _createSecondsNanos(seconds, nanoAdjustment) {
    if (seconds === void 0) {
      seconds = 0;
    }
    if (nanoAdjustment === void 0) {
      nanoAdjustment = 0;
    }
    if (seconds === 0 && nanoAdjustment === 0) {
      return Duration.ZERO;
    }
    return new Duration(seconds, nanoAdjustment);
  };
  var _proto = Duration.prototype;
  _proto.get = function get(unit) {
    if (unit === ChronoUnit.SECONDS) {
      return this._seconds;
    } else if (unit === ChronoUnit.NANOS) {
      return this._nanos;
    } else {
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
  };
  _proto.units = function units() {
    return [ChronoUnit.SECONDS, ChronoUnit.NANOS];
  };
  _proto.isZero = function isZero() {
    return this._seconds === 0 && this._nanos === 0;
  };
  _proto.isNegative = function isNegative() {
    return this._seconds < 0;
  };
  _proto.seconds = function seconds() {
    return this._seconds;
  };
  _proto.nano = function nano() {
    return this._nanos;
  };
  _proto.withSeconds = function withSeconds(seconds) {
    return Duration._create(seconds, this._nanos);
  };
  _proto.withNanos = function withNanos(nanoOfSecond) {
    ChronoField.NANO_OF_SECOND.checkValidIntValue(nanoOfSecond);
    return Duration._create(this._seconds, nanoOfSecond);
  };
  _proto.plusDuration = function plusDuration(duration) {
    requireNonNull(duration, 'duration');
    return this.plus(duration.seconds(), duration.nano());
  };
  _proto.plus = function plus(durationOrNumber, unitOrNumber) {
    if (arguments.length === 1) {
      return this.plusDuration(durationOrNumber);
    } else if (arguments.length === 2 && unitOrNumber instanceof TemporalUnit) {
      return this.plusAmountUnit(durationOrNumber, unitOrNumber);
    } else {
      return this.plusSecondsNanos(durationOrNumber, unitOrNumber);
    }
  };
  _proto.plusAmountUnit = function plusAmountUnit(amountToAdd, unit) {
    requireNonNull(amountToAdd, 'amountToAdd');
    requireNonNull(unit, 'unit');
    if (unit === ChronoUnit.DAYS) {
      return this.plusSecondsNanos(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY), 0);
    }
    if (unit.isDurationEstimated()) {
      throw new UnsupportedTemporalTypeException('Unit must not have an estimated duration');
    }
    if (amountToAdd === 0) {
      return this;
    }
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.NANOS:
          return this.plusNanos(amountToAdd);
        case ChronoUnit.MICROS:
          return this.plusSecondsNanos(MathUtil.intDiv(amountToAdd, 1000000 * 1000) * 1000, MathUtil.intMod(amountToAdd, 1000000 * 1000) * 1000);
        case ChronoUnit.MILLIS:
          return this.plusMillis(amountToAdd);
        case ChronoUnit.SECONDS:
          return this.plusSeconds(amountToAdd);
      }
      return this.plusSecondsNanos(MathUtil.safeMultiply(unit.duration().seconds(), amountToAdd), 0);
    }
    var duration = unit.duration().multipliedBy(amountToAdd);
    return this.plusSecondsNanos(duration.seconds(), duration.nano());
  };
  _proto.plusDays = function plusDays(daysToAdd) {
    return this.plusSecondsNanos(MathUtil.safeMultiply(daysToAdd, LocalTime.SECONDS_PER_DAY), 0);
  };
  _proto.plusHours = function plusHours(hoursToAdd) {
    return this.plusSecondsNanos(MathUtil.safeMultiply(hoursToAdd, LocalTime.SECONDS_PER_HOUR), 0);
  };
  _proto.plusMinutes = function plusMinutes(minutesToAdd) {
    return this.plusSecondsNanos(MathUtil.safeMultiply(minutesToAdd, LocalTime.SECONDS_PER_MINUTE), 0);
  };
  _proto.plusSeconds = function plusSeconds(secondsToAdd) {
    return this.plusSecondsNanos(secondsToAdd, 0);
  };
  _proto.plusMillis = function plusMillis(millisToAdd) {
    return this.plusSecondsNanos(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * 1000000);
  };
  _proto.plusNanos = function plusNanos(nanosToAdd) {
    return this.plusSecondsNanos(0, nanosToAdd);
  };
  _proto.plusSecondsNanos = function plusSecondsNanos(secondsToAdd, nanosToAdd) {
    requireNonNull(secondsToAdd, 'secondsToAdd');
    requireNonNull(nanosToAdd, 'nanosToAdd');
    if (secondsToAdd === 0 && nanosToAdd === 0) {
      return this;
    }
    var epochSec = MathUtil.safeAdd(this._seconds, secondsToAdd);
    epochSec = MathUtil.safeAdd(epochSec, MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND));
    nanosToAdd = MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_SECOND);
    var nanoAdjustment = MathUtil.safeAdd(this._nanos, nanosToAdd);
    return Duration.ofSeconds(epochSec, nanoAdjustment);
  };
  _proto.minus = function minus(durationOrNumber, unit) {
    if (arguments.length === 1) {
      return this.minusDuration(durationOrNumber);
    } else {
      return this.minusAmountUnit(durationOrNumber, unit);
    }
  };
  _proto.minusDuration = function minusDuration(duration) {
    requireNonNull(duration, 'duration');
    var secsToSubtract = duration.seconds();
    var nanosToSubtract = duration.nano();
    if (secsToSubtract === MIN_SAFE_INTEGER) {
      return this.plus(MAX_SAFE_INTEGER, -nanosToSubtract);
    }
    return this.plus(-secsToSubtract, -nanosToSubtract);
  };
  _proto.minusAmountUnit = function minusAmountUnit(amountToSubtract, unit) {
    requireNonNull(amountToSubtract, 'amountToSubtract');
    requireNonNull(unit, 'unit');
    return amountToSubtract === MIN_SAFE_INTEGER ? this.plusAmountUnit(MAX_SAFE_INTEGER, unit) : this.plusAmountUnit(-amountToSubtract, unit);
  };
  _proto.minusDays = function minusDays(daysToSubtract) {
    return daysToSubtract === MIN_SAFE_INTEGER ? this.plusDays(MAX_SAFE_INTEGER) : this.plusDays(-daysToSubtract);
  };
  _proto.minusHours = function minusHours(hoursToSubtract) {
    return hoursToSubtract === MIN_SAFE_INTEGER ? this.plusHours(MAX_SAFE_INTEGER) : this.plusHours(-hoursToSubtract);
  };
  _proto.minusMinutes = function minusMinutes(minutesToSubtract) {
    return minutesToSubtract === MIN_SAFE_INTEGER ? this.plusMinutes(MAX_SAFE_INTEGER) : this.plusMinutes(-minutesToSubtract);
  };
  _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
    return secondsToSubtract === MIN_SAFE_INTEGER ? this.plusSeconds(MAX_SAFE_INTEGER) : this.plusSeconds(-secondsToSubtract);
  };
  _proto.minusMillis = function minusMillis(millisToSubtract) {
    return millisToSubtract === MIN_SAFE_INTEGER ? this.plusMillis(MAX_SAFE_INTEGER) : this.plusMillis(-millisToSubtract);
  };
  _proto.minusNanos = function minusNanos(nanosToSubtract) {
    return nanosToSubtract === MIN_SAFE_INTEGER ? this.plusNanos(MAX_SAFE_INTEGER) : this.plusNanos(-nanosToSubtract);
  };
  _proto.multipliedBy = function multipliedBy(multiplicand) {
    if (multiplicand === 0) {
      return Duration.ZERO;
    }
    if (multiplicand === 1) {
      return this;
    }
    var secs = MathUtil.safeMultiply(this._seconds, multiplicand);
    var nos = MathUtil.safeMultiply(this._nanos, multiplicand);
    secs = secs + MathUtil.intDiv(nos, LocalTime.NANOS_PER_SECOND);
    nos = MathUtil.intMod(nos, LocalTime.NANOS_PER_SECOND);
    return Duration.ofSeconds(secs, nos);
  };
  _proto.dividedBy = function dividedBy(divisor) {
    if (divisor === 0) {
      throw new ArithmeticException('Cannot divide by zero');
    }
    if (divisor === 1) {
      return this;
    }
    var secs = MathUtil.intDiv(this._seconds, divisor);
    var secsMod = MathUtil.roundDown((this._seconds / divisor - secs) * LocalTime.NANOS_PER_SECOND);
    var nos = MathUtil.intDiv(this._nanos, divisor);
    nos = secsMod + nos;
    return Duration.ofSeconds(secs, nos);
  };
  _proto.negated = function negated() {
    return this.multipliedBy(-1);
  };
  _proto.abs = function abs() {
    return this.isNegative() ? this.negated() : this;
  };
  _proto.addTo = function addTo(temporal) {
    requireNonNull(temporal, 'temporal');
    if (this._seconds !== 0) {
      temporal = temporal.plus(this._seconds, ChronoUnit.SECONDS);
    }
    if (this._nanos !== 0) {
      temporal = temporal.plus(this._nanos, ChronoUnit.NANOS);
    }
    return temporal;
  };
  _proto.subtractFrom = function subtractFrom(temporal) {
    requireNonNull(temporal, 'temporal');
    if (this._seconds !== 0) {
      temporal = temporal.minus(this._seconds, ChronoUnit.SECONDS);
    }
    if (this._nanos !== 0) {
      temporal = temporal.minus(this._nanos, ChronoUnit.NANOS);
    }
    return temporal;
  };
  _proto.toDays = function toDays() {
    return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_DAY);
  };
  _proto.toHours = function toHours() {
    return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);
  };
  _proto.toMinutes = function toMinutes() {
    return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_MINUTE);
  };
  _proto.toMillis = function toMillis() {
    var millis = Math.round(MathUtil.safeMultiply(this._seconds, 1000));
    millis = MathUtil.safeAdd(millis, MathUtil.intDiv(this._nanos, 1000000));
    return millis;
  };
  _proto.toNanos = function toNanos() {
    var totalNanos = MathUtil.safeMultiply(this._seconds, LocalTime.NANOS_PER_SECOND);
    totalNanos = MathUtil.safeAdd(totalNanos, this._nanos);
    return totalNanos;
  };
  _proto.compareTo = function compareTo(otherDuration) {
    requireNonNull(otherDuration, 'otherDuration');
    requireInstance(otherDuration, Duration, 'otherDuration');
    var cmp = MathUtil.compareNumbers(this._seconds, otherDuration.seconds());
    if (cmp !== 0) {
      return cmp;
    }
    return this._nanos - otherDuration.nano();
  };
  _proto.equals = function equals(otherDuration) {
    if (this === otherDuration) {
      return true;
    }
    if (otherDuration instanceof Duration) {
      return this.seconds() === otherDuration.seconds() && this.nano() === otherDuration.nano();
    }
    return false;
  };
  _proto.toString = function toString() {
    if (this === Duration.ZERO) {
      return 'PT0S';
    }
    var hours = MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);
    var minutes = MathUtil.intDiv(MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_HOUR), LocalTime.SECONDS_PER_MINUTE);
    var secs = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_MINUTE);
    var rval = 'PT';
    if (hours !== 0) {
      rval += hours + "H";
    }
    if (minutes !== 0) {
      rval += minutes + "M";
    }
    if (secs === 0 && this._nanos === 0 && rval.length > 2) {
      return rval;
    }
    if (secs < 0 && this._nanos > 0) {
      if (secs === -1) {
        rval += '-0';
      } else {
        rval += secs + 1;
      }
    } else {
      rval += secs;
    }
    if (this._nanos > 0) {
      rval += '.';
      var nanoString;
      if (secs < 0) {
        nanoString = "" + (2 * LocalTime.NANOS_PER_SECOND - this._nanos);
      } else {
        nanoString = "" + (LocalTime.NANOS_PER_SECOND + this._nanos);
      }
      nanoString = nanoString.slice(1, nanoString.length);
      rval += nanoString;
      while (rval.charAt(rval.length - 1) === '0') {
        rval = rval.slice(0, rval.length - 1);
      }
    }
    rval += 'S';
    return rval;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return Duration;
}(TemporalAmount);
function _init$n() {
  Duration.ZERO = new Duration(0, 0);
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)
 */var YearConstants = function YearConstants() {};
function _init$m() {
  YearConstants.MIN_VALUE = -999999;
  YearConstants.MAX_VALUE = 999999;
}

var ChronoUnit = function (_TemporalUnit) {
  _inheritsLoose(ChronoUnit, _TemporalUnit);
  function ChronoUnit(name, estimatedDuration) {
    var _this;
    _this = _TemporalUnit.call(this) || this;
    _this._name = name;
    _this._duration = estimatedDuration;
    return _this;
  }
  var _proto = ChronoUnit.prototype;
  _proto.duration = function duration() {
    return this._duration;
  };
  _proto.isDurationEstimated = function isDurationEstimated() {
    return this.isDateBased() || this === ChronoUnit.FOREVER;
  };
  _proto.isDateBased = function isDateBased() {
    return this.compareTo(ChronoUnit.DAYS) >= 0 && this !== ChronoUnit.FOREVER;
  };
  _proto.isTimeBased = function isTimeBased() {
    return this.compareTo(ChronoUnit.DAYS) < 0;
  };
  _proto.isSupportedBy = function isSupportedBy(temporal) {
    if (this === ChronoUnit.FOREVER) {
      return false;
    }
    try {
      temporal.plus(1, this);
      return true;
    } catch (e) {
      try {
        temporal.plus(-1, this);
        return true;
      } catch (e2) {
        return false;
      }
    }
  };
  _proto.addTo = function addTo(temporal, amount) {
    return temporal.plus(amount, this);
  };
  _proto.between = function between(temporal1, temporal2) {
    return temporal1.until(temporal2, this);
  };
  _proto.toString = function toString() {
    return this._name;
  };
  _proto.compareTo = function compareTo(other) {
    return this.duration().compareTo(other.duration());
  };
  return ChronoUnit;
}(TemporalUnit);
function _init$l() {
  ChronoUnit.NANOS = new ChronoUnit('Nanos', Duration.ofNanos(1));
  ChronoUnit.MICROS = new ChronoUnit('Micros', Duration.ofNanos(1000));
  ChronoUnit.MILLIS = new ChronoUnit('Millis', Duration.ofNanos(1000000));
  ChronoUnit.SECONDS = new ChronoUnit('Seconds', Duration.ofSeconds(1));
  ChronoUnit.MINUTES = new ChronoUnit('Minutes', Duration.ofSeconds(60));
  ChronoUnit.HOURS = new ChronoUnit('Hours', Duration.ofSeconds(3600));
  ChronoUnit.HALF_DAYS = new ChronoUnit('HalfDays', Duration.ofSeconds(43200));
  ChronoUnit.DAYS = new ChronoUnit('Days', Duration.ofSeconds(86400));
  ChronoUnit.WEEKS = new ChronoUnit('Weeks', Duration.ofSeconds(7 * 86400));
  ChronoUnit.MONTHS = new ChronoUnit('Months', Duration.ofSeconds(31556952 / 12));
  ChronoUnit.YEARS = new ChronoUnit('Years', Duration.ofSeconds(31556952));
  ChronoUnit.DECADES = new ChronoUnit('Decades', Duration.ofSeconds(31556952 * 10));
  ChronoUnit.CENTURIES = new ChronoUnit('Centuries', Duration.ofSeconds(31556952 * 100));
  ChronoUnit.MILLENNIA = new ChronoUnit('Millennia', Duration.ofSeconds(31556952 * 1000));
  ChronoUnit.ERAS = new ChronoUnit('Eras', Duration.ofSeconds(31556952 * (YearConstants.MAX_VALUE + 1)));
  ChronoUnit.FOREVER = new ChronoUnit('Forever', Duration.ofSeconds(MathUtil.MAX_SAFE_INTEGER, 999999999));
}

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var TemporalField = function () {
  function TemporalField() {}
  var _proto = TemporalField.prototype;
  _proto.isDateBased = function isDateBased() {
    abstractMethodFail('isDateBased');
  };
  _proto.isTimeBased = function isTimeBased() {
    abstractMethodFail('isTimeBased');
  };
  _proto.baseUnit = function baseUnit() {
    abstractMethodFail('baseUnit');
  };
  _proto.rangeUnit = function rangeUnit() {
    abstractMethodFail('rangeUnit');
  };
  _proto.range = function range() {
    abstractMethodFail('range');
  };
  _proto.rangeRefinedBy = function rangeRefinedBy(temporal) {
    abstractMethodFail('rangeRefinedBy');
  };
  _proto.getFrom = function getFrom(temporal) {
    abstractMethodFail('getFrom');
  };
  _proto.adjustInto = function adjustInto(temporal, newValue) {
    abstractMethodFail('adjustInto');
  };
  _proto.isSupportedBy = function isSupportedBy(temporal) {
    abstractMethodFail('isSupportedBy');
  };
  _proto.displayName = function displayName() {
    abstractMethodFail('displayName');
  };
  _proto.equals = function equals(other) {
    abstractMethodFail('equals');
  };
  _proto.name = function name() {
    abstractMethodFail('name');
  };
  return TemporalField;
}();

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ValueRange = function () {
  function ValueRange(minSmallest, minLargest, maxSmallest, maxLargest) {
    assert(!(minSmallest > minLargest), "Smallest minimum value '" + minSmallest + "' must be less than largest minimum value '" + minLargest + "'", IllegalArgumentException);
    assert(!(maxSmallest > maxLargest), "Smallest maximum value '" + maxSmallest + "' must be less than largest maximum value '" + maxLargest + "'", IllegalArgumentException);
    assert(!(minLargest > maxLargest), "Minimum value '" + minLargest + "' must be less than maximum value '" + maxLargest + "'", IllegalArgumentException);
    this._minSmallest = minSmallest;
    this._minLargest = minLargest;
    this._maxLargest = maxLargest;
    this._maxSmallest = maxSmallest;
  }
  var _proto = ValueRange.prototype;
  _proto.isFixed = function isFixed() {
    return this._minSmallest === this._minLargest && this._maxSmallest === this._maxLargest;
  };
  _proto.minimum = function minimum() {
    return this._minSmallest;
  };
  _proto.largestMinimum = function largestMinimum() {
    return this._minLargest;
  };
  _proto.maximum = function maximum() {
    return this._maxLargest;
  };
  _proto.smallestMaximum = function smallestMaximum() {
    return this._maxSmallest;
  };
  _proto.isValidValue = function isValidValue(value) {
    return this.minimum() <= value && value <= this.maximum();
  };
  _proto.checkValidValue = function checkValidValue(value, field) {
    var msg;
    if (!this.isValidValue(value)) {
      if (field != null) {
        msg = "Invalid value for " + field + " (valid values " + this.toString() + "): " + value;
      } else {
        msg = "Invalid value (valid values " + this.toString() + "): " + value;
      }
      return assert(false, msg, DateTimeException);
    }
    return value;
  };
  _proto.checkValidIntValue = function checkValidIntValue(value, field) {
    if (this.isValidIntValue(value) === false) {
      throw new DateTimeException("Invalid int value for " + field + ": " + value);
    }
    return value;
  };
  _proto.isValidIntValue = function isValidIntValue(value) {
    return this.isIntValue() && this.isValidValue(value);
  };
  _proto.isIntValue = function isIntValue() {
    return this.minimum() >= MathUtil.MIN_SAFE_INTEGER && this.maximum() <= MathUtil.MAX_SAFE_INTEGER;
  };
  _proto.equals = function equals(other) {
    if (other === this) {
      return true;
    }
    if (other instanceof ValueRange) {
      return this._minSmallest === other._minSmallest && this._minLargest === other._minLargest && this._maxSmallest === other._maxSmallest && this._maxLargest === other._maxLargest;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return MathUtil.hashCode(this._minSmallest, this._minLargest, this._maxSmallest, this._maxLargest);
  };
  _proto.toString = function toString() {
    var str = this.minimum() + (this.minimum() !== this.largestMinimum() ? "/" + this.largestMinimum() : '');
    str += ' - ';
    str += this.smallestMaximum() + (this.smallestMaximum() !== this.maximum() ? "/" + this.maximum() : '');
    return str;
  };
  ValueRange.of = function of() {
    if (arguments.length === 2) {
      return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[1]);
    } else if (arguments.length === 3) {
      return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[2]);
    } else if (arguments.length === 4) {
      return new ValueRange(arguments[0], arguments[1], arguments[2], arguments[3]);
    } else {
      return assert(false, "Invalid number of arguments " + arguments.length, IllegalArgumentException);
    }
  };
  return ValueRange;
}();

var ChronoField = function (_TemporalField) {
  _inheritsLoose(ChronoField, _TemporalField);
  ChronoField.byName = function byName(fieldName) {
    for (var prop in ChronoField) {
      if (ChronoField[prop]) {
        if (ChronoField[prop] instanceof ChronoField && ChronoField[prop].name() === fieldName) {
          return ChronoField[prop];
        }
      }
    }
  };
  function ChronoField(name, baseUnit, rangeUnit, range) {
    var _this;
    _this = _TemporalField.call(this) || this;
    _this._name = name;
    _this._baseUnit = baseUnit;
    _this._rangeUnit = rangeUnit;
    _this._range = range;
    return _this;
  }
  var _proto = ChronoField.prototype;
  _proto.name = function name() {
    return this._name;
  };
  _proto.baseUnit = function baseUnit() {
    return this._baseUnit;
  };
  _proto.rangeUnit = function rangeUnit() {
    return this._rangeUnit;
  };
  _proto.range = function range() {
    return this._range;
  };
  _proto.displayName = function displayName() {
    return this.toString();
  };
  _proto.checkValidValue = function checkValidValue(value) {
    return this.range().checkValidValue(value, this);
  };
  _proto.checkValidIntValue = function checkValidIntValue(value) {
    return this.range().checkValidIntValue(value, this);
  };
  _proto.isDateBased = function isDateBased() {
    var dateBased = this === ChronoField.DAY_OF_WEEK || this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH || this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR || this === ChronoField.DAY_OF_MONTH || this === ChronoField.DAY_OF_YEAR || this === ChronoField.EPOCH_DAY || this === ChronoField.ALIGNED_WEEK_OF_MONTH || this === ChronoField.ALIGNED_WEEK_OF_YEAR || this === ChronoField.MONTH_OF_YEAR || this === ChronoField.PROLEPTIC_MONTH || this === ChronoField.YEAR_OF_ERA || this === ChronoField.YEAR || this === ChronoField.ERA;
    return dateBased;
  };
  _proto.isTimeBased = function isTimeBased() {
    var timeBased = this === ChronoField.NANO_OF_SECOND || this === ChronoField.NANO_OF_DAY || this === ChronoField.MICRO_OF_SECOND || this === ChronoField.MICRO_OF_DAY || this === ChronoField.MILLI_OF_SECOND || this === ChronoField.MILLI_OF_DAY || this === ChronoField.SECOND_OF_MINUTE || this === ChronoField.SECOND_OF_DAY || this === ChronoField.MINUTE_OF_HOUR || this === ChronoField.MINUTE_OF_DAY || this === ChronoField.HOUR_OF_AMPM || this === ChronoField.CLOCK_HOUR_OF_AMPM || this === ChronoField.HOUR_OF_DAY || this === ChronoField.CLOCK_HOUR_OF_DAY || this === ChronoField.AMPM_OF_DAY;
    return timeBased;
  };
  _proto.rangeRefinedBy = function rangeRefinedBy(temporal) {
    return temporal.range(this);
  };
  _proto.getFrom = function getFrom(temporal) {
    return temporal.getLong(this);
  };
  _proto.toString = function toString() {
    return this.name();
  };
  _proto.equals = function equals(other) {
    return this === other;
  };
  _proto.adjustInto = function adjustInto(temporal, newValue) {
    return temporal.with(this, newValue);
  };
  _proto.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(this);
  };
  return ChronoField;
}(TemporalField);
function _init$k() {
  ChronoField.NANO_OF_SECOND = new ChronoField('NanoOfSecond', ChronoUnit.NANOS, ChronoUnit.SECONDS, ValueRange.of(0, 999999999));
  ChronoField.NANO_OF_DAY = new ChronoField('NanoOfDay', ChronoUnit.NANOS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000000 - 1));
  ChronoField.MICRO_OF_SECOND = new ChronoField('MicroOfSecond', ChronoUnit.MICROS, ChronoUnit.SECONDS, ValueRange.of(0, 999999));
  ChronoField.MICRO_OF_DAY = new ChronoField('MicroOfDay', ChronoUnit.MICROS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000 - 1));
  ChronoField.MILLI_OF_SECOND = new ChronoField('MilliOfSecond', ChronoUnit.MILLIS, ChronoUnit.SECONDS, ValueRange.of(0, 999));
  ChronoField.MILLI_OF_DAY = new ChronoField('MilliOfDay', ChronoUnit.MILLIS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000 - 1));
  ChronoField.SECOND_OF_MINUTE = new ChronoField('SecondOfMinute', ChronoUnit.SECONDS, ChronoUnit.MINUTES, ValueRange.of(0, 59));
  ChronoField.SECOND_OF_DAY = new ChronoField('SecondOfDay', ChronoUnit.SECONDS, ChronoUnit.DAYS, ValueRange.of(0, 86400 - 1));
  ChronoField.MINUTE_OF_HOUR = new ChronoField('MinuteOfHour', ChronoUnit.MINUTES, ChronoUnit.HOURS, ValueRange.of(0, 59));
  ChronoField.MINUTE_OF_DAY = new ChronoField('MinuteOfDay', ChronoUnit.MINUTES, ChronoUnit.DAYS, ValueRange.of(0, 24 * 60 - 1));
  ChronoField.HOUR_OF_AMPM = new ChronoField('HourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(0, 11));
  ChronoField.CLOCK_HOUR_OF_AMPM = new ChronoField('ClockHourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(1, 12));
  ChronoField.HOUR_OF_DAY = new ChronoField('HourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(0, 23));
  ChronoField.CLOCK_HOUR_OF_DAY = new ChronoField('ClockHourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(1, 24));
  ChronoField.AMPM_OF_DAY = new ChronoField('AmPmOfDay', ChronoUnit.HALF_DAYS, ChronoUnit.DAYS, ValueRange.of(0, 1));
  ChronoField.DAY_OF_WEEK = new ChronoField('DayOfWeek', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
  ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH = new ChronoField('AlignedDayOfWeekInMonth', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
  ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR = new ChronoField('AlignedDayOfWeekInYear', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));
  ChronoField.DAY_OF_MONTH = new ChronoField('DayOfMonth', ChronoUnit.DAYS, ChronoUnit.MONTHS, ValueRange.of(1, 28, 31), 'day');
  ChronoField.DAY_OF_YEAR = new ChronoField('DayOfYear', ChronoUnit.DAYS, ChronoUnit.YEARS, ValueRange.of(1, 365, 366));
  ChronoField.EPOCH_DAY = new ChronoField('EpochDay', ChronoUnit.DAYS, ChronoUnit.FOREVER, ValueRange.of(-365961662, 364522971));
  ChronoField.ALIGNED_WEEK_OF_MONTH = new ChronoField('AlignedWeekOfMonth', ChronoUnit.WEEKS, ChronoUnit.MONTHS, ValueRange.of(1, 4, 5));
  ChronoField.ALIGNED_WEEK_OF_YEAR = new ChronoField('AlignedWeekOfYear', ChronoUnit.WEEKS, ChronoUnit.YEARS, ValueRange.of(1, 53));
  ChronoField.MONTH_OF_YEAR = new ChronoField('MonthOfYear', ChronoUnit.MONTHS, ChronoUnit.YEARS, ValueRange.of(1, 12), 'month');
  ChronoField.PROLEPTIC_MONTH = new ChronoField('ProlepticMonth', ChronoUnit.MONTHS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE * 12, YearConstants.MAX_VALUE * 12 + 11));
  ChronoField.YEAR_OF_ERA = new ChronoField('YearOfEra', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(1, YearConstants.MAX_VALUE, YearConstants.MAX_VALUE + 1));
  ChronoField.YEAR = new ChronoField('Year', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE, YearConstants.MAX_VALUE), 'year');
  ChronoField.ERA = new ChronoField('Era', ChronoUnit.ERAS, ChronoUnit.FOREVER, ValueRange.of(0, 1));
  ChronoField.INSTANT_SECONDS = new ChronoField('InstantSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(MIN_SAFE_INTEGER, MAX_SAFE_INTEGER));
  ChronoField.OFFSET_SECONDS = new ChronoField('OffsetSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(-18 * 3600, 18 * 3600));
}

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var TemporalQueries = function () {
  function TemporalQueries() {}
  TemporalQueries.zoneId = function zoneId() {
    return TemporalQueries.ZONE_ID;
  };
  TemporalQueries.chronology = function chronology() {
    return TemporalQueries.CHRONO;
  };
  TemporalQueries.precision = function precision() {
    return TemporalQueries.PRECISION;
  };
  TemporalQueries.zone = function zone() {
    return TemporalQueries.ZONE;
  };
  TemporalQueries.offset = function offset() {
    return TemporalQueries.OFFSET;
  };
  TemporalQueries.localDate = function localDate() {
    return TemporalQueries.LOCAL_DATE;
  };
  TemporalQueries.localTime = function localTime() {
    return TemporalQueries.LOCAL_TIME;
  };
  return TemporalQueries;
}();

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var TemporalAccessor = function () {
  function TemporalAccessor() {}
  var _proto = TemporalAccessor.prototype;
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.chronology() || _query === TemporalQueries.precision()) {
      return null;
    }
    return _query.queryFrom(this);
  };
  _proto.get = function get(field) {
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    abstractMethodFail('getLong');
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      if (this.isSupported(field)) {
        return field.range();
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.isSupported = function isSupported(field) {
    abstractMethodFail('isSupported');
  };
  return TemporalAccessor;
}();

var TemporalQuery = function (_Enum) {
  _inheritsLoose(TemporalQuery, _Enum);
  function TemporalQuery() {
    return _Enum.apply(this, arguments) || this;
  }
  var _proto = TemporalQuery.prototype;
  _proto.queryFrom = function queryFrom(temporal) {
    abstractMethodFail('queryFrom');
  };
  return TemporalQuery;
}(Enum);
function createTemporalQuery(name, queryFromFunction) {
  var ExtendedTemporalQuery = function (_TemporalQuery) {
    _inheritsLoose(ExtendedTemporalQuery, _TemporalQuery);
    function ExtendedTemporalQuery() {
      return _TemporalQuery.apply(this, arguments) || this;
    }
    return ExtendedTemporalQuery;
  }(TemporalQuery);
  ExtendedTemporalQuery.prototype.queryFrom = queryFromFunction;
  return new ExtendedTemporalQuery(name);
}

var DayOfWeek = function (_TemporalAccessor) {
  _inheritsLoose(DayOfWeek, _TemporalAccessor);
  function DayOfWeek(ordinal, name) {
    var _this;
    _this = _TemporalAccessor.call(this) || this;
    _this._ordinal = ordinal;
    _this._name = name;
    return _this;
  }
  var _proto = DayOfWeek.prototype;
  _proto.ordinal = function ordinal() {
    return this._ordinal;
  };
  _proto.name = function name() {
    return this._name;
  };
  DayOfWeek.values = function values() {
    return ENUMS.slice();
  };
  DayOfWeek.valueOf = function valueOf(name) {
    var ordinal = 0;
    for (ordinal; ordinal < ENUMS.length; ordinal++) {
      if (ENUMS[ordinal].name() === name) {
        break;
      }
    }
    return DayOfWeek.of(ordinal + 1);
  };
  DayOfWeek.of = function of(dayOfWeek) {
    if (dayOfWeek < 1 || dayOfWeek > 7) {
      throw new DateTimeException("Invalid value for DayOfWeek: " + dayOfWeek);
    }
    return ENUMS[dayOfWeek - 1];
  };
  DayOfWeek.from = function from(temporal) {
    assert(temporal != null, 'temporal', NullPointerException);
    if (temporal instanceof DayOfWeek) {
      return temporal;
    }
    try {
      return DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK));
    } catch (ex) {
      if (ex instanceof DateTimeException) {
        throw new DateTimeException("Unable to obtain DayOfWeek from TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''), ex);
      } else {
        throw ex;
      }
    }
  };
  _proto.value = function value() {
    return this._ordinal + 1;
  };
  _proto.displayName = function displayName(style, locale) {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');
  };
  _proto.isSupported = function isSupported(field) {
    if (field instanceof ChronoField) {
      return field === ChronoField.DAY_OF_WEEK;
    }
    return field != null && field.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field === ChronoField.DAY_OF_WEEK) {
      return field.range();
    } else if (field instanceof ChronoField) {
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.get = function get(field) {
    if (field === ChronoField.DAY_OF_WEEK) {
      return this.value();
    }
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    if (field === ChronoField.DAY_OF_WEEK) {
      return this.value();
    } else if (field instanceof ChronoField) {
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.plus = function plus(days) {
    var amount = MathUtil.floorMod(days, 7);
    return ENUMS[MathUtil.floorMod(this._ordinal + (amount + 7), 7)];
  };
  _proto.minus = function minus(days) {
    return this.plus(-1 * MathUtil.floorMod(days, 7));
  };
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.precision()) {
      return ChronoUnit.DAYS;
    } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
      return null;
    }
    assert(_query != null, 'query', NullPointerException);
    return _query.queryFrom(this);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    requireNonNull(temporal, 'temporal');
    return temporal.with(ChronoField.DAY_OF_WEEK, this.value());
  };
  _proto.equals = function equals(other) {
    return this === other;
  };
  _proto.toString = function toString() {
    return this._name;
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, DayOfWeek, 'other');
    return this._ordinal - other._ordinal;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return DayOfWeek;
}(TemporalAccessor);
var ENUMS;
function _init$j() {
  DayOfWeek.MONDAY = new DayOfWeek(0, 'MONDAY');
  DayOfWeek.TUESDAY = new DayOfWeek(1, 'TUESDAY');
  DayOfWeek.WEDNESDAY = new DayOfWeek(2, 'WEDNESDAY');
  DayOfWeek.THURSDAY = new DayOfWeek(3, 'THURSDAY');
  DayOfWeek.FRIDAY = new DayOfWeek(4, 'FRIDAY');
  DayOfWeek.SATURDAY = new DayOfWeek(5, 'SATURDAY');
  DayOfWeek.SUNDAY = new DayOfWeek(6, 'SUNDAY');
  DayOfWeek.FROM = createTemporalQuery('DayOfWeek.FROM', function (temporal) {
    return DayOfWeek.from(temporal);
  });
  ENUMS = [DayOfWeek.MONDAY, DayOfWeek.TUESDAY, DayOfWeek.WEDNESDAY, DayOfWeek.THURSDAY, DayOfWeek.FRIDAY, DayOfWeek.SATURDAY, DayOfWeek.SUNDAY];
}

var Month = function (_TemporalAccessor) {
  _inheritsLoose(Month, _TemporalAccessor);
  function Month(value, name) {
    var _this;
    _this = _TemporalAccessor.call(this) || this;
    _this._value = MathUtil.safeToInt(value);
    _this._name = name;
    return _this;
  }
  var _proto = Month.prototype;
  _proto.value = function value() {
    return this._value;
  };
  _proto.ordinal = function ordinal() {
    return this._value - 1;
  };
  _proto.name = function name() {
    return this._name;
  };
  _proto.displayName = function displayName(style, locale) {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');
  };
  _proto.isSupported = function isSupported(field) {
    if (null === field) {
      return false;
    }
    if (field instanceof ChronoField) {
      return field === ChronoField.MONTH_OF_YEAR;
    }
    return field != null && field.isSupportedBy(this);
  };
  _proto.get = function get(field) {
    if (field === ChronoField.MONTH_OF_YEAR) {
      return this.value();
    }
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    if (field === ChronoField.MONTH_OF_YEAR) {
      return this.value();
    } else if (field instanceof ChronoField) {
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.plus = function plus(months) {
    var amount = MathUtil.intMod(months, 12) + 12;
    var newMonthVal = MathUtil.intMod(this.value() + amount, 12);
    newMonthVal = newMonthVal === 0 ? 12 : newMonthVal;
    return Month.of(newMonthVal);
  };
  _proto.minus = function minus(months) {
    return this.plus(-1 * MathUtil.intMod(months, 12));
  };
  _proto.length = function length(leapYear) {
    switch (this) {
      case Month.FEBRUARY:
        return leapYear ? 29 : 28;
      case Month.APRIL:
      case Month.JUNE:
      case Month.SEPTEMBER:
      case Month.NOVEMBER:
        return 30;
      default:
        return 31;
    }
  };
  _proto.minLength = function minLength() {
    switch (this) {
      case Month.FEBRUARY:
        return 28;
      case Month.APRIL:
      case Month.JUNE:
      case Month.SEPTEMBER:
      case Month.NOVEMBER:
        return 30;
      default:
        return 31;
    }
  };
  _proto.maxLength = function maxLength() {
    switch (this) {
      case Month.FEBRUARY:
        return 29;
      case Month.APRIL:
      case Month.JUNE:
      case Month.SEPTEMBER:
      case Month.NOVEMBER:
        return 30;
      default:
        return 31;
    }
  };
  _proto.firstDayOfYear = function firstDayOfYear(leapYear) {
    var leap = leapYear ? 1 : 0;
    switch (this) {
      case Month.JANUARY:
        return 1;
      case Month.FEBRUARY:
        return 32;
      case Month.MARCH:
        return 60 + leap;
      case Month.APRIL:
        return 91 + leap;
      case Month.MAY:
        return 121 + leap;
      case Month.JUNE:
        return 152 + leap;
      case Month.JULY:
        return 182 + leap;
      case Month.AUGUST:
        return 213 + leap;
      case Month.SEPTEMBER:
        return 244 + leap;
      case Month.OCTOBER:
        return 274 + leap;
      case Month.NOVEMBER:
        return 305 + leap;
      case Month.DECEMBER:
      default:
        return 335 + leap;
    }
  };
  _proto.firstMonthOfQuarter = function firstMonthOfQuarter() {
    switch (this) {
      case Month.JANUARY:
      case Month.FEBRUARY:
      case Month.MARCH:
        return Month.JANUARY;
      case Month.APRIL:
      case Month.MAY:
      case Month.JUNE:
        return Month.APRIL;
      case Month.JULY:
      case Month.AUGUST:
      case Month.SEPTEMBER:
        return Month.JULY;
      case Month.OCTOBER:
      case Month.NOVEMBER:
      case Month.DECEMBER:
      default:
        return Month.OCTOBER;
    }
  };
  _proto.query = function query(_query) {
    assert(_query != null, 'query() parameter must not be null', DateTimeException);
    if (_query === TemporalQueries.chronology()) {
      return IsoChronology.INSTANCE;
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.MONTHS;
    }
    return _TemporalAccessor.prototype.query.call(this, _query);
  };
  _proto.toString = function toString() {
    switch (this) {
      case Month.JANUARY:
        return 'JANUARY';
      case Month.FEBRUARY:
        return 'FEBRUARY';
      case Month.MARCH:
        return 'MARCH';
      case Month.APRIL:
        return 'APRIL';
      case Month.MAY:
        return 'MAY';
      case Month.JUNE:
        return 'JUNE';
      case Month.JULY:
        return 'JULY';
      case Month.AUGUST:
        return 'AUGUST';
      case Month.SEPTEMBER:
        return 'SEPTEMBER';
      case Month.OCTOBER:
        return 'OCTOBER';
      case Month.NOVEMBER:
        return 'NOVEMBER';
      case Month.DECEMBER:
        return 'DECEMBER';
      default:
        return "unknown Month, value: " + this.value();
    }
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.MONTH_OF_YEAR, this.value());
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, Month, 'other');
    return this._value - other._value;
  };
  _proto.equals = function equals(other) {
    return this === other;
  };
  Month.valueOf = function valueOf(name) {
    var ordinal = 0;
    for (ordinal; ordinal < MONTHS.length; ordinal++) {
      if (MONTHS[ordinal].name() === name) {
        break;
      }
    }
    return Month.of(ordinal + 1);
  };
  Month.values = function values() {
    return MONTHS.slice();
  };
  Month.of = function of(month) {
    if (month < 1 || month > 12) {
      assert(false, "Invalid value for MonthOfYear: " + month, DateTimeException);
    }
    return MONTHS[month - 1];
  };
  Month.from = function from(temporal) {
    if (temporal instanceof Month) {
      return temporal;
    }
    try {
      return Month.of(temporal.get(ChronoField.MONTH_OF_YEAR));
    } catch (ex) {
      throw new DateTimeException("Unable to obtain Month from TemporalAccessor: " + temporal + " of type " + (temporal && temporal.constructor != null ? temporal.constructor.name : ''), ex);
    }
  };
  return Month;
}(TemporalAccessor);
var MONTHS;
function _init$i() {
  Month.JANUARY = new Month(1, 'JANUARY');
  Month.FEBRUARY = new Month(2, 'FEBRUARY');
  Month.MARCH = new Month(3, 'MARCH');
  Month.APRIL = new Month(4, 'APRIL');
  Month.MAY = new Month(5, 'MAY');
  Month.JUNE = new Month(6, 'JUNE');
  Month.JULY = new Month(7, 'JULY');
  Month.AUGUST = new Month(8, 'AUGUST');
  Month.SEPTEMBER = new Month(9, 'SEPTEMBER');
  Month.OCTOBER = new Month(10, 'OCTOBER');
  Month.NOVEMBER = new Month(11, 'NOVEMBER');
  Month.DECEMBER = new Month(12, 'DECEMBER');
  MONTHS = [Month.JANUARY, Month.FEBRUARY, Month.MARCH, Month.APRIL, Month.MAY, Month.JUNE, Month.JULY, Month.AUGUST, Month.SEPTEMBER, Month.OCTOBER, Month.NOVEMBER, Month.DECEMBER];
}

var PATTERN = /([-+]?)P(?:([-+]?[0-9]+)Y)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)W)?(?:([-+]?[0-9]+)D)?/;
var Period = function (_TemporalAmount) {
  _inheritsLoose(Period, _TemporalAmount);
  function Period(years, months, days) {
    var _this;
    _this = _TemporalAmount.call(this) || this;
    var _years = MathUtil.safeToInt(years);
    var _months = MathUtil.safeToInt(months);
    var _days = MathUtil.safeToInt(days);
    if (_years === 0 && _months === 0 && _days === 0) {
      if (!Period.ZERO) {
        _this._years = _years;
        _this._months = _months;
        _this._days = _days;
        Period.ZERO = _assertThisInitialized(_this);
      }
      return Period.ZERO || _assertThisInitialized(_this);
    }
    _this._years = _years;
    _this._months = _months;
    _this._days = _days;
    return _this;
  }
  Period.ofYears = function ofYears(years) {
    return Period.create(years, 0, 0);
  };
  Period.ofMonths = function ofMonths(months) {
    return Period.create(0, months, 0);
  };
  Period.ofWeeks = function ofWeeks(weeks) {
    return Period.create(0, 0, MathUtil.safeMultiply(weeks, 7));
  };
  Period.ofDays = function ofDays(days) {
    return Period.create(0, 0, days);
  };
  Period.of = function of(years, months, days) {
    return Period.create(years, months, days);
  };
  Period.from = function from(amount) {
    if (amount instanceof Period) {
      return amount;
    }
    requireNonNull(amount, 'amount');
    var years = 0;
    var months = 0;
    var days = 0;
    var units = amount.units();
    for (var i = 0; i < units.length; i++) {
      var unit = units[i];
      var unitAmount = amount.get(unit);
      if (unit === ChronoUnit.YEARS) {
        years = MathUtil.safeToInt(unitAmount);
      } else if (unit === ChronoUnit.MONTHS) {
        months = MathUtil.safeToInt(unitAmount);
      } else if (unit === ChronoUnit.DAYS) {
        days = MathUtil.safeToInt(unitAmount);
      } else {
        throw new DateTimeException("Unit must be Years, Months or Days, but was " + unit);
      }
    }
    return Period.create(years, months, days);
  };
  Period.between = function between(startDate, endDate) {
    requireNonNull(startDate, 'startDate');
    requireNonNull(endDate, 'endDate');
    requireInstance(startDate, LocalDate, 'startDate');
    requireInstance(endDate, LocalDate, 'endDate');
    return startDate.until(endDate);
  };
  Period.parse = function parse(text) {
    requireNonNull(text, 'text');
    try {
      return Period._parse(text);
    } catch (ex) {
      if (ex instanceof ArithmeticException) {
        throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0, ex);
      } else {
        throw ex;
      }
    }
  };
  Period._parse = function _parse(text) {
    var matches = PATTERN.exec(text);
    if (matches != null) {
      var negate = '-' === matches[1] ? -1 : 1;
      var yearMatch = matches[2];
      var monthMatch = matches[3];
      var weekMatch = matches[4];
      var dayMatch = matches[5];
      if (yearMatch != null || monthMatch != null || weekMatch != null || dayMatch != null) {
        var years = Period._parseNumber(text, yearMatch, negate);
        var months = Period._parseNumber(text, monthMatch, negate);
        var weeks = Period._parseNumber(text, weekMatch, negate);
        var days = Period._parseNumber(text, dayMatch, negate);
        days = MathUtil.safeAdd(days, MathUtil.safeMultiply(weeks, 7));
        return Period.create(years, months, days);
      }
    }
    throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0);
  };
  Period._parseNumber = function _parseNumber(text, str, negate) {
    if (str == null) {
      return 0;
    }
    var val = MathUtil.parseInt(str);
    return MathUtil.safeMultiply(val, negate);
  };
  Period.create = function create(years, months, days) {
    return new Period(years, months, days);
  };
  var _proto = Period.prototype;
  _proto.units = function units() {
    return [ChronoUnit.YEARS, ChronoUnit.MONTHS, ChronoUnit.DAYS];
  };
  _proto.chronology = function chronology() {
    return IsoChronology.INSTANCE;
  };
  _proto.get = function get(unit) {
    if (unit === ChronoUnit.YEARS) {
      return this._years;
    }
    if (unit === ChronoUnit.MONTHS) {
      return this._months;
    }
    if (unit === ChronoUnit.DAYS) {
      return this._days;
    }
    throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
  };
  _proto.isZero = function isZero() {
    return this === Period.ZERO;
  };
  _proto.isNegative = function isNegative() {
    return this._years < 0 || this._months < 0 || this._days < 0;
  };
  _proto.years = function years() {
    return this._years;
  };
  _proto.months = function months() {
    return this._months;
  };
  _proto.days = function days() {
    return this._days;
  };
  _proto.withYears = function withYears(years) {
    if (years === this._years) {
      return this;
    }
    return Period.create(years, this._months, this._days);
  };
  _proto.withMonths = function withMonths(months) {
    if (months === this._months) {
      return this;
    }
    return Period.create(this._years, months, this._days);
  };
  _proto.withDays = function withDays(days) {
    if (days === this._days) {
      return this;
    }
    return Period.create(this._years, this._months, days);
  };
  _proto.plus = function plus(amountToAdd) {
    var amount = Period.from(amountToAdd);
    return Period.create(MathUtil.safeAdd(this._years, amount._years), MathUtil.safeAdd(this._months, amount._months), MathUtil.safeAdd(this._days, amount._days));
  };
  _proto.plusYears = function plusYears(yearsToAdd) {
    if (yearsToAdd === 0) {
      return this;
    }
    return Period.create(MathUtil.safeToInt(MathUtil.safeAdd(this._years, yearsToAdd)), this._months, this._days);
  };
  _proto.plusMonths = function plusMonths(monthsToAdd) {
    if (monthsToAdd === 0) {
      return this;
    }
    return Period.create(this._years, MathUtil.safeToInt(MathUtil.safeAdd(this._months, monthsToAdd)), this._days);
  };
  _proto.plusDays = function plusDays(daysToAdd) {
    if (daysToAdd === 0) {
      return this;
    }
    return Period.create(this._years, this._months, MathUtil.safeToInt(MathUtil.safeAdd(this._days, daysToAdd)));
  };
  _proto.minus = function minus(amountToSubtract) {
    var amount = Period.from(amountToSubtract);
    return Period.create(MathUtil.safeSubtract(this._years, amount._years), MathUtil.safeSubtract(this._months, amount._months), MathUtil.safeSubtract(this._days, amount._days));
  };
  _proto.minusYears = function minusYears(yearsToSubtract) {
    return this.plusYears(-1 * yearsToSubtract);
  };
  _proto.minusMonths = function minusMonths(monthsToSubtract) {
    return this.plusMonths(-1 * monthsToSubtract);
  };
  _proto.minusDays = function minusDays(daysToSubtract) {
    return this.plusDays(-1 * daysToSubtract);
  };
  _proto.multipliedBy = function multipliedBy(scalar) {
    if (this === Period.ZERO || scalar === 1) {
      return this;
    }
    return Period.create(MathUtil.safeMultiply(this._years, scalar), MathUtil.safeMultiply(this._months, scalar), MathUtil.safeMultiply(this._days, scalar));
  };
  _proto.negated = function negated() {
    return this.multipliedBy(-1);
  };
  _proto.normalized = function normalized() {
    var totalMonths = this.toTotalMonths();
    var splitYears = MathUtil.intDiv(totalMonths, 12);
    var splitMonths = MathUtil.intMod(totalMonths, 12);
    if (splitYears === this._years && splitMonths === this._months) {
      return this;
    }
    return Period.create(MathUtil.safeToInt(splitYears), splitMonths, this._days);
  };
  _proto.toTotalMonths = function toTotalMonths() {
    return this._years * 12 + this._months;
  };
  _proto.addTo = function addTo(temporal) {
    requireNonNull(temporal, 'temporal');
    if (this._years !== 0) {
      if (this._months !== 0) {
        temporal = temporal.plus(this.toTotalMonths(), ChronoUnit.MONTHS);
      } else {
        temporal = temporal.plus(this._years, ChronoUnit.YEARS);
      }
    } else if (this._months !== 0) {
      temporal = temporal.plus(this._months, ChronoUnit.MONTHS);
    }
    if (this._days !== 0) {
      temporal = temporal.plus(this._days, ChronoUnit.DAYS);
    }
    return temporal;
  };
  _proto.subtractFrom = function subtractFrom(temporal) {
    requireNonNull(temporal, 'temporal');
    if (this._years !== 0) {
      if (this._months !== 0) {
        temporal = temporal.minus(this.toTotalMonths(), ChronoUnit.MONTHS);
      } else {
        temporal = temporal.minus(this._years, ChronoUnit.YEARS);
      }
    } else if (this._months !== 0) {
      temporal = temporal.minus(this._months, ChronoUnit.MONTHS);
    }
    if (this._days !== 0) {
      temporal = temporal.minus(this._days, ChronoUnit.DAYS);
    }
    return temporal;
  };
  _proto.equals = function equals(obj) {
    if (this === obj) {
      return true;
    }
    if (obj instanceof Period) {
      var other = obj;
      return this._years === other._years && this._months === other._months && this._days === other._days;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return MathUtil.hashCode(this._years, this._months, this._days);
  };
  _proto.toString = function toString() {
    if (this === Period.ZERO) {
      return 'P0D';
    } else {
      var buf = 'P';
      if (this._years !== 0) {
        buf += this._years + "Y";
      }
      if (this._months !== 0) {
        buf += this._months + "M";
      }
      if (this._days !== 0) {
        buf += this._days + "D";
      }
      return buf;
    }
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return Period;
}(TemporalAmount);
function _init$h() {
  Period.ofDays(0);
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var ParsePosition = function () {
  function ParsePosition(index) {
    this._index = index;
    this._errorIndex = -1;
  }
  var _proto = ParsePosition.prototype;
  _proto.getIndex = function getIndex() {
    return this._index;
  };
  _proto.setIndex = function setIndex(index) {
    this._index = index;
  };
  _proto.getErrorIndex = function getErrorIndex() {
    return this._errorIndex;
  };
  _proto.setErrorIndex = function setErrorIndex(errorIndex) {
    this._errorIndex = errorIndex;
  };
  return ParsePosition;
}();

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var EnumMap = function () {
  function EnumMap() {
    this._map = {};
  }
  var _proto = EnumMap.prototype;
  _proto.putAll = function putAll(otherMap) {
    for (var key in otherMap._map) {
      this._map[key] = otherMap._map[key];
    }
    return this;
  };
  _proto.containsKey = function containsKey(key) {
    return this._map.hasOwnProperty(key.name()) && this.get(key) !== undefined;
  };
  _proto.get = function get(key) {
    return this._map[key.name()];
  };
  _proto.put = function put(key, val) {
    return this.set(key, val);
  };
  _proto.set = function set(key, val) {
    this._map[key.name()] = val;
    return this;
  };
  _proto.retainAll = function retainAll(keyList) {
    var map = {};
    for (var i = 0; i < keyList.length; i++) {
      var key = keyList[i].name();
      map[key] = this._map[key];
    }
    this._map = map;
    return this;
  };
  _proto.remove = function remove(key) {
    var keyName = key.name();
    var val = this._map[keyName];
    this._map[keyName] = undefined;
    return val;
  };
  _proto.keySet = function keySet() {
    return this._map;
  };
  _proto.clear = function clear() {
    this._map = {};
  };
  return EnumMap;
}();

var ResolverStyle = function (_Enum) {
  _inheritsLoose(ResolverStyle, _Enum);
  function ResolverStyle() {
    return _Enum.apply(this, arguments) || this;
  }
  return ResolverStyle;
}(Enum);
ResolverStyle.STRICT = new ResolverStyle('STRICT');
ResolverStyle.SMART = new ResolverStyle('SMART');
ResolverStyle.LENIENT = new ResolverStyle('LENIENT');

var Temporal = function (_TemporalAccessor) {
  _inheritsLoose(Temporal, _TemporalAccessor);
  function Temporal() {
    return _TemporalAccessor.apply(this, arguments) || this;
  }
  var _proto = Temporal.prototype;
  _proto.isSupported = function isSupported(fieldOrUnit) {
    abstractMethodFail('isSupported');
  };
  _proto.minus = function minus(amount, unit) {
    if (arguments.length < 2) {
      return this._minusAmount(amount);
    } else {
      return this._minusUnit(amount, unit);
    }
  };
  _proto._minusAmount = function _minusAmount(amount) {
    requireNonNull(amount, 'amount');
    requireInstance(amount, TemporalAmount, 'amount');
    return amount.subtractFrom(this);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    requireNonNull(amountToSubtract, 'amountToSubtract');
    requireNonNull(unit, 'unit');
    requireInstance(unit, TemporalUnit, 'unit');
    return this._plusUnit(-amountToSubtract, unit);
  };
  _proto.plus = function plus(amount, unit) {
    if (arguments.length < 2) {
      return this._plusAmount(amount);
    } else {
      return this._plusUnit(amount, unit);
    }
  };
  _proto._plusAmount = function _plusAmount(amount) {
    requireNonNull(amount, 'amount');
    requireInstance(amount, TemporalAmount, 'amount');
    return amount.addTo(this);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    abstractMethodFail('_plusUnit');
  };
  _proto.until = function until(endTemporal, unit) {
    abstractMethodFail('until');
  };
  _proto.with = function _with(adjusterOrField, newValue) {
    if (arguments.length < 2) {
      return this._withAdjuster(adjusterOrField);
    } else {
      return this._withField(adjusterOrField, newValue);
    }
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster, 'adjuster');
    assert(typeof adjuster.adjustInto === 'function', 'adjuster must be a TemporalAdjuster', IllegalArgumentException);
    return adjuster.adjustInto(this);
  };
  _proto._withField = function _withField(field, newValue) {
    abstractMethodFail('_withField');
  };
  return Temporal;
}(TemporalAccessor);
if (typeof Symbol !== 'undefined' && Symbol.toPrimitive) {
  Temporal.prototype[Symbol.toPrimitive] = function (hint) {
    if (hint !== 'number') {
      return this.toString();
    }
    throw new TypeError('A conversion from Temporal to a number is not allowed. ' + 'To compare use the methods .equals(), .compareTo(), .isBefore() ' + 'or one that is more suitable to your use case.');
  };
}

var ChronoLocalDate = function (_Temporal) {
  _inheritsLoose(ChronoLocalDate, _Temporal);
  function ChronoLocalDate() {
    return _Temporal.apply(this, arguments) || this;
  }
  var _proto = ChronoLocalDate.prototype;
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit.isDateBased();
    } else if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isDateBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.chronology()) {
      return this.chronology();
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.DAYS;
    } else if (_query === TemporalQueries.localDate()) {
      return LocalDate.ofEpochDay(this.toEpochDay());
    } else if (_query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.EPOCH_DAY, this.toEpochDay());
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return formatter.format(this);
  };
  return ChronoLocalDate;
}(Temporal);

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var StringUtil = function () {
  function StringUtil() {}
  StringUtil.startsWith = function startsWith(text, pattern) {
    return text.indexOf(pattern) === 0;
  };
  StringUtil.hashCode = function hashCode(text) {
    var len = text.length;
    if (len === 0) {
      return 0;
    }
    var hash = 0;
    for (var i = 0; i < len; i++) {
      var chr = text.charCodeAt(i);
      hash = (hash << 5) - hash + chr;
      hash |= 0;
    }
    return MathUtil.smi(hash);
  };
  return StringUtil;
}();

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ZoneId = function () {
  function ZoneId() {}
  ZoneId.systemDefault = function systemDefault() {
    throw new DateTimeException('not supported operation');
  };
  ZoneId.getAvailableZoneIds = function getAvailableZoneIds() {
    throw new DateTimeException('not supported operation');
  };
  ZoneId.of = function of(zoneId) {
    throw new DateTimeException("not supported operation" + zoneId);
  };
  ZoneId.ofOffset = function ofOffset(prefix, offset) {
    throw new DateTimeException("not supported operation" + prefix + offset);
  };
  ZoneId.from = function from(temporal) {
    throw new DateTimeException("not supported operation" + temporal);
  };
  var _proto = ZoneId.prototype;
  _proto.id = function id() {
    abstractMethodFail('ZoneId.id');
  };
  _proto.rules = function rules() {
    abstractMethodFail('ZoneId.rules');
  };
  _proto.normalized = function normalized() {
    var rules = this.rules();
    if (rules.isFixedOffset()) {
      return rules.offset(Instant.EPOCH);
    }
    return this;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof ZoneId) {
      return this.id() === other.id();
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return StringUtil.hashCode(this.id());
  };
  _proto.toString = function toString() {
    return this.id();
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return ZoneId;
}();

var ZoneRules = function () {
  function ZoneRules() {}
  ZoneRules.of = function of(offset) {
    requireNonNull(offset, 'offset');
    return new Fixed(offset);
  };
  var _proto = ZoneRules.prototype;
  _proto.isFixedOffset = function isFixedOffset() {
    abstractMethodFail('ZoneRules.isFixedOffset');
  };
  _proto.offset = function offset(instantOrLocalDateTime) {
    if (instantOrLocalDateTime instanceof Instant) {
      return this.offsetOfInstant(instantOrLocalDateTime);
    } else {
      return this.offsetOfLocalDateTime(instantOrLocalDateTime);
    }
  };
  _proto.offsetOfInstant = function offsetOfInstant(instant) {
    abstractMethodFail('ZoneRules.offsetInstant');
  };
  _proto.offsetOfEpochMilli = function offsetOfEpochMilli(epochMilli) {
    abstractMethodFail('ZoneRules.offsetOfEpochMilli');
  };
  _proto.offsetOfLocalDateTime = function offsetOfLocalDateTime(localDateTime) {
    abstractMethodFail('ZoneRules.offsetLocalDateTime');
  };
  _proto.validOffsets = function validOffsets(localDateTime) {
    abstractMethodFail('ZoneRules.validOffsets');
  };
  _proto.transition = function transition(localDateTime) {
    abstractMethodFail('ZoneRules.transition');
  };
  _proto.standardOffset = function standardOffset(instant) {
    abstractMethodFail('ZoneRules.standardOffset');
  };
  _proto.daylightSavings = function daylightSavings(instant) {
    abstractMethodFail('ZoneRules.daylightSavings');
  };
  _proto.isDaylightSavings = function isDaylightSavings(instant) {
    abstractMethodFail('ZoneRules.isDaylightSavings');
  };
  _proto.isValidOffset = function isValidOffset(localDateTime, offset) {
    abstractMethodFail('ZoneRules.isValidOffset');
  };
  _proto.nextTransition = function nextTransition(instant) {
    abstractMethodFail('ZoneRules.nextTransition');
  };
  _proto.previousTransition = function previousTransition(instant) {
    abstractMethodFail('ZoneRules.previousTransition');
  };
  _proto.transitions = function transitions() {
    abstractMethodFail('ZoneRules.transitions');
  };
  _proto.transitionRules = function transitionRules() {
    abstractMethodFail('ZoneRules.transitionRules');
  };
  _proto.toString = function toString() {
    abstractMethodFail('ZoneRules.toString');
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return ZoneRules;
}();
var Fixed = function (_ZoneRules) {
  _inheritsLoose(Fixed, _ZoneRules);
  function Fixed(offset) {
    var _this;
    _this = _ZoneRules.call(this) || this;
    _this._offset = offset;
    return _this;
  }
  var _proto2 = Fixed.prototype;
  _proto2.isFixedOffset = function isFixedOffset() {
    return true;
  };
  _proto2.offsetOfInstant = function offsetOfInstant() {
    return this._offset;
  };
  _proto2.offsetOfEpochMilli = function offsetOfEpochMilli() {
    return this._offset;
  };
  _proto2.offsetOfLocalDateTime = function offsetOfLocalDateTime() {
    return this._offset;
  };
  _proto2.validOffsets = function validOffsets() {
    return [this._offset];
  };
  _proto2.transition = function transition() {
    return null;
  };
  _proto2.standardOffset = function standardOffset() {
    return this._offset;
  };
  _proto2.daylightSavings = function daylightSavings() {
    return Duration.ZERO;
  };
  _proto2.isDaylightSavings = function isDaylightSavings() {
    return false;
  };
  _proto2.isValidOffset = function isValidOffset(localDateTime, offset) {
    return this._offset.equals(offset);
  };
  _proto2.nextTransition = function nextTransition() {
    return null;
  };
  _proto2.previousTransition = function previousTransition() {
    return null;
  };
  _proto2.transitions = function transitions() {
    return [];
  };
  _proto2.transitionRules = function transitionRules() {
    return [];
  };
  _proto2.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof Fixed) {
      return this._offset.equals(other._offset);
    }
    return false;
  };
  _proto2.toString = function toString() {
    return "FixedRules:" + this._offset.toString();
  };
  return Fixed;
}(ZoneRules);

var SECONDS_CACHE = {};
var ID_CACHE = {};
var ZoneOffset = function (_ZoneId) {
  _inheritsLoose(ZoneOffset, _ZoneId);
  function ZoneOffset(totalSeconds) {
    var _this;
    _this = _ZoneId.call(this) || this;
    ZoneOffset._validateTotalSeconds(totalSeconds);
    _this._totalSeconds = MathUtil.safeToInt(totalSeconds);
    _this._rules = ZoneRules.of(_assertThisInitialized(_this));
    _this._id = ZoneOffset._buildId(totalSeconds);
    return _this;
  }
  var _proto = ZoneOffset.prototype;
  _proto.totalSeconds = function totalSeconds() {
    return this._totalSeconds;
  };
  _proto.id = function id() {
    return this._id;
  };
  ZoneOffset._buildId = function _buildId(totalSeconds) {
    if (totalSeconds === 0) {
      return 'Z';
    } else {
      var absTotalSeconds = Math.abs(totalSeconds);
      var absHours = MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_HOUR);
      var absMinutes = MathUtil.intMod(MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
      var buf = "" + (totalSeconds < 0 ? '-' : '+') + (absHours < 10 ? '0' : '') + absHours + (absMinutes < 10 ? ':0' : ':') + absMinutes;
      var absSeconds = MathUtil.intMod(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE);
      if (absSeconds !== 0) {
        buf += (absSeconds < 10 ? ':0' : ':') + absSeconds;
      }
      return buf;
    }
  };
  ZoneOffset._validateTotalSeconds = function _validateTotalSeconds(totalSeconds) {
    if (Math.abs(totalSeconds) > ZoneOffset.MAX_SECONDS) {
      throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');
    }
  };
  ZoneOffset._validate = function _validate(hours, minutes, seconds) {
    if (hours < -18 || hours > 18) {
      throw new DateTimeException("Zone offset hours not in valid range: value " + hours + " is not in the range -18 to 18");
    }
    if (hours > 0) {
      if (minutes < 0 || seconds < 0) {
        throw new DateTimeException('Zone offset minutes and seconds must be positive because hours is positive');
      }
    } else if (hours < 0) {
      if (minutes > 0 || seconds > 0) {
        throw new DateTimeException('Zone offset minutes and seconds must be negative because hours is negative');
      }
    } else if (minutes > 0 && seconds < 0 || minutes < 0 && seconds > 0) {
      throw new DateTimeException('Zone offset minutes and seconds must have the same sign');
    }
    if (Math.abs(minutes) > 59) {
      throw new DateTimeException("Zone offset minutes not in valid range: abs(value) " + Math.abs(minutes) + " is not in the range 0 to 59");
    }
    if (Math.abs(seconds) > 59) {
      throw new DateTimeException("Zone offset seconds not in valid range: abs(value) " + Math.abs(seconds) + " is not in the range 0 to 59");
    }
    if (Math.abs(hours) === 18 && (Math.abs(minutes) > 0 || Math.abs(seconds) > 0)) {
      throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');
    }
  };
  ZoneOffset.of = function of(offsetId) {
    requireNonNull(offsetId, 'offsetId');
    var offset = ID_CACHE[offsetId];
    if (offset != null) {
      return offset;
    }
    var hours, minutes, seconds;
    switch (offsetId.length) {
      case 2:
        offsetId = offsetId[0] + "0" + offsetId[1];
      case 3:
        hours = ZoneOffset._parseNumber(offsetId, 1, false);
        minutes = 0;
        seconds = 0;
        break;
      case 5:
        hours = ZoneOffset._parseNumber(offsetId, 1, false);
        minutes = ZoneOffset._parseNumber(offsetId, 3, false);
        seconds = 0;
        break;
      case 6:
        hours = ZoneOffset._parseNumber(offsetId, 1, false);
        minutes = ZoneOffset._parseNumber(offsetId, 4, true);
        seconds = 0;
        break;
      case 7:
        hours = ZoneOffset._parseNumber(offsetId, 1, false);
        minutes = ZoneOffset._parseNumber(offsetId, 3, false);
        seconds = ZoneOffset._parseNumber(offsetId, 5, false);
        break;
      case 9:
        hours = ZoneOffset._parseNumber(offsetId, 1, false);
        minutes = ZoneOffset._parseNumber(offsetId, 4, true);
        seconds = ZoneOffset._parseNumber(offsetId, 7, true);
        break;
      default:
        throw new DateTimeException("Invalid ID for ZoneOffset, invalid format: " + offsetId);
    }
    var first = offsetId[0];
    if (first !== '+' && first !== '-') {
      throw new DateTimeException("Invalid ID for ZoneOffset, plus/minus not found when expected: " + offsetId);
    }
    if (first === '-') {
      return ZoneOffset.ofHoursMinutesSeconds(-hours, -minutes, -seconds);
    } else {
      return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, seconds);
    }
  };
  ZoneOffset._parseNumber = function _parseNumber(offsetId, pos, precededByColon) {
    if (precededByColon && offsetId[pos - 1] !== ':') {
      throw new DateTimeException("Invalid ID for ZoneOffset, colon not found when expected: " + offsetId);
    }
    var ch1 = offsetId[pos];
    var ch2 = offsetId[pos + 1];
    if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {
      throw new DateTimeException("Invalid ID for ZoneOffset, non numeric characters found: " + offsetId);
    }
    return (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);
  };
  ZoneOffset.ofHours = function ofHours(hours) {
    return ZoneOffset.ofHoursMinutesSeconds(hours, 0, 0);
  };
  ZoneOffset.ofHoursMinutes = function ofHoursMinutes(hours, minutes) {
    return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, 0);
  };
  ZoneOffset.ofHoursMinutesSeconds = function ofHoursMinutesSeconds(hours, minutes, seconds) {
    ZoneOffset._validate(hours, minutes, seconds);
    var totalSeconds = hours * LocalTime.SECONDS_PER_HOUR + minutes * LocalTime.SECONDS_PER_MINUTE + seconds;
    return ZoneOffset.ofTotalSeconds(totalSeconds);
  };
  ZoneOffset.ofTotalMinutes = function ofTotalMinutes(totalMinutes) {
    var totalSeconds = totalMinutes * LocalTime.SECONDS_PER_MINUTE;
    return ZoneOffset.ofTotalSeconds(totalSeconds);
  };
  ZoneOffset.ofTotalSeconds = function ofTotalSeconds(totalSeconds) {
    if (totalSeconds % (15 * LocalTime.SECONDS_PER_MINUTE) === 0) {
      var totalSecs = totalSeconds;
      var result = SECONDS_CACHE[totalSecs];
      if (result == null) {
        result = new ZoneOffset(totalSeconds);
        SECONDS_CACHE[totalSecs] = result;
        ID_CACHE[result.id()] = result;
      }
      return result;
    } else {
      return new ZoneOffset(totalSeconds);
    }
  };
  _proto.rules = function rules() {
    return this._rules;
  };
  _proto.get = function get(field) {
    return this.getLong(field);
  };
  _proto.getLong = function getLong(field) {
    if (field === ChronoField.OFFSET_SECONDS) {
      return this._totalSeconds;
    } else if (field instanceof ChronoField) {
      throw new DateTimeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
      return this;
    } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.precision() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId()) {
      return null;
    }
    return _query.queryFrom(this);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.OFFSET_SECONDS, this._totalSeconds);
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    return other._totalSeconds - this._totalSeconds;
  };
  _proto.equals = function equals(obj) {
    if (this === obj) {
      return true;
    }
    if (obj instanceof ZoneOffset) {
      return this._totalSeconds === obj._totalSeconds;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._totalSeconds;
  };
  _proto.toString = function toString() {
    return this._id;
  };
  return ZoneOffset;
}(ZoneId);
function _init$g() {
  ZoneOffset.MAX_SECONDS = 18 * LocalTime.SECONDS_PER_HOUR;
  ZoneOffset.UTC = ZoneOffset.ofTotalSeconds(0);
  ZoneOffset.MIN = ZoneOffset.ofTotalSeconds(-ZoneOffset.MAX_SECONDS);
  ZoneOffset.MAX = ZoneOffset.ofTotalSeconds(ZoneOffset.MAX_SECONDS);
}

var DateTimeBuilder = function (_TemporalAccessor) {
  _inheritsLoose(DateTimeBuilder, _TemporalAccessor);
  DateTimeBuilder.create = function create(field, value) {
    var dtb = new DateTimeBuilder();
    dtb._addFieldValue(field, value);
    return dtb;
  };
  function DateTimeBuilder() {
    var _this;
    _this = _TemporalAccessor.call(this) || this;
    _this.fieldValues = new EnumMap();
    _this.chrono = null;
    _this.zone = null;
    _this.date = null;
    _this.time = null;
    _this.leapSecond = false;
    _this.excessDays = null;
    return _this;
  }
  var _proto = DateTimeBuilder.prototype;
  _proto.getFieldValue0 = function getFieldValue0(field) {
    return this.fieldValues.get(field);
  };
  _proto._addFieldValue = function _addFieldValue(field, value) {
    requireNonNull(field, 'field');
    var old = this.getFieldValue0(field);
    if (old != null && old !== value) {
      throw new DateTimeException("Conflict found: " + field + " " + old + " differs from " + field + " " + value + ": " + this);
    }
    return this._putFieldValue0(field, value);
  };
  _proto._putFieldValue0 = function _putFieldValue0(field, value) {
    this.fieldValues.put(field, value);
    return this;
  };
  _proto.resolve = function resolve(resolverStyle, resolverFields) {
    if (resolverFields != null) {
      this.fieldValues.retainAll(resolverFields);
    }
    this._mergeDate(resolverStyle);
    this._mergeTime(resolverStyle);
    this._resolveTimeInferZeroes(resolverStyle);
    if (this.excessDays != null && this.excessDays.isZero() === false && this.date != null && this.time != null) {
      this.date = this.date.plus(this.excessDays);
      this.excessDays = Period.ZERO;
    }
    this._resolveInstant();
    return this;
  };
  _proto._mergeDate = function _mergeDate(resolverStyle) {
    this._checkDate(IsoChronology.INSTANCE.resolveDate(this.fieldValues, resolverStyle));
  };
  _proto._checkDate = function _checkDate(date) {
    if (date != null) {
      this._addObject(date);
      for (var fieldName in this.fieldValues.keySet()) {
        var field = ChronoField.byName(fieldName);
        if (field) {
          if (this.fieldValues.get(field) !== undefined) {
            if (field.isDateBased()) {
              var val1 = void 0;
              try {
                val1 = date.getLong(field);
              } catch (ex) {
                if (ex instanceof DateTimeException) {
                  continue;
                } else {
                  throw ex;
                }
              }
              var val2 = this.fieldValues.get(field);
              if (val1 !== val2) {
                throw new DateTimeException("Conflict found: Field " + field + " " + val1 + " differs from " + field + " " + val2 + " derived from " + date);
              }
            }
          }
        }
      }
    }
  };
  _proto._mergeTime = function _mergeTime(resolverStyle) {
    if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_DAY)) {
      var ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        if (resolverStyle === ResolverStyle.SMART && ch === 0) ; else {
          ChronoField.CLOCK_HOUR_OF_DAY.checkValidValue(ch);
        }
      }
      this._addFieldValue(ChronoField.HOUR_OF_DAY, ch === 24 ? 0 : ch);
    }
    if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_AMPM)) {
      var _ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_AMPM);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        if (resolverStyle === ResolverStyle.SMART && _ch === 0) ; else {
          ChronoField.CLOCK_HOUR_OF_AMPM.checkValidValue(_ch);
        }
      }
      this._addFieldValue(ChronoField.HOUR_OF_AMPM, _ch === 12 ? 0 : _ch);
    }
    if (resolverStyle !== ResolverStyle.LENIENT) {
      if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY)) {
        ChronoField.AMPM_OF_DAY.checkValidValue(this.fieldValues.get(ChronoField.AMPM_OF_DAY));
      }
      if (this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {
        ChronoField.HOUR_OF_AMPM.checkValidValue(this.fieldValues.get(ChronoField.HOUR_OF_AMPM));
      }
    }
    if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY) && this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {
      var ap = this.fieldValues.remove(ChronoField.AMPM_OF_DAY);
      var hap = this.fieldValues.remove(ChronoField.HOUR_OF_AMPM);
      this._addFieldValue(ChronoField.HOUR_OF_DAY, ap * 12 + hap);
    }
    if (this.fieldValues.containsKey(ChronoField.NANO_OF_DAY)) {
      var nod = this.fieldValues.remove(ChronoField.NANO_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.NANO_OF_DAY.checkValidValue(nod);
      }
      this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(nod, 1000000000));
      this._addFieldValue(ChronoField.NANO_OF_SECOND, MathUtil.intMod(nod, 1000000000));
    }
    if (this.fieldValues.containsKey(ChronoField.MICRO_OF_DAY)) {
      var cod = this.fieldValues.remove(ChronoField.MICRO_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.MICRO_OF_DAY.checkValidValue(cod);
      }
      this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(cod, 1000000));
      this._addFieldValue(ChronoField.MICRO_OF_SECOND, MathUtil.intMod(cod, 1000000));
    }
    if (this.fieldValues.containsKey(ChronoField.MILLI_OF_DAY)) {
      var lod = this.fieldValues.remove(ChronoField.MILLI_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.MILLI_OF_DAY.checkValidValue(lod);
      }
      this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(lod, 1000));
      this._addFieldValue(ChronoField.MILLI_OF_SECOND, MathUtil.intMod(lod, 1000));
    }
    if (this.fieldValues.containsKey(ChronoField.SECOND_OF_DAY)) {
      var sod = this.fieldValues.remove(ChronoField.SECOND_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.SECOND_OF_DAY.checkValidValue(sod);
      }
      this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(sod, 3600));
      this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(MathUtil.intDiv(sod, 60), 60));
      this._addFieldValue(ChronoField.SECOND_OF_MINUTE, MathUtil.intMod(sod, 60));
    }
    if (this.fieldValues.containsKey(ChronoField.MINUTE_OF_DAY)) {
      var mod = this.fieldValues.remove(ChronoField.MINUTE_OF_DAY);
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.MINUTE_OF_DAY.checkValidValue(mod);
      }
      this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(mod, 60));
      this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(mod, 60));
    }
    if (resolverStyle !== ResolverStyle.LENIENT) {
      if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {
        ChronoField.MILLI_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MILLI_OF_SECOND));
      }
      if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
        ChronoField.MICRO_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MICRO_OF_SECOND));
      }
    }
    if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
      var los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);
      var cos = this.fieldValues.get(ChronoField.MICRO_OF_SECOND);
      this._putFieldValue0(ChronoField.MICRO_OF_SECOND, los * 1000 + MathUtil.intMod(cos, 1000));
    }
    if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {
      var nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);
      this._putFieldValue0(ChronoField.MICRO_OF_SECOND, MathUtil.intDiv(nos, 1000));
      this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);
    }
    if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {
      var _nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);
      this._putFieldValue0(ChronoField.MILLI_OF_SECOND, MathUtil.intDiv(_nos, 1000000));
      this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);
    }
    if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {
      var _cos = this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);
      this._putFieldValue0(ChronoField.NANO_OF_SECOND, _cos * 1000);
    } else if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {
      var _los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);
      this._putFieldValue0(ChronoField.NANO_OF_SECOND, _los * 1000000);
    }
  };
  _proto._resolveTimeInferZeroes = function _resolveTimeInferZeroes(resolverStyle) {
    var hod = this.fieldValues.get(ChronoField.HOUR_OF_DAY);
    var moh = this.fieldValues.get(ChronoField.MINUTE_OF_HOUR);
    var som = this.fieldValues.get(ChronoField.SECOND_OF_MINUTE);
    var nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);
    if (hod == null) {
      return;
    }
    if (moh == null && (som != null || nos != null)) {
      return;
    }
    if (moh != null && som == null && nos != null) {
      return;
    }
    if (resolverStyle !== ResolverStyle.LENIENT) {
      if (hod != null) {
        if (resolverStyle === ResolverStyle.SMART && hod === 24 && (moh == null || moh === 0) && (som == null || som === 0) && (nos == null || nos === 0)) {
          hod = 0;
          this.excessDays = Period.ofDays(1);
        }
        var hodVal = ChronoField.HOUR_OF_DAY.checkValidIntValue(hod);
        if (moh != null) {
          var mohVal = ChronoField.MINUTE_OF_HOUR.checkValidIntValue(moh);
          if (som != null) {
            var somVal = ChronoField.SECOND_OF_MINUTE.checkValidIntValue(som);
            if (nos != null) {
              var nosVal = ChronoField.NANO_OF_SECOND.checkValidIntValue(nos);
              this._addObject(LocalTime.of(hodVal, mohVal, somVal, nosVal));
            } else {
              this._addObject(LocalTime.of(hodVal, mohVal, somVal));
            }
          } else {
            if (nos == null) {
              this._addObject(LocalTime.of(hodVal, mohVal));
            }
          }
        } else {
          if (som == null && nos == null) {
            this._addObject(LocalTime.of(hodVal, 0));
          }
        }
      }
    } else {
      if (hod != null) {
        var _hodVal = hod;
        if (moh != null) {
          if (som != null) {
            if (nos == null) {
              nos = 0;
            }
            var totalNanos = MathUtil.safeMultiply(_hodVal, 3600000000000);
            totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(moh, 60000000000));
            totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(som, 1000000000));
            totalNanos = MathUtil.safeAdd(totalNanos, nos);
            var excessDays = MathUtil.floorDiv(totalNanos, 86400000000000);
            var nod = MathUtil.floorMod(totalNanos, 86400000000000);
            this._addObject(LocalTime.ofNanoOfDay(nod));
            this.excessDays = Period.ofDays(excessDays);
          } else {
            var totalSecs = MathUtil.safeMultiply(_hodVal, 3600);
            totalSecs = MathUtil.safeAdd(totalSecs, MathUtil.safeMultiply(moh, 60));
            var _excessDays = MathUtil.floorDiv(totalSecs, 86400);
            var sod = MathUtil.floorMod(totalSecs, 86400);
            this._addObject(LocalTime.ofSecondOfDay(sod));
            this.excessDays = Period.ofDays(_excessDays);
          }
        } else {
          var _excessDays2 = MathUtil.safeToInt(MathUtil.floorDiv(_hodVal, 24));
          _hodVal = MathUtil.floorMod(_hodVal, 24);
          this._addObject(LocalTime.of(_hodVal, 0));
          this.excessDays = Period.ofDays(_excessDays2);
        }
      }
    }
    this.fieldValues.remove(ChronoField.HOUR_OF_DAY);
    this.fieldValues.remove(ChronoField.MINUTE_OF_HOUR);
    this.fieldValues.remove(ChronoField.SECOND_OF_MINUTE);
    this.fieldValues.remove(ChronoField.NANO_OF_SECOND);
  };
  _proto._addObject = function _addObject(dateOrTime) {
    if (dateOrTime instanceof ChronoLocalDate) {
      this.date = dateOrTime;
    } else if (dateOrTime instanceof LocalTime) {
      this.time = dateOrTime;
    }
  };
  _proto._resolveInstant = function _resolveInstant() {
    if (this.date != null && this.time != null) {
      var offsetSecs = this.fieldValues.get(ChronoField.OFFSET_SECONDS);
      if (offsetSecs != null) {
        var offset = ZoneOffset.ofTotalSeconds(offsetSecs);
        var instant = this.date.atTime(this.time).atZone(offset).getLong(ChronoField.INSTANT_SECONDS);
        this.fieldValues.put(ChronoField.INSTANT_SECONDS, instant);
      } else if (this.zone != null) {
        var _instant = this.date.atTime(this.time).atZone(this.zone).getLong(ChronoField.INSTANT_SECONDS);
        this.fieldValues.put(ChronoField.INSTANT_SECONDS, _instant);
      }
    }
  };
  _proto.build = function build(type) {
    return type.queryFrom(this);
  };
  _proto.isSupported = function isSupported(field) {
    if (field == null) {
      return false;
    }
    return this.fieldValues.containsKey(field) && this.fieldValues.get(field) !== undefined || this.date != null && this.date.isSupported(field) || this.time != null && this.time.isSupported(field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    var value = this.getFieldValue0(field);
    if (value == null) {
      if (this.date != null && this.date.isSupported(field)) {
        return this.date.getLong(field);
      }
      if (this.time != null && this.time.isSupported(field)) {
        return this.time.getLong(field);
      }
      throw new DateTimeException("Field not found: " + field);
    }
    return value;
  };
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.zoneId()) {
      return this.zone;
    } else if (_query === TemporalQueries.chronology()) {
      return this.chrono;
    } else if (_query === TemporalQueries.localDate()) {
      return this.date != null ? LocalDate.from(this.date) : null;
    } else if (_query === TemporalQueries.localTime()) {
      return this.time;
    } else if (_query === TemporalQueries.zone() || _query === TemporalQueries.offset()) {
      return _query.queryFrom(this);
    } else if (_query === TemporalQueries.precision()) {
      return null;
    }
    return _query.queryFrom(this);
  };
  return DateTimeBuilder;
}(TemporalAccessor);

var DateTimeParseContext = function () {
  function DateTimeParseContext() {
    if (arguments.length === 1) {
      if (arguments[0] instanceof DateTimeParseContext) {
        this._constructorSelf.apply(this, arguments);
        return;
      } else {
        this._constructorFormatter.apply(this, arguments);
      }
    } else {
      this._constructorParam.apply(this, arguments);
    }
    this._caseSensitive = true;
    this._strict = true;
    this._parsed = [new Parsed(this)];
  }
  var _proto = DateTimeParseContext.prototype;
  _proto._constructorParam = function _constructorParam(locale, symbols, chronology) {
    this._locale = locale;
    this._symbols = symbols;
    this._overrideChronology = chronology;
  };
  _proto._constructorFormatter = function _constructorFormatter(formatter) {
    this._locale = formatter.locale();
    this._symbols = formatter.decimalStyle();
    this._overrideChronology = formatter.chronology();
  };
  _proto._constructorSelf = function _constructorSelf(other) {
    this._locale = other._locale;
    this._symbols = other._symbols;
    this._overrideChronology = other._overrideChronology;
    this._overrideZone = other._overrideZone;
    this._caseSensitive = other._caseSensitive;
    this._strict = other._strict;
    this._parsed = [new Parsed(this)];
  };
  _proto.copy = function copy() {
    return new DateTimeParseContext(this);
  };
  _proto.symbols = function symbols() {
    return this._symbols;
  };
  _proto.isStrict = function isStrict() {
    return this._strict;
  };
  _proto.setStrict = function setStrict(strict) {
    this._strict = strict;
  };
  _proto.locale = function locale() {
    return this._locale;
  };
  _proto.setLocale = function setLocale(locale) {
    this._locale = locale;
  };
  _proto.startOptional = function startOptional() {
    this._parsed.push(this.currentParsed().copy());
  };
  _proto.endOptional = function endOptional(successful) {
    if (successful) {
      this._parsed.splice(this._parsed.length - 2, 1);
    } else {
      this._parsed.splice(this._parsed.length - 1, 1);
    }
  };
  _proto.isCaseSensitive = function isCaseSensitive() {
    return this._caseSensitive;
  };
  _proto.setCaseSensitive = function setCaseSensitive(caseSensitive) {
    this._caseSensitive = caseSensitive;
  };
  _proto.subSequenceEquals = function subSequenceEquals(cs1, offset1, cs2, offset2, length) {
    if (offset1 + length > cs1.length || offset2 + length > cs2.length) {
      return false;
    }
    if (!this.isCaseSensitive()) {
      cs1 = cs1.toLowerCase();
      cs2 = cs2.toLowerCase();
    }
    for (var i = 0; i < length; i++) {
      var ch1 = cs1[offset1 + i];
      var ch2 = cs2[offset2 + i];
      if (ch1 !== ch2) {
        return false;
      }
    }
    return true;
  };
  _proto.charEquals = function charEquals(ch1, ch2) {
    if (this.isCaseSensitive()) {
      return ch1 === ch2;
    }
    return this.charEqualsIgnoreCase(ch1, ch2);
  };
  _proto.charEqualsIgnoreCase = function charEqualsIgnoreCase(c1, c2) {
    return c1 === c2 || c1.toLowerCase() === c2.toLowerCase();
  };
  _proto.setParsedField = function setParsedField(field, value, errorPos, successPos) {
    var currentParsedFieldValues = this.currentParsed().fieldValues;
    var old = currentParsedFieldValues.get(field);
    currentParsedFieldValues.set(field, value);
    return old != null && old !== value ? ~errorPos : successPos;
  };
  _proto.setParsedZone = function setParsedZone(zone) {
    requireNonNull(zone, 'zone');
    this.currentParsed().zone = zone;
  };
  _proto.getParsed = function getParsed(field) {
    return this.currentParsed().fieldValues.get(field);
  };
  _proto.toParsed = function toParsed() {
    return this.currentParsed();
  };
  _proto.currentParsed = function currentParsed() {
    return this._parsed[this._parsed.length - 1];
  };
  _proto.setParsedLeapSecond = function setParsedLeapSecond() {
    this.currentParsed().leapSecond = true;
  };
  _proto.getEffectiveChronology = function getEffectiveChronology() {
    var chrono = this.currentParsed().chrono;
    if (chrono == null) {
      chrono = this._overrideChronology;
      if (chrono == null) {
        chrono = IsoChronology.INSTANCE;
      }
    }
    return chrono;
  };
  return DateTimeParseContext;
}();
var Parsed = function (_Temporal) {
  _inheritsLoose(Parsed, _Temporal);
  function Parsed(dateTimeParseContext) {
    var _this;
    _this = _Temporal.call(this) || this;
    _this.chrono = null;
    _this.zone = null;
    _this.fieldValues = new EnumMap();
    _this.leapSecond = false;
    _this.dateTimeParseContext = dateTimeParseContext;
    return _this;
  }
  var _proto2 = Parsed.prototype;
  _proto2.copy = function copy() {
    var cloned = new Parsed();
    cloned.chrono = this.chrono;
    cloned.zone = this.zone;
    cloned.fieldValues.putAll(this.fieldValues);
    cloned.leapSecond = this.leapSecond;
    cloned.dateTimeParseContext = this.dateTimeParseContext;
    return cloned;
  };
  _proto2.toString = function toString() {
    return this.fieldValues + ", " + this.chrono + ", " + this.zone;
  };
  _proto2.isSupported = function isSupported(field) {
    return this.fieldValues.containsKey(field);
  };
  _proto2.get = function get(field) {
    var val = this.fieldValues.get(field);
    assert(val != null);
    return val;
  };
  _proto2.query = function query(_query) {
    if (_query === TemporalQueries.chronology()) {
      return this.chrono;
    }
    if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.zone()) {
      return this.zone;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto2.toBuilder = function toBuilder() {
    var builder = new DateTimeBuilder();
    builder.fieldValues.putAll(this.fieldValues);
    builder.chrono = this.dateTimeParseContext.getEffectiveChronology();
    if (this.zone != null) {
      builder.zone = this.zone;
    } else {
      builder.zone = this.overrideZone;
    }
    builder.leapSecond = this.leapSecond;
    builder.excessDays = this.excessDays;
    return builder;
  };
  return Parsed;
}(Temporal);

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var DateTimePrintContext = function () {
  function DateTimePrintContext(temporal, localeOrFormatter, symbols) {
    if (arguments.length === 2 && arguments[1] instanceof DateTimeFormatter) {
      this._temporal = DateTimePrintContext.adjust(temporal, localeOrFormatter);
      this._locale = localeOrFormatter.locale();
      this._symbols = localeOrFormatter.decimalStyle();
    } else {
      this._temporal = temporal;
      this._locale = localeOrFormatter;
      this._symbols = symbols;
    }
    this._optional = 0;
  }
  DateTimePrintContext.adjust = function adjust(temporal, formatter) {
    return temporal;
  };
  var _proto = DateTimePrintContext.prototype;
  _proto.symbols = function symbols() {
    return this._symbols;
  };
  _proto.startOptional = function startOptional() {
    this._optional++;
  };
  _proto.endOptional = function endOptional() {
    this._optional--;
  };
  _proto.getValueQuery = function getValueQuery(query) {
    var result = this._temporal.query(query);
    if (result == null && this._optional === 0) {
      throw new DateTimeException("Unable to extract value: " + this._temporal);
    }
    return result;
  };
  _proto.getValue = function getValue(field) {
    try {
      return this._temporal.getLong(field);
    } catch (ex) {
      if (ex instanceof DateTimeException && this._optional > 0) {
        return null;
      }
      throw ex;
    }
  };
  _proto.temporal = function temporal() {
    return this._temporal;
  };
  _proto.locale = function locale() {
    return this._locale;
  };
  _proto.setDateTime = function setDateTime(temporal) {
    this._temporal = temporal;
  };
  _proto.setLocale = function setLocale(locale) {
    this._locale = locale;
  };
  return DateTimePrintContext;
}();

var IsoFields = {};
var QUARTER_DAYS = [0, 90, 181, 273, 0, 91, 182, 274];
var Field = function (_TemporalField) {
  _inheritsLoose(Field, _TemporalField);
  function Field() {
    return _TemporalField.apply(this, arguments) || this;
  }
  var _proto = Field.prototype;
  _proto.isDateBased = function isDateBased() {
    return true;
  };
  _proto.isTimeBased = function isTimeBased() {
    return false;
  };
  _proto._isIso = function _isIso() {
    return true;
  };
  Field._getWeekRangeByLocalDate = function _getWeekRangeByLocalDate(date) {
    var wby = Field._getWeekBasedYear(date);
    return ValueRange.of(1, Field._getWeekRangeByYear(wby));
  };
  Field._getWeekRangeByYear = function _getWeekRangeByYear(wby) {
    var date = LocalDate.of(wby, 1, 1);
    if (date.dayOfWeek() === DayOfWeek.THURSDAY || date.dayOfWeek() === DayOfWeek.WEDNESDAY && date.isLeapYear()) {
      return 53;
    }
    return 52;
  };
  Field._getWeek = function _getWeek(date) {
    var dow0 = date.dayOfWeek().ordinal();
    var doy0 = date.dayOfYear() - 1;
    var doyThu0 = doy0 + (3 - dow0);
    var alignedWeek = MathUtil.intDiv(doyThu0, 7);
    var firstThuDoy0 = doyThu0 - alignedWeek * 7;
    var firstMonDoy0 = firstThuDoy0 - 3;
    if (firstMonDoy0 < -3) {
      firstMonDoy0 += 7;
    }
    if (doy0 < firstMonDoy0) {
      return Field._getWeekRangeByLocalDate(date.withDayOfYear(180).minusYears(1)).maximum();
    }
    var week = MathUtil.intDiv(doy0 - firstMonDoy0, 7) + 1;
    if (week === 53) {
      if ((firstMonDoy0 === -3 || firstMonDoy0 === -2 && date.isLeapYear()) === false) {
        week = 1;
      }
    }
    return week;
  };
  Field._getWeekBasedYear = function _getWeekBasedYear(date) {
    var year = date.year();
    var doy = date.dayOfYear();
    if (doy <= 3) {
      var dow = date.dayOfWeek().ordinal();
      if (doy - dow < -2) {
        year--;
      }
    } else if (doy >= 363) {
      var _dow = date.dayOfWeek().ordinal();
      doy = doy - 363 - (date.isLeapYear() ? 1 : 0);
      if (doy - _dow >= 0) {
        year++;
      }
    }
    return year;
  };
  _proto.displayName = function displayName() {
    return this.toString();
  };
  _proto.resolve = function resolve() {
    return null;
  };
  _proto.name = function name() {
    return this.toString();
  };
  return Field;
}(TemporalField);
var DAY_OF_QUARTER_FIELD = function (_Field) {
  _inheritsLoose(DAY_OF_QUARTER_FIELD, _Field);
  function DAY_OF_QUARTER_FIELD() {
    return _Field.apply(this, arguments) || this;
  }
  var _proto2 = DAY_OF_QUARTER_FIELD.prototype;
  _proto2.toString = function toString() {
    return 'DayOfQuarter';
  };
  _proto2.baseUnit = function baseUnit() {
    return ChronoUnit.DAYS;
  };
  _proto2.rangeUnit = function rangeUnit() {
    return QUARTER_YEARS;
  };
  _proto2.range = function range() {
    return ValueRange.of(1, 90, 92);
  };
  _proto2.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(ChronoField.DAY_OF_YEAR) && temporal.isSupported(ChronoField.MONTH_OF_YEAR) && temporal.isSupported(ChronoField.YEAR) && this._isIso(temporal);
  };
  _proto2.rangeRefinedBy = function rangeRefinedBy(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');
    }
    var qoy = temporal.getLong(QUARTER_OF_YEAR);
    if (qoy === 1) {
      var year = temporal.getLong(ChronoField.YEAR);
      return IsoChronology.isLeapYear(year) ? ValueRange.of(1, 91) : ValueRange.of(1, 90);
    } else if (qoy === 2) {
      return ValueRange.of(1, 91);
    } else if (qoy === 3 || qoy === 4) {
      return ValueRange.of(1, 92);
    }
    return this.range();
  };
  _proto2.getFrom = function getFrom(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');
    }
    var doy = temporal.get(ChronoField.DAY_OF_YEAR);
    var moy = temporal.get(ChronoField.MONTH_OF_YEAR);
    var year = temporal.getLong(ChronoField.YEAR);
    return doy - QUARTER_DAYS[MathUtil.intDiv(moy - 1, 3) + (IsoChronology.isLeapYear(year) ? 4 : 0)];
  };
  _proto2.adjustInto = function adjustInto(temporal, newValue) {
    var curValue = this.getFrom(temporal);
    this.range().checkValidValue(newValue, this);
    return temporal.with(ChronoField.DAY_OF_YEAR, temporal.getLong(ChronoField.DAY_OF_YEAR) + (newValue - curValue));
  };
  _proto2.resolve = function resolve(fieldValues, partialTemporal, resolverStyle) {
    var yearLong = fieldValues.get(ChronoField.YEAR);
    var qoyLong = fieldValues.get(QUARTER_OF_YEAR);
    if (yearLong == null || qoyLong == null) {
      return null;
    }
    var y = ChronoField.YEAR.checkValidIntValue(yearLong);
    var doq = fieldValues.get(DAY_OF_QUARTER);
    var date;
    if (resolverStyle === ResolverStyle.LENIENT) {
      var qoy = qoyLong;
      date = LocalDate.of(y, 1, 1);
      date = date.plusMonths(MathUtil.safeMultiply(MathUtil.safeSubtract(qoy, 1), 3));
      date = date.plusDays(MathUtil.safeSubtract(doq, 1));
    } else {
      var _qoy = QUARTER_OF_YEAR.range().checkValidIntValue(qoyLong, QUARTER_OF_YEAR);
      if (resolverStyle === ResolverStyle.STRICT) {
        var max = 92;
        if (_qoy === 1) {
          max = IsoChronology.isLeapYear(y) ? 91 : 90;
        } else if (_qoy === 2) {
          max = 91;
        }
        ValueRange.of(1, max).checkValidValue(doq, this);
      } else {
        this.range().checkValidValue(doq, this);
      }
      date = LocalDate.of(y, (_qoy - 1) * 3 + 1, 1).plusDays(doq - 1);
    }
    fieldValues.remove(this);
    fieldValues.remove(ChronoField.YEAR);
    fieldValues.remove(QUARTER_OF_YEAR);
    return date;
  };
  return DAY_OF_QUARTER_FIELD;
}(Field);
var QUARTER_OF_YEAR_FIELD = function (_Field2) {
  _inheritsLoose(QUARTER_OF_YEAR_FIELD, _Field2);
  function QUARTER_OF_YEAR_FIELD() {
    return _Field2.apply(this, arguments) || this;
  }
  var _proto3 = QUARTER_OF_YEAR_FIELD.prototype;
  _proto3.toString = function toString() {
    return 'QuarterOfYear';
  };
  _proto3.baseUnit = function baseUnit() {
    return QUARTER_YEARS;
  };
  _proto3.rangeUnit = function rangeUnit() {
    return ChronoUnit.YEARS;
  };
  _proto3.range = function range() {
    return ValueRange.of(1, 4);
  };
  _proto3.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(ChronoField.MONTH_OF_YEAR) && this._isIso(temporal);
  };
  _proto3.rangeRefinedBy = function rangeRefinedBy(temporal) {
    return this.range();
  };
  _proto3.getFrom = function getFrom(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: QuarterOfYear');
    }
    var moy = temporal.getLong(ChronoField.MONTH_OF_YEAR);
    return MathUtil.intDiv(moy + 2, 3);
  };
  _proto3.adjustInto = function adjustInto(temporal, newValue) {
    var curValue = this.getFrom(temporal);
    this.range().checkValidValue(newValue, this);
    return temporal.with(ChronoField.MONTH_OF_YEAR, temporal.getLong(ChronoField.MONTH_OF_YEAR) + (newValue - curValue) * 3);
  };
  return QUARTER_OF_YEAR_FIELD;
}(Field);
var WEEK_OF_WEEK_BASED_YEAR_FIELD = function (_Field3) {
  _inheritsLoose(WEEK_OF_WEEK_BASED_YEAR_FIELD, _Field3);
  function WEEK_OF_WEEK_BASED_YEAR_FIELD() {
    return _Field3.apply(this, arguments) || this;
  }
  var _proto4 = WEEK_OF_WEEK_BASED_YEAR_FIELD.prototype;
  _proto4.toString = function toString() {
    return 'WeekOfWeekBasedYear';
  };
  _proto4.baseUnit = function baseUnit() {
    return ChronoUnit.WEEKS;
  };
  _proto4.rangeUnit = function rangeUnit() {
    return WEEK_BASED_YEARS;
  };
  _proto4.range = function range() {
    return ValueRange.of(1, 52, 53);
  };
  _proto4.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);
  };
  _proto4.rangeRefinedBy = function rangeRefinedBy(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');
    }
    return Field._getWeekRangeByLocalDate(LocalDate.from(temporal));
  };
  _proto4.getFrom = function getFrom(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');
    }
    return Field._getWeek(LocalDate.from(temporal));
  };
  _proto4.adjustInto = function adjustInto(temporal, newValue) {
    this.range().checkValidValue(newValue, this);
    return temporal.plus(MathUtil.safeSubtract(newValue, this.getFrom(temporal)), ChronoUnit.WEEKS);
  };
  _proto4.resolve = function resolve(fieldValues, partialTemporal, resolverStyle) {
    var wbyLong = fieldValues.get(WEEK_BASED_YEAR);
    var dowLong = fieldValues.get(ChronoField.DAY_OF_WEEK);
    if (wbyLong == null || dowLong == null) {
      return null;
    }
    var wby = WEEK_BASED_YEAR.range().checkValidIntValue(wbyLong, WEEK_BASED_YEAR);
    var wowby = fieldValues.get(WEEK_OF_WEEK_BASED_YEAR);
    var date;
    if (resolverStyle === ResolverStyle.LENIENT) {
      var dow = dowLong;
      var weeks = 0;
      if (dow > 7) {
        weeks = MathUtil.intDiv(dow - 1, 7);
        dow = MathUtil.intMod(dow - 1, 7) + 1;
      } else if (dow < 1) {
        weeks = MathUtil.intDiv(dow, 7) - 1;
        dow = MathUtil.intMod(dow, 7) + 7;
      }
      date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).plusWeeks(weeks).with(ChronoField.DAY_OF_WEEK, dow);
    } else {
      var _dow2 = ChronoField.DAY_OF_WEEK.checkValidIntValue(dowLong);
      if (resolverStyle === ResolverStyle.STRICT) {
        var temp = LocalDate.of(wby, 1, 4);
        var range = Field._getWeekRangeByLocalDate(temp);
        range.checkValidValue(wowby, this);
      } else {
        this.range().checkValidValue(wowby, this);
      }
      date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).with(ChronoField.DAY_OF_WEEK, _dow2);
    }
    fieldValues.remove(this);
    fieldValues.remove(WEEK_BASED_YEAR);
    fieldValues.remove(ChronoField.DAY_OF_WEEK);
    return date;
  };
  _proto4.displayName = function displayName() {
    return 'Week';
  };
  return WEEK_OF_WEEK_BASED_YEAR_FIELD;
}(Field);
var WEEK_BASED_YEAR_FIELD = function (_Field4) {
  _inheritsLoose(WEEK_BASED_YEAR_FIELD, _Field4);
  function WEEK_BASED_YEAR_FIELD() {
    return _Field4.apply(this, arguments) || this;
  }
  var _proto5 = WEEK_BASED_YEAR_FIELD.prototype;
  _proto5.toString = function toString() {
    return 'WeekBasedYear';
  };
  _proto5.baseUnit = function baseUnit() {
    return WEEK_BASED_YEARS;
  };
  _proto5.rangeUnit = function rangeUnit() {
    return ChronoUnit.FOREVER;
  };
  _proto5.range = function range() {
    return ChronoField.YEAR.range();
  };
  _proto5.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);
  };
  _proto5.rangeRefinedBy = function rangeRefinedBy(temporal) {
    return ChronoField.YEAR.range();
  };
  _proto5.getFrom = function getFrom(temporal) {
    if (temporal.isSupported(this) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');
    }
    return Field._getWeekBasedYear(LocalDate.from(temporal));
  };
  _proto5.adjustInto = function adjustInto(temporal, newValue) {
    if (this.isSupportedBy(temporal) === false) {
      throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');
    }
    var newWby = this.range().checkValidIntValue(newValue, WEEK_BASED_YEAR);
    var date = LocalDate.from(temporal);
    var dow = date.get(ChronoField.DAY_OF_WEEK);
    var week = Field._getWeek(date);
    if (week === 53 && Field._getWeekRangeByYear(newWby) === 52) {
      week = 52;
    }
    var resolved = LocalDate.of(newWby, 1, 4);
    var days = dow - resolved.get(ChronoField.DAY_OF_WEEK) + (week - 1) * 7;
    resolved = resolved.plusDays(days);
    return temporal.with(resolved);
  };
  return WEEK_BASED_YEAR_FIELD;
}(Field);
var Unit = function (_TemporalUnit) {
  _inheritsLoose(Unit, _TemporalUnit);
  function Unit(name, estimatedDuration) {
    var _this;
    _this = _TemporalUnit.call(this) || this;
    _this._name = name;
    _this._duration = estimatedDuration;
    return _this;
  }
  var _proto6 = Unit.prototype;
  _proto6.duration = function duration() {
    return this._duration;
  };
  _proto6.isDurationEstimated = function isDurationEstimated() {
    return true;
  };
  _proto6.isDateBased = function isDateBased() {
    return true;
  };
  _proto6.isTimeBased = function isTimeBased() {
    return false;
  };
  _proto6.isSupportedBy = function isSupportedBy(temporal) {
    return temporal.isSupported(ChronoField.EPOCH_DAY);
  };
  _proto6.addTo = function addTo(temporal, periodToAdd) {
    switch (this) {
      case WEEK_BASED_YEARS:
        {
          var added = MathUtil.safeAdd(temporal.get(WEEK_BASED_YEAR), periodToAdd);
          return temporal.with(WEEK_BASED_YEAR, added);
        }
      case QUARTER_YEARS:
        return temporal.plus(MathUtil.intDiv(periodToAdd, 256), ChronoUnit.YEARS).plus(MathUtil.intMod(periodToAdd, 256) * 3, ChronoUnit.MONTHS);
      default:
        throw new IllegalStateException('Unreachable');
    }
  };
  _proto6.between = function between(temporal1, temporal2) {
    switch (this) {
      case WEEK_BASED_YEARS:
        return MathUtil.safeSubtract(temporal2.getLong(WEEK_BASED_YEAR), temporal1.getLong(WEEK_BASED_YEAR));
      case QUARTER_YEARS:
        return MathUtil.intDiv(temporal1.until(temporal2, ChronoUnit.MONTHS), 3);
      default:
        throw new IllegalStateException('Unreachable');
    }
  };
  _proto6.toString = function toString() {
    return this._name;
  };
  return Unit;
}(TemporalUnit);
var DAY_OF_QUARTER = null;
var QUARTER_OF_YEAR = null;
var WEEK_OF_WEEK_BASED_YEAR = null;
var WEEK_BASED_YEAR = null;
var WEEK_BASED_YEARS = null;
var QUARTER_YEARS = null;
function _init$f() {
  DAY_OF_QUARTER = new DAY_OF_QUARTER_FIELD();
  QUARTER_OF_YEAR = new QUARTER_OF_YEAR_FIELD();
  WEEK_OF_WEEK_BASED_YEAR = new WEEK_OF_WEEK_BASED_YEAR_FIELD();
  WEEK_BASED_YEAR = new WEEK_BASED_YEAR_FIELD();
  WEEK_BASED_YEARS = new Unit('WeekBasedYears', Duration.ofSeconds(31556952));
  QUARTER_YEARS = new Unit('QuarterYears', Duration.ofSeconds(31556952 / 4));
  IsoFields.DAY_OF_QUARTER = DAY_OF_QUARTER;
  IsoFields.QUARTER_OF_YEAR = QUARTER_OF_YEAR;
  IsoFields.WEEK_OF_WEEK_BASED_YEAR = WEEK_OF_WEEK_BASED_YEAR;
  IsoFields.WEEK_BASED_YEAR = WEEK_BASED_YEAR;
  IsoFields.WEEK_BASED_YEARS = WEEK_BASED_YEARS;
  IsoFields.QUARTER_YEARS = QUARTER_YEARS;
  LocalDate.prototype.isoWeekOfWeekyear = function () {
    return this.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);
  };
  LocalDate.prototype.isoWeekyear = function () {
    return this.get(IsoFields.WEEK_BASED_YEAR);
  };
}

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */

var DecimalStyle = function () {
  function DecimalStyle(zeroChar, positiveSignChar, negativeSignChar, decimalPointChar) {
    this._zeroDigit = zeroChar;
    this._zeroDigitCharCode = zeroChar.charCodeAt(0);
    this._positiveSign = positiveSignChar;
    this._negativeSign = negativeSignChar;
    this._decimalSeparator = decimalPointChar;
  }
  var _proto = DecimalStyle.prototype;
  _proto.positiveSign = function positiveSign() {
    return this._positiveSign;
  };
  _proto.withPositiveSign = function withPositiveSign(positiveSign) {
    if (positiveSign === this._positiveSign) {
      return this;
    }
    return new DecimalStyle(this._zeroDigit, positiveSign, this._negativeSign, this._decimalSeparator);
  };
  _proto.negativeSign = function negativeSign() {
    return this._negativeSign;
  };
  _proto.withNegativeSign = function withNegativeSign(negativeSign) {
    if (negativeSign === this._negativeSign) {
      return this;
    }
    return new DecimalStyle(this._zeroDigit, this._positiveSign, negativeSign, this._decimalSeparator);
  };
  _proto.zeroDigit = function zeroDigit() {
    return this._zeroDigit;
  };
  _proto.withZeroDigit = function withZeroDigit(zeroDigit) {
    if (zeroDigit === this._zeroDigit) {
      return this;
    }
    return new DecimalStyle(zeroDigit, this._positiveSign, this._negativeSign, this._decimalSeparator);
  };
  _proto.decimalSeparator = function decimalSeparator() {
    return this._decimalSeparator;
  };
  _proto.withDecimalSeparator = function withDecimalSeparator(decimalSeparator) {
    if (decimalSeparator === this._decimalSeparator) {
      return this;
    }
    return new DecimalStyle(this._zeroDigit, this._positiveSign, this._negativeSign, decimalSeparator);
  };
  _proto.convertToDigit = function convertToDigit(char) {
    var val = char.charCodeAt(0) - this._zeroDigitCharCode;
    return val >= 0 && val <= 9 ? val : -1;
  };
  _proto.convertNumberToI18N = function convertNumberToI18N(numericText) {
    if (this._zeroDigit === '0') {
      return numericText;
    }
    var diff = this._zeroDigitCharCode - '0'.charCodeAt(0);
    var convertedText = '';
    for (var i = 0; i < numericText.length; i++) {
      convertedText += String.fromCharCode(numericText.charCodeAt(i) + diff);
    }
    return convertedText;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof DecimalStyle) {
      return this._zeroDigit === other._zeroDigit && this._positiveSign === other._positiveSign && this._negativeSign === other._negativeSign && this._decimalSeparator === other._decimalSeparator;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._zeroDigit + this._positiveSign + this._negativeSign + this._decimalSeparator;
  };
  _proto.toString = function toString() {
    return "DecimalStyle[" + this._zeroDigit + this._positiveSign + this._negativeSign + this._decimalSeparator + "]";
  };
  DecimalStyle.of = function of() {
    throw new Error('not yet supported');
  };
  DecimalStyle.availableLocales = function availableLocales() {
    throw new Error('not yet supported');
  };
  return DecimalStyle;
}();
DecimalStyle.STANDARD = new DecimalStyle('0', '+', '-', '.');

var SignStyle = function (_Enum) {
  _inheritsLoose(SignStyle, _Enum);
  function SignStyle() {
    return _Enum.apply(this, arguments) || this;
  }
  var _proto = SignStyle.prototype;
  _proto.parse = function parse(positive, strict, fixedWidth) {
    switch (this) {
      case SignStyle.NORMAL:
        return !positive || !strict;
      case SignStyle.ALWAYS:
      case SignStyle.EXCEEDS_PAD:
        return true;
      default:
        return !strict && !fixedWidth;
    }
  };
  return SignStyle;
}(Enum);
SignStyle.NORMAL = new SignStyle('NORMAL');
SignStyle.NEVER = new SignStyle('NEVER');
SignStyle.ALWAYS = new SignStyle('ALWAYS');
SignStyle.EXCEEDS_PAD = new SignStyle('EXCEEDS_PAD');
SignStyle.NOT_NEGATIVE = new SignStyle('NOT_NEGATIVE');

var TextStyle = function (_Enum) {
  _inheritsLoose(TextStyle, _Enum);
  function TextStyle() {
    return _Enum.apply(this, arguments) || this;
  }
  var _proto = TextStyle.prototype;
  _proto.isStandalone = function isStandalone() {
    switch (this) {
      case TextStyle.FULL_STANDALONE:
      case TextStyle.SHORT_STANDALONE:
      case TextStyle.NARROW_STANDALONE:
        return true;
      default:
        return false;
    }
  };
  _proto.asStandalone = function asStandalone() {
    switch (this) {
      case TextStyle.FULL:
        return TextStyle.FULL_STANDALONE;
      case TextStyle.SHORT:
        return TextStyle.SHORT_STANDALONE;
      case TextStyle.NARROW:
        return TextStyle.NARROW_STANDALONE;
      default:
        return this;
    }
  };
  _proto.asNormal = function asNormal() {
    switch (this) {
      case TextStyle.FULL_STANDALONE:
        return TextStyle.FULL;
      case TextStyle.SHORT_STANDALONE:
        return TextStyle.SHORT;
      case TextStyle.NARROW_STANDALONE:
        return TextStyle.NARROW;
      default:
        return this;
    }
  };
  return TextStyle;
}(Enum);
TextStyle.FULL = new TextStyle('FULL');
TextStyle.FULL_STANDALONE = new TextStyle('FULL_STANDALONE');
TextStyle.SHORT = new TextStyle('SHORT');
TextStyle.SHORT_STANDALONE = new TextStyle('SHORT_STANDALONE');
TextStyle.NARROW = new TextStyle('NARROW');
TextStyle.NARROW_STANDALONE = new TextStyle('NARROW_STANDALONE');

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var CharLiteralPrinterParser = function () {
  function CharLiteralPrinterParser(literal) {
    if (literal.length > 1) {
      throw new IllegalArgumentException("invalid literal, too long: \"" + literal + "\"");
    }
    this._literal = literal;
  }
  var _proto = CharLiteralPrinterParser.prototype;
  _proto.print = function print(context, buf) {
    buf.append(this._literal);
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var length = text.length;
    if (position === length) {
      return ~position;
    }
    var ch = text.charAt(position);
    if (context.charEquals(this._literal, ch) === false) {
      return ~position;
    }
    return position + this._literal.length;
  };
  _proto.toString = function toString() {
    if (this._literal === '\'') {
      return "''";
    }
    return "'" + this._literal + "'";
  };
  return CharLiteralPrinterParser;
}();

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var CompositePrinterParser = function () {
  function CompositePrinterParser(printerParsers, optional) {
    this._printerParsers = printerParsers;
    this._optional = optional;
  }
  var _proto = CompositePrinterParser.prototype;
  _proto.withOptional = function withOptional(optional) {
    if (optional === this._optional) {
      return this;
    }
    return new CompositePrinterParser(this._printerParsers, optional);
  };
  _proto.print = function print(context, buf) {
    var length = buf.length();
    if (this._optional) {
      context.startOptional();
    }
    try {
      for (var i = 0; i < this._printerParsers.length; i++) {
        var pp = this._printerParsers[i];
        if (pp.print(context, buf) === false) {
          buf.setLength(length);
          return true;
        }
      }
    } finally {
      if (this._optional) {
        context.endOptional();
      }
    }
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    if (this._optional) {
      context.startOptional();
      var pos = position;
      for (var i = 0; i < this._printerParsers.length; i++) {
        var pp = this._printerParsers[i];
        pos = pp.parse(context, text, pos);
        if (pos < 0) {
          context.endOptional(false);
          return position;
        }
      }
      context.endOptional(true);
      return pos;
    } else {
      for (var _i = 0; _i < this._printerParsers.length; _i++) {
        var _pp = this._printerParsers[_i];
        position = _pp.parse(context, text, position);
        if (position < 0) {
          break;
        }
      }
      return position;
    }
  };
  _proto.toString = function toString() {
    var buf = '';
    if (this._printerParsers != null) {
      buf += this._optional ? '[' : '(';
      for (var i = 0; i < this._printerParsers.length; i++) {
        var pp = this._printerParsers[i];
        buf += pp.toString();
      }
      buf += this._optional ? ']' : ')';
    }
    return buf;
  };
  return CompositePrinterParser;
}();

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var FractionPrinterParser = function () {
  function FractionPrinterParser(field, minWidth, maxWidth, decimalPoint) {
    requireNonNull(field, 'field');
    if (field.range().isFixed() === false) {
      throw new IllegalArgumentException("Field must have a fixed set of values: " + field);
    }
    if (minWidth < 0 || minWidth > 9) {
      throw new IllegalArgumentException("Minimum width must be from 0 to 9 inclusive but was " + minWidth);
    }
    if (maxWidth < 1 || maxWidth > 9) {
      throw new IllegalArgumentException("Maximum width must be from 1 to 9 inclusive but was " + maxWidth);
    }
    if (maxWidth < minWidth) {
      throw new IllegalArgumentException("Maximum width must exceed or equal the minimum width but " + maxWidth + " < " + minWidth);
    }
    this.field = field;
    this.minWidth = minWidth;
    this.maxWidth = maxWidth;
    this.decimalPoint = decimalPoint;
  }
  var _proto = FractionPrinterParser.prototype;
  _proto.print = function print(context, buf) {
    var value = context.getValue(this.field);
    if (value === null) {
      return false;
    }
    var symbols = context.symbols();
    if (value === 0) {
      if (this.minWidth > 0) {
        if (this.decimalPoint) {
          buf.append(symbols.decimalSeparator());
        }
        for (var i = 0; i < this.minWidth; i++) {
          buf.append(symbols.zeroDigit());
        }
      }
    } else {
      var fraction = this.convertToFraction(value, symbols.zeroDigit());
      var outputScale = Math.min(Math.max(fraction.length, this.minWidth), this.maxWidth);
      fraction = fraction.substr(0, outputScale);
      if (fraction * 1 > 0) {
        while (fraction.length > this.minWidth && fraction[fraction.length - 1] === '0') {
          fraction = fraction.substr(0, fraction.length - 1);
        }
      }
      var str = fraction;
      str = symbols.convertNumberToI18N(str);
      if (this.decimalPoint) {
        buf.append(symbols.decimalSeparator());
      }
      buf.append(str);
    }
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var effectiveMin = context.isStrict() ? this.minWidth : 0;
    var effectiveMax = context.isStrict() ? this.maxWidth : 9;
    var length = text.length;
    if (position === length) {
      return effectiveMin > 0 ? ~position : position;
    }
    if (this.decimalPoint) {
      if (text[position] !== context.symbols().decimalSeparator()) {
        return effectiveMin > 0 ? ~position : position;
      }
      position++;
    }
    var minEndPos = position + effectiveMin;
    if (minEndPos > length) {
      return ~position;
    }
    var maxEndPos = Math.min(position + effectiveMax, length);
    var total = 0;
    var pos = position;
    while (pos < maxEndPos) {
      var ch = text.charAt(pos++);
      var digit = context.symbols().convertToDigit(ch);
      if (digit < 0) {
        if (pos < minEndPos) {
          return ~position;
        }
        pos--;
        break;
      }
      total = total * 10 + digit;
    }
    var moveLeft = pos - position;
    var scale = Math.pow(10, moveLeft);
    var value = this.convertFromFraction(total, scale);
    return context.setParsedField(this.field, value, position, pos);
  };
  _proto.convertToFraction = function convertToFraction(value, zeroDigit) {
    var range = this.field.range();
    range.checkValidValue(value, this.field);
    var _min = range.minimum();
    var _range = range.maximum() - _min + 1;
    var _value = value - _min;
    var _scaled = MathUtil.intDiv(_value * 1000000000, _range);
    var fraction = "" + _scaled;
    while (fraction.length < 9) {
      fraction = zeroDigit + fraction;
    }
    return fraction;
  };
  _proto.convertFromFraction = function convertFromFraction(total, scale) {
    var range = this.field.range();
    var _min = range.minimum();
    var _range = range.maximum() - _min + 1;
    var _value = MathUtil.intDiv(total * _range, scale);
    return _value;
  };
  _proto.toString = function toString() {
    var decimal = this.decimalPoint ? ',DecimalPoint' : '';
    return "Fraction(" + this.field + "," + this.minWidth + "," + this.maxWidth + decimal + ")";
  };
  return FractionPrinterParser;
}();

var MAX_WIDTH$1 = 15;
var EXCEED_POINTS = [0, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000];
var NumberPrinterParser = function () {
  function NumberPrinterParser(field, minWidth, maxWidth, signStyle, subsequentWidth) {
    if (subsequentWidth === void 0) {
      subsequentWidth = 0;
    }
    this._field = field;
    this._minWidth = minWidth;
    this._maxWidth = maxWidth;
    this._signStyle = signStyle;
    this._subsequentWidth = subsequentWidth;
  }
  var _proto = NumberPrinterParser.prototype;
  _proto.field = function field() {
    return this._field;
  };
  _proto.minWidth = function minWidth() {
    return this._minWidth;
  };
  _proto.maxWidth = function maxWidth() {
    return this._maxWidth;
  };
  _proto.signStyle = function signStyle() {
    return this._signStyle;
  };
  _proto.withFixedWidth = function withFixedWidth() {
    if (this._subsequentWidth === -1) {
      return this;
    }
    return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, -1);
  };
  _proto.withSubsequentWidth = function withSubsequentWidth(subsequentWidth) {
    return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, this._subsequentWidth + subsequentWidth);
  };
  _proto._isFixedWidth = function _isFixedWidth() {
    return this._subsequentWidth === -1 || this._subsequentWidth > 0 && this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE;
  };
  _proto.print = function print(context, buf) {
    var contextValue = context.getValue(this._field);
    if (contextValue == null) {
      return false;
    }
    var value = this._getValue(context, contextValue);
    var symbols = context.symbols();
    var str = "" + Math.abs(value);
    if (str.length > this._maxWidth) {
      throw new DateTimeException("Field " + this._field + " cannot be printed as the value " + value + " exceeds the maximum print width of " + this._maxWidth);
    }
    str = symbols.convertNumberToI18N(str);
    if (value >= 0) {
      switch (this._signStyle) {
        case SignStyle.EXCEEDS_PAD:
          if (this._minWidth < MAX_WIDTH$1 && value >= EXCEED_POINTS[this._minWidth]) {
            buf.append(symbols.positiveSign());
          }
          break;
        case SignStyle.ALWAYS:
          buf.append(symbols.positiveSign());
          break;
      }
    } else {
      switch (this._signStyle) {
        case SignStyle.NORMAL:
        case SignStyle.EXCEEDS_PAD:
        case SignStyle.ALWAYS:
          buf.append(symbols.negativeSign());
          break;
        case SignStyle.NOT_NEGATIVE:
          throw new DateTimeException("Field " + this._field + " cannot be printed as the value " + value + " cannot be negative according to the SignStyle");
      }
    }
    for (var i = 0; i < this._minWidth - str.length; i++) {
      buf.append(symbols.zeroDigit());
    }
    buf.append(str);
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var length = text.length;
    if (position === length) {
      return ~position;
    }
    assert(position >= 0 && position < length);
    var sign = text.charAt(position);
    var negative = false;
    var positive = false;
    if (sign === context.symbols().positiveSign()) {
      if (this._signStyle.parse(true, context.isStrict(), this._minWidth === this._maxWidth) === false) {
        return ~position;
      }
      positive = true;
      position++;
    } else if (sign === context.symbols().negativeSign()) {
      if (this._signStyle.parse(false, context.isStrict(), this._minWidth === this._maxWidth) === false) {
        return ~position;
      }
      negative = true;
      position++;
    } else {
      if (this._signStyle === SignStyle.ALWAYS && context.isStrict()) {
        return ~position;
      }
    }
    var effMinWidth = context.isStrict() || this._isFixedWidth() ? this._minWidth : 1;
    var minEndPos = position + effMinWidth;
    if (minEndPos > length) {
      return ~position;
    }
    var effMaxWidth = (context.isStrict() || this._isFixedWidth() ? this._maxWidth : 9) + Math.max(this._subsequentWidth, 0);
    var total = 0;
    var pos = position;
    for (var pass = 0; pass < 2; pass++) {
      var maxEndPos = Math.min(pos + effMaxWidth, length);
      while (pos < maxEndPos) {
        var ch = text.charAt(pos++);
        var digit = context.symbols().convertToDigit(ch);
        if (digit < 0) {
          pos--;
          if (pos < minEndPos) {
            return ~position;
          }
          break;
        }
        if (pos - position > MAX_WIDTH$1) {
          throw new ArithmeticException('number text exceeds length');
        } else {
          total = total * 10 + digit;
        }
      }
      if (this._subsequentWidth > 0 && pass === 0) {
        var parseLen = pos - position;
        effMaxWidth = Math.max(effMinWidth, parseLen - this._subsequentWidth);
        pos = position;
        total = 0;
      } else {
        break;
      }
    }
    if (negative) {
      if (total === 0 && context.isStrict()) {
        return ~(position - 1);
      }
      if (total !== 0) {
        total = -total;
      }
    } else if (this._signStyle === SignStyle.EXCEEDS_PAD && context.isStrict()) {
      var _parseLen = pos - position;
      if (positive) {
        if (_parseLen <= this._minWidth) {
          return ~(position - 1);
        }
      } else {
        if (_parseLen > this._minWidth) {
          return ~position;
        }
      }
    }
    return this._setValue(context, total, position, pos);
  };
  _proto._getValue = function _getValue(context, value) {
    return value;
  };
  _proto._setValue = function _setValue(context, value, errorPos, successPos) {
    return context.setParsedField(this._field, value, errorPos, successPos);
  };
  _proto.toString = function toString() {
    if (this._minWidth === 1 && this._maxWidth === MAX_WIDTH$1 && this._signStyle === SignStyle.NORMAL) {
      return "Value(" + this._field + ")";
    }
    if (this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE) {
      return "Value(" + this._field + "," + this._minWidth + ")";
    }
    return "Value(" + this._field + "," + this._minWidth + "," + this._maxWidth + "," + this._signStyle + ")";
  };
  return NumberPrinterParser;
}();
var ReducedPrinterParser = function (_NumberPrinterParser) {
  _inheritsLoose(ReducedPrinterParser, _NumberPrinterParser);
  function ReducedPrinterParser(field, width, maxWidth, baseValue, baseDate) {
    var _this;
    _this = _NumberPrinterParser.call(this, field, width, maxWidth, SignStyle.NOT_NEGATIVE) || this;
    if (width < 1 || width > 10) {
      throw new IllegalArgumentException("The width must be from 1 to 10 inclusive but was " + width);
    }
    if (maxWidth < 1 || maxWidth > 10) {
      throw new IllegalArgumentException("The maxWidth must be from 1 to 10 inclusive but was " + maxWidth);
    }
    if (maxWidth < width) {
      throw new IllegalArgumentException('The maxWidth must be greater than the width');
    }
    if (baseDate === null) {
      if (field.range().isValidValue(baseValue) === false) {
        throw new IllegalArgumentException('The base value must be within the range of the field');
      }
      if (baseValue + EXCEED_POINTS[width] > MathUtil.MAX_SAFE_INTEGER) {
        throw new DateTimeException('Unable to add printer-parser as the range exceeds the capacity of an int');
      }
    }
    _this._baseValue = baseValue;
    _this._baseDate = baseDate;
    return _this;
  }
  var _proto2 = ReducedPrinterParser.prototype;
  _proto2._getValue = function _getValue(context, value) {
    var absValue = Math.abs(value);
    var baseValue = this._baseValue;
    if (this._baseDate !== null) {
      context.temporal();
      var chrono = IsoChronology.INSTANCE;
      baseValue = chrono.date(this._baseDate).get(this._field);
    }
    if (value >= baseValue && value < baseValue + EXCEED_POINTS[this._minWidth]) {
      return absValue % EXCEED_POINTS[this._minWidth];
    }
    return absValue % EXCEED_POINTS[this._maxWidth];
  };
  _proto2._setValue = function _setValue(context, value, errorPos, successPos) {
    var baseValue = this._baseValue;
    if (this._baseDate != null) {
      var chrono = context.getEffectiveChronology();
      baseValue = chrono.date(this._baseDate).get(this._field);
    }
    var parseLen = successPos - errorPos;
    if (parseLen === this._minWidth && value >= 0) {
      var range = EXCEED_POINTS[this._minWidth];
      var lastPart = baseValue % range;
      var basePart = baseValue - lastPart;
      if (baseValue > 0) {
        value = basePart + value;
      } else {
        value = basePart - value;
      }
      if (value < baseValue) {
        value += range;
      }
    }
    return context.setParsedField(this._field, value, errorPos, successPos);
  };
  _proto2.withFixedWidth = function withFixedWidth() {
    if (this._subsequentWidth === -1) {
      return this;
    }
    return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate);
  };
  _proto2.withSubsequentWidth = function withSubsequentWidth(subsequentWidth) {
    return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate, this._subsequentWidth + subsequentWidth);
  };
  _proto2.isFixedWidth = function isFixedWidth(context) {
    if (context.isStrict() === false) {
      return false;
    }
    return _NumberPrinterParser.prototype.isFixedWidth.call(this, context);
  };
  _proto2.toString = function toString() {
    return "ReducedValue(" + this._field + "," + this._minWidth + "," + this._maxWidth + "," + (this._baseDate != null ? this._baseDate : this._baseValue) + ")";
  };
  return ReducedPrinterParser;
}(NumberPrinterParser);

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var PATTERNS = ['+HH', '+HHmm', '+HH:mm', '+HHMM', '+HH:MM', '+HHMMss', '+HH:MM:ss', '+HHMMSS', '+HH:MM:SS'];
var OffsetIdPrinterParser = function () {
  function OffsetIdPrinterParser(noOffsetText, pattern) {
    requireNonNull(noOffsetText, 'noOffsetText');
    requireNonNull(pattern, 'pattern');
    this.noOffsetText = noOffsetText;
    this.type = this._checkPattern(pattern);
  }
  var _proto = OffsetIdPrinterParser.prototype;
  _proto._checkPattern = function _checkPattern(pattern) {
    for (var i = 0; i < PATTERNS.length; i++) {
      if (PATTERNS[i] === pattern) {
        return i;
      }
    }
    throw new IllegalArgumentException("Invalid zone offset pattern: " + pattern);
  };
  _proto.print = function print(context, buf) {
    var offsetSecs = context.getValue(ChronoField.OFFSET_SECONDS);
    if (offsetSecs == null) {
      return false;
    }
    var totalSecs = MathUtil.safeToInt(offsetSecs);
    if (totalSecs === 0) {
      buf.append(this.noOffsetText);
    } else {
      var absHours = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 3600), 100));
      var absMinutes = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 60), 60));
      var absSeconds = Math.abs(MathUtil.intMod(totalSecs, 60));
      var bufPos = buf.length();
      var output = absHours;
      buf.append(totalSecs < 0 ? '-' : '+').appendChar(MathUtil.intDiv(absHours, 10) + "0").appendChar(MathUtil.intMod(absHours, 10) + "0");
      if (this.type >= 3 || this.type >= 1 && absMinutes > 0) {
        buf.append(this.type % 2 === 0 ? ':' : '').appendChar(MathUtil.intDiv(absMinutes, 10) + "0").appendChar(absMinutes % 10 + "0");
        output += absMinutes;
        if (this.type >= 7 || this.type >= 5 && absSeconds > 0) {
          buf.append(this.type % 2 === 0 ? ':' : '').appendChar(MathUtil.intDiv(absSeconds, 10) + "0").appendChar(absSeconds % 10 + "0");
          output += absSeconds;
        }
      }
      if (output === 0) {
        buf.setLength(bufPos);
        buf.append(this.noOffsetText);
      }
    }
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var length = text.length;
    var noOffsetLen = this.noOffsetText.length;
    if (noOffsetLen === 0) {
      if (position === length) {
        return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position);
      }
    } else {
      if (position === length) {
        return ~position;
      }
      if (context.subSequenceEquals(text, position, this.noOffsetText, 0, noOffsetLen)) {
        return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);
      }
    }
    var sign = text[position];
    if (sign === '+' || sign === '-') {
      var negative = sign === '-' ? -1 : 1;
      var array = [0, 0, 0, 0];
      array[0] = position + 1;
      if ((this._parseNumber(array, 1, text, true) || this._parseNumber(array, 2, text, this.type >= 3) || this._parseNumber(array, 3, text, false)) === false) {
        var offsetSecs = MathUtil.safeZero(negative * (array[1] * 3600 + array[2] * 60 + array[3]));
        return context.setParsedField(ChronoField.OFFSET_SECONDS, offsetSecs, position, array[0]);
      }
    }
    if (noOffsetLen === 0) {
      return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);
    }
    return ~position;
  };
  _proto._parseNumber = function _parseNumber(array, arrayIndex, parseText, required) {
    if ((this.type + 3) / 2 < arrayIndex) {
      return false;
    }
    var pos = array[0];
    if (this.type % 2 === 0 && arrayIndex > 1) {
      if (pos + 1 > parseText.length || parseText[pos] !== ':') {
        return required;
      }
      pos++;
    }
    if (pos + 2 > parseText.length) {
      return required;
    }
    var ch1 = parseText[pos++];
    var ch2 = parseText[pos++];
    if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {
      return required;
    }
    var value = (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);
    if (value < 0 || value > 59) {
      return required;
    }
    array[arrayIndex] = value;
    array[0] = pos;
    return false;
  };
  _proto.toString = function toString() {
    var converted = this.noOffsetText.replace('\'', '\'\'');
    return "Offset(" + PATTERNS[this.type] + ",'" + converted + "')";
  };
  return OffsetIdPrinterParser;
}();
OffsetIdPrinterParser.INSTANCE_ID = new OffsetIdPrinterParser('Z', '+HH:MM:ss');
OffsetIdPrinterParser.PATTERNS = PATTERNS;

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var PadPrinterParserDecorator = function () {
  function PadPrinterParserDecorator(printerParser, padWidth, padChar) {
    this._printerParser = printerParser;
    this._padWidth = padWidth;
    this._padChar = padChar;
  }
  var _proto = PadPrinterParserDecorator.prototype;
  _proto.print = function print(context, buf) {
    var preLen = buf.length();
    if (this._printerParser.print(context, buf) === false) {
      return false;
    }
    var len = buf.length() - preLen;
    if (len > this._padWidth) {
      throw new DateTimeException("Cannot print as output of " + len + " characters exceeds pad width of " + this._padWidth);
    }
    for (var i = 0; i < this._padWidth - len; i++) {
      buf.insert(preLen, this._padChar);
    }
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var strict = context.isStrict();
    var caseSensitive = context.isCaseSensitive();
    assert(!(position > text.length));
    assert(position >= 0);
    if (position === text.length) {
      return ~position;
    }
    var endPos = position + this._padWidth;
    if (endPos > text.length) {
      if (strict) {
        return ~position;
      }
      endPos = text.length;
    }
    var pos = position;
    while (pos < endPos && (caseSensitive ? text[pos] === this._padChar : context.charEquals(text[pos], this._padChar))) {
      pos++;
    }
    text = text.substring(0, endPos);
    var resultPos = this._printerParser.parse(context, text, pos);
    if (resultPos !== endPos && strict) {
      return ~(position + pos);
    }
    return resultPos;
  };
  _proto.toString = function toString() {
    return "Pad(" + this._printerParser + "," + this._padWidth + (this._padChar === ' ' ? ')' : ",'" + this._padChar + "')");
  };
  return PadPrinterParserDecorator;
}();

var SettingsParser = function (_Enum) {
  _inheritsLoose(SettingsParser, _Enum);
  function SettingsParser() {
    return _Enum.apply(this, arguments) || this;
  }
  var _proto = SettingsParser.prototype;
  _proto.print = function print() {
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    switch (this) {
      case SettingsParser.SENSITIVE:
        context.setCaseSensitive(true);
        break;
      case SettingsParser.INSENSITIVE:
        context.setCaseSensitive(false);
        break;
      case SettingsParser.STRICT:
        context.setStrict(true);
        break;
      case SettingsParser.LENIENT:
        context.setStrict(false);
        break;
    }
    return position;
  };
  _proto.toString = function toString() {
    switch (this) {
      case SettingsParser.SENSITIVE:
        return 'ParseCaseSensitive(true)';
      case SettingsParser.INSENSITIVE:
        return 'ParseCaseSensitive(false)';
      case SettingsParser.STRICT:
        return 'ParseStrict(true)';
      case SettingsParser.LENIENT:
        return 'ParseStrict(false)';
    }
  };
  return SettingsParser;
}(Enum);
SettingsParser.SENSITIVE = new SettingsParser('SENSITIVE');
SettingsParser.INSENSITIVE = new SettingsParser('INSENSITIVE');
SettingsParser.STRICT = new SettingsParser('STRICT');
SettingsParser.LENIENT = new SettingsParser('LENIENT');

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var StringLiteralPrinterParser = function () {
  function StringLiteralPrinterParser(literal) {
    this._literal = literal;
  }
  var _proto = StringLiteralPrinterParser.prototype;
  _proto.print = function print(context, buf) {
    buf.append(this._literal);
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var length = text.length;
    assert(!(position > length || position < 0));
    if (context.subSequenceEquals(text, position, this._literal, 0, this._literal.length) === false) {
      return ~position;
    }
    return position + this._literal.length;
  };
  _proto.toString = function toString() {
    var converted = this._literal.replace("'", "''");
    return "'" + converted + "'";
  };
  return StringLiteralPrinterParser;
}();

/*
 * @copyright (c) 2016, Philipp Thürwächter, Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ZoneRulesProvider = function () {
  function ZoneRulesProvider() {}
  ZoneRulesProvider.getRules = function getRules(zoneId) {
    throw new DateTimeException("unsupported ZoneId:" + zoneId);
  };
  ZoneRulesProvider.getAvailableZoneIds = function getAvailableZoneIds() {
    return [];
  };
  return ZoneRulesProvider;
}();

var ZoneRegion = function (_ZoneId) {
  _inheritsLoose(ZoneRegion, _ZoneId);
  ZoneRegion.ofId = function ofId(zoneId) {
    var rules = ZoneRulesProvider.getRules(zoneId);
    return new ZoneRegion(zoneId, rules);
  };
  function ZoneRegion(id, rules) {
    var _this;
    _this = _ZoneId.call(this) || this;
    _this._id = id;
    _this._rules = rules;
    return _this;
  }
  var _proto = ZoneRegion.prototype;
  _proto.id = function id() {
    return this._id;
  };
  _proto.rules = function rules() {
    return this._rules;
  };
  return ZoneRegion;
}(ZoneId);

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ZoneIdPrinterParser = function () {
  function ZoneIdPrinterParser(query, description) {
    this.query = query;
    this.description = description;
  }
  var _proto = ZoneIdPrinterParser.prototype;
  _proto.print = function print(context, buf) {
    var zone = context.getValueQuery(this.query);
    if (zone == null) {
      return false;
    }
    buf.append(zone.id());
    return true;
  };
  _proto.parse = function parse(context, text, position) {
    var length = text.length;
    if (position > length) {
      return ~position;
    }
    if (position === length) {
      return ~position;
    }
    var nextChar = text.charAt(position);
    if (nextChar === '+' || nextChar === '-') {
      var newContext = context.copy();
      var endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);
      if (endPos < 0) {
        return endPos;
      }
      var offset = newContext.getParsed(ChronoField.OFFSET_SECONDS);
      var zone = ZoneOffset.ofTotalSeconds(offset);
      context.setParsedZone(zone);
      return endPos;
    } else if (length >= position + 2) {
      var nextNextChar = text.charAt(position + 1);
      if (context.charEquals(nextChar, 'U') && context.charEquals(nextNextChar, 'T')) {
        if (length >= position + 3 && context.charEquals(text.charAt(position + 2), 'C')) {
          return this._parsePrefixedOffset(context, text, position, position + 3);
        }
        return this._parsePrefixedOffset(context, text, position, position + 2);
      } else if (context.charEquals(nextChar, 'G') && length >= position + 3 && context.charEquals(nextNextChar, 'M') && context.charEquals(text.charAt(position + 2), 'T')) {
        return this._parsePrefixedOffset(context, text, position, position + 3);
      }
    }
    if (text.substr(position, 6) === 'SYSTEM') {
      context.setParsedZone(ZoneId.systemDefault());
      return position + 6;
    }
    if (context.charEquals(nextChar, 'Z')) {
      context.setParsedZone(ZoneOffset.UTC);
      return position + 1;
    }
    var availableZoneIds = ZoneRulesProvider.getAvailableZoneIds();
    if (zoneIdTree.size !== availableZoneIds.length) {
      zoneIdTree = ZoneIdTree.createTreeMap(availableZoneIds);
    }
    var maxParseLength = length - position;
    var treeMap = zoneIdTree.treeMap;
    var parsedZoneId = null;
    var parseLength = 0;
    while (treeMap != null) {
      var parsedSubZoneId = text.substr(position, Math.min(treeMap.length, maxParseLength));
      treeMap = treeMap.get(parsedSubZoneId);
      if (treeMap != null && treeMap.isLeaf) {
        parsedZoneId = parsedSubZoneId;
        parseLength = treeMap.length;
      }
    }
    if (parsedZoneId != null) {
      context.setParsedZone(ZoneRegion.ofId(parsedZoneId));
      return position + parseLength;
    }
    return ~position;
  };
  _proto._parsePrefixedOffset = function _parsePrefixedOffset(context, text, prefixPos, position) {
    var prefix = text.substring(prefixPos, position).toUpperCase();
    var newContext = context.copy();
    if (position < text.length && context.charEquals(text.charAt(position), 'Z')) {
      context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));
      return position;
    }
    var endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);
    if (endPos < 0) {
      context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));
      return position;
    }
    var offsetSecs = newContext.getParsed(ChronoField.OFFSET_SECONDS);
    var offset = ZoneOffset.ofTotalSeconds(offsetSecs);
    context.setParsedZone(ZoneId.ofOffset(prefix, offset));
    return endPos;
  };
  _proto.toString = function toString() {
    return this.description;
  };
  return ZoneIdPrinterParser;
}();
var ZoneIdTree = function () {
  ZoneIdTree.createTreeMap = function createTreeMap(availableZoneIds) {
    var sortedZoneIds = availableZoneIds.sort(function (a, b) {
      return a.length - b.length;
    });
    var treeMap = new ZoneIdTreeMap(sortedZoneIds[0].length, false);
    for (var i = 0; i < sortedZoneIds.length; i++) {
      treeMap.add(sortedZoneIds[i]);
    }
    return new ZoneIdTree(sortedZoneIds.length, treeMap);
  };
  function ZoneIdTree(size, treeMap) {
    this.size = size;
    this.treeMap = treeMap;
  }
  return ZoneIdTree;
}();
var ZoneIdTreeMap = function () {
  function ZoneIdTreeMap(length, isLeaf) {
    if (length === void 0) {
      length = 0;
    }
    if (isLeaf === void 0) {
      isLeaf = false;
    }
    this.length = length;
    this.isLeaf = isLeaf;
    this._treeMap = {};
  }
  var _proto2 = ZoneIdTreeMap.prototype;
  _proto2.add = function add(zoneId) {
    var idLength = zoneId.length;
    if (idLength === this.length) {
      this._treeMap[zoneId] = new ZoneIdTreeMap(idLength, true);
    } else if (idLength > this.length) {
      var subZoneId = zoneId.substr(0, this.length);
      var subTreeMap = this._treeMap[subZoneId];
      if (subTreeMap == null) {
        subTreeMap = new ZoneIdTreeMap(idLength, false);
        this._treeMap[subZoneId] = subTreeMap;
      }
      subTreeMap.add(zoneId);
    }
  };
  _proto2.get = function get(zoneId) {
    return this._treeMap[zoneId];
  };
  return ZoneIdTreeMap;
}();
var zoneIdTree = new ZoneIdTree([]);

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var MAX_WIDTH = 15;
var DateTimeFormatterBuilder = function () {
  function DateTimeFormatterBuilder() {
    this._active = this;
    this._parent = null;
    this._printerParsers = [];
    this._optional = false;
    this._padNextWidth = 0;
    this._padNextChar = null;
    this._valueParserIndex = -1;
  }
  DateTimeFormatterBuilder._of = function _of(parent, optional) {
    requireNonNull(parent, 'parent');
    requireNonNull(optional, 'optional');
    var dtFormatterBuilder = new DateTimeFormatterBuilder();
    dtFormatterBuilder._parent = parent;
    dtFormatterBuilder._optional = optional;
    return dtFormatterBuilder;
  };
  var _proto = DateTimeFormatterBuilder.prototype;
  _proto.parseCaseSensitive = function parseCaseSensitive() {
    this._appendInternalPrinterParser(SettingsParser.SENSITIVE);
    return this;
  };
  _proto.parseCaseInsensitive = function parseCaseInsensitive() {
    this._appendInternalPrinterParser(SettingsParser.INSENSITIVE);
    return this;
  };
  _proto.parseStrict = function parseStrict() {
    this._appendInternalPrinterParser(SettingsParser.STRICT);
    return this;
  };
  _proto.parseLenient = function parseLenient() {
    this._appendInternalPrinterParser(SettingsParser.LENIENT);
    return this;
  };
  _proto.parseDefaulting = function parseDefaulting(field, value) {
    requireNonNull(field);
    this._appendInternal(new DefaultingParser(field, value));
    return this;
  };
  _proto.appendValue = function appendValue() {
    if (arguments.length === 1) {
      return this._appendValue1.apply(this, arguments);
    } else if (arguments.length === 2) {
      return this._appendValue2.apply(this, arguments);
    } else {
      return this._appendValue4.apply(this, arguments);
    }
  };
  _proto._appendValue1 = function _appendValue1(field) {
    requireNonNull(field);
    this._appendValuePrinterParser(new NumberPrinterParser(field, 1, MAX_WIDTH, SignStyle.NORMAL));
    return this;
  };
  _proto._appendValue2 = function _appendValue2(field, width) {
    requireNonNull(field);
    if (width < 1 || width > MAX_WIDTH) {
      throw new IllegalArgumentException("The width must be from 1 to " + MAX_WIDTH + " inclusive but was " + width);
    }
    var pp = new NumberPrinterParser(field, width, width, SignStyle.NOT_NEGATIVE);
    this._appendValuePrinterParser(pp);
    return this;
  };
  _proto._appendValue4 = function _appendValue4(field, minWidth, maxWidth, signStyle) {
    requireNonNull(field);
    requireNonNull(signStyle);
    if (minWidth === maxWidth && signStyle === SignStyle.NOT_NEGATIVE) {
      return this._appendValue2(field, maxWidth);
    }
    if (minWidth < 1 || minWidth > MAX_WIDTH) {
      throw new IllegalArgumentException("The minimum width must be from 1 to " + MAX_WIDTH + " inclusive but was " + minWidth);
    }
    if (maxWidth < 1 || maxWidth > MAX_WIDTH) {
      throw new IllegalArgumentException("The minimum width must be from 1 to " + MAX_WIDTH + " inclusive but was " + maxWidth);
    }
    if (maxWidth < minWidth) {
      throw new IllegalArgumentException("The maximum width must exceed or equal the minimum width but " + maxWidth + " < " + minWidth);
    }
    var pp = new NumberPrinterParser(field, minWidth, maxWidth, signStyle);
    this._appendValuePrinterParser(pp);
    return this;
  };
  _proto.appendValueReduced = function appendValueReduced() {
    if (arguments.length === 4 && arguments[3] instanceof ChronoLocalDate) {
      return this._appendValueReducedFieldWidthMaxWidthBaseDate.apply(this, arguments);
    } else {
      return this._appendValueReducedFieldWidthMaxWidthBaseValue.apply(this, arguments);
    }
  };
  _proto._appendValueReducedFieldWidthMaxWidthBaseValue = function _appendValueReducedFieldWidthMaxWidthBaseValue(field, width, maxWidth, baseValue) {
    requireNonNull(field, 'field');
    var pp = new ReducedPrinterParser(field, width, maxWidth, baseValue, null);
    this._appendValuePrinterParser(pp);
    return this;
  };
  _proto._appendValueReducedFieldWidthMaxWidthBaseDate = function _appendValueReducedFieldWidthMaxWidthBaseDate(field, width, maxWidth, baseDate) {
    requireNonNull(field, 'field');
    requireNonNull(baseDate, 'baseDate');
    requireInstance(baseDate, ChronoLocalDate, 'baseDate');
    var pp = new ReducedPrinterParser(field, width, maxWidth, 0, baseDate);
    this._appendValuePrinterParser(pp);
    return this;
  };
  _proto._appendValuePrinterParser = function _appendValuePrinterParser(pp) {
    assert(pp != null);
    if (this._active._valueParserIndex >= 0 && this._active._printerParsers[this._active._valueParserIndex] instanceof NumberPrinterParser) {
      var activeValueParser = this._active._valueParserIndex;
      var basePP = this._active._printerParsers[activeValueParser];
      if (pp.minWidth() === pp.maxWidth() && pp.signStyle() === SignStyle.NOT_NEGATIVE) {
        basePP = basePP.withSubsequentWidth(pp.maxWidth());
        this._appendInternal(pp.withFixedWidth());
        this._active._valueParserIndex = activeValueParser;
      } else {
        basePP = basePP.withFixedWidth();
        this._active._valueParserIndex = this._appendInternal(pp);
      }
      this._active._printerParsers[activeValueParser] = basePP;
    } else {
      this._active._valueParserIndex = this._appendInternal(pp);
    }
    return this;
  };
  _proto.appendFraction = function appendFraction(field, minWidth, maxWidth, decimalPoint) {
    this._appendInternal(new FractionPrinterParser(field, minWidth, maxWidth, decimalPoint));
    return this;
  };
  _proto.appendInstant = function appendInstant(fractionalDigits) {
    if (fractionalDigits === void 0) {
      fractionalDigits = -2;
    }
    if (fractionalDigits < -2 || fractionalDigits > 9) {
      throw new IllegalArgumentException("Invalid fractional digits: " + fractionalDigits);
    }
    this._appendInternal(new InstantPrinterParser(fractionalDigits));
    return this;
  };
  _proto.appendOffsetId = function appendOffsetId() {
    this._appendInternal(OffsetIdPrinterParser.INSTANCE_ID);
    return this;
  };
  _proto.appendOffset = function appendOffset(pattern, noOffsetText) {
    this._appendInternalPrinterParser(new OffsetIdPrinterParser(noOffsetText, pattern));
    return this;
  };
  _proto.appendZoneId = function appendZoneId() {
    this._appendInternal(new ZoneIdPrinterParser(TemporalQueries.zoneId(), 'ZoneId()'));
    return this;
  };
  _proto.appendPattern = function appendPattern(pattern) {
    requireNonNull(pattern, 'pattern');
    this._parsePattern(pattern);
    return this;
  };
  _proto.appendZoneText = function appendZoneText() {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');
  };
  _proto.appendText = function appendText() {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');
  };
  _proto.appendLocalizedOffset = function appendLocalizedOffset() {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');
  };
  _proto.appendWeekField = function appendWeekField() {
    throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');
  };
  _proto._parsePattern = function _parsePattern(pattern) {
    var FIELD_MAP = {
      'G': ChronoField.ERA,
      'y': ChronoField.YEAR_OF_ERA,
      'u': ChronoField.YEAR,
      'Q': IsoFields.QUARTER_OF_YEAR,
      'q': IsoFields.QUARTER_OF_YEAR,
      'M': ChronoField.MONTH_OF_YEAR,
      'L': ChronoField.MONTH_OF_YEAR,
      'D': ChronoField.DAY_OF_YEAR,
      'd': ChronoField.DAY_OF_MONTH,
      'F': ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH,
      'E': ChronoField.DAY_OF_WEEK,
      'c': ChronoField.DAY_OF_WEEK,
      'e': ChronoField.DAY_OF_WEEK,
      'a': ChronoField.AMPM_OF_DAY,
      'H': ChronoField.HOUR_OF_DAY,
      'k': ChronoField.CLOCK_HOUR_OF_DAY,
      'K': ChronoField.HOUR_OF_AMPM,
      'h': ChronoField.CLOCK_HOUR_OF_AMPM,
      'm': ChronoField.MINUTE_OF_HOUR,
      's': ChronoField.SECOND_OF_MINUTE,
      'S': ChronoField.NANO_OF_SECOND,
      'A': ChronoField.MILLI_OF_DAY,
      'n': ChronoField.NANO_OF_SECOND,
      'N': ChronoField.NANO_OF_DAY
    };
    for (var pos = 0; pos < pattern.length; pos++) {
      var cur = pattern.charAt(pos);
      if (cur >= 'A' && cur <= 'Z' || cur >= 'a' && cur <= 'z') {
        var start = pos++;
        for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++);
        var count = pos - start;
        if (cur === 'p') {
          var pad = 0;
          if (pos < pattern.length) {
            cur = pattern.charAt(pos);
            if (cur >= 'A' && cur <= 'Z' || cur >= 'a' && cur <= 'z') {
              pad = count;
              start = pos++;
              for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++);
              count = pos - start;
            }
          }
          if (pad === 0) {
            throw new IllegalArgumentException("Pad letter 'p' must be followed by valid pad pattern: " + pattern);
          }
          this.padNext(pad);
        }
        var field = FIELD_MAP[cur];
        if (field != null) {
          this._parseField(cur, count, field);
        } else if (cur === 'z') {
          if (count > 4) {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          } else if (count === 4) {
            this.appendZoneText(TextStyle.FULL);
          } else {
            this.appendZoneText(TextStyle.SHORT);
          }
        } else if (cur === 'V') {
          if (count !== 2) {
            throw new IllegalArgumentException("Pattern letter count must be 2: " + cur);
          }
          this.appendZoneId();
        } else if (cur === 'Z') {
          if (count < 4) {
            this.appendOffset('+HHMM', '+0000');
          } else if (count === 4) {
            this.appendLocalizedOffset(TextStyle.FULL);
          } else if (count === 5) {
            this.appendOffset('+HH:MM:ss', 'Z');
          } else {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          }
        } else if (cur === 'O') {
          if (count === 1) {
            this.appendLocalizedOffset(TextStyle.SHORT);
          } else if (count === 4) {
            this.appendLocalizedOffset(TextStyle.FULL);
          } else {
            throw new IllegalArgumentException("Pattern letter count must be 1 or 4: " + cur);
          }
        } else if (cur === 'X') {
          if (count > 5) {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          }
          this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], 'Z');
        } else if (cur === 'x') {
          if (count > 5) {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          }
          var zero = count === 1 ? '+00' : count % 2 === 0 ? '+0000' : '+00:00';
          this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], zero);
        } else if (cur === 'W') {
          if (count > 1) {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          }
          this.appendWeekField('W', count);
        } else if (cur === 'w') {
          if (count > 2) {
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
          }
          this.appendWeekField('w', count);
        } else if (cur === 'Y') {
          this.appendWeekField('Y', count);
        } else {
          throw new IllegalArgumentException("Unknown pattern letter: " + cur);
        }
        pos--;
      } else if (cur === '\'') {
        var _start = pos++;
        for (; pos < pattern.length; pos++) {
          if (pattern.charAt(pos) === '\'') {
            if (pos + 1 < pattern.length && pattern.charAt(pos + 1) === '\'') {
              pos++;
            } else {
              break;
            }
          }
        }
        if (pos >= pattern.length) {
          throw new IllegalArgumentException("Pattern ends with an incomplete string literal: " + pattern);
        }
        var str = pattern.substring(_start + 1, pos);
        if (str.length === 0) {
          this.appendLiteral('\'');
        } else {
          this.appendLiteral(str.replace('\'\'', '\''));
        }
      } else if (cur === '[') {
        this.optionalStart();
      } else if (cur === ']') {
        if (this._active._parent === null) {
          throw new IllegalArgumentException('Pattern invalid as it contains ] without previous [');
        }
        this.optionalEnd();
      } else if (cur === '{' || cur === '}' || cur === '#') {
        throw new IllegalArgumentException("Pattern includes reserved character: '" + cur + "'");
      } else {
        this.appendLiteral(cur);
      }
    }
  };
  _proto._parseField = function _parseField(cur, count, field) {
    switch (cur) {
      case 'u':
      case 'y':
        if (count === 2) {
          this.appendValueReduced(field, 2, 2, ReducedPrinterParser.BASE_DATE);
        } else if (count < 4) {
          this.appendValue(field, count, MAX_WIDTH, SignStyle.NORMAL);
        } else {
          this.appendValue(field, count, MAX_WIDTH, SignStyle.EXCEEDS_PAD);
        }
        break;
      case 'M':
      case 'Q':
        switch (count) {
          case 1:
            this.appendValue(field);
            break;
          case 2:
            this.appendValue(field, 2);
            break;
          case 3:
            this.appendText(field, TextStyle.SHORT);
            break;
          case 4:
            this.appendText(field, TextStyle.FULL);
            break;
          case 5:
            this.appendText(field, TextStyle.NARROW);
            break;
          default:
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'L':
      case 'q':
        switch (count) {
          case 1:
            this.appendValue(field);
            break;
          case 2:
            this.appendValue(field, 2);
            break;
          case 3:
            this.appendText(field, TextStyle.SHORT_STANDALONE);
            break;
          case 4:
            this.appendText(field, TextStyle.FULL_STANDALONE);
            break;
          case 5:
            this.appendText(field, TextStyle.NARROW_STANDALONE);
            break;
          default:
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'e':
        switch (count) {
          case 1:
          case 2:
            this.appendWeekField('e', count);
            break;
          case 3:
            this.appendText(field, TextStyle.SHORT);
            break;
          case 4:
            this.appendText(field, TextStyle.FULL);
            break;
          case 5:
            this.appendText(field, TextStyle.NARROW);
            break;
          default:
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'c':
        switch (count) {
          case 1:
            this.appendWeekField('c', count);
            break;
          case 2:
            throw new IllegalArgumentException("Invalid number of pattern letters: " + cur);
          case 3:
            this.appendText(field, TextStyle.SHORT_STANDALONE);
            break;
          case 4:
            this.appendText(field, TextStyle.FULL_STANDALONE);
            break;
          case 5:
            this.appendText(field, TextStyle.NARROW_STANDALONE);
            break;
          default:
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'a':
        if (count === 1) {
          this.appendText(field, TextStyle.SHORT);
        } else {
          throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'E':
      case 'G':
        switch (count) {
          case 1:
          case 2:
          case 3:
            this.appendText(field, TextStyle.SHORT);
            break;
          case 4:
            this.appendText(field, TextStyle.FULL);
            break;
          case 5:
            this.appendText(field, TextStyle.NARROW);
            break;
          default:
            throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'S':
        this.appendFraction(ChronoField.NANO_OF_SECOND, count, count, false);
        break;
      case 'F':
        if (count === 1) {
          this.appendValue(field);
        } else {
          throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'd':
      case 'h':
      case 'H':
      case 'k':
      case 'K':
      case 'm':
      case 's':
        if (count === 1) {
          this.appendValue(field);
        } else if (count === 2) {
          this.appendValue(field, count);
        } else {
          throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      case 'D':
        if (count === 1) {
          this.appendValue(field);
        } else if (count <= 3) {
          this.appendValue(field, count);
        } else {
          throw new IllegalArgumentException("Too many pattern letters: " + cur);
        }
        break;
      default:
        if (count === 1) {
          this.appendValue(field);
        } else {
          this.appendValue(field, count);
        }
        break;
    }
  };
  _proto.padNext = function padNext() {
    if (arguments.length === 1) {
      return this._padNext1.apply(this, arguments);
    } else {
      return this._padNext2.apply(this, arguments);
    }
  };
  _proto._padNext1 = function _padNext1(padWidth) {
    return this._padNext2(padWidth, ' ');
  };
  _proto._padNext2 = function _padNext2(padWidth, padChar) {
    if (padWidth < 1) {
      throw new IllegalArgumentException("The pad width must be at least one but was " + padWidth);
    }
    this._active._padNextWidth = padWidth;
    this._active._padNextChar = padChar;
    this._active._valueParserIndex = -1;
    return this;
  };
  _proto.optionalStart = function optionalStart() {
    this._active._valueParserIndex = -1;
    this._active = DateTimeFormatterBuilder._of(this._active, true);
    return this;
  };
  _proto.optionalEnd = function optionalEnd() {
    if (this._active._parent == null) {
      throw new IllegalStateException('Cannot call optionalEnd() as there was no previous call to optionalStart()');
    }
    if (this._active._printerParsers.length > 0) {
      var cpp = new CompositePrinterParser(this._active._printerParsers, this._active._optional);
      this._active = this._active._parent;
      this._appendInternal(cpp);
    } else {
      this._active = this._active._parent;
    }
    return this;
  };
  _proto._appendInternal = function _appendInternal(pp) {
    assert(pp != null);
    if (this._active._padNextWidth > 0) {
      if (pp != null) {
        pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);
      }
      this._active._padNextWidth = 0;
      this._active._padNextChar = 0;
    }
    this._active._printerParsers.push(pp);
    this._active._valueParserIndex = -1;
    return this._active._printerParsers.length - 1;
  };
  _proto.appendLiteral = function appendLiteral(literal) {
    assert(literal != null);
    if (literal.length > 0) {
      if (literal.length === 1) {
        this._appendInternalPrinterParser(new CharLiteralPrinterParser(literal.charAt(0)));
      } else {
        this._appendInternalPrinterParser(new StringLiteralPrinterParser(literal));
      }
    }
    return this;
  };
  _proto._appendInternalPrinterParser = function _appendInternalPrinterParser(pp) {
    assert(pp != null);
    if (this._active._padNextWidth > 0) {
      if (pp != null) {
        pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);
      }
      this._active._padNextWidth = 0;
      this._active._padNextChar = 0;
    }
    this._active._printerParsers.push(pp);
    this._active._valueParserIndex = -1;
    return this._active._printerParsers.length - 1;
  };
  _proto.append = function append(formatter) {
    requireNonNull(formatter, 'formatter');
    this._appendInternal(formatter._toPrinterParser(false));
    return this;
  };
  _proto.toFormatter = function toFormatter(resolverStyle) {
    if (resolverStyle === void 0) {
      resolverStyle = ResolverStyle.SMART;
    }
    while (this._active._parent != null) {
      this.optionalEnd();
    }
    var pp = new CompositePrinterParser(this._printerParsers, false);
    return new DateTimeFormatter(pp, null, DecimalStyle.STANDARD, resolverStyle, null, null, null);
  };
  return DateTimeFormatterBuilder;
}();
var SECONDS_PER_10000_YEARS = 146097 * 25 * 86400;
var SECONDS_0000_TO_1970 = (146097 * 5 - (30 * 365 + 7)) * 86400;
var InstantPrinterParser = function () {
  function InstantPrinterParser(fractionalDigits) {
    this.fractionalDigits = fractionalDigits;
  }
  var _proto2 = InstantPrinterParser.prototype;
  _proto2.print = function print(context, buf) {
    var inSecs = context.getValue(ChronoField.INSTANT_SECONDS);
    var inNanos = 0;
    if (context.temporal().isSupported(ChronoField.NANO_OF_SECOND)) {
      inNanos = context.temporal().getLong(ChronoField.NANO_OF_SECOND);
    }
    if (inSecs == null) {
      return false;
    }
    var inSec = inSecs;
    var inNano = ChronoField.NANO_OF_SECOND.checkValidIntValue(inNanos);
    if (inSec >= -SECONDS_0000_TO_1970) {
      var zeroSecs = inSec - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
      var hi = MathUtil.floorDiv(zeroSecs, SECONDS_PER_10000_YEARS) + 1;
      var lo = MathUtil.floorMod(zeroSecs, SECONDS_PER_10000_YEARS);
      var ldt = LocalDateTime.ofEpochSecond(lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);
      if (hi > 0) {
        buf.append('+').append(hi);
      }
      buf.append(ldt.toString());
      if (ldt.second() === 0) {
        buf.append(':00');
      }
    } else {
      var _zeroSecs = inSec + SECONDS_0000_TO_1970;
      var _hi = MathUtil.intDiv(_zeroSecs, SECONDS_PER_10000_YEARS);
      var _lo = MathUtil.intMod(_zeroSecs, SECONDS_PER_10000_YEARS);
      var _ldt = LocalDateTime.ofEpochSecond(_lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);
      var pos = buf.length();
      buf.append(_ldt.toString());
      if (_ldt.second() === 0) {
        buf.append(':00');
      }
      if (_hi < 0) {
        if (_ldt.year() === -10000) {
          buf.replace(pos, pos + 2, "" + (_hi - 1));
        } else if (_lo === 0) {
          buf.insert(pos, _hi);
        } else {
          buf.insert(pos + 1, Math.abs(_hi));
        }
      }
    }
    if (this.fractionalDigits === -2) {
      if (inNano !== 0) {
        buf.append('.');
        if (MathUtil.intMod(inNano, 1000000) === 0) {
          buf.append(("" + (MathUtil.intDiv(inNano, 1000000) + 1000)).substring(1));
        } else if (MathUtil.intMod(inNano, 1000) === 0) {
          buf.append(("" + (MathUtil.intDiv(inNano, 1000) + 1000000)).substring(1));
        } else {
          buf.append(("" + (inNano + 1000000000)).substring(1));
        }
      }
    } else if (this.fractionalDigits > 0 || this.fractionalDigits === -1 && inNano > 0) {
      buf.append('.');
      var div = 100000000;
      for (var i = 0; this.fractionalDigits === -1 && inNano > 0 || i < this.fractionalDigits; i++) {
        var digit = MathUtil.intDiv(inNano, div);
        buf.append(digit);
        inNano = inNano - digit * div;
        div = MathUtil.intDiv(div, 10);
      }
    }
    buf.append('Z');
    return true;
  };
  _proto2.parse = function parse(context, text, position) {
    var newContext = context.copy();
    var minDigits = this.fractionalDigits < 0 ? 0 : this.fractionalDigits;
    var maxDigits = this.fractionalDigits < 0 ? 9 : this.fractionalDigits;
    var parser = new DateTimeFormatterBuilder().append(DateTimeFormatter.ISO_LOCAL_DATE).appendLiteral('T').appendValue(ChronoField.HOUR_OF_DAY, 2).appendLiteral(':').appendValue(ChronoField.MINUTE_OF_HOUR, 2).appendLiteral(':').appendValue(ChronoField.SECOND_OF_MINUTE, 2).appendFraction(ChronoField.NANO_OF_SECOND, minDigits, maxDigits, true).appendLiteral('Z').toFormatter()._toPrinterParser(false);
    var pos = parser.parse(newContext, text, position);
    if (pos < 0) {
      return pos;
    }
    var yearParsed = newContext.getParsed(ChronoField.YEAR);
    var month = newContext.getParsed(ChronoField.MONTH_OF_YEAR);
    var day = newContext.getParsed(ChronoField.DAY_OF_MONTH);
    var hour = newContext.getParsed(ChronoField.HOUR_OF_DAY);
    var min = newContext.getParsed(ChronoField.MINUTE_OF_HOUR);
    var secVal = newContext.getParsed(ChronoField.SECOND_OF_MINUTE);
    var nanoVal = newContext.getParsed(ChronoField.NANO_OF_SECOND);
    var sec = secVal != null ? secVal : 0;
    var nano = nanoVal != null ? nanoVal : 0;
    var year = MathUtil.intMod(yearParsed, 10000);
    var days = 0;
    if (hour === 24 && min === 0 && sec === 0 && nano === 0) {
      hour = 0;
      days = 1;
    } else if (hour === 23 && min === 59 && sec === 60) {
      context.setParsedLeapSecond();
      sec = 59;
    }
    var instantSecs;
    try {
      var ldt = LocalDateTime.of(year, month, day, hour, min, sec, 0).plusDays(days);
      instantSecs = ldt.toEpochSecond(ZoneOffset.UTC);
      instantSecs += MathUtil.safeMultiply(MathUtil.intDiv(yearParsed, 10000), SECONDS_PER_10000_YEARS);
    } catch (ex) {
      return ~position;
    }
    var successPos = pos;
    successPos = context.setParsedField(ChronoField.INSTANT_SECONDS, instantSecs, position, successPos);
    return context.setParsedField(ChronoField.NANO_OF_SECOND, nano, position, successPos);
  };
  _proto2.toString = function toString() {
    return 'Instant()';
  };
  return InstantPrinterParser;
}();
var DefaultingParser = function () {
  function DefaultingParser(field, value) {
    this._field = field;
    this._value = value;
  }
  var _proto3 = DefaultingParser.prototype;
  _proto3.print = function print() {
    return true;
  };
  _proto3.parse = function parse(context, text, position) {
    if (context.getParsed(this._field) == null) {
      context.setParsedField(this._field, this._value, position, position);
    }
    return position;
  };
  return DefaultingParser;
}();
function _init$e() {
  ReducedPrinterParser.BASE_DATE = LocalDate.of(2000, 1, 1);
  DateTimeFormatterBuilder.CompositePrinterParser = CompositePrinterParser;
  DateTimeFormatterBuilder.PadPrinterParserDecorator = PadPrinterParserDecorator;
  DateTimeFormatterBuilder.SettingsParser = SettingsParser;
  DateTimeFormatterBuilder.CharLiteralPrinterParser = StringLiteralPrinterParser;
  DateTimeFormatterBuilder.StringLiteralPrinterParser = StringLiteralPrinterParser;
  DateTimeFormatterBuilder.CharLiteralPrinterParser = CharLiteralPrinterParser;
  DateTimeFormatterBuilder.NumberPrinterParser = NumberPrinterParser;
  DateTimeFormatterBuilder.ReducedPrinterParser = ReducedPrinterParser;
  DateTimeFormatterBuilder.FractionPrinterParser = FractionPrinterParser;
  DateTimeFormatterBuilder.OffsetIdPrinterParser = OffsetIdPrinterParser;
  DateTimeFormatterBuilder.ZoneIdPrinterParser = ZoneIdPrinterParser;
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */var StringBuilder = function () {
  function StringBuilder() {
    this._str = '';
  }
  var _proto = StringBuilder.prototype;
  _proto.append = function append(str) {
    this._str += str;
    return this;
  };
  _proto.appendChar = function appendChar(str) {
    this._str += str[0];
    return this;
  };
  _proto.insert = function insert(offset, str) {
    this._str = this._str.slice(0, offset) + str + this._str.slice(offset);
    return this;
  };
  _proto.replace = function replace(start, end, str) {
    this._str = this._str.slice(0, start) + str + this._str.slice(end);
    return this;
  };
  _proto.length = function length() {
    return this._str.length;
  };
  _proto.setLength = function setLength(length) {
    this._str = this._str.slice(0, length);
    return this;
  };
  _proto.toString = function toString() {
    return this._str;
  };
  return StringBuilder;
}();

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var DateTimeFormatter = function () {
  DateTimeFormatter.parsedExcessDays = function parsedExcessDays() {
    return DateTimeFormatter.PARSED_EXCESS_DAYS;
  };
  DateTimeFormatter.parsedLeapSecond = function parsedLeapSecond() {
    return DateTimeFormatter.PARSED_LEAP_SECOND;
  };
  DateTimeFormatter.ofPattern = function ofPattern(pattern) {
    return new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter();
  };
  function DateTimeFormatter(printerParser, locale, decimalStyle, resolverStyle, resolverFields, chrono, zone) {
    if (chrono === void 0) {
      chrono = IsoChronology.INSTANCE;
    }
    assert(printerParser != null);
    assert(decimalStyle != null);
    assert(resolverStyle != null);
    this._printerParser = printerParser;
    this._locale = locale;
    this._decimalStyle = decimalStyle;
    this._resolverStyle = resolverStyle;
    this._resolverFields = resolverFields;
    this._chrono = chrono;
    this._zone = zone;
  }
  var _proto = DateTimeFormatter.prototype;
  _proto.locale = function locale() {
    return this._locale;
  };
  _proto.decimalStyle = function decimalStyle() {
    return this._decimalStyle;
  };
  _proto.chronology = function chronology() {
    return this._chrono;
  };
  _proto.withChronology = function withChronology(chrono) {
    if (this._chrono != null && this._chrono.equals(chrono)) {
      return this;
    }
    return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle, this._resolverStyle, this._resolverFields, chrono, this._zone);
  };
  _proto.withLocale = function withLocale() {
    return this;
  };
  _proto.withResolverStyle = function withResolverStyle(resolverStyle) {
    requireNonNull(resolverStyle, 'resolverStyle');
    if (resolverStyle.equals(this._resolverStyle)) {
      return this;
    }
    return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle, resolverStyle, this._resolverFields, this._chrono, this._zone);
  };
  _proto.format = function format(temporal) {
    var buf = new StringBuilder(32);
    this._formatTo(temporal, buf);
    return buf.toString();
  };
  _proto._formatTo = function _formatTo(temporal, appendable) {
    requireNonNull(temporal, 'temporal');
    requireNonNull(appendable, 'appendable');
    var context = new DateTimePrintContext(temporal, this);
    this._printerParser.print(context, appendable);
  };
  _proto.parse = function parse(text, type) {
    if (arguments.length === 1) {
      return this.parse1(text);
    } else {
      return this.parse2(text, type);
    }
  };
  _proto.parse1 = function parse1(text) {
    requireNonNull(text, 'text');
    try {
      return this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);
    } catch (ex) {
      if (ex instanceof DateTimeParseException) {
        throw ex;
      } else {
        throw this._createError(text, ex);
      }
    }
  };
  _proto.parse2 = function parse2(text, type) {
    requireNonNull(text, 'text');
    requireNonNull(type, 'type');
    try {
      var builder = this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);
      return builder.build(type);
    } catch (ex) {
      if (ex instanceof DateTimeParseException) {
        throw ex;
      } else {
        throw this._createError(text, ex);
      }
    }
  };
  _proto._createError = function _createError(text, ex) {
    var abbr = '';
    if (text.length > 64) {
      abbr = text.substring(0, 64) + "...";
    } else {
      abbr = text;
    }
    return new DateTimeParseException("Text '" + abbr + "' could not be parsed: " + ex.message, text, 0, ex);
  };
  _proto._parseToBuilder = function _parseToBuilder(text, position) {
    var pos = position != null ? position : new ParsePosition(0);
    var result = this._parseUnresolved0(text, pos);
    if (result == null || pos.getErrorIndex() >= 0 || position == null && pos.getIndex() < text.length) {
      var abbr = '';
      if (text.length > 64) {
        abbr = text.substr(0, 64).toString() + "...";
      } else {
        abbr = text;
      }
      if (pos.getErrorIndex() >= 0) {
        throw new DateTimeParseException("Text '" + abbr + "' could not be parsed at index " + pos.getErrorIndex(), text, pos.getErrorIndex());
      } else {
        throw new DateTimeParseException("Text '" + abbr + "' could not be parsed, unparsed text found at index " + pos.getIndex(), text, pos.getIndex());
      }
    }
    return result.toBuilder();
  };
  _proto.parseUnresolved = function parseUnresolved(text, position) {
    return this._parseUnresolved0(text, position);
  };
  _proto._parseUnresolved0 = function _parseUnresolved0(text, position) {
    assert(text != null, 'text', NullPointerException);
    assert(position != null, 'position', NullPointerException);
    var context = new DateTimeParseContext(this);
    var pos = position.getIndex();
    pos = this._printerParser.parse(context, text, pos);
    if (pos < 0) {
      position.setErrorIndex(~pos);
      return null;
    }
    position.setIndex(pos);
    return context.toParsed();
  };
  _proto._toPrinterParser = function _toPrinterParser(optional) {
    return this._printerParser.withOptional(optional);
  };
  _proto.toString = function toString() {
    var pattern = this._printerParser.toString();
    return pattern.indexOf('[') === 0 ? pattern : pattern.substring(1, pattern.length - 1);
  };
  return DateTimeFormatter;
}();
function _init$d() {
  DateTimeFormatter.ISO_LOCAL_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.MONTH_OF_YEAR, 2).appendLiteral('-').appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_LOCAL_TIME = new DateTimeFormatterBuilder().appendValue(ChronoField.HOUR_OF_DAY, 2).appendLiteral(':').appendValue(ChronoField.MINUTE_OF_HOUR, 2).optionalStart().appendLiteral(':').appendValue(ChronoField.SECOND_OF_MINUTE, 2).optionalStart().appendFraction(ChronoField.NANO_OF_SECOND, 0, 9, true).toFormatter(ResolverStyle.STRICT);
  DateTimeFormatter.ISO_LOCAL_DATE_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE).appendLiteral('T').append(DateTimeFormatter.ISO_LOCAL_TIME).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_INSTANT = new DateTimeFormatterBuilder().parseCaseInsensitive().appendInstant().toFormatter(ResolverStyle.STRICT);
  DateTimeFormatter.ISO_OFFSET_DATE_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE_TIME).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_ZONED_DATE_TIME = new DateTimeFormatterBuilder().append(DateTimeFormatter.ISO_OFFSET_DATE_TIME).optionalStart().appendLiteral('[').parseCaseSensitive().appendZoneId().appendLiteral(']').toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.BASIC_ISO_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendValue(ChronoField.MONTH_OF_YEAR, 2).appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_OFFSET_DATE = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_OFFSET_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_TIME).appendOffsetId().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_ORDINAL_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.DAY_OF_YEAR).toFormatter(ResolverStyle.STRICT);
  DateTimeFormatter.ISO_WEEK_DATE = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-W').appendValue(ChronoField.ALIGNED_WEEK_OF_YEAR).appendLiteral('-').appendValue(ChronoField.DAY_OF_WEEK).toFormatter(ResolverStyle.STRICT);
  DateTimeFormatter.ISO_DATE = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_DATE).optionalStart().appendOffsetId().optionalEnd().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.ISO_TIME = new DateTimeFormatterBuilder().parseCaseInsensitive().append(DateTimeFormatter.ISO_LOCAL_TIME).optionalStart().appendOffsetId().optionalEnd().toFormatter(ResolverStyle.STRICT);
  DateTimeFormatter.ISO_DATE_TIME = new DateTimeFormatterBuilder().append(DateTimeFormatter.ISO_LOCAL_DATE_TIME).optionalStart().appendOffsetId().optionalEnd().toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);
  DateTimeFormatter.PARSED_EXCESS_DAYS = createTemporalQuery('PARSED_EXCESS_DAYS', function (temporal) {
    if (temporal instanceof DateTimeBuilder) {
      return temporal.excessDays;
    } else {
      return Period.ZERO;
    }
  });
  DateTimeFormatter.PARSED_LEAP_SECOND = createTemporalQuery('PARSED_LEAP_SECOND', function (temporal) {
    if (temporal instanceof DateTimeBuilder) {
      return temporal.leapSecond;
    } else {
      return false;
    }
  });
}

var MonthDay = function (_TemporalAccessor) {
  _inheritsLoose(MonthDay, _TemporalAccessor);
  MonthDay.now = function now(zoneIdOrClock) {
    if (arguments.length === 0) {
      return MonthDay.now0();
    } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {
      return MonthDay.nowZoneId(zoneIdOrClock);
    } else {
      return MonthDay.nowClock(zoneIdOrClock);
    }
  };
  MonthDay.now0 = function now0() {
    return this.nowClock(Clock.systemDefaultZone());
  };
  MonthDay.nowZoneId = function nowZoneId(zone) {
    requireNonNull(zone, 'zone');
    return this.nowClock(Clock.system(zone));
  };
  MonthDay.nowClock = function nowClock(clock) {
    requireNonNull(clock, 'clock');
    var now = LocalDate.now(clock);
    return MonthDay.of(now.month(), now.dayOfMonth());
  };
  MonthDay.of = function of(monthOrNumber, number) {
    if (arguments.length === 2 && monthOrNumber instanceof Month) {
      return MonthDay.ofMonthNumber(monthOrNumber, number);
    } else {
      return MonthDay.ofNumberNumber(monthOrNumber, number);
    }
  };
  MonthDay.ofMonthNumber = function ofMonthNumber(month, dayOfMonth) {
    requireNonNull(month, 'month');
    ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);
    if (dayOfMonth > month.maxLength()) {
      throw new DateTimeException("Illegal value for DayOfMonth field, value " + dayOfMonth + " is not valid for month " + month.toString());
    }
    return new MonthDay(month.value(), dayOfMonth);
  };
  MonthDay.ofNumberNumber = function ofNumberNumber(month, dayOfMonth) {
    requireNonNull(month, 'month');
    requireNonNull(dayOfMonth, 'dayOfMonth');
    return MonthDay.of(Month.of(month), dayOfMonth);
  };
  MonthDay.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    requireInstance(temporal, TemporalAccessor, 'temporal');
    if (temporal instanceof MonthDay) {
      return temporal;
    }
    try {
      return MonthDay.of(temporal.get(ChronoField.MONTH_OF_YEAR), temporal.get(ChronoField.DAY_OF_MONTH));
    } catch (ex) {
      throw new DateTimeException("Unable to obtain MonthDay from TemporalAccessor: " + temporal + ", type " + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  MonthDay.parse = function parse(text, formatter) {
    if (arguments.length === 1) {
      return MonthDay.parseString(text);
    } else {
      return MonthDay.parseStringFormatter(text, formatter);
    }
  };
  MonthDay.parseString = function parseString(text) {
    return MonthDay.parseStringFormatter(text, PARSER$2);
  };
  MonthDay.parseStringFormatter = function parseStringFormatter(text, formatter) {
    requireNonNull(text, 'text');
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return formatter.parse(text, MonthDay.FROM);
  };
  function MonthDay(month, dayOfMonth) {
    var _this;
    _this = _TemporalAccessor.call(this) || this;
    _this._month = MathUtil.safeToInt(month);
    _this._day = MathUtil.safeToInt(dayOfMonth);
    return _this;
  }
  var _proto = MonthDay.prototype;
  _proto.monthValue = function monthValue() {
    return this._month;
  };
  _proto.month = function month() {
    return Month.of(this._month);
  };
  _proto.dayOfMonth = function dayOfMonth() {
    return this._day;
  };
  _proto.isSupported = function isSupported(field) {
    if (field instanceof ChronoField) {
      return field === ChronoField.MONTH_OF_YEAR || field === ChronoField.DAY_OF_MONTH;
    }
    return field != null && field.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field === ChronoField.MONTH_OF_YEAR) {
      return field.range();
    } else if (field === ChronoField.DAY_OF_MONTH) {
      return ValueRange.of(1, this.month().minLength(), this.month().maxLength());
    }
    return _TemporalAccessor.prototype.range.call(this, field);
  };
  _proto.get = function get(field) {
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.DAY_OF_MONTH:
          return this._day;
        case ChronoField.MONTH_OF_YEAR:
          return this._month;
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.isValidYear = function isValidYear(year) {
    return (this._day === 29 && this._month === 2 && Year.isLeap(year) === false) === false;
  };
  _proto.withMonth = function withMonth(month) {
    return this.with(Month.of(month));
  };
  _proto.with = function _with(month) {
    requireNonNull(month, 'month');
    if (month.value() === this._month) {
      return this;
    }
    var day = Math.min(this._day, month.maxLength());
    return new MonthDay(month.value(), day);
  };
  _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
    if (dayOfMonth === this._day) {
      return this;
    }
    return MonthDay.of(this._month, dayOfMonth);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    requireInstance(_query, TemporalQuery, 'query');
    if (_query === TemporalQueries.chronology()) {
      return IsoChronology.INSTANCE;
    }
    return _TemporalAccessor.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    requireNonNull(temporal, 'temporal');
    temporal = temporal.with(ChronoField.MONTH_OF_YEAR, this._month);
    return temporal.with(ChronoField.DAY_OF_MONTH, Math.min(temporal.range(ChronoField.DAY_OF_MONTH).maximum(), this._day));
  };
  _proto.atYear = function atYear(year) {
    return LocalDate.of(year, this._month, this.isValidYear(year) ? this._day : 28);
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, MonthDay, 'other');
    var cmp = this._month - other.monthValue();
    if (cmp === 0) {
      cmp = this._day - other.dayOfMonth();
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    requireNonNull(other, 'other');
    requireInstance(other, MonthDay, 'other');
    return this.compareTo(other) > 0;
  };
  _proto.isBefore = function isBefore(other) {
    requireNonNull(other, 'other');
    requireInstance(other, MonthDay, 'other');
    return this.compareTo(other) < 0;
  };
  _proto.equals = function equals(obj) {
    if (this === obj) {
      return true;
    }
    if (obj instanceof MonthDay) {
      var other = obj;
      return this.monthValue() === other.monthValue() && this.dayOfMonth() === other.dayOfMonth();
    }
    return false;
  };
  _proto.toString = function toString() {
    return "--" + (this._month < 10 ? '0' : '') + this._month + (this._day < 10 ? '-0' : '-') + this._day;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return formatter.format(this);
  };
  return MonthDay;
}(TemporalAccessor);
var PARSER$2;
function _init$c() {
  PARSER$2 = new DateTimeFormatterBuilder().appendLiteral('--').appendValue(ChronoField.MONTH_OF_YEAR, 2).appendLiteral('-').appendValue(ChronoField.DAY_OF_MONTH, 2).toFormatter();
  MonthDay.FROM = createTemporalQuery('MonthDay.FROM', function (temporal) {
    return MonthDay.from(temporal);
  });
}

var YearMonth = function (_Temporal) {
  _inheritsLoose(YearMonth, _Temporal);
  YearMonth.now = function now(zoneIdOrClock) {
    if (arguments.length === 0) {
      return YearMonth.now0();
    } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {
      return YearMonth.nowZoneId(zoneIdOrClock);
    } else {
      return YearMonth.nowClock(zoneIdOrClock);
    }
  };
  YearMonth.now0 = function now0() {
    return YearMonth.nowClock(Clock.systemDefaultZone());
  };
  YearMonth.nowZoneId = function nowZoneId(zone) {
    return YearMonth.nowClock(Clock.system(zone));
  };
  YearMonth.nowClock = function nowClock(clock) {
    var now = LocalDate.now(clock);
    return YearMonth.of(now.year(), now.month());
  };
  YearMonth.of = function of(year, monthOrNumber) {
    if (arguments.length === 2 && monthOrNumber instanceof Month) {
      return YearMonth.ofNumberMonth(year, monthOrNumber);
    } else {
      return YearMonth.ofNumberNumber(year, monthOrNumber);
    }
  };
  YearMonth.ofNumberMonth = function ofNumberMonth(year, month) {
    requireNonNull(month, 'month');
    requireInstance(month, Month, 'month');
    return YearMonth.ofNumberNumber(year, month.value());
  };
  YearMonth.ofNumberNumber = function ofNumberNumber(year, month) {
    requireNonNull(year, 'year');
    requireNonNull(month, 'month');
    ChronoField.YEAR.checkValidValue(year);
    ChronoField.MONTH_OF_YEAR.checkValidValue(month);
    return new YearMonth(year, month);
  };
  YearMonth.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    if (temporal instanceof YearMonth) {
      return temporal;
    }
    try {
      return YearMonth.of(temporal.get(ChronoField.YEAR), temporal.get(ChronoField.MONTH_OF_YEAR));
    } catch (ex) {
      throw new DateTimeException("Unable to obtain YearMonth from TemporalAccessor: " + temporal + ", type " + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  YearMonth.parse = function parse(text, formatter) {
    if (arguments.length === 1) {
      return YearMonth.parseString(text);
    } else {
      return YearMonth.parseStringFormatter(text, formatter);
    }
  };
  YearMonth.parseString = function parseString(text) {
    return YearMonth.parseStringFormatter(text, PARSER$1);
  };
  YearMonth.parseStringFormatter = function parseStringFormatter(text, formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, YearMonth.FROM);
  };
  function YearMonth(year, month) {
    var _this;
    _this = _Temporal.call(this) || this;
    _this._year = MathUtil.safeToInt(year);
    _this._month = MathUtil.safeToInt(month);
    return _this;
  }
  var _proto = YearMonth.prototype;
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {
      return this.isSupportedField(fieldOrUnit);
    } else {
      return this.isSupportedUnit(fieldOrUnit);
    }
  };
  _proto.isSupportedField = function isSupportedField(field) {
    if (field instanceof ChronoField) {
      return field === ChronoField.YEAR || field === ChronoField.MONTH_OF_YEAR || field === ChronoField.PROLEPTIC_MONTH || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;
    }
    return field != null && field.isSupportedBy(this);
  };
  _proto.isSupportedUnit = function isSupportedUnit(unit) {
    if (unit instanceof ChronoUnit) {
      return unit === ChronoUnit.MONTHS || unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;
    }
    return unit != null && unit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field === ChronoField.YEAR_OF_ERA) {
      return this.year() <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE);
    }
    return _Temporal.prototype.range.call(this, field);
  };
  _proto.get = function get(field) {
    requireNonNull(field, 'field');
    requireInstance(field, TemporalField, 'field');
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    requireInstance(field, TemporalField, 'field');
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.MONTH_OF_YEAR:
          return this._month;
        case ChronoField.PROLEPTIC_MONTH:
          return this._getProlepticMonth();
        case ChronoField.YEAR_OF_ERA:
          return this._year < 1 ? 1 - this._year : this._year;
        case ChronoField.YEAR:
          return this._year;
        case ChronoField.ERA:
          return this._year < 1 ? 0 : 1;
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto._getProlepticMonth = function _getProlepticMonth() {
    return MathUtil.safeAdd(MathUtil.safeMultiply(this._year, 12), this._month - 1);
  };
  _proto.year = function year() {
    return this._year;
  };
  _proto.monthValue = function monthValue() {
    return this._month;
  };
  _proto.month = function month() {
    return Month.of(this._month);
  };
  _proto.isLeapYear = function isLeapYear() {
    return IsoChronology.isLeapYear(this._year);
  };
  _proto.isValidDay = function isValidDay(dayOfMonth) {
    return dayOfMonth >= 1 && dayOfMonth <= this.lengthOfMonth();
  };
  _proto.lengthOfMonth = function lengthOfMonth() {
    return this.month().length(this.isLeapYear());
  };
  _proto.lengthOfYear = function lengthOfYear() {
    return this.isLeapYear() ? 366 : 365;
  };
  _proto.with = function _with(adjusterOrField, value) {
    if (arguments.length === 1) {
      return this._withAdjuster(adjusterOrField);
    } else {
      return this._withField(adjusterOrField, value);
    }
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    requireInstance(field, TemporalField, 'field');
    if (field instanceof ChronoField) {
      var f = field;
      f.checkValidValue(newValue);
      switch (f) {
        case ChronoField.MONTH_OF_YEAR:
          return this.withMonth(newValue);
        case ChronoField.PROLEPTIC_MONTH:
          return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));
        case ChronoField.YEAR_OF_ERA:
          return this.withYear(this._year < 1 ? 1 - newValue : newValue);
        case ChronoField.YEAR:
          return this.withYear(newValue);
        case ChronoField.ERA:
          return this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year);
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.adjustInto(this, newValue);
  };
  _proto.withYear = function withYear(year) {
    ChronoField.YEAR.checkValidValue(year);
    return new YearMonth(year, this._month);
  };
  _proto.withMonth = function withMonth(month) {
    ChronoField.MONTH_OF_YEAR.checkValidValue(month);
    return new YearMonth(this._year, month);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(unit, 'unit');
    requireInstance(unit, TemporalUnit, 'unit');
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.MONTHS:
          return this.plusMonths(amountToAdd);
        case ChronoUnit.YEARS:
          return this.plusYears(amountToAdd);
        case ChronoUnit.DECADES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));
        case ChronoUnit.CENTURIES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));
        case ChronoUnit.MILLENNIA:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));
        case ChronoUnit.ERAS:
          return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(yearsToAdd) {
    if (yearsToAdd === 0) {
      return this;
    }
    var newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);
    return this.withYear(newYear);
  };
  _proto.plusMonths = function plusMonths(monthsToAdd) {
    if (monthsToAdd === 0) {
      return this;
    }
    var monthCount = this._year * 12 + (this._month - 1);
    var calcMonths = monthCount + monthsToAdd;
    var newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));
    var newMonth = MathUtil.floorMod(calcMonths, 12) + 1;
    return new YearMonth(newYear, newMonth);
  };
  _proto.minusYears = function minusYears(yearsToSubtract) {
    return yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MIN_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract);
  };
  _proto.minusMonths = function minusMonths(monthsToSubtract) {
    return monthsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusMonths(Math.MAX_SAFE_INTEGER).plusMonths(1) : this.plusMonths(-monthsToSubtract);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    requireInstance(_query, TemporalQuery, 'query');
    if (_query === TemporalQueries.chronology()) {
      return IsoChronology.INSTANCE;
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.MONTHS;
    } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    requireNonNull(temporal, 'temporal');
    requireInstance(temporal, Temporal, 'temporal');
    return temporal.with(ChronoField.PROLEPTIC_MONTH, this._getProlepticMonth());
  };
  _proto.until = function until(endExclusive, unit) {
    requireNonNull(endExclusive, 'endExclusive');
    requireNonNull(unit, 'unit');
    requireInstance(endExclusive, Temporal, 'endExclusive');
    requireInstance(unit, TemporalUnit, 'unit');
    var end = YearMonth.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      var monthsUntil = end._getProlepticMonth() - this._getProlepticMonth();
      switch (unit) {
        case ChronoUnit.MONTHS:
          return monthsUntil;
        case ChronoUnit.YEARS:
          return MathUtil.intDiv(monthsUntil, 12);
        case ChronoUnit.DECADES:
          return MathUtil.intDiv(monthsUntil, 120);
        case ChronoUnit.CENTURIES:
          return MathUtil.intDiv(monthsUntil, 1200);
        case ChronoUnit.MILLENNIA:
          return MathUtil.intDiv(monthsUntil, 12000);
        case ChronoUnit.ERAS:
          return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  _proto.atDay = function atDay(dayOfMonth) {
    requireNonNull(dayOfMonth, 'dayOfMonth');
    return LocalDate.of(this._year, this._month, dayOfMonth);
  };
  _proto.atEndOfMonth = function atEndOfMonth() {
    return LocalDate.of(this._year, this._month, this.lengthOfMonth());
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, YearMonth, 'other');
    var cmp = this._year - other.year();
    if (cmp === 0) {
      cmp = this._month - other.monthValue();
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    return this.compareTo(other) > 0;
  };
  _proto.isBefore = function isBefore(other) {
    return this.compareTo(other) < 0;
  };
  _proto.equals = function equals(obj) {
    if (this === obj) {
      return true;
    }
    if (obj instanceof YearMonth) {
      var other = obj;
      return this.year() === other.year() && this.monthValue() === other.monthValue();
    }
    return false;
  };
  _proto.toString = function toString() {
    return PARSER$1.format(this);
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this);
  };
  return YearMonth;
}(Temporal);
var PARSER$1;
function _init$b() {
  PARSER$1 = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).appendLiteral('-').appendValue(ChronoField.MONTH_OF_YEAR, 2).toFormatter();
  YearMonth.FROM = createTemporalQuery('YearMonth.FROM', function (temporal) {
    return YearMonth.from(temporal);
  });
}

var Year = function (_Temporal) {
  _inheritsLoose(Year, _Temporal);
  function Year(value) {
    var _this;
    _this = _Temporal.call(this) || this;
    _this._year = MathUtil.safeToInt(value);
    return _this;
  }
  var _proto = Year.prototype;
  _proto.value = function value() {
    return this._year;
  };
  Year.now = function now(zoneIdOrClock) {
    if (zoneIdOrClock === void 0) {
      zoneIdOrClock = undefined;
    }
    if (zoneIdOrClock === undefined) {
      return Year.now0();
    } else if (zoneIdOrClock instanceof ZoneId) {
      return Year.nowZoneId(zoneIdOrClock);
    } else {
      return Year.nowClock(zoneIdOrClock);
    }
  };
  Year.now0 = function now0() {
    return Year.nowClock(Clock.systemDefaultZone());
  };
  Year.nowZoneId = function nowZoneId(zone) {
    requireNonNull(zone, 'zone');
    requireInstance(zone, ZoneId, 'zone');
    return Year.nowClock(Clock.system(zone));
  };
  Year.nowClock = function nowClock(clock) {
    requireNonNull(clock, 'clock');
    requireInstance(clock, Clock, 'clock');
    var now = LocalDate.now(clock);
    return Year.of(now.year());
  };
  Year.of = function of(isoYear) {
    requireNonNull(isoYear, 'isoYear');
    ChronoField.YEAR.checkValidValue(isoYear);
    return new Year(isoYear);
  };
  Year.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    requireInstance(temporal, TemporalAccessor, 'temporal');
    if (temporal instanceof Year) {
      return temporal;
    }
    try {
      return Year.of(temporal.get(ChronoField.YEAR));
    } catch (ex) {
      throw new DateTimeException("Unable to obtain Year from TemporalAccessor: " + temporal + ", type " + (temporal && temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  Year.parse = function parse(text, formatter) {
    if (arguments.length <= 1) {
      return Year.parseText(text);
    } else {
      return Year.parseTextFormatter(text, formatter);
    }
  };
  Year.parseText = function parseText(text) {
    requireNonNull(text, 'text');
    return Year.parse(text, PARSER);
  };
  Year.parseTextFormatter = function parseTextFormatter(text, formatter) {
    if (formatter === void 0) {
      formatter = PARSER;
    }
    requireNonNull(text, 'text');
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return formatter.parse(text, Year.FROM);
  };
  Year.isLeap = function isLeap(year) {
    return MathUtil.intMod(year, 4) === 0 && (MathUtil.intMod(year, 100) !== 0 || MathUtil.intMod(year, 400) === 0);
  };
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {
      return this.isSupportedField(fieldOrUnit);
    } else {
      return this.isSupportedUnit(fieldOrUnit);
    }
  };
  _proto.isSupportedField = function isSupportedField(field) {
    if (field instanceof ChronoField) {
      return field === ChronoField.YEAR || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;
    }
    return field != null && field.isSupportedBy(this);
  };
  _proto.isSupportedUnit = function isSupportedUnit(unit) {
    if (unit instanceof ChronoUnit) {
      return unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;
    }
    return unit != null && unit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (this.isSupported(field)) {
      return field.range();
    } else if (field instanceof ChronoField) {
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return _Temporal.prototype.range.call(this, field);
  };
  _proto.get = function get(field) {
    return this.range(field).checkValidIntValue(this.getLong(field), field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.YEAR_OF_ERA:
          return this._year < 1 ? 1 - this._year : this._year;
        case ChronoField.YEAR:
          return this._year;
        case ChronoField.ERA:
          return this._year < 1 ? 0 : 1;
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.isLeap = function isLeap() {
    return Year.isLeap(this._year);
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    requireInstance(field, TemporalField, 'field');
    if (field instanceof ChronoField) {
      field.checkValidValue(newValue);
      switch (field) {
        case ChronoField.YEAR_OF_ERA:
          return Year.of(this._year < 1 ? 1 - newValue : newValue);
        case ChronoField.YEAR:
          return Year.of(newValue);
        case ChronoField.ERA:
          return this.getLong(ChronoField.ERA) === newValue ? this : Year.of(1 - this._year);
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.adjustInto(this, newValue);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(amountToAdd, 'amountToAdd');
    requireNonNull(unit, 'unit');
    requireInstance(unit, TemporalUnit, 'unit');
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.YEARS:
          return this.plusYears(amountToAdd);
        case ChronoUnit.DECADES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));
        case ChronoUnit.CENTURIES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));
        case ChronoUnit.MILLENNIA:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));
        case ChronoUnit.ERAS:
          return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(yearsToAdd) {
    if (yearsToAdd === 0) {
      return this;
    }
    return Year.of(ChronoField.YEAR.checkValidIntValue(MathUtil.safeAdd(this._year, yearsToAdd)));
  };
  _proto.minusYears = function minusYears(yearsToSubtract) {
    return yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MAX_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    requireNonNull(temporal, 'temporal');
    return temporal.with(ChronoField.YEAR, this._year);
  };
  _proto.isValidMonthDay = function isValidMonthDay(monthDay) {
    return monthDay != null && monthDay.isValidYear(this._year);
  };
  _proto.length = function length() {
    return this.isLeap() ? 366 : 365;
  };
  _proto.atDay = function atDay(dayOfYear) {
    return LocalDate.ofYearDay(this._year, dayOfYear);
  };
  _proto.atMonth = function atMonth(monthOrNumber) {
    if (arguments.length === 1 && monthOrNumber instanceof Month) {
      return this.atMonthMonth(monthOrNumber);
    } else {
      return this.atMonthNumber(monthOrNumber);
    }
  };
  _proto.atMonthMonth = function atMonthMonth(month) {
    requireNonNull(month, 'month');
    requireInstance(month, Month, 'month');
    return YearMonth.of(this._year, month);
  };
  _proto.atMonthNumber = function atMonthNumber(month) {
    requireNonNull(month, 'month');
    return YearMonth.of(this._year, month);
  };
  _proto.atMonthDay = function atMonthDay(monthDay) {
    requireNonNull(monthDay, 'monthDay');
    requireInstance(monthDay, MonthDay, 'monthDay');
    return monthDay.atYear(this._year);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query()');
    requireInstance(_query, TemporalQuery, 'query()');
    if (_query === TemporalQueries.chronology()) {
      return IsoChronology.INSTANCE;
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.YEARS;
    } else if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, Year, 'other');
    return this._year - other._year;
  };
  _proto.isAfter = function isAfter(other) {
    requireNonNull(other, 'other');
    requireInstance(other, Year, 'other');
    return this._year > other._year;
  };
  _proto.isBefore = function isBefore(other) {
    requireNonNull(other, 'other');
    requireInstance(other, Year, 'other');
    return this._year < other._year;
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return formatter.format(this);
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof Year) {
      return this.value() === other.value();
    }
    return false;
  };
  _proto.toString = function toString() {
    return "" + this._year;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.until = function until(endExclusive, unit) {
    var end = Year.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      var yearsUntil = end.value() - this.value();
      switch (unit) {
        case ChronoUnit.YEARS:
          return yearsUntil;
        case ChronoUnit.DECADES:
          return MathUtil.intDiv(yearsUntil, 10);
        case ChronoUnit.CENTURIES:
          return MathUtil.intDiv(yearsUntil, 100);
        case ChronoUnit.MILLENNIA:
          return MathUtil.intDiv(yearsUntil, 1000);
        case ChronoUnit.ERAS:
          return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  return Year;
}(Temporal);
var PARSER;
function _init$a() {
  Year.MIN_VALUE = YearConstants.MIN_VALUE;
  Year.MAX_VALUE = YearConstants.MAX_VALUE;
  PARSER = new DateTimeFormatterBuilder().appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD).toFormatter();
  Year.FROM = createTemporalQuery('Year.FROM', function (temporal) {
    return Year.from(temporal);
  });
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var TemporalAdjuster = function () {
  function TemporalAdjuster() {}
  var _proto = TemporalAdjuster.prototype;
  _proto.adjustInto = function adjustInto(temporal) {
    abstractMethodFail('adjustInto');
  };
  return TemporalAdjuster;
}();

var TemporalAdjusters = function () {
  function TemporalAdjusters() {}
  TemporalAdjusters.firstDayOfMonth = function firstDayOfMonth() {
    return Impl.FIRST_DAY_OF_MONTH;
  };
  TemporalAdjusters.lastDayOfMonth = function lastDayOfMonth() {
    return Impl.LAST_DAY_OF_MONTH;
  };
  TemporalAdjusters.firstDayOfNextMonth = function firstDayOfNextMonth() {
    return Impl.FIRST_DAY_OF_NEXT_MONTH;
  };
  TemporalAdjusters.firstDayOfYear = function firstDayOfYear() {
    return Impl.FIRST_DAY_OF_YEAR;
  };
  TemporalAdjusters.lastDayOfYear = function lastDayOfYear() {
    return Impl.LAST_DAY_OF_YEAR;
  };
  TemporalAdjusters.firstDayOfNextYear = function firstDayOfNextYear() {
    return Impl.FIRST_DAY_OF_NEXT_YEAR;
  };
  TemporalAdjusters.firstInMonth = function firstInMonth(dayOfWeek) {
    requireNonNull(dayOfWeek, 'dayOfWeek');
    return new DayOfWeekInMonth(1, dayOfWeek);
  };
  TemporalAdjusters.lastInMonth = function lastInMonth(dayOfWeek) {
    requireNonNull(dayOfWeek, 'dayOfWeek');
    return new DayOfWeekInMonth(-1, dayOfWeek);
  };
  TemporalAdjusters.dayOfWeekInMonth = function dayOfWeekInMonth(ordinal, dayOfWeek) {
    requireNonNull(dayOfWeek, 'dayOfWeek');
    return new DayOfWeekInMonth(ordinal, dayOfWeek);
  };
  TemporalAdjusters.next = function next(dayOfWeek) {
    return new RelativeDayOfWeek(2, dayOfWeek);
  };
  TemporalAdjusters.nextOrSame = function nextOrSame(dayOfWeek) {
    return new RelativeDayOfWeek(0, dayOfWeek);
  };
  TemporalAdjusters.previous = function previous(dayOfWeek) {
    return new RelativeDayOfWeek(3, dayOfWeek);
  };
  TemporalAdjusters.previousOrSame = function previousOrSame(dayOfWeek) {
    return new RelativeDayOfWeek(1, dayOfWeek);
  };
  return TemporalAdjusters;
}();
var Impl = function (_TemporalAdjuster) {
  _inheritsLoose(Impl, _TemporalAdjuster);
  function Impl(ordinal) {
    var _this;
    _this = _TemporalAdjuster.call(this) || this;
    _this._ordinal = ordinal;
    return _this;
  }
  var _proto = Impl.prototype;
  _proto.adjustInto = function adjustInto(temporal) {
    switch (this._ordinal) {
      case 0:
        return temporal.with(ChronoField.DAY_OF_MONTH, 1);
      case 1:
        return temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());
      case 2:
        return temporal.with(ChronoField.DAY_OF_MONTH, 1).plus(1, ChronoUnit.MONTHS);
      case 3:
        return temporal.with(ChronoField.DAY_OF_YEAR, 1);
      case 4:
        return temporal.with(ChronoField.DAY_OF_YEAR, temporal.range(ChronoField.DAY_OF_YEAR).maximum());
      case 5:
        return temporal.with(ChronoField.DAY_OF_YEAR, 1).plus(1, ChronoUnit.YEARS);
    }
    throw new IllegalStateException('Unreachable');
  };
  return Impl;
}(TemporalAdjuster);
Impl.FIRST_DAY_OF_MONTH = new Impl(0);
Impl.LAST_DAY_OF_MONTH = new Impl(1);
Impl.FIRST_DAY_OF_NEXT_MONTH = new Impl(2);
Impl.FIRST_DAY_OF_YEAR = new Impl(3);
Impl.LAST_DAY_OF_YEAR = new Impl(4);
Impl.FIRST_DAY_OF_NEXT_YEAR = new Impl(5);
var DayOfWeekInMonth = function (_TemporalAdjuster2) {
  _inheritsLoose(DayOfWeekInMonth, _TemporalAdjuster2);
  function DayOfWeekInMonth(ordinal, dow) {
    var _this2;
    _this2 = _TemporalAdjuster2.call(this) || this;
    _this2._ordinal = ordinal;
    _this2._dowValue = dow.value();
    return _this2;
  }
  var _proto2 = DayOfWeekInMonth.prototype;
  _proto2.adjustInto = function adjustInto(temporal) {
    if (this._ordinal >= 0) {
      var temp = temporal.with(ChronoField.DAY_OF_MONTH, 1);
      var curDow = temp.get(ChronoField.DAY_OF_WEEK);
      var dowDiff = MathUtil.intMod(this._dowValue - curDow + 7, 7);
      dowDiff += (this._ordinal - 1) * 7;
      return temp.plus(dowDiff, ChronoUnit.DAYS);
    } else {
      var _temp = temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());
      var _curDow = _temp.get(ChronoField.DAY_OF_WEEK);
      var daysDiff = this._dowValue - _curDow;
      daysDiff = daysDiff === 0 ? 0 : daysDiff > 0 ? daysDiff - 7 : daysDiff;
      daysDiff -= (-this._ordinal - 1) * 7;
      return _temp.plus(daysDiff, ChronoUnit.DAYS);
    }
  };
  return DayOfWeekInMonth;
}(TemporalAdjuster);
var RelativeDayOfWeek = function (_TemporalAdjuster3) {
  _inheritsLoose(RelativeDayOfWeek, _TemporalAdjuster3);
  function RelativeDayOfWeek(relative, dayOfWeek) {
    var _this3;
    _this3 = _TemporalAdjuster3.call(this) || this;
    requireNonNull(dayOfWeek, 'dayOfWeek');
    _this3._relative = relative;
    _this3._dowValue = dayOfWeek.value();
    return _this3;
  }
  var _proto3 = RelativeDayOfWeek.prototype;
  _proto3.adjustInto = function adjustInto(temporal) {
    var calDow = temporal.get(ChronoField.DAY_OF_WEEK);
    if (this._relative < 2 && calDow === this._dowValue) {
      return temporal;
    }
    if ((this._relative & 1) === 0) {
      var daysDiff = calDow - this._dowValue;
      return temporal.plus(daysDiff >= 0 ? 7 - daysDiff : -daysDiff, ChronoUnit.DAYS);
    } else {
      var _daysDiff = this._dowValue - calDow;
      return temporal.minus(_daysDiff >= 0 ? 7 - _daysDiff : -_daysDiff, ChronoUnit.DAYS);
    }
  };
  return RelativeDayOfWeek;
}(TemporalAdjuster);

var IsoChronology = function (_Enum) {
  _inheritsLoose(IsoChronology, _Enum);
  function IsoChronology() {
    return _Enum.apply(this, arguments) || this;
  }
  IsoChronology.isLeapYear = function isLeapYear(prolepticYear) {
    return (prolepticYear & 3) === 0 && (prolepticYear % 100 !== 0 || prolepticYear % 400 === 0);
  };
  var _proto = IsoChronology.prototype;
  _proto._updateResolveMap = function _updateResolveMap(fieldValues, field, value) {
    requireNonNull(fieldValues, 'fieldValues');
    requireNonNull(field, 'field');
    var current = fieldValues.get(field);
    if (current != null && current !== value) {
      throw new DateTimeException("Invalid state, field: " + field + " " + current + " conflicts with " + field + " " + value);
    }
    fieldValues.put(field, value);
  };
  _proto.resolveDate = function resolveDate(fieldValues, resolverStyle) {
    if (fieldValues.containsKey(ChronoField.EPOCH_DAY)) {
      return LocalDate.ofEpochDay(fieldValues.remove(ChronoField.EPOCH_DAY));
    }
    var prolepticMonth = fieldValues.remove(ChronoField.PROLEPTIC_MONTH);
    if (prolepticMonth != null) {
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.PROLEPTIC_MONTH.checkValidValue(prolepticMonth);
      }
      this._updateResolveMap(fieldValues, ChronoField.MONTH_OF_YEAR, MathUtil.floorMod(prolepticMonth, 12) + 1);
      this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.floorDiv(prolepticMonth, 12));
    }
    var yoeLong = fieldValues.remove(ChronoField.YEAR_OF_ERA);
    if (yoeLong != null) {
      if (resolverStyle !== ResolverStyle.LENIENT) {
        ChronoField.YEAR_OF_ERA.checkValidValue(yoeLong);
      }
      var era = fieldValues.remove(ChronoField.ERA);
      if (era == null) {
        var year = fieldValues.get(ChronoField.YEAR);
        if (resolverStyle === ResolverStyle.STRICT) {
          if (year != null) {
            this._updateResolveMap(fieldValues, ChronoField.YEAR, year > 0 ? yoeLong : MathUtil.safeSubtract(1, yoeLong));
          } else {
            fieldValues.put(ChronoField.YEAR_OF_ERA, yoeLong);
          }
        } else {
          this._updateResolveMap(fieldValues, ChronoField.YEAR, year == null || year > 0 ? yoeLong : MathUtil.safeSubtract(1, yoeLong));
        }
      } else if (era === 1) {
        this._updateResolveMap(fieldValues, ChronoField.YEAR, yoeLong);
      } else if (era === 0) {
        this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.safeSubtract(1, yoeLong));
      } else {
        throw new DateTimeException("Invalid value for era: " + era);
      }
    } else if (fieldValues.containsKey(ChronoField.ERA)) {
      ChronoField.ERA.checkValidValue(fieldValues.get(ChronoField.ERA));
    }
    if (fieldValues.containsKey(ChronoField.YEAR)) {
      if (fieldValues.containsKey(ChronoField.MONTH_OF_YEAR)) {
        if (fieldValues.containsKey(ChronoField.DAY_OF_MONTH)) {
          var y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));
          var moy = fieldValues.remove(ChronoField.MONTH_OF_YEAR);
          var dom = fieldValues.remove(ChronoField.DAY_OF_MONTH);
          if (resolverStyle === ResolverStyle.LENIENT) {
            var months = moy - 1;
            var days = dom - 1;
            return LocalDate.of(y, 1, 1).plusMonths(months).plusDays(days);
          } else if (resolverStyle === ResolverStyle.SMART) {
            ChronoField.DAY_OF_MONTH.checkValidValue(dom);
            if (moy === 4 || moy === 6 || moy === 9 || moy === 11) {
              dom = Math.min(dom, 30);
            } else if (moy === 2) {
              dom = Math.min(dom, Month.FEBRUARY.length(Year.isLeap(y)));
            }
            return LocalDate.of(y, moy, dom);
          } else {
            return LocalDate.of(y, moy, dom);
          }
        }
      }
      if (fieldValues.containsKey(ChronoField.DAY_OF_YEAR)) {
        var _y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));
        if (resolverStyle === ResolverStyle.LENIENT) {
          var _days = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_YEAR), 1);
          return LocalDate.ofYearDay(_y, 1).plusDays(_days);
        }
        var doy = ChronoField.DAY_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_YEAR));
        return LocalDate.ofYearDay(_y, doy);
      }
      if (fieldValues.containsKey(ChronoField.ALIGNED_WEEK_OF_YEAR)) {
        if (fieldValues.containsKey(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR)) {
          var _y2 = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));
          if (resolverStyle === ResolverStyle.LENIENT) {
            var weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);
            var _days2 = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR), 1);
            return LocalDate.of(_y2, 1, 1).plusWeeks(weeks).plusDays(_days2);
          }
          var aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));
          var ad = ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));
          var date = LocalDate.of(_y2, 1, 1).plusDays((aw - 1) * 7 + (ad - 1));
          if (resolverStyle === ResolverStyle.STRICT && date.get(ChronoField.YEAR) !== _y2) {
            throw new DateTimeException('Strict mode rejected date parsed to a different year');
          }
          return date;
        }
        if (fieldValues.containsKey(ChronoField.DAY_OF_WEEK)) {
          var _y3 = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));
          if (resolverStyle === ResolverStyle.LENIENT) {
            var _weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);
            var _days3 = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_WEEK), 1);
            return LocalDate.of(_y3, 1, 1).plusWeeks(_weeks).plusDays(_days3);
          }
          var _aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));
          var dow = ChronoField.DAY_OF_WEEK.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_WEEK));
          var _date = LocalDate.of(_y3, 1, 1).plusWeeks(_aw - 1).with(TemporalAdjusters.nextOrSame(DayOfWeek.of(dow)));
          if (resolverStyle === ResolverStyle.STRICT && _date.get(ChronoField.YEAR) !== _y3) {
            throw new DateTimeException('Strict mode rejected date parsed to a different month');
          }
          return _date;
        }
      }
    }
    return null;
  };
  _proto.date = function date(temporal) {
    return LocalDate.from(temporal);
  };
  return IsoChronology;
}(Enum);
function _init$9() {
  IsoChronology.INSTANCE = new IsoChronology('IsoChronology');
}

var OffsetTime = function (_Temporal) {
  _inheritsLoose(OffsetTime, _Temporal);
  OffsetTime.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    if (temporal instanceof OffsetTime) {
      return temporal;
    } else if (temporal instanceof OffsetDateTime) {
      return temporal.toOffsetTime();
    }
    try {
      var time = LocalTime.from(temporal);
      var offset = ZoneOffset.from(temporal);
      return new OffsetTime(time, offset);
    } catch (ex) {
      throw new DateTimeException("Unable to obtain OffsetTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  OffsetTime.now = function now(clockOrZone) {
    if (arguments.length === 0) {
      return OffsetTime._now(Clock.systemDefaultZone());
    } else if (clockOrZone instanceof Clock) {
      return OffsetTime._now(clockOrZone);
    } else {
      return OffsetTime._now(Clock.system(clockOrZone));
    }
  };
  OffsetTime._now = function _now(clock) {
    requireNonNull(clock, 'clock');
    var now = clock.instant();
    return OffsetTime.ofInstant(now, clock.zone().rules().offset(now));
  };
  OffsetTime.of = function of() {
    if (arguments.length <= 2) {
      return OffsetTime.ofTimeAndOffset.apply(this, arguments);
    } else {
      return OffsetTime.ofNumbers.apply(this, arguments);
    }
  };
  OffsetTime.ofNumbers = function ofNumbers(hour, minute, second, nanoOfSecond, offset) {
    var time = LocalTime.of(hour, minute, second, nanoOfSecond);
    return new OffsetTime(time, offset);
  };
  OffsetTime.ofTimeAndOffset = function ofTimeAndOffset(time, offset) {
    return new OffsetTime(time, offset);
  };
  OffsetTime.ofInstant = function ofInstant(instant, zone) {
    requireNonNull(instant, 'instant');
    requireInstance(instant, Instant, 'instant');
    requireNonNull(zone, 'zone');
    requireInstance(zone, ZoneId, 'zone');
    var rules = zone.rules();
    var offset = rules.offset(instant);
    var secsOfDay = instant.epochSecond() % LocalTime.SECONDS_PER_DAY;
    secsOfDay = (secsOfDay + offset.totalSeconds()) % LocalTime.SECONDS_PER_DAY;
    if (secsOfDay < 0) {
      secsOfDay += LocalTime.SECONDS_PER_DAY;
    }
    var time = LocalTime.ofSecondOfDay(secsOfDay, instant.nano());
    return new OffsetTime(time, offset);
  };
  OffsetTime.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_OFFSET_TIME;
    }
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, OffsetTime.FROM);
  };
  function OffsetTime(time, offset) {
    var _this;
    _this = _Temporal.call(this) || this;
    requireNonNull(time, 'time');
    requireInstance(time, LocalTime, 'time');
    requireNonNull(offset, 'offset');
    requireInstance(offset, ZoneOffset, 'offset');
    _this._time = time;
    _this._offset = offset;
    return _this;
  }
  var _proto = OffsetTime.prototype;
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.NANO_OF_DAY, this._time.toNanoOfDay()).with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());
  };
  _proto.atDate = function atDate(date) {
    return OffsetDateTime.of(date, this._time, this._offset);
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this, OffsetTime.FROM);
  };
  _proto.get = function get(field) {
    return _Temporal.prototype.get.call(this, field);
  };
  _proto.getLong = function getLong(field) {
    if (field instanceof ChronoField) {
      if (field === ChronoField.OFFSET_SECONDS) {
        return this._offset.totalSeconds();
      }
      return this._time.getLong(field);
    }
    return field.getFrom(this);
  };
  _proto.hour = function hour() {
    return this._time.hour();
  };
  _proto.minute = function minute() {
    return this._time.minute();
  };
  _proto.second = function second() {
    return this._time.second();
  };
  _proto.nano = function nano() {
    return this._time.nano();
  };
  _proto.offset = function offset() {
    return this._offset;
  };
  _proto.isAfter = function isAfter(other) {
    requireNonNull(other, 'other');
    return this._toEpochNano() > other._toEpochNano();
  };
  _proto.isBefore = function isBefore(other) {
    requireNonNull(other, 'other');
    return this._toEpochNano() < other._toEpochNano();
  };
  _proto.isEqual = function isEqual(other) {
    requireNonNull(other, 'other');
    return this._toEpochNano() === other._toEpochNano();
  };
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoField.OFFSET_SECONDS;
    } else if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isTimeBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.minusHours = function minusHours(hours) {
    return this._withLocalTimeOffset(this._time.minusHours(hours), this._offset);
  };
  _proto.minusMinutes = function minusMinutes(minutes) {
    return this._withLocalTimeOffset(this._time.minusMinutes(minutes), this._offset);
  };
  _proto.minusSeconds = function minusSeconds(seconds) {
    return this._withLocalTimeOffset(this._time.minusSeconds(seconds), this._offset);
  };
  _proto.minusNanos = function minusNanos(nanos) {
    return this._withLocalTimeOffset(this._time.minusNanos(nanos), this._offset);
  };
  _proto._minusAmount = function _minusAmount(amount) {
    requireNonNull(amount);
    return amount.subtractFrom(this);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    return this.plus(-1 * amountToSubtract, unit);
  };
  _proto._plusAmount = function _plusAmount(amount) {
    requireNonNull(amount);
    return amount.addTo(this);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    if (unit instanceof ChronoUnit) {
      return this._withLocalTimeOffset(this._time.plus(amountToAdd, unit), this._offset);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusHours = function plusHours(hours) {
    return this._withLocalTimeOffset(this._time.plusHours(hours), this._offset);
  };
  _proto.plusMinutes = function plusMinutes(minutes) {
    return this._withLocalTimeOffset(this._time.plusMinutes(minutes), this._offset);
  };
  _proto.plusSeconds = function plusSeconds(seconds) {
    return this._withLocalTimeOffset(this._time.plusSeconds(seconds), this._offset);
  };
  _proto.plusNanos = function plusNanos(nanos) {
    return this._withLocalTimeOffset(this._time.plusNanos(nanos), this._offset);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    } else if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
      return this.offset();
    } else if (_query === TemporalQueries.localTime()) {
      return this._time;
    } else if (_query === TemporalQueries.chronology() || _query === TemporalQueries.localDate() || _query === TemporalQueries.zoneId()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      if (field === ChronoField.OFFSET_SECONDS) {
        return field.range();
      }
      return this._time.range(field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.toLocalTime = function toLocalTime() {
    return this._time;
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    return this._withLocalTimeOffset(this._time.truncatedTo(unit), this._offset);
  };
  _proto.until = function until(endExclusive, unit) {
    requireNonNull(endExclusive, 'endExclusive');
    requireNonNull(unit, 'unit');
    var end = OffsetTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      var nanosUntil = end._toEpochNano() - this._toEpochNano();
      switch (unit) {
        case ChronoUnit.NANOS:
          return nanosUntil;
        case ChronoUnit.MICROS:
          return MathUtil.intDiv(nanosUntil, 1000);
        case ChronoUnit.MILLIS:
          return MathUtil.intDiv(nanosUntil, 1000000);
        case ChronoUnit.SECONDS:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_SECOND);
        case ChronoUnit.MINUTES:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_MINUTE);
        case ChronoUnit.HOURS:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_HOUR);
        case ChronoUnit.HALF_DAYS:
          return MathUtil.intDiv(nanosUntil, 12 * LocalTime.NANOS_PER_HOUR);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  _proto.withHour = function withHour(hour) {
    return this._withLocalTimeOffset(this._time.withHour(hour), this._offset);
  };
  _proto.withMinute = function withMinute(minute) {
    return this._withLocalTimeOffset(this._time.withMinute(minute), this._offset);
  };
  _proto.withSecond = function withSecond(second) {
    return this._withLocalTimeOffset(this._time.withSecond(second), this._offset);
  };
  _proto.withNano = function withNano(nano) {
    return this._withLocalTimeOffset(this._time.withNano(nano), this._offset);
  };
  _proto.withOffsetSameInstant = function withOffsetSameInstant(offset) {
    requireNonNull(offset, 'offset');
    if (offset.equals(this._offset)) {
      return this;
    }
    var difference = offset.totalSeconds() - this._offset.totalSeconds();
    var adjusted = this._time.plusSeconds(difference);
    return new OffsetTime(adjusted, offset);
  };
  _proto.withOffsetSameLocal = function withOffsetSameLocal(offset) {
    return offset != null && offset.equals(this._offset) ? this : new OffsetTime(this._time, offset);
  };
  _proto._toEpochNano = function _toEpochNano() {
    var nod = this._time.toNanoOfDay();
    var offsetNanos = this._offset.totalSeconds() * LocalTime.NANOS_PER_SECOND;
    return nod - offsetNanos;
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster, 'adjuster');
    if (adjuster instanceof LocalTime) {
      return this._withLocalTimeOffset(adjuster, this._offset);
    } else if (adjuster instanceof ZoneOffset) {
      return this._withLocalTimeOffset(this._time, adjuster);
    } else if (adjuster instanceof OffsetTime) {
      return adjuster;
    }
    return adjuster.adjustInto(this);
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      if (field === ChronoField.OFFSET_SECONDS) {
        return this._withLocalTimeOffset(this._time, ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue)));
      }
      return this._withLocalTimeOffset(this._time.with(field, newValue), this._offset);
    }
    return field.adjustInto(this, newValue);
  };
  _proto._withLocalTimeOffset = function _withLocalTimeOffset(time, offset) {
    if (this._time === time && this._offset.equals(offset)) {
      return this;
    }
    return new OffsetTime(time, offset);
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, OffsetTime, 'other');
    if (this._offset.equals(other._offset)) {
      return this._time.compareTo(other._time);
    }
    var compare = MathUtil.compareNumbers(this._toEpochNano(), other._toEpochNano());
    if (compare === 0) {
      return this._time.compareTo(other._time);
    }
    return compare;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof OffsetTime) {
      return this._time.equals(other._time) && this._offset.equals(other._offset);
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._time.hashCode() ^ this._offset.hashCode();
  };
  _proto.toString = function toString() {
    return this._time.toString() + this._offset.toString();
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return OffsetTime;
}(Temporal);
function _init$8() {
  OffsetTime.MIN = OffsetTime.ofNumbers(0, 0, 0, 0, ZoneOffset.MAX);
  OffsetTime.MAX = OffsetTime.ofNumbers(23, 59, 59, 999999999, ZoneOffset.MIN);
  OffsetTime.FROM = createTemporalQuery('OffsetTime.FROM', function (temporal) {
    return OffsetTime.from(temporal);
  });
}

var ChronoZonedDateTime = function (_Temporal) {
  _inheritsLoose(ChronoZonedDateTime, _Temporal);
  function ChronoZonedDateTime() {
    return _Temporal.apply(this, arguments) || this;
  }
  var _proto = ChronoZonedDateTime.prototype;
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.zoneId() || _query === TemporalQueries.zone()) {
      return this.zone();
    } else if (_query === TemporalQueries.chronology()) {
      return this.toLocalDate().chronology();
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    } else if (_query === TemporalQueries.offset()) {
      return this.offset();
    } else if (_query === TemporalQueries.localDate()) {
      return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());
    } else if (_query === TemporalQueries.localTime()) {
      return this.toLocalTime();
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this);
  };
  _proto.toInstant = function toInstant() {
    return Instant.ofEpochSecond(this.toEpochSecond(), this.toLocalTime().nano());
  };
  _proto.toEpochSecond = function toEpochSecond() {
    var epochDay = this.toLocalDate().toEpochDay();
    var secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();
    secs -= this.offset().totalSeconds();
    return secs;
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    var cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());
    if (cmp === 0) {
      cmp = this.toLocalTime().nano() - other.toLocalTime().nano();
      if (cmp === 0) {
        cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());
        if (cmp === 0) {
          cmp = strcmp(this.zone().id(), other.zone().id());
        }
      }
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    requireNonNull(other, 'other');
    var thisEpochSec = this.toEpochSecond();
    var otherEpochSec = other.toEpochSecond();
    return thisEpochSec > otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano();
  };
  _proto.isBefore = function isBefore(other) {
    requireNonNull(other, 'other');
    var thisEpochSec = this.toEpochSecond();
    var otherEpochSec = other.toEpochSecond();
    return thisEpochSec < otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano();
  };
  _proto.isEqual = function isEqual(other) {
    requireNonNull(other, 'other');
    return this.toEpochSecond() === other.toEpochSecond() && this.toLocalTime().nano() === other.toLocalTime().nano();
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof ChronoZonedDateTime) {
      return this.compareTo(other) === 0;
    }
    return false;
  };
  return ChronoZonedDateTime;
}(Temporal);
function strcmp(a, b) {
  if (a < b) {
    return -1;
  }
  if (a > b) {
    return 1;
  }
  return 0;
}

var ZonedDateTime = function (_ChronoZonedDateTime) {
  _inheritsLoose(ZonedDateTime, _ChronoZonedDateTime);
  ZonedDateTime.now = function now(clockOrZone) {
    var clock;
    if (clockOrZone instanceof ZoneId) {
      clock = Clock.system(clockOrZone);
    } else {
      clock = clockOrZone == null ? Clock.systemDefaultZone() : clockOrZone;
    }
    return ZonedDateTime.ofInstant(clock.instant(), clock.zone());
  };
  ZonedDateTime.of = function of() {
    if (arguments.length <= 2) {
      return ZonedDateTime.of2.apply(this, arguments);
    } else if (arguments.length === 3 && arguments[0] instanceof LocalDate) {
      return ZonedDateTime.of3.apply(this, arguments);
    } else {
      return ZonedDateTime.of8.apply(this, arguments);
    }
  };
  ZonedDateTime.of3 = function of3(date, time, zone) {
    return ZonedDateTime.of2(LocalDateTime.of(date, time), zone);
  };
  ZonedDateTime.of2 = function of2(localDateTime, zone) {
    return ZonedDateTime.ofLocal(localDateTime, zone, null);
  };
  ZonedDateTime.of8 = function of8(year, month, dayOfMonth, hour, minute, second, nanoOfSecond, zone) {
    var dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);
    return ZonedDateTime.ofLocal(dt, zone, null);
  };
  ZonedDateTime.ofLocal = function ofLocal(localDateTime, zone, preferredOffset) {
    requireNonNull(localDateTime, 'localDateTime');
    requireNonNull(zone, 'zone');
    if (zone instanceof ZoneOffset) {
      return new ZonedDateTime(localDateTime, zone, zone);
    }
    var offset = null;
    var rules = zone.rules();
    var validOffsets = rules.validOffsets(localDateTime);
    if (validOffsets.length === 1) {
      offset = validOffsets[0];
    } else if (validOffsets.length === 0) {
      var trans = rules.transition(localDateTime);
      localDateTime = localDateTime.plusSeconds(trans.duration().seconds());
      offset = trans.offsetAfter();
    } else {
      if (preferredOffset != null && validOffsets.some(function (validOffset) {
        return validOffset.equals(preferredOffset);
      })) {
        offset = preferredOffset;
      } else {
        offset = requireNonNull(validOffsets[0], 'offset');
      }
    }
    return new ZonedDateTime(localDateTime, offset, zone);
  };
  ZonedDateTime.ofInstant = function ofInstant() {
    if (arguments.length === 2) {
      return ZonedDateTime.ofInstant2.apply(this, arguments);
    } else {
      return ZonedDateTime.ofInstant3.apply(this, arguments);
    }
  };
  ZonedDateTime.ofInstant2 = function ofInstant2(instant, zone) {
    requireNonNull(instant, 'instant');
    requireNonNull(zone, 'zone');
    return ZonedDateTime._create(instant.epochSecond(), instant.nano(), zone);
  };
  ZonedDateTime.ofInstant3 = function ofInstant3(localDateTime, offset, zone) {
    requireNonNull(localDateTime, 'localDateTime');
    requireNonNull(offset, 'offset');
    requireNonNull(zone, 'zone');
    return ZonedDateTime._create(localDateTime.toEpochSecond(offset), localDateTime.nano(), zone);
  };
  ZonedDateTime._create = function _create(epochSecond, nanoOfSecond, zone) {
    var rules = zone.rules();
    var instant = Instant.ofEpochSecond(epochSecond, nanoOfSecond);
    var offset = rules.offset(instant);
    var ldt = LocalDateTime.ofEpochSecond(epochSecond, nanoOfSecond, offset);
    return new ZonedDateTime(ldt, offset, zone);
  };
  ZonedDateTime.ofStrict = function ofStrict(localDateTime, offset, zone) {
    requireNonNull(localDateTime, 'localDateTime');
    requireNonNull(offset, 'offset');
    requireNonNull(zone, 'zone');
    var rules = zone.rules();
    if (rules.isValidOffset(localDateTime, offset) === false) {
      var trans = rules.transition(localDateTime);
      if (trans != null && trans.isGap()) {
        throw new DateTimeException("LocalDateTime " + localDateTime + " does not exist in zone " + zone + " due to a gap in the local time-line, typically caused by daylight savings");
      }
      throw new DateTimeException("ZoneOffset \"" + offset + "\" is not valid for LocalDateTime \"" + localDateTime + "\" in zone \"" + zone + "\"");
    }
    return new ZonedDateTime(localDateTime, offset, zone);
  };
  ZonedDateTime.ofLenient = function ofLenient(localDateTime, offset, zone) {
    requireNonNull(localDateTime, 'localDateTime');
    requireNonNull(offset, 'offset');
    requireNonNull(zone, 'zone');
    if (zone instanceof ZoneOffset && offset.equals(zone) === false) {
      throw new IllegalArgumentException('ZoneId must match ZoneOffset');
    }
    return new ZonedDateTime(localDateTime, offset, zone);
  };
  ZonedDateTime.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    if (temporal instanceof ZonedDateTime) {
      return temporal;
    }
    var zone = ZoneId.from(temporal);
    if (temporal.isSupported(ChronoField.INSTANT_SECONDS)) {
      var zdt = ZonedDateTime._from(temporal, zone);
      if (zdt != null) return zdt;
    }
    var ldt = LocalDateTime.from(temporal);
    return ZonedDateTime.of2(ldt, zone);
  };
  ZonedDateTime._from = function _from(temporal, zone) {
    try {
      return ZonedDateTime.__from(temporal, zone);
    } catch (ex) {
      if (!(ex instanceof DateTimeException)) throw ex;
    }
  };
  ZonedDateTime.__from = function __from(temporal, zone) {
    var epochSecond = temporal.getLong(ChronoField.INSTANT_SECONDS);
    var nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);
    return ZonedDateTime._create(epochSecond, nanoOfSecond, zone);
  };
  ZonedDateTime.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_ZONED_DATE_TIME;
    }
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, ZonedDateTime.FROM);
  };
  function ZonedDateTime(dateTime, offset, zone) {
    var _this;
    requireNonNull(dateTime, 'dateTime');
    requireNonNull(offset, 'offset');
    requireNonNull(zone, 'zone');
    _this = _ChronoZonedDateTime.call(this) || this;
    _this._dateTime = dateTime;
    _this._offset = offset;
    _this._zone = zone;
    return _this;
  }
  var _proto = ZonedDateTime.prototype;
  _proto._resolveLocal = function _resolveLocal(newDateTime) {
    requireNonNull(newDateTime, 'newDateTime');
    return ZonedDateTime.ofLocal(newDateTime, this._zone, this._offset);
  };
  _proto._resolveInstant = function _resolveInstant(newDateTime) {
    return ZonedDateTime.ofInstant3(newDateTime, this._offset, this._zone);
  };
  _proto._resolveOffset = function _resolveOffset(offset) {
    if (offset.equals(this._offset) === false && this._zone.rules().isValidOffset(this._dateTime, offset)) {
      return new ZonedDateTime(this._dateTime, offset, this._zone);
    }
    return this;
  };
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return true;
    } else if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {
        return field.range();
      }
      return this._dateTime.range(field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.get = function get(field) {
    return this.getLong(field);
  };
  _proto.getLong = function getLong(field) {
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.INSTANT_SECONDS:
          return this.toEpochSecond();
        case ChronoField.OFFSET_SECONDS:
          return this._offset.totalSeconds();
      }
      return this._dateTime.getLong(field);
    }
    requireNonNull(field, 'field');
    return field.getFrom(this);
  };
  _proto.offset = function offset() {
    return this._offset;
  };
  _proto.withEarlierOffsetAtOverlap = function withEarlierOffsetAtOverlap() {
    var trans = this._zone.rules().transition(this._dateTime);
    if (trans != null && trans.isOverlap()) {
      var earlierOffset = trans.offsetBefore();
      if (earlierOffset.equals(this._offset) === false) {
        return new ZonedDateTime(this._dateTime, earlierOffset, this._zone);
      }
    }
    return this;
  };
  _proto.withLaterOffsetAtOverlap = function withLaterOffsetAtOverlap() {
    var trans = this._zone.rules().transition(this.toLocalDateTime());
    if (trans != null) {
      var laterOffset = trans.offsetAfter();
      if (laterOffset.equals(this._offset) === false) {
        return new ZonedDateTime(this._dateTime, laterOffset, this._zone);
      }
    }
    return this;
  };
  _proto.zone = function zone() {
    return this._zone;
  };
  _proto.withZoneSameLocal = function withZoneSameLocal(zone) {
    requireNonNull(zone, 'zone');
    return this._zone.equals(zone) ? this : ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);
  };
  _proto.withZoneSameInstant = function withZoneSameInstant(zone) {
    requireNonNull(zone, 'zone');
    return this._zone.equals(zone) ? this : ZonedDateTime._create(this._dateTime.toEpochSecond(this._offset), this._dateTime.nano(), zone);
  };
  _proto.withFixedOffsetZone = function withFixedOffsetZone() {
    return this._zone.equals(this._offset) ? this : new ZonedDateTime(this._dateTime, this._offset, this._offset);
  };
  _proto.year = function year() {
    return this._dateTime.year();
  };
  _proto.monthValue = function monthValue() {
    return this._dateTime.monthValue();
  };
  _proto.month = function month() {
    return this._dateTime.month();
  };
  _proto.dayOfMonth = function dayOfMonth() {
    return this._dateTime.dayOfMonth();
  };
  _proto.dayOfYear = function dayOfYear() {
    return this._dateTime.dayOfYear();
  };
  _proto.dayOfWeek = function dayOfWeek() {
    return this._dateTime.dayOfWeek();
  };
  _proto.hour = function hour() {
    return this._dateTime.hour();
  };
  _proto.minute = function minute() {
    return this._dateTime.minute();
  };
  _proto.second = function second() {
    return this._dateTime.second();
  };
  _proto.nano = function nano() {
    return this._dateTime.nano();
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    if (adjuster instanceof LocalDate) {
      return this._resolveLocal(LocalDateTime.of(adjuster, this._dateTime.toLocalTime()));
    } else if (adjuster instanceof LocalTime) {
      return this._resolveLocal(LocalDateTime.of(this._dateTime.toLocalDate(), adjuster));
    } else if (adjuster instanceof LocalDateTime) {
      return this._resolveLocal(adjuster);
    } else if (adjuster instanceof Instant) {
      var instant = adjuster;
      return ZonedDateTime._create(instant.epochSecond(), instant.nano(), this._zone);
    } else if (adjuster instanceof ZoneOffset) {
      return this._resolveOffset(adjuster);
    }
    return _ChronoZonedDateTime.prototype._withAdjuster.call(this, adjuster);
  };
  _proto._withField = function _withField(field, newValue) {
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.INSTANT_SECONDS:
          return ZonedDateTime._create(newValue, this.nano(), this._zone);
        case ChronoField.OFFSET_SECONDS:
          {
            var offset = ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue));
            return this._resolveOffset(offset);
          }
      }
      return this._resolveLocal(this._dateTime.with(field, newValue));
    }
    return field.adjustInto(this, newValue);
  };
  _proto.withYear = function withYear(year) {
    return this._resolveLocal(this._dateTime.withYear(year));
  };
  _proto.withMonth = function withMonth(month) {
    return this._resolveLocal(this._dateTime.withMonth(month));
  };
  _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
    return this._resolveLocal(this._dateTime.withDayOfMonth(dayOfMonth));
  };
  _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
    return this._resolveLocal(this._dateTime.withDayOfYear(dayOfYear));
  };
  _proto.withHour = function withHour(hour) {
    return this._resolveLocal(this._dateTime.withHour(hour));
  };
  _proto.withMinute = function withMinute(minute) {
    return this._resolveLocal(this._dateTime.withMinute(minute));
  };
  _proto.withSecond = function withSecond(second) {
    return this._resolveLocal(this._dateTime.withSecond(second));
  };
  _proto.withNano = function withNano(nanoOfSecond) {
    return this._resolveLocal(this._dateTime.withNano(nanoOfSecond));
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    return this._resolveLocal(this._dateTime.truncatedTo(unit));
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    if (unit instanceof ChronoUnit) {
      if (unit.isDateBased()) {
        return this._resolveLocal(this._dateTime.plus(amountToAdd, unit));
      } else {
        return this._resolveInstant(this._dateTime.plus(amountToAdd, unit));
      }
    }
    requireNonNull(unit, 'unit');
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(years) {
    return this._resolveLocal(this._dateTime.plusYears(years));
  };
  _proto.plusMonths = function plusMonths(months) {
    return this._resolveLocal(this._dateTime.plusMonths(months));
  };
  _proto.plusWeeks = function plusWeeks(weeks) {
    return this._resolveLocal(this._dateTime.plusWeeks(weeks));
  };
  _proto.plusDays = function plusDays(days) {
    return this._resolveLocal(this._dateTime.plusDays(days));
  };
  _proto.plusHours = function plusHours(hours) {
    return this._resolveInstant(this._dateTime.plusHours(hours));
  };
  _proto.plusMinutes = function plusMinutes(minutes) {
    return this._resolveInstant(this._dateTime.plusMinutes(minutes));
  };
  _proto.plusSeconds = function plusSeconds(seconds) {
    return this._resolveInstant(this._dateTime.plusSeconds(seconds));
  };
  _proto.plusNanos = function plusNanos(nanos) {
    return this._resolveInstant(this._dateTime.plusNanos(nanos));
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    return this._plusUnit(-1 * amountToSubtract, unit);
  };
  _proto.minusYears = function minusYears(years) {
    return this.plusYears(-1 * years);
  };
  _proto.minusMonths = function minusMonths(months) {
    return this.plusMonths(-1 * months);
  };
  _proto.minusWeeks = function minusWeeks(weeks) {
    return this.plusWeeks(-1 * weeks);
  };
  _proto.minusDays = function minusDays(days) {
    return this.plusDays(-1 * days);
  };
  _proto.minusHours = function minusHours(hours) {
    return this.plusHours(-1 * hours);
  };
  _proto.minusMinutes = function minusMinutes(minutes) {
    return this.plusMinutes(-1 * minutes);
  };
  _proto.minusSeconds = function minusSeconds(seconds) {
    return this.plusSeconds(-1 * seconds);
  };
  _proto.minusNanos = function minusNanos(nanos) {
    return this.plusNanos(-1 * nanos);
  };
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.localDate()) {
      return this.toLocalDate();
    }
    requireNonNull(_query, 'query');
    return _ChronoZonedDateTime.prototype.query.call(this, _query);
  };
  _proto.until = function until(endExclusive, unit) {
    var end = ZonedDateTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      end = end.withZoneSameInstant(this._zone);
      if (unit.isDateBased()) {
        return this._dateTime.until(end._dateTime, unit);
      } else {
        var difference = this._offset.totalSeconds() - end._offset.totalSeconds();
        var adjustedEnd = end._dateTime.plusSeconds(difference);
        return this._dateTime.until(adjustedEnd, unit);
      }
    }
    return unit.between(this, end);
  };
  _proto.toLocalDateTime = function toLocalDateTime() {
    return this._dateTime;
  };
  _proto.toLocalDate = function toLocalDate() {
    return this._dateTime.toLocalDate();
  };
  _proto.toLocalTime = function toLocalTime() {
    return this._dateTime.toLocalTime();
  };
  _proto.toOffsetDateTime = function toOffsetDateTime() {
    return OffsetDateTime.of(this._dateTime, this._offset);
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof ZonedDateTime) {
      return this._dateTime.equals(other._dateTime) && this._offset.equals(other._offset) && this._zone.equals(other._zone);
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return MathUtil.hashCode(this._dateTime.hashCode(), this._offset.hashCode(), this._zone.hashCode());
  };
  _proto.toString = function toString() {
    var str = this._dateTime.toString() + this._offset.toString();
    if (this._offset !== this._zone) {
      str += "[" + this._zone.toString() + "]";
    }
    return str;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    return _ChronoZonedDateTime.prototype.format.call(this, formatter);
  };
  return ZonedDateTime;
}(ChronoZonedDateTime);
function _init$7() {
  ZonedDateTime.FROM = createTemporalQuery('ZonedDateTime.FROM', function (temporal) {
    return ZonedDateTime.from(temporal);
  });
}

var OffsetDateTime = function (_Temporal) {
  _inheritsLoose(OffsetDateTime, _Temporal);
  OffsetDateTime.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    if (temporal instanceof OffsetDateTime) {
      return temporal;
    }
    try {
      var offset = ZoneOffset.from(temporal);
      try {
        var ldt = LocalDateTime.from(temporal);
        return OffsetDateTime.of(ldt, offset);
      } catch (_) {
        var instant = Instant.from(temporal);
        return OffsetDateTime.ofInstant(instant, offset);
      }
    } catch (ex) {
      throw new DateTimeException("Unable to obtain OffsetDateTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  OffsetDateTime.now = function now(clockOrZone) {
    if (arguments.length === 0) {
      return OffsetDateTime.now(Clock.systemDefaultZone());
    } else {
      requireNonNull(clockOrZone, 'clockOrZone');
      if (clockOrZone instanceof ZoneId) {
        return OffsetDateTime.now(Clock.system(clockOrZone));
      } else if (clockOrZone instanceof Clock) {
        var now = clockOrZone.instant();
        return OffsetDateTime.ofInstant(now, clockOrZone.zone().rules().offset(now));
      } else {
        throw new IllegalArgumentException('clockOrZone must be an instance of ZoneId or Clock');
      }
    }
  };
  OffsetDateTime.of = function of() {
    if (arguments.length <= 2) {
      return OffsetDateTime.ofDateTime.apply(this, arguments);
    } else if (arguments.length === 3) {
      return OffsetDateTime.ofDateAndTime.apply(this, arguments);
    } else {
      return OffsetDateTime.ofNumbers.apply(this, arguments);
    }
  };
  OffsetDateTime.ofDateTime = function ofDateTime(dateTime, offset) {
    return new OffsetDateTime(dateTime, offset);
  };
  OffsetDateTime.ofDateAndTime = function ofDateAndTime(date, time, offset) {
    var dt = LocalDateTime.of(date, time);
    return new OffsetDateTime(dt, offset);
  };
  OffsetDateTime.ofNumbers = function ofNumbers(year, month, dayOfMonth, hour, minute, second, nanoOfSecond, offset) {
    if (hour === void 0) {
      hour = 0;
    }
    if (minute === void 0) {
      minute = 0;
    }
    if (second === void 0) {
      second = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    var dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);
    return new OffsetDateTime(dt, offset);
  };
  OffsetDateTime.ofInstant = function ofInstant(instant, zone) {
    requireNonNull(instant, 'instant');
    requireNonNull(zone, 'zone');
    var rules = zone.rules();
    var offset = rules.offset(instant);
    var ldt = LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);
    return new OffsetDateTime(ldt, offset);
  };
  OffsetDateTime.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_OFFSET_DATE_TIME;
    }
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, OffsetDateTime.FROM);
  };
  function OffsetDateTime(dateTime, offset) {
    var _this;
    _this = _Temporal.call(this) || this;
    requireNonNull(dateTime, 'dateTime');
    requireInstance(dateTime, LocalDateTime, 'dateTime');
    requireNonNull(offset, 'offset');
    requireInstance(offset, ZoneOffset, 'offset');
    _this._dateTime = dateTime;
    _this._offset = offset;
    return _this;
  }
  var _proto = OffsetDateTime.prototype;
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay()).with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay()).with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());
  };
  _proto.until = function until(endExclusive, unit) {
    var end = OffsetDateTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      end = end.withOffsetSameInstant(this._offset);
      return this._dateTime.until(end._dateTime, unit);
    }
    return unit.between(this, end);
  };
  _proto.atZoneSameInstant = function atZoneSameInstant(zone) {
    return ZonedDateTime.ofInstant(this._dateTime, this._offset, zone);
  };
  _proto.atZoneSimilarLocal = function atZoneSimilarLocal(zone) {
    return ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.chronology()) {
      return IsoChronology.INSTANCE;
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    } else if (_query === TemporalQueries.offset() || _query === TemporalQueries.zone()) {
      return this.offset();
    } else if (_query === TemporalQueries.localDate()) {
      return this.toLocalDate();
    } else if (_query === TemporalQueries.localTime()) {
      return this.toLocalTime();
    } else if (_query === TemporalQueries.zoneId()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.get = function get(field) {
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.INSTANT_SECONDS:
          throw new DateTimeException("Field too large for an int: " + field);
        case ChronoField.OFFSET_SECONDS:
          return this.offset().totalSeconds();
      }
      return this._dateTime.get(field);
    }
    return _Temporal.prototype.get.call(this, field);
  };
  _proto.getLong = function getLong(field) {
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.INSTANT_SECONDS:
          return this.toEpochSecond();
        case ChronoField.OFFSET_SECONDS:
          return this.offset().totalSeconds();
      }
      return this._dateTime.getLong(field);
    }
    return field.getFrom(this);
  };
  _proto.offset = function offset() {
    return this._offset;
  };
  _proto.year = function year() {
    return this._dateTime.year();
  };
  _proto.monthValue = function monthValue() {
    return this._dateTime.monthValue();
  };
  _proto.month = function month() {
    return this._dateTime.month();
  };
  _proto.dayOfMonth = function dayOfMonth() {
    return this._dateTime.dayOfMonth();
  };
  _proto.dayOfYear = function dayOfYear() {
    return this._dateTime.dayOfYear();
  };
  _proto.dayOfWeek = function dayOfWeek() {
    return this._dateTime.dayOfWeek();
  };
  _proto.hour = function hour() {
    return this._dateTime.hour();
  };
  _proto.minute = function minute() {
    return this._dateTime.minute();
  };
  _proto.second = function second() {
    return this._dateTime.second();
  };
  _proto.nano = function nano() {
    return this._dateTime.nano();
  };
  _proto.toLocalDateTime = function toLocalDateTime() {
    return this._dateTime;
  };
  _proto.toLocalDate = function toLocalDate() {
    return this._dateTime.toLocalDate();
  };
  _proto.toLocalTime = function toLocalTime() {
    return this._dateTime.toLocalTime();
  };
  _proto.toOffsetTime = function toOffsetTime() {
    return OffsetTime.of(this._dateTime.toLocalTime(), this._offset);
  };
  _proto.toZonedDateTime = function toZonedDateTime() {
    return ZonedDateTime.of(this._dateTime, this._offset);
  };
  _proto.toInstant = function toInstant() {
    return this._dateTime.toInstant(this._offset);
  };
  _proto.toEpochSecond = function toEpochSecond() {
    return this._dateTime.toEpochSecond(this._offset);
  };
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
    }
    if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {
        return field.range();
      }
      return this._dateTime.range(field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster);
    if (adjuster instanceof LocalDate || adjuster instanceof LocalTime || adjuster instanceof LocalDateTime) {
      return this._withDateTimeOffset(this._dateTime.with(adjuster), this._offset);
    } else if (adjuster instanceof Instant) {
      return OffsetDateTime.ofInstant(adjuster, this._offset);
    } else if (adjuster instanceof ZoneOffset) {
      return this._withDateTimeOffset(this._dateTime, adjuster);
    } else if (adjuster instanceof OffsetDateTime) {
      return adjuster;
    }
    return adjuster.adjustInto(this);
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field);
    if (field instanceof ChronoField) {
      var f = field;
      switch (f) {
        case ChronoField.INSTANT_SECONDS:
          return OffsetDateTime.ofInstant(Instant.ofEpochSecond(newValue, this.nano()), this._offset);
        case ChronoField.OFFSET_SECONDS:
          {
            return this._withDateTimeOffset(this._dateTime, ZoneOffset.ofTotalSeconds(f.checkValidIntValue(newValue)));
          }
      }
      return this._withDateTimeOffset(this._dateTime.with(field, newValue), this._offset);
    }
    return field.adjustInto(this, newValue);
  };
  _proto._withDateTimeOffset = function _withDateTimeOffset(dateTime, offset) {
    if (this._dateTime === dateTime && this._offset.equals(offset)) {
      return this;
    }
    return new OffsetDateTime(dateTime, offset);
  };
  _proto.withYear = function withYear(year) {
    return this._withDateTimeOffset(this._dateTime.withYear(year), this._offset);
  };
  _proto.withMonth = function withMonth(month) {
    return this._withDateTimeOffset(this._dateTime.withMonth(month), this._offset);
  };
  _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
    return this._withDateTimeOffset(this._dateTime.withDayOfMonth(dayOfMonth), this._offset);
  };
  _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
    return this._withDateTimeOffset(this._dateTime.withDayOfYear(dayOfYear), this._offset);
  };
  _proto.withHour = function withHour(hour) {
    return this._withDateTimeOffset(this._dateTime.withHour(hour), this._offset);
  };
  _proto.withMinute = function withMinute(minute) {
    return this._withDateTimeOffset(this._dateTime.withMinute(minute), this._offset);
  };
  _proto.withSecond = function withSecond(second) {
    return this._withDateTimeOffset(this._dateTime.withSecond(second), this._offset);
  };
  _proto.withNano = function withNano(nanoOfSecond) {
    return this._withDateTimeOffset(this._dateTime.withNano(nanoOfSecond), this._offset);
  };
  _proto.withOffsetSameLocal = function withOffsetSameLocal(offset) {
    requireNonNull(offset, 'offset');
    return this._withDateTimeOffset(this._dateTime, offset);
  };
  _proto.withOffsetSameInstant = function withOffsetSameInstant(offset) {
    requireNonNull(offset, 'offset');
    if (offset.equals(this._offset)) {
      return this;
    }
    var difference = offset.totalSeconds() - this._offset.totalSeconds();
    var adjusted = this._dateTime.plusSeconds(difference);
    return new OffsetDateTime(adjusted, offset);
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    return this._withDateTimeOffset(this._dateTime.truncatedTo(unit), this._offset);
  };
  _proto._plusAmount = function _plusAmount(amount) {
    requireNonNull(amount, 'amount');
    return amount.addTo(this);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    if (unit instanceof ChronoUnit) {
      return this._withDateTimeOffset(this._dateTime.plus(amountToAdd, unit), this._offset);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(years) {
    return this._withDateTimeOffset(this._dateTime.plusYears(years), this._offset);
  };
  _proto.plusMonths = function plusMonths(months) {
    return this._withDateTimeOffset(this._dateTime.plusMonths(months), this._offset);
  };
  _proto.plusWeeks = function plusWeeks(weeks) {
    return this._withDateTimeOffset(this._dateTime.plusWeeks(weeks), this._offset);
  };
  _proto.plusDays = function plusDays(days) {
    return this._withDateTimeOffset(this._dateTime.plusDays(days), this._offset);
  };
  _proto.plusHours = function plusHours(hours) {
    return this._withDateTimeOffset(this._dateTime.plusHours(hours), this._offset);
  };
  _proto.plusMinutes = function plusMinutes(minutes) {
    return this._withDateTimeOffset(this._dateTime.plusMinutes(minutes), this._offset);
  };
  _proto.plusSeconds = function plusSeconds(seconds) {
    return this._withDateTimeOffset(this._dateTime.plusSeconds(seconds), this._offset);
  };
  _proto.plusNanos = function plusNanos(nanos) {
    return this._withDateTimeOffset(this._dateTime.plusNanos(nanos), this._offset);
  };
  _proto._minusAmount = function _minusAmount(amount) {
    requireNonNull(amount);
    return amount.subtractFrom(this);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    return this.plus(-1 * amountToSubtract, unit);
  };
  _proto.minusYears = function minusYears(years) {
    return this._withDateTimeOffset(this._dateTime.minusYears(years), this._offset);
  };
  _proto.minusMonths = function minusMonths(months) {
    return this._withDateTimeOffset(this._dateTime.minusMonths(months), this._offset);
  };
  _proto.minusWeeks = function minusWeeks(weeks) {
    return this._withDateTimeOffset(this._dateTime.minusWeeks(weeks), this._offset);
  };
  _proto.minusDays = function minusDays(days) {
    return this._withDateTimeOffset(this._dateTime.minusDays(days), this._offset);
  };
  _proto.minusHours = function minusHours(hours) {
    return this._withDateTimeOffset(this._dateTime.minusHours(hours), this._offset);
  };
  _proto.minusMinutes = function minusMinutes(minutes) {
    return this._withDateTimeOffset(this._dateTime.minusMinutes(minutes), this._offset);
  };
  _proto.minusSeconds = function minusSeconds(seconds) {
    return this._withDateTimeOffset(this._dateTime.minusSeconds(seconds), this._offset);
  };
  _proto.minusNanos = function minusNanos(nanos) {
    return this._withDateTimeOffset(this._dateTime.minusNanos(nanos), this._offset);
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, OffsetDateTime, 'other');
    if (this.offset().equals(other.offset())) {
      return this.toLocalDateTime().compareTo(other.toLocalDateTime());
    }
    var cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());
    if (cmp === 0) {
      cmp = this.toLocalTime().nano() - other.toLocalTime().nano();
      if (cmp === 0) {
        cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());
      }
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    requireNonNull(other, 'other');
    var thisEpochSec = this.toEpochSecond();
    var otherEpochSec = other.toEpochSecond();
    return thisEpochSec > otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano();
  };
  _proto.isBefore = function isBefore(other) {
    requireNonNull(other, 'other');
    var thisEpochSec = this.toEpochSecond();
    var otherEpochSec = other.toEpochSecond();
    return thisEpochSec < otherEpochSec || thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano();
  };
  _proto.isEqual = function isEqual(other) {
    requireNonNull(other, 'other');
    return this.toEpochSecond() === other.toEpochSecond() && this.toLocalTime().nano() === other.toLocalTime().nano();
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof OffsetDateTime) {
      return this._dateTime.equals(other._dateTime) && this._offset.equals(other._offset);
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._dateTime.hashCode() ^ this._offset.hashCode();
  };
  _proto.toString = function toString() {
    return this._dateTime.toString() + this._offset.toString();
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this);
  };
  return OffsetDateTime;
}(Temporal);
function _init$6() {
  OffsetDateTime.MIN = LocalDateTime.MIN.atOffset(ZoneOffset.MAX);
  OffsetDateTime.MAX = LocalDateTime.MAX.atOffset(ZoneOffset.MIN);
  OffsetDateTime.FROM = createTemporalQuery('OffsetDateTime.FROM', function (temporal) {
    return OffsetDateTime.from(temporal);
  });
}

var DAYS_PER_CYCLE = 146097;
var DAYS_0000_TO_1970 = DAYS_PER_CYCLE * 5 - (30 * 365 + 7);
var LocalDate = function (_ChronoLocalDate) {
  _inheritsLoose(LocalDate, _ChronoLocalDate);
  LocalDate.now = function now(clockOrZone) {
    var clock;
    if (clockOrZone == null) {
      clock = Clock.systemDefaultZone();
    } else if (clockOrZone instanceof ZoneId) {
      clock = Clock.system(clockOrZone);
    } else {
      clock = clockOrZone;
    }
    return LocalDate.ofInstant(clock.instant(), clock.zone());
  };
  LocalDate.ofInstant = function ofInstant(instant, zone) {
    if (zone === void 0) {
      zone = ZoneId.systemDefault();
    }
    requireNonNull(instant, 'instant');
    var offset = zone.rules().offset(instant);
    var epochSec = instant.epochSecond() + offset.totalSeconds();
    var epochDay = MathUtil.floorDiv(epochSec, LocalTime.SECONDS_PER_DAY);
    return LocalDate.ofEpochDay(epochDay);
  };
  LocalDate.of = function of(year, month, dayOfMonth) {
    return new LocalDate(year, month, dayOfMonth);
  };
  LocalDate.ofYearDay = function ofYearDay(year, dayOfYear) {
    ChronoField.YEAR.checkValidValue(year);
    var leap = IsoChronology.isLeapYear(year);
    if (dayOfYear === 366 && leap === false) {
      assert(false, "Invalid date 'DayOfYear 366' as '" + year + "' is not a leap year", DateTimeException);
    }
    var moy = Month.of(Math.floor((dayOfYear - 1) / 31 + 1));
    var monthEnd = moy.firstDayOfYear(leap) + moy.length(leap) - 1;
    if (dayOfYear > monthEnd) {
      moy = moy.plus(1);
    }
    var dom = dayOfYear - moy.firstDayOfYear(leap) + 1;
    return new LocalDate(year, moy.value(), dom);
  };
  LocalDate.ofEpochDay = function ofEpochDay(epochDay) {
    if (epochDay === void 0) {
      epochDay = 0;
    }
    var adjust, adjustCycles, doyEst, yearEst, zeroDay;
    zeroDay = epochDay + DAYS_0000_TO_1970;
    zeroDay -= 60;
    adjust = 0;
    if (zeroDay < 0) {
      adjustCycles = MathUtil.intDiv(zeroDay + 1, DAYS_PER_CYCLE) - 1;
      adjust = adjustCycles * 400;
      zeroDay += -adjustCycles * DAYS_PER_CYCLE;
    }
    yearEst = MathUtil.intDiv(400 * zeroDay + 591, DAYS_PER_CYCLE);
    doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));
    if (doyEst < 0) {
      yearEst--;
      doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));
    }
    yearEst += adjust;
    var marchDoy0 = doyEst;
    var marchMonth0 = MathUtil.intDiv(marchDoy0 * 5 + 2, 153);
    var month = (marchMonth0 + 2) % 12 + 1;
    var dom = marchDoy0 - MathUtil.intDiv(marchMonth0 * 306 + 5, 10) + 1;
    yearEst += MathUtil.intDiv(marchMonth0, 10);
    var year = yearEst;
    return new LocalDate(year, month, dom);
  };
  LocalDate.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    var date = temporal.query(TemporalQueries.localDate());
    if (date == null) {
      throw new DateTimeException("Unable to obtain LocalDate from TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
    return date;
  };
  LocalDate.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_LOCAL_DATE;
    }
    assert(formatter != null, 'formatter', NullPointerException);
    return formatter.parse(text, LocalDate.FROM);
  };
  LocalDate._resolvePreviousValid = function _resolvePreviousValid(year, month, day) {
    switch (month) {
      case 2:
        day = Math.min(day, IsoChronology.isLeapYear(year) ? 29 : 28);
        break;
      case 4:
      case 6:
      case 9:
      case 11:
        day = Math.min(day, 30);
        break;
    }
    return LocalDate.of(year, month, day);
  };
  function LocalDate(year, month, dayOfMonth) {
    var _this;
    _this = _ChronoLocalDate.call(this) || this;
    requireNonNull(year, 'year');
    requireNonNull(month, 'month');
    requireNonNull(dayOfMonth, 'dayOfMonth');
    if (month instanceof Month) {
      month = month.value();
    }
    _this._year = MathUtil.safeToInt(year);
    _this._month = MathUtil.safeToInt(month);
    _this._day = MathUtil.safeToInt(dayOfMonth);
    LocalDate._validate(_this._year, _this._month, _this._day);
    return _this;
  }
  LocalDate._validate = function _validate(year, month, dayOfMonth) {
    var dom;
    ChronoField.YEAR.checkValidValue(year);
    ChronoField.MONTH_OF_YEAR.checkValidValue(month);
    ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);
    if (dayOfMonth > 28) {
      dom = 31;
      switch (month) {
        case 2:
          dom = IsoChronology.isLeapYear(year) ? 29 : 28;
          break;
        case 4:
        case 6:
        case 9:
        case 11:
          dom = 30;
      }
      if (dayOfMonth > dom) {
        if (dayOfMonth === 29) {
          assert(false, "Invalid date 'February 29' as '" + year + "' is not a leap year", DateTimeException);
        } else {
          assert(false, "Invalid date '" + year + "' '" + month + "' '" + dayOfMonth + "'", DateTimeException);
        }
      }
    }
  };
  var _proto = LocalDate.prototype;
  _proto.isSupported = function isSupported(field) {
    return _ChronoLocalDate.prototype.isSupported.call(this, field);
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      if (field.isDateBased()) {
        switch (field) {
          case ChronoField.DAY_OF_MONTH:
            return ValueRange.of(1, this.lengthOfMonth());
          case ChronoField.DAY_OF_YEAR:
            return ValueRange.of(1, this.lengthOfYear());
          case ChronoField.ALIGNED_WEEK_OF_MONTH:
            return ValueRange.of(1, this.month() === Month.FEBRUARY && this.isLeapYear() === false ? 4 : 5);
          case ChronoField.YEAR_OF_ERA:
            return this._year <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE);
        }
        return field.range();
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.get = function get(field) {
    return this.getLong(field);
  };
  _proto.getLong = function getLong(field) {
    assert(field != null, '', NullPointerException);
    if (field instanceof ChronoField) {
      return this._get0(field);
    }
    return field.getFrom(this);
  };
  _proto._get0 = function _get0(field) {
    switch (field) {
      case ChronoField.DAY_OF_WEEK:
        return this.dayOfWeek().value();
      case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH:
        return MathUtil.intMod(this._day - 1, 7) + 1;
      case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR:
        return MathUtil.intMod(this.dayOfYear() - 1, 7) + 1;
      case ChronoField.DAY_OF_MONTH:
        return this._day;
      case ChronoField.DAY_OF_YEAR:
        return this.dayOfYear();
      case ChronoField.EPOCH_DAY:
        return this.toEpochDay();
      case ChronoField.ALIGNED_WEEK_OF_MONTH:
        return MathUtil.intDiv(this._day - 1, 7) + 1;
      case ChronoField.ALIGNED_WEEK_OF_YEAR:
        return MathUtil.intDiv(this.dayOfYear() - 1, 7) + 1;
      case ChronoField.MONTH_OF_YEAR:
        return this._month;
      case ChronoField.PROLEPTIC_MONTH:
        return this._prolepticMonth();
      case ChronoField.YEAR_OF_ERA:
        return this._year >= 1 ? this._year : 1 - this._year;
      case ChronoField.YEAR:
        return this._year;
      case ChronoField.ERA:
        return this._year >= 1 ? 1 : 0;
    }
    throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
  };
  _proto._prolepticMonth = function _prolepticMonth() {
    return this._year * 12 + (this._month - 1);
  };
  _proto.chronology = function chronology() {
    return IsoChronology.INSTANCE;
  };
  _proto.year = function year() {
    return this._year;
  };
  _proto.monthValue = function monthValue() {
    return this._month;
  };
  _proto.month = function month() {
    return Month.of(this._month);
  };
  _proto.dayOfMonth = function dayOfMonth() {
    return this._day;
  };
  _proto.dayOfYear = function dayOfYear() {
    return this.month().firstDayOfYear(this.isLeapYear()) + this._day - 1;
  };
  _proto.dayOfWeek = function dayOfWeek() {
    var dow0 = MathUtil.floorMod(this.toEpochDay() + 3, 7);
    return DayOfWeek.of(dow0 + 1);
  };
  _proto.isLeapYear = function isLeapYear() {
    return IsoChronology.isLeapYear(this._year);
  };
  _proto.lengthOfMonth = function lengthOfMonth() {
    switch (this._month) {
      case 2:
        return this.isLeapYear() ? 29 : 28;
      case 4:
      case 6:
      case 9:
      case 11:
        return 30;
      default:
        return 31;
    }
  };
  _proto.lengthOfYear = function lengthOfYear() {
    return this.isLeapYear() ? 366 : 365;
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster, 'adjuster');
    if (adjuster instanceof LocalDate) {
      return adjuster;
    }
    return _ChronoLocalDate.prototype._withAdjuster.call(this, adjuster);
  };
  _proto._withField = function _withField(field, newValue) {
    assert(field != null, 'field', NullPointerException);
    if (field instanceof ChronoField) {
      var f = field;
      f.checkValidValue(newValue);
      switch (f) {
        case ChronoField.DAY_OF_WEEK:
          return this.plusDays(newValue - this.dayOfWeek().value());
        case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH:
          return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH));
        case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR:
          return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));
        case ChronoField.DAY_OF_MONTH:
          return this.withDayOfMonth(newValue);
        case ChronoField.DAY_OF_YEAR:
          return this.withDayOfYear(newValue);
        case ChronoField.EPOCH_DAY:
          return LocalDate.ofEpochDay(newValue);
        case ChronoField.ALIGNED_WEEK_OF_MONTH:
          return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_MONTH));
        case ChronoField.ALIGNED_WEEK_OF_YEAR:
          return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_YEAR));
        case ChronoField.MONTH_OF_YEAR:
          return this.withMonth(newValue);
        case ChronoField.PROLEPTIC_MONTH:
          return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));
        case ChronoField.YEAR_OF_ERA:
          return this.withYear(this._year >= 1 ? newValue : 1 - newValue);
        case ChronoField.YEAR:
          return this.withYear(newValue);
        case ChronoField.ERA:
          return this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year);
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.adjustInto(this, newValue);
  };
  _proto.withYear = function withYear(year) {
    if (this._year === year) {
      return this;
    }
    ChronoField.YEAR.checkValidValue(year);
    return LocalDate._resolvePreviousValid(year, this._month, this._day);
  };
  _proto.withMonth = function withMonth(month) {
    var m = month instanceof Month ? month.value() : month;
    if (this._month === m) {
      return this;
    }
    ChronoField.MONTH_OF_YEAR.checkValidValue(m);
    return LocalDate._resolvePreviousValid(this._year, m, this._day);
  };
  _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
    if (this._day === dayOfMonth) {
      return this;
    }
    return LocalDate.of(this._year, this._month, dayOfMonth);
  };
  _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
    if (this.dayOfYear() === dayOfYear) {
      return this;
    }
    return LocalDate.ofYearDay(this._year, dayOfYear);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(amountToAdd, 'amountToAdd');
    requireNonNull(unit, 'unit');
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.DAYS:
          return this.plusDays(amountToAdd);
        case ChronoUnit.WEEKS:
          return this.plusWeeks(amountToAdd);
        case ChronoUnit.MONTHS:
          return this.plusMonths(amountToAdd);
        case ChronoUnit.YEARS:
          return this.plusYears(amountToAdd);
        case ChronoUnit.DECADES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));
        case ChronoUnit.CENTURIES:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));
        case ChronoUnit.MILLENNIA:
          return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));
        case ChronoUnit.ERAS:
          return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(yearsToAdd) {
    if (yearsToAdd === 0) {
      return this;
    }
    var newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);
    return LocalDate._resolvePreviousValid(newYear, this._month, this._day);
  };
  _proto.plusMonths = function plusMonths(monthsToAdd) {
    if (monthsToAdd === 0) {
      return this;
    }
    var monthCount = this._year * 12 + (this._month - 1);
    var calcMonths = monthCount + monthsToAdd;
    var newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));
    var newMonth = MathUtil.floorMod(calcMonths, 12) + 1;
    return LocalDate._resolvePreviousValid(newYear, newMonth, this._day);
  };
  _proto.plusWeeks = function plusWeeks(weeksToAdd) {
    return this.plusDays(MathUtil.safeMultiply(weeksToAdd, 7));
  };
  _proto.plusDays = function plusDays(daysToAdd) {
    if (daysToAdd === 0) {
      return this;
    }
    var mjDay = MathUtil.safeAdd(this.toEpochDay(), daysToAdd);
    return LocalDate.ofEpochDay(mjDay);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    requireNonNull(amountToSubtract, 'amountToSubtract');
    requireNonNull(unit, 'unit');
    return this._plusUnit(-1 * amountToSubtract, unit);
  };
  _proto.minusYears = function minusYears(yearsToSubtract) {
    return this.plusYears(yearsToSubtract * -1);
  };
  _proto.minusMonths = function minusMonths(monthsToSubtract) {
    return this.plusMonths(monthsToSubtract * -1);
  };
  _proto.minusWeeks = function minusWeeks(weeksToSubtract) {
    return this.plusWeeks(weeksToSubtract * -1);
  };
  _proto.minusDays = function minusDays(daysToSubtract) {
    return this.plusDays(daysToSubtract * -1);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.localDate()) {
      return this;
    }
    return _ChronoLocalDate.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return _ChronoLocalDate.prototype.adjustInto.call(this, temporal);
  };
  _proto.until = function until(p1, p2) {
    if (arguments.length < 2) {
      return this.until1(p1);
    } else {
      return this.until2(p1, p2);
    }
  };
  _proto.until2 = function until2(endExclusive, unit) {
    var end = LocalDate.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.DAYS:
          return this.daysUntil(end);
        case ChronoUnit.WEEKS:
          return MathUtil.intDiv(this.daysUntil(end), 7);
        case ChronoUnit.MONTHS:
          return this._monthsUntil(end);
        case ChronoUnit.YEARS:
          return MathUtil.intDiv(this._monthsUntil(end), 12);
        case ChronoUnit.DECADES:
          return MathUtil.intDiv(this._monthsUntil(end), 120);
        case ChronoUnit.CENTURIES:
          return MathUtil.intDiv(this._monthsUntil(end), 1200);
        case ChronoUnit.MILLENNIA:
          return MathUtil.intDiv(this._monthsUntil(end), 12000);
        case ChronoUnit.ERAS:
          return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  _proto.daysUntil = function daysUntil(end) {
    return end.toEpochDay() - this.toEpochDay();
  };
  _proto._monthsUntil = function _monthsUntil(end) {
    var packed1 = this._prolepticMonth() * 32 + this.dayOfMonth();
    var packed2 = end._prolepticMonth() * 32 + end.dayOfMonth();
    return MathUtil.intDiv(packed2 - packed1, 32);
  };
  _proto.until1 = function until1(endDate) {
    var end = LocalDate.from(endDate);
    var totalMonths = end._prolepticMonth() - this._prolepticMonth();
    var days = end._day - this._day;
    if (totalMonths > 0 && days < 0) {
      totalMonths--;
      var calcDate = this.plusMonths(totalMonths);
      days = end.toEpochDay() - calcDate.toEpochDay();
    } else if (totalMonths < 0 && days > 0) {
      totalMonths++;
      days -= end.lengthOfMonth();
    }
    var years = MathUtil.intDiv(totalMonths, 12);
    var months = MathUtil.intMod(totalMonths, 12);
    return Period.of(years, months, days);
  };
  _proto.atTime = function atTime() {
    if (arguments.length === 1) {
      return this.atTime1.apply(this, arguments);
    } else {
      return this.atTime4.apply(this, arguments);
    }
  };
  _proto.atTime1 = function atTime1(time) {
    requireNonNull(time, 'time');
    if (time instanceof LocalTime) {
      return LocalDateTime.of(this, time);
    } else if (time instanceof OffsetTime) {
      return this._atTimeOffsetTime(time);
    } else {
      throw new IllegalArgumentException("time must be an instance of LocalTime or OffsetTime" + (time && time.constructor && time.constructor.name ? ", but is " + time.constructor.name : ''));
    }
  };
  _proto.atTime4 = function atTime4(hour, minute, second, nanoOfSecond) {
    if (second === void 0) {
      second = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    return this.atTime1(LocalTime.of(hour, minute, second, nanoOfSecond));
  };
  _proto._atTimeOffsetTime = function _atTimeOffsetTime(time) {
    return OffsetDateTime.of(LocalDateTime.of(this, time.toLocalTime()), time.offset());
  };
  _proto.atStartOfDay = function atStartOfDay(zone) {
    if (zone != null) {
      return this._atStartOfDayWithZone(zone);
    } else {
      return LocalDateTime.of(this, LocalTime.MIDNIGHT);
    }
  };
  _proto._atStartOfDayWithZone = function _atStartOfDayWithZone(zone) {
    requireNonNull(zone, 'zone');
    var ldt = this.atTime(LocalTime.MIDNIGHT);
    if (zone instanceof ZoneOffset === false) {
      var trans = zone.rules().transition(ldt);
      if (trans != null && trans.isGap()) {
        ldt = trans.dateTimeAfter();
      }
    }
    return ZonedDateTime.of(ldt, zone);
  };
  _proto.toEpochDay = function toEpochDay() {
    var y = this._year;
    var m = this._month;
    var total = 0;
    total += 365 * y;
    if (y >= 0) {
      total += MathUtil.intDiv(y + 3, 4) - MathUtil.intDiv(y + 99, 100) + MathUtil.intDiv(y + 399, 400);
    } else {
      total -= MathUtil.intDiv(y, -4) - MathUtil.intDiv(y, -100) + MathUtil.intDiv(y, -400);
    }
    total += MathUtil.intDiv(367 * m - 362, 12);
    total += this.dayOfMonth() - 1;
    if (m > 2) {
      total--;
      if (!IsoChronology.isLeapYear(y)) {
        total--;
      }
    }
    return total - DAYS_0000_TO_1970;
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, LocalDate, 'other');
    return this._compareTo0(other);
  };
  _proto._compareTo0 = function _compareTo0(otherDate) {
    var cmp = this._year - otherDate._year;
    if (cmp === 0) {
      cmp = this._month - otherDate._month;
      if (cmp === 0) {
        cmp = this._day - otherDate._day;
      }
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    return this.compareTo(other) > 0;
  };
  _proto.isBefore = function isBefore(other) {
    return this.compareTo(other) < 0;
  };
  _proto.isEqual = function isEqual(other) {
    return this.compareTo(other) === 0;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof LocalDate) {
      return this._compareTo0(other) === 0;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    var yearValue = this._year;
    var monthValue = this._month;
    var dayValue = this._day;
    return MathUtil.hash(yearValue & 0xFFFFF800 ^ (yearValue << 11) + (monthValue << 6) + dayValue);
  };
  _proto.toString = function toString() {
    var dayString, monthString, yearString;
    var yearValue = this._year;
    var monthValue = this._month;
    var dayValue = this._day;
    var absYear = Math.abs(yearValue);
    if (absYear < 1000) {
      if (yearValue < 0) {
        yearString = "-" + ("" + (yearValue - 10000)).slice(-4);
      } else {
        yearString = ("" + (yearValue + 10000)).slice(-4);
      }
    } else {
      if (yearValue > 9999) {
        yearString = "+" + yearValue;
      } else {
        yearString = "" + yearValue;
      }
    }
    if (monthValue < 10) {
      monthString = "-0" + monthValue;
    } else {
      monthString = "-" + monthValue;
    }
    if (dayValue < 10) {
      dayString = "-0" + dayValue;
    } else {
      dayString = "-" + dayValue;
    }
    return yearString + monthString + dayString;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    requireInstance(formatter, DateTimeFormatter, 'formatter');
    return _ChronoLocalDate.prototype.format.call(this, formatter);
  };
  return LocalDate;
}(ChronoLocalDate);
function _init$5() {
  LocalDate.MIN = LocalDate.of(YearConstants.MIN_VALUE, 1, 1);
  LocalDate.MAX = LocalDate.of(YearConstants.MAX_VALUE, 12, 31);
  LocalDate.EPOCH_0 = LocalDate.ofEpochDay(0);
  LocalDate.FROM = createTemporalQuery('LocalDate.FROM', function (temporal) {
    return LocalDate.from(temporal);
  });
}

var ChronoLocalDateTime = function (_Temporal) {
  _inheritsLoose(ChronoLocalDateTime, _Temporal);
  function ChronoLocalDateTime() {
    return _Temporal.apply(this, arguments) || this;
  }
  var _proto = ChronoLocalDateTime.prototype;
  _proto.chronology = function chronology() {
    return this.toLocalDate().chronology();
  };
  _proto.query = function query(_query) {
    if (_query === TemporalQueries.chronology()) {
      return this.chronology();
    } else if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    } else if (_query === TemporalQueries.localDate()) {
      return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());
    } else if (_query === TemporalQueries.localTime()) {
      return this.toLocalTime();
    } else if (_query === TemporalQueries.zone() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.offset()) {
      return null;
    }
    return _Temporal.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay()).with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay());
  };
  _proto.toInstant = function toInstant(offset) {
    requireInstance(offset, ZoneOffset, 'zoneId');
    return Instant.ofEpochSecond(this.toEpochSecond(offset), this.toLocalTime().nano());
  };
  _proto.toEpochSecond = function toEpochSecond(offset) {
    requireNonNull(offset, 'offset');
    var epochDay = this.toLocalDate().toEpochDay();
    var secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();
    secs -= offset.totalSeconds();
    return MathUtil.safeToInt(secs);
  };
  return ChronoLocalDateTime;
}(Temporal);

var LocalDateTime = function (_ChronoLocalDateTime) {
  _inheritsLoose(LocalDateTime, _ChronoLocalDateTime);
  LocalDateTime.now = function now(clockOrZone) {
    if (clockOrZone == null) {
      return LocalDateTime._now(Clock.systemDefaultZone());
    } else if (clockOrZone instanceof Clock) {
      return LocalDateTime._now(clockOrZone);
    } else {
      return LocalDateTime._now(Clock.system(clockOrZone));
    }
  };
  LocalDateTime._now = function _now(clock) {
    requireNonNull(clock, 'clock');
    return LocalDateTime.ofInstant(clock.instant(), clock.zone());
  };
  LocalDateTime._ofEpochMillis = function _ofEpochMillis(epochMilli, offset) {
    var localSecond = MathUtil.floorDiv(epochMilli, 1000) + offset.totalSeconds();
    var localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);
    var secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);
    var nanoOfSecond = MathUtil.floorMod(epochMilli, 1000) * 1000000;
    var date = LocalDate.ofEpochDay(localEpochDay);
    var time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);
    return new LocalDateTime(date, time);
  };
  LocalDateTime.of = function of() {
    if (arguments.length <= 2) {
      return LocalDateTime.ofDateAndTime.apply(this, arguments);
    } else {
      return LocalDateTime.ofNumbers.apply(this, arguments);
    }
  };
  LocalDateTime.ofNumbers = function ofNumbers(year, month, dayOfMonth, hour, minute, second, nanoOfSecond) {
    if (hour === void 0) {
      hour = 0;
    }
    if (minute === void 0) {
      minute = 0;
    }
    if (second === void 0) {
      second = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    var date = LocalDate.of(year, month, dayOfMonth);
    var time = LocalTime.of(hour, minute, second, nanoOfSecond);
    return new LocalDateTime(date, time);
  };
  LocalDateTime.ofDateAndTime = function ofDateAndTime(date, time) {
    requireNonNull(date, 'date');
    requireNonNull(time, 'time');
    return new LocalDateTime(date, time);
  };
  LocalDateTime.ofInstant = function ofInstant(instant, zone) {
    if (zone === void 0) {
      zone = ZoneId.systemDefault();
    }
    requireNonNull(instant, 'instant');
    requireInstance(instant, Instant, 'instant');
    requireNonNull(zone, 'zone');
    var offset = zone.rules().offset(instant);
    return LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);
  };
  LocalDateTime.ofEpochSecond = function ofEpochSecond(epochSecond, nanoOfSecond, offset) {
    if (epochSecond === void 0) {
      epochSecond = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    if (arguments.length === 2 && nanoOfSecond instanceof ZoneOffset) {
      offset = nanoOfSecond;
      nanoOfSecond = 0;
    }
    requireNonNull(offset, 'offset');
    var localSecond = epochSecond + offset.totalSeconds();
    var localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);
    var secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);
    var date = LocalDate.ofEpochDay(localEpochDay);
    var time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);
    return new LocalDateTime(date, time);
  };
  LocalDateTime.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    if (temporal instanceof LocalDateTime) {
      return temporal;
    } else if (temporal instanceof ZonedDateTime) {
      return temporal.toLocalDateTime();
    }
    try {
      var date = LocalDate.from(temporal);
      var time = LocalTime.from(temporal);
      return new LocalDateTime(date, time);
    } catch (ex) {
      throw new DateTimeException("Unable to obtain LocalDateTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
  };
  LocalDateTime.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
    }
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, LocalDateTime.FROM);
  };
  function LocalDateTime(date, time) {
    var _this;
    _this = _ChronoLocalDateTime.call(this) || this;
    requireInstance(date, LocalDate, 'date');
    requireInstance(time, LocalTime, 'time');
    _this._date = date;
    _this._time = time;
    return _this;
  }
  var _proto = LocalDateTime.prototype;
  _proto._withDateTime = function _withDateTime(newDate, newTime) {
    if (this._date.equals(newDate) && this._time.equals(newTime)) {
      return this;
    }
    return new LocalDateTime(newDate, newTime);
  };
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
    } else if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    if (field instanceof ChronoField) {
      return field.isTimeBased() ? this._time.range(field) : this._date.range(field);
    }
    return field.rangeRefinedBy(this);
  };
  _proto.get = function get(field) {
    if (field instanceof ChronoField) {
      return field.isTimeBased() ? this._time.get(field) : this._date.get(field);
    }
    return _ChronoLocalDateTime.prototype.get.call(this, field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      return field.isTimeBased() ? this._time.getLong(field) : this._date.getLong(field);
    }
    return field.getFrom(this);
  };
  _proto.year = function year() {
    return this._date.year();
  };
  _proto.monthValue = function monthValue() {
    return this._date.monthValue();
  };
  _proto.month = function month() {
    return this._date.month();
  };
  _proto.dayOfMonth = function dayOfMonth() {
    return this._date.dayOfMonth();
  };
  _proto.dayOfYear = function dayOfYear() {
    return this._date.dayOfYear();
  };
  _proto.dayOfWeek = function dayOfWeek() {
    return this._date.dayOfWeek();
  };
  _proto.hour = function hour() {
    return this._time.hour();
  };
  _proto.minute = function minute() {
    return this._time.minute();
  };
  _proto.second = function second() {
    return this._time.second();
  };
  _proto.nano = function nano() {
    return this._time.nano();
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster, 'adjuster');
    if (adjuster instanceof LocalDate) {
      return this._withDateTime(adjuster, this._time);
    } else if (adjuster instanceof LocalTime) {
      return this._withDateTime(this._date, adjuster);
    } else if (adjuster instanceof LocalDateTime) {
      return adjuster;
    }
    return _ChronoLocalDateTime.prototype._withAdjuster.call(this, adjuster);
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      if (field.isTimeBased()) {
        return this._withDateTime(this._date, this._time.with(field, newValue));
      } else {
        return this._withDateTime(this._date.with(field, newValue), this._time);
      }
    }
    return field.adjustInto(this, newValue);
  };
  _proto.withYear = function withYear(year) {
    return this._withDateTime(this._date.withYear(year), this._time);
  };
  _proto.withMonth = function withMonth(month) {
    return this._withDateTime(this._date.withMonth(month), this._time);
  };
  _proto.withDayOfMonth = function withDayOfMonth(dayOfMonth) {
    return this._withDateTime(this._date.withDayOfMonth(dayOfMonth), this._time);
  };
  _proto.withDayOfYear = function withDayOfYear(dayOfYear) {
    return this._withDateTime(this._date.withDayOfYear(dayOfYear), this._time);
  };
  _proto.withHour = function withHour(hour) {
    var newTime = this._time.withHour(hour);
    return this._withDateTime(this._date, newTime);
  };
  _proto.withMinute = function withMinute(minute) {
    var newTime = this._time.withMinute(minute);
    return this._withDateTime(this._date, newTime);
  };
  _proto.withSecond = function withSecond(second) {
    var newTime = this._time.withSecond(second);
    return this._withDateTime(this._date, newTime);
  };
  _proto.withNano = function withNano(nanoOfSecond) {
    var newTime = this._time.withNano(nanoOfSecond);
    return this._withDateTime(this._date, newTime);
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    return this._withDateTime(this._date, this._time.truncatedTo(unit));
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(unit, 'unit');
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.NANOS:
          return this.plusNanos(amountToAdd);
        case ChronoUnit.MICROS:
          return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MICROS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);
        case ChronoUnit.MILLIS:
          return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MILLIS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);
        case ChronoUnit.SECONDS:
          return this.plusSeconds(amountToAdd);
        case ChronoUnit.MINUTES:
          return this.plusMinutes(amountToAdd);
        case ChronoUnit.HOURS:
          return this.plusHours(amountToAdd);
        case ChronoUnit.HALF_DAYS:
          return this.plusDays(MathUtil.intDiv(amountToAdd, 256)).plusHours(MathUtil.intMod(amountToAdd, 256) * 12);
      }
      return this._withDateTime(this._date.plus(amountToAdd, unit), this._time);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusYears = function plusYears(years) {
    var newDate = this._date.plusYears(years);
    return this._withDateTime(newDate, this._time);
  };
  _proto.plusMonths = function plusMonths(months) {
    var newDate = this._date.plusMonths(months);
    return this._withDateTime(newDate, this._time);
  };
  _proto.plusWeeks = function plusWeeks(weeks) {
    var newDate = this._date.plusWeeks(weeks);
    return this._withDateTime(newDate, this._time);
  };
  _proto.plusDays = function plusDays(days) {
    var newDate = this._date.plusDays(days);
    return this._withDateTime(newDate, this._time);
  };
  _proto.plusHours = function plusHours(hours) {
    return this._plusWithOverflow(this._date, hours, 0, 0, 0, 1);
  };
  _proto.plusMinutes = function plusMinutes(minutes) {
    return this._plusWithOverflow(this._date, 0, minutes, 0, 0, 1);
  };
  _proto.plusSeconds = function plusSeconds(seconds) {
    return this._plusWithOverflow(this._date, 0, 0, seconds, 0, 1);
  };
  _proto.plusNanos = function plusNanos(nanos) {
    return this._plusWithOverflow(this._date, 0, 0, 0, nanos, 1);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    requireNonNull(unit, 'unit');
    return this._plusUnit(-1 * amountToSubtract, unit);
  };
  _proto.minusYears = function minusYears(years) {
    return this.plusYears(-1 * years);
  };
  _proto.minusMonths = function minusMonths(months) {
    return this.plusMonths(-1 * months);
  };
  _proto.minusWeeks = function minusWeeks(weeks) {
    return this.plusWeeks(-1 * weeks);
  };
  _proto.minusDays = function minusDays(days) {
    return this.plusDays(-1 * days);
  };
  _proto.minusHours = function minusHours(hours) {
    return this._plusWithOverflow(this._date, hours, 0, 0, 0, -1);
  };
  _proto.minusMinutes = function minusMinutes(minutes) {
    return this._plusWithOverflow(this._date, 0, minutes, 0, 0, -1);
  };
  _proto.minusSeconds = function minusSeconds(seconds) {
    return this._plusWithOverflow(this._date, 0, 0, seconds, 0, -1);
  };
  _proto.minusNanos = function minusNanos(nanos) {
    return this._plusWithOverflow(this._date, 0, 0, 0, nanos, -1);
  };
  _proto._plusWithOverflow = function _plusWithOverflow(newDate, hours, minutes, seconds, nanos, sign) {
    if (hours === 0 && minutes === 0 && seconds === 0 && nanos === 0) {
      return this._withDateTime(newDate, this._time);
    }
    var totDays = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_DAY) + MathUtil.intDiv(seconds, LocalTime.SECONDS_PER_DAY) + MathUtil.intDiv(minutes, LocalTime.MINUTES_PER_DAY) + MathUtil.intDiv(hours, LocalTime.HOURS_PER_DAY);
    totDays *= sign;
    var totNanos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_DAY) + MathUtil.intMod(seconds, LocalTime.SECONDS_PER_DAY) * LocalTime.NANOS_PER_SECOND + MathUtil.intMod(minutes, LocalTime.MINUTES_PER_DAY) * LocalTime.NANOS_PER_MINUTE + MathUtil.intMod(hours, LocalTime.HOURS_PER_DAY) * LocalTime.NANOS_PER_HOUR;
    var curNoD = this._time.toNanoOfDay();
    totNanos = totNanos * sign + curNoD;
    totDays += MathUtil.floorDiv(totNanos, LocalTime.NANOS_PER_DAY);
    var newNoD = MathUtil.floorMod(totNanos, LocalTime.NANOS_PER_DAY);
    var newTime = newNoD === curNoD ? this._time : LocalTime.ofNanoOfDay(newNoD);
    return this._withDateTime(newDate.plusDays(totDays), newTime);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.localDate()) {
      return this.toLocalDate();
    }
    return _ChronoLocalDateTime.prototype.query.call(this, _query);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return _ChronoLocalDateTime.prototype.adjustInto.call(this, temporal);
  };
  _proto.until = function until(endExclusive, unit) {
    requireNonNull(endExclusive, 'endExclusive');
    requireNonNull(unit, 'unit');
    var end = LocalDateTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      if (unit.isTimeBased()) {
        var daysUntil = this._date.daysUntil(end._date);
        var timeUntil = end._time.toNanoOfDay() - this._time.toNanoOfDay();
        if (daysUntil > 0 && timeUntil < 0) {
          daysUntil--;
          timeUntil += LocalTime.NANOS_PER_DAY;
        } else if (daysUntil < 0 && timeUntil > 0) {
          daysUntil++;
          timeUntil -= LocalTime.NANOS_PER_DAY;
        }
        var amount = daysUntil;
        switch (unit) {
          case ChronoUnit.NANOS:
            amount = MathUtil.safeMultiply(amount, LocalTime.NANOS_PER_DAY);
            return MathUtil.safeAdd(amount, timeUntil);
          case ChronoUnit.MICROS:
            amount = MathUtil.safeMultiply(amount, LocalTime.MICROS_PER_DAY);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000));
          case ChronoUnit.MILLIS:
            amount = MathUtil.safeMultiply(amount, LocalTime.MILLIS_PER_DAY);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000000));
          case ChronoUnit.SECONDS:
            amount = MathUtil.safeMultiply(amount, LocalTime.SECONDS_PER_DAY);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_SECOND));
          case ChronoUnit.MINUTES:
            amount = MathUtil.safeMultiply(amount, LocalTime.MINUTES_PER_DAY);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_MINUTE));
          case ChronoUnit.HOURS:
            amount = MathUtil.safeMultiply(amount, LocalTime.HOURS_PER_DAY);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_HOUR));
          case ChronoUnit.HALF_DAYS:
            amount = MathUtil.safeMultiply(amount, 2);
            return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_HOUR * 12));
        }
        throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
      }
      var endDate = end._date;
      var endTime = end._time;
      if (endDate.isAfter(this._date) && endTime.isBefore(this._time)) {
        endDate = endDate.minusDays(1);
      } else if (endDate.isBefore(this._date) && endTime.isAfter(this._time)) {
        endDate = endDate.plusDays(1);
      }
      return this._date.until(endDate, unit);
    }
    return unit.between(this, end);
  };
  _proto.atOffset = function atOffset(offset) {
    return OffsetDateTime.of(this, offset);
  };
  _proto.atZone = function atZone(zone) {
    return ZonedDateTime.of(this, zone);
  };
  _proto.toLocalDate = function toLocalDate() {
    return this._date;
  };
  _proto.toLocalTime = function toLocalTime() {
    return this._time;
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, LocalDateTime, 'other');
    return this._compareTo0(other);
  };
  _proto._compareTo0 = function _compareTo0(other) {
    var cmp = this._date.compareTo(other.toLocalDate());
    if (cmp === 0) {
      cmp = this._time.compareTo(other.toLocalTime());
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    return this.compareTo(other) > 0;
  };
  _proto.isBefore = function isBefore(other) {
    return this.compareTo(other) < 0;
  };
  _proto.isEqual = function isEqual(other) {
    return this.compareTo(other) === 0;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof LocalDateTime) {
      return this._date.equals(other._date) && this._time.equals(other._time);
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._date.hashCode() ^ this._time.hashCode();
  };
  _proto.toString = function toString() {
    return this._date.toString() + "T" + this._time.toString();
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this);
  };
  return LocalDateTime;
}(ChronoLocalDateTime);
function _init$4() {
  LocalDateTime.MIN = LocalDateTime.of(LocalDate.MIN, LocalTime.MIN);
  LocalDateTime.MAX = LocalDateTime.of(LocalDate.MAX, LocalTime.MAX);
  LocalDateTime.FROM = createTemporalQuery('LocalDateTime.FROM', function (temporal) {
    return LocalDateTime.from(temporal);
  });
}

var LocalTime = function (_Temporal) {
  _inheritsLoose(LocalTime, _Temporal);
  LocalTime.now = function now(clockOrZone) {
    if (clockOrZone == null) {
      return LocalTime._now(Clock.systemDefaultZone());
    } else if (clockOrZone instanceof Clock) {
      return LocalTime._now(clockOrZone);
    } else {
      return LocalTime._now(Clock.system(clockOrZone));
    }
  };
  LocalTime._now = function _now(clock) {
    if (clock === void 0) {
      clock = Clock.systemDefaultZone();
    }
    requireNonNull(clock, 'clock');
    return LocalTime.ofInstant(clock.instant(), clock.zone());
  };
  LocalTime.ofInstant = function ofInstant(instant, zone) {
    if (zone === void 0) {
      zone = ZoneId.systemDefault();
    }
    var offset = zone.rules().offset(instant);
    var secsOfDay = MathUtil.intMod(instant.epochSecond(), LocalTime.SECONDS_PER_DAY);
    secsOfDay = MathUtil.intMod(secsOfDay + offset.totalSeconds(), LocalTime.SECONDS_PER_DAY);
    if (secsOfDay < 0) {
      secsOfDay += LocalTime.SECONDS_PER_DAY;
    }
    return LocalTime.ofSecondOfDay(secsOfDay, instant.nano());
  };
  LocalTime.of = function of(hour, minute, second, nanoOfSecond) {
    return new LocalTime(hour, minute, second, nanoOfSecond);
  };
  LocalTime.ofSecondOfDay = function ofSecondOfDay(secondOfDay, nanoOfSecond) {
    if (secondOfDay === void 0) {
      secondOfDay = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    ChronoField.SECOND_OF_DAY.checkValidValue(secondOfDay);
    ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);
    var hours = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_HOUR);
    secondOfDay -= hours * LocalTime.SECONDS_PER_HOUR;
    var minutes = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_MINUTE);
    secondOfDay -= minutes * LocalTime.SECONDS_PER_MINUTE;
    return new LocalTime(hours, minutes, secondOfDay, nanoOfSecond);
  };
  LocalTime.ofNanoOfDay = function ofNanoOfDay(nanoOfDay) {
    if (nanoOfDay === void 0) {
      nanoOfDay = 0;
    }
    ChronoField.NANO_OF_DAY.checkValidValue(nanoOfDay);
    var hours = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_HOUR);
    nanoOfDay -= hours * LocalTime.NANOS_PER_HOUR;
    var minutes = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_MINUTE);
    nanoOfDay -= minutes * LocalTime.NANOS_PER_MINUTE;
    var seconds = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_SECOND);
    nanoOfDay -= seconds * LocalTime.NANOS_PER_SECOND;
    return new LocalTime(hours, minutes, seconds, nanoOfDay);
  };
  LocalTime.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    var time = temporal.query(TemporalQueries.localTime());
    if (time == null) {
      throw new DateTimeException("Unable to obtain LocalTime TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
    return time;
  };
  LocalTime.parse = function parse(text, formatter) {
    if (formatter === void 0) {
      formatter = DateTimeFormatter.ISO_LOCAL_TIME;
    }
    requireNonNull(formatter, 'formatter');
    return formatter.parse(text, LocalTime.FROM);
  };
  function LocalTime(hour, minute, second, nanoOfSecond) {
    var _this;
    if (hour === void 0) {
      hour = 0;
    }
    if (minute === void 0) {
      minute = 0;
    }
    if (second === void 0) {
      second = 0;
    }
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    _this = _Temporal.call(this) || this;
    var _hour = MathUtil.safeToInt(hour);
    var _minute = MathUtil.safeToInt(minute);
    var _second = MathUtil.safeToInt(second);
    var _nanoOfSecond = MathUtil.safeToInt(nanoOfSecond);
    LocalTime._validate(_hour, _minute, _second, _nanoOfSecond);
    if (_minute === 0 && _second === 0 && _nanoOfSecond === 0) {
      if (!LocalTime.HOURS[_hour]) {
        _this._hour = _hour;
        _this._minute = _minute;
        _this._second = _second;
        _this._nano = _nanoOfSecond;
        LocalTime.HOURS[_hour] = _assertThisInitialized(_this);
      }
      return LocalTime.HOURS[_hour] || _assertThisInitialized(_this);
    }
    _this._hour = _hour;
    _this._minute = _minute;
    _this._second = _second;
    _this._nano = _nanoOfSecond;
    return _this;
  }
  LocalTime._validate = function _validate(hour, minute, second, nanoOfSecond) {
    ChronoField.HOUR_OF_DAY.checkValidValue(hour);
    ChronoField.MINUTE_OF_HOUR.checkValidValue(minute);
    ChronoField.SECOND_OF_MINUTE.checkValidValue(second);
    ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);
  };
  var _proto = LocalTime.prototype;
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit.isTimeBased();
    } else if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isTimeBased();
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    requireNonNull(field);
    return _Temporal.prototype.range.call(this, field);
  };
  _proto.get = function get(field) {
    return this.getLong(field);
  };
  _proto.getLong = function getLong(field) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      return this._get0(field);
    }
    return field.getFrom(this);
  };
  _proto._get0 = function _get0(field) {
    switch (field) {
      case ChronoField.NANO_OF_SECOND:
        return this._nano;
      case ChronoField.NANO_OF_DAY:
        return this.toNanoOfDay();
      case ChronoField.MICRO_OF_SECOND:
        return MathUtil.intDiv(this._nano, 1000);
      case ChronoField.MICRO_OF_DAY:
        return MathUtil.intDiv(this.toNanoOfDay(), 1000);
      case ChronoField.MILLI_OF_SECOND:
        return MathUtil.intDiv(this._nano, 1000000);
      case ChronoField.MILLI_OF_DAY:
        return MathUtil.intDiv(this.toNanoOfDay(), 1000000);
      case ChronoField.SECOND_OF_MINUTE:
        return this._second;
      case ChronoField.SECOND_OF_DAY:
        return this.toSecondOfDay();
      case ChronoField.MINUTE_OF_HOUR:
        return this._minute;
      case ChronoField.MINUTE_OF_DAY:
        return this._hour * 60 + this._minute;
      case ChronoField.HOUR_OF_AMPM:
        return MathUtil.intMod(this._hour, 12);
      case ChronoField.CLOCK_HOUR_OF_AMPM:
        {
          var ham = MathUtil.intMod(this._hour, 12);
          return ham % 12 === 0 ? 12 : ham;
        }
      case ChronoField.HOUR_OF_DAY:
        return this._hour;
      case ChronoField.CLOCK_HOUR_OF_DAY:
        return this._hour === 0 ? 24 : this._hour;
      case ChronoField.AMPM_OF_DAY:
        return MathUtil.intDiv(this._hour, 12);
    }
    throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
  };
  _proto.hour = function hour() {
    return this._hour;
  };
  _proto.minute = function minute() {
    return this._minute;
  };
  _proto.second = function second() {
    return this._second;
  };
  _proto.nano = function nano() {
    return this._nano;
  };
  _proto._withAdjuster = function _withAdjuster(adjuster) {
    requireNonNull(adjuster, 'adjuster');
    if (adjuster instanceof LocalTime) {
      return adjuster;
    }
    return _Temporal.prototype._withAdjuster.call(this, adjuster);
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    requireInstance(field, TemporalField, 'field');
    if (field instanceof ChronoField) {
      field.checkValidValue(newValue);
      switch (field) {
        case ChronoField.NANO_OF_SECOND:
          return this.withNano(newValue);
        case ChronoField.NANO_OF_DAY:
          return LocalTime.ofNanoOfDay(newValue);
        case ChronoField.MICRO_OF_SECOND:
          return this.withNano(newValue * 1000);
        case ChronoField.MICRO_OF_DAY:
          return LocalTime.ofNanoOfDay(newValue * 1000);
        case ChronoField.MILLI_OF_SECOND:
          return this.withNano(newValue * 1000000);
        case ChronoField.MILLI_OF_DAY:
          return LocalTime.ofNanoOfDay(newValue * 1000000);
        case ChronoField.SECOND_OF_MINUTE:
          return this.withSecond(newValue);
        case ChronoField.SECOND_OF_DAY:
          return this.plusSeconds(newValue - this.toSecondOfDay());
        case ChronoField.MINUTE_OF_HOUR:
          return this.withMinute(newValue);
        case ChronoField.MINUTE_OF_DAY:
          return this.plusMinutes(newValue - (this._hour * 60 + this._minute));
        case ChronoField.HOUR_OF_AMPM:
          return this.plusHours(newValue - MathUtil.intMod(this._hour, 12));
        case ChronoField.CLOCK_HOUR_OF_AMPM:
          return this.plusHours((newValue === 12 ? 0 : newValue) - MathUtil.intMod(this._hour, 12));
        case ChronoField.HOUR_OF_DAY:
          return this.withHour(newValue);
        case ChronoField.CLOCK_HOUR_OF_DAY:
          return this.withHour(newValue === 24 ? 0 : newValue);
        case ChronoField.AMPM_OF_DAY:
          return this.plusHours((newValue - MathUtil.intDiv(this._hour, 12)) * 12);
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.adjustInto(this, newValue);
  };
  _proto.withHour = function withHour(hour) {
    if (hour === void 0) {
      hour = 0;
    }
    if (this._hour === hour) {
      return this;
    }
    return new LocalTime(hour, this._minute, this._second, this._nano);
  };
  _proto.withMinute = function withMinute(minute) {
    if (minute === void 0) {
      minute = 0;
    }
    if (this._minute === minute) {
      return this;
    }
    return new LocalTime(this._hour, minute, this._second, this._nano);
  };
  _proto.withSecond = function withSecond(second) {
    if (second === void 0) {
      second = 0;
    }
    if (this._second === second) {
      return this;
    }
    return new LocalTime(this._hour, this._minute, second, this._nano);
  };
  _proto.withNano = function withNano(nanoOfSecond) {
    if (nanoOfSecond === void 0) {
      nanoOfSecond = 0;
    }
    if (this._nano === nanoOfSecond) {
      return this;
    }
    return new LocalTime(this._hour, this._minute, this._second, nanoOfSecond);
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    requireNonNull(unit, 'unit');
    if (unit === ChronoUnit.NANOS) {
      return this;
    }
    var unitDur = unit.duration();
    if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {
      throw new DateTimeException('Unit is too large to be used for truncation');
    }
    var dur = unitDur.toNanos();
    if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {
      throw new DateTimeException('Unit must divide into a standard day without remainder');
    }
    var nod = this.toNanoOfDay();
    return LocalTime.ofNanoOfDay(MathUtil.intDiv(nod, dur) * dur);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(unit, 'unit');
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.NANOS:
          return this.plusNanos(amountToAdd);
        case ChronoUnit.MICROS:
          return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);
        case ChronoUnit.MILLIS:
          return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);
        case ChronoUnit.SECONDS:
          return this.plusSeconds(amountToAdd);
        case ChronoUnit.MINUTES:
          return this.plusMinutes(amountToAdd);
        case ChronoUnit.HOURS:
          return this.plusHours(amountToAdd);
        case ChronoUnit.HALF_DAYS:
          return this.plusHours(MathUtil.intMod(amountToAdd, 2) * 12);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusHours = function plusHours(hoursToAdd) {
    if (hoursToAdd === 0) {
      return this;
    }
    var newHour = MathUtil.intMod(MathUtil.intMod(hoursToAdd, LocalTime.HOURS_PER_DAY) + this._hour + LocalTime.HOURS_PER_DAY, LocalTime.HOURS_PER_DAY);
    return new LocalTime(newHour, this._minute, this._second, this._nano);
  };
  _proto.plusMinutes = function plusMinutes(minutesToAdd) {
    if (minutesToAdd === 0) {
      return this;
    }
    var mofd = this._hour * LocalTime.MINUTES_PER_HOUR + this._minute;
    var newMofd = MathUtil.intMod(MathUtil.intMod(minutesToAdd, LocalTime.MINUTES_PER_DAY) + mofd + LocalTime.MINUTES_PER_DAY, LocalTime.MINUTES_PER_DAY);
    if (mofd === newMofd) {
      return this;
    }
    var newHour = MathUtil.intDiv(newMofd, LocalTime.MINUTES_PER_HOUR);
    var newMinute = MathUtil.intMod(newMofd, LocalTime.MINUTES_PER_HOUR);
    return new LocalTime(newHour, newMinute, this._second, this._nano);
  };
  _proto.plusSeconds = function plusSeconds(secondsToAdd) {
    if (secondsToAdd === 0) {
      return this;
    }
    var sofd = this._hour * LocalTime.SECONDS_PER_HOUR + this._minute * LocalTime.SECONDS_PER_MINUTE + this._second;
    var newSofd = MathUtil.intMod(MathUtil.intMod(secondsToAdd, LocalTime.SECONDS_PER_DAY) + sofd + LocalTime.SECONDS_PER_DAY, LocalTime.SECONDS_PER_DAY);
    if (sofd === newSofd) {
      return this;
    }
    var newHour = MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_HOUR);
    var newMinute = MathUtil.intMod(MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
    var newSecond = MathUtil.intMod(newSofd, LocalTime.SECONDS_PER_MINUTE);
    return new LocalTime(newHour, newMinute, newSecond, this._nano);
  };
  _proto.plusNanos = function plusNanos(nanosToAdd) {
    if (nanosToAdd === 0) {
      return this;
    }
    var nofd = this.toNanoOfDay();
    var newNofd = MathUtil.intMod(MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_DAY) + nofd + LocalTime.NANOS_PER_DAY, LocalTime.NANOS_PER_DAY);
    if (nofd === newNofd) {
      return this;
    }
    var newHour = MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_HOUR);
    var newMinute = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);
    var newSecond = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_SECOND), LocalTime.SECONDS_PER_MINUTE);
    var newNano = MathUtil.intMod(newNofd, LocalTime.NANOS_PER_SECOND);
    return new LocalTime(newHour, newMinute, newSecond, newNano);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    requireNonNull(unit, 'unit');
    return this._plusUnit(-1 * amountToSubtract, unit);
  };
  _proto.minusHours = function minusHours(hoursToSubtract) {
    return this.plusHours(-1 * MathUtil.intMod(hoursToSubtract, LocalTime.HOURS_PER_DAY));
  };
  _proto.minusMinutes = function minusMinutes(minutesToSubtract) {
    return this.plusMinutes(-1 * MathUtil.intMod(minutesToSubtract, LocalTime.MINUTES_PER_DAY));
  };
  _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
    return this.plusSeconds(-1 * MathUtil.intMod(secondsToSubtract, LocalTime.SECONDS_PER_DAY));
  };
  _proto.minusNanos = function minusNanos(nanosToSubtract) {
    return this.plusNanos(-1 * MathUtil.intMod(nanosToSubtract, LocalTime.NANOS_PER_DAY));
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    } else if (_query === TemporalQueries.localTime()) {
      return this;
    }
    if (_query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.zone() || _query === TemporalQueries.offset() || _query === TemporalQueries.localDate()) {
      return null;
    }
    return _query.queryFrom(this);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    return temporal.with(LocalTime.NANO_OF_DAY, this.toNanoOfDay());
  };
  _proto.until = function until(endExclusive, unit) {
    requireNonNull(endExclusive, 'endExclusive');
    requireNonNull(unit, 'unit');
    var end = LocalTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      var nanosUntil = end.toNanoOfDay() - this.toNanoOfDay();
      switch (unit) {
        case ChronoUnit.NANOS:
          return nanosUntil;
        case ChronoUnit.MICROS:
          return MathUtil.intDiv(nanosUntil, 1000);
        case ChronoUnit.MILLIS:
          return MathUtil.intDiv(nanosUntil, 1000000);
        case ChronoUnit.SECONDS:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_SECOND);
        case ChronoUnit.MINUTES:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_MINUTE);
        case ChronoUnit.HOURS:
          return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_HOUR);
        case ChronoUnit.HALF_DAYS:
          return MathUtil.intDiv(nanosUntil, 12 * LocalTime.NANOS_PER_HOUR);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  _proto.atDate = function atDate(date) {
    return LocalDateTime.of(date, this);
  };
  _proto.atOffset = function atOffset(offset) {
    return OffsetTime.of(this, offset);
  };
  _proto.toSecondOfDay = function toSecondOfDay() {
    var total = this._hour * LocalTime.SECONDS_PER_HOUR;
    total += this._minute * LocalTime.SECONDS_PER_MINUTE;
    total += this._second;
    return total;
  };
  _proto.toNanoOfDay = function toNanoOfDay() {
    var total = this._hour * LocalTime.NANOS_PER_HOUR;
    total += this._minute * LocalTime.NANOS_PER_MINUTE;
    total += this._second * LocalTime.NANOS_PER_SECOND;
    total += this._nano;
    return total;
  };
  _proto.compareTo = function compareTo(other) {
    requireNonNull(other, 'other');
    requireInstance(other, LocalTime, 'other');
    var cmp = MathUtil.compareNumbers(this._hour, other._hour);
    if (cmp === 0) {
      cmp = MathUtil.compareNumbers(this._minute, other._minute);
      if (cmp === 0) {
        cmp = MathUtil.compareNumbers(this._second, other._second);
        if (cmp === 0) {
          cmp = MathUtil.compareNumbers(this._nano, other._nano);
        }
      }
    }
    return cmp;
  };
  _proto.isAfter = function isAfter(other) {
    return this.compareTo(other) > 0;
  };
  _proto.isBefore = function isBefore(other) {
    return this.compareTo(other) < 0;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof LocalTime) {
      return this._hour === other._hour && this._minute === other._minute && this._second === other._second && this._nano === other._nano;
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    var nod = this.toNanoOfDay();
    return MathUtil.hash(nod);
  };
  _proto.toString = function toString() {
    var buf = '';
    var hourValue = this._hour;
    var minuteValue = this._minute;
    var secondValue = this._second;
    var nanoValue = this._nano;
    buf += hourValue < 10 ? '0' : '';
    buf += hourValue;
    buf += minuteValue < 10 ? ':0' : ':';
    buf += minuteValue;
    if (secondValue > 0 || nanoValue > 0) {
      buf += secondValue < 10 ? ':0' : ':';
      buf += secondValue;
      if (nanoValue > 0) {
        buf += '.';
        if (MathUtil.intMod(nanoValue, 1000000) === 0) {
          buf += ("" + (MathUtil.intDiv(nanoValue, 1000000) + 1000)).substring(1);
        } else if (MathUtil.intMod(nanoValue, 1000) === 0) {
          buf += ("" + (MathUtil.intDiv(nanoValue, 1000) + 1000000)).substring(1);
        } else {
          buf += ("" + (nanoValue + 1000000000)).substring(1);
        }
      }
    }
    return buf;
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  _proto.format = function format(formatter) {
    requireNonNull(formatter, 'formatter');
    return formatter.format(this);
  };
  return LocalTime;
}(Temporal);
function _init$3() {
  LocalTime.HOURS = [];
  for (var hour = 0; hour < 24; hour++) {
    LocalTime.of(hour, 0, 0, 0);
  }
  LocalTime.MIN = LocalTime.HOURS[0];
  LocalTime.MAX = new LocalTime(23, 59, 59, 999999999);
  LocalTime.MIDNIGHT = LocalTime.HOURS[0];
  LocalTime.NOON = LocalTime.HOURS[12];
  LocalTime.FROM = createTemporalQuery('LocalTime.FROM', function (temporal) {
    return LocalTime.from(temporal);
  });
}
LocalTime.HOURS_PER_DAY = 24;
LocalTime.MINUTES_PER_HOUR = 60;
LocalTime.MINUTES_PER_DAY = LocalTime.MINUTES_PER_HOUR * LocalTime.HOURS_PER_DAY;
LocalTime.SECONDS_PER_MINUTE = 60;
LocalTime.SECONDS_PER_HOUR = LocalTime.SECONDS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;
LocalTime.SECONDS_PER_DAY = LocalTime.SECONDS_PER_HOUR * LocalTime.HOURS_PER_DAY;
LocalTime.MILLIS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000;
LocalTime.MICROS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000000;
LocalTime.NANOS_PER_SECOND = 1000000000;
LocalTime.NANOS_PER_MINUTE = LocalTime.NANOS_PER_SECOND * LocalTime.SECONDS_PER_MINUTE;
LocalTime.NANOS_PER_HOUR = LocalTime.NANOS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;
LocalTime.NANOS_PER_DAY = LocalTime.NANOS_PER_HOUR * LocalTime.HOURS_PER_DAY;

var NANOS_PER_MILLI = 1000000;
var Instant = function (_Temporal) {
  _inheritsLoose(Instant, _Temporal);
  Instant.now = function now(clock) {
    if (clock === void 0) {
      clock = Clock.systemUTC();
    }
    return clock.instant();
  };
  Instant.ofEpochSecond = function ofEpochSecond(epochSecond, nanoAdjustment) {
    if (nanoAdjustment === void 0) {
      nanoAdjustment = 0;
    }
    var secs = epochSecond + MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
    var nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);
    return Instant._create(secs, nos);
  };
  Instant.ofEpochMilli = function ofEpochMilli(epochMilli) {
    var secs = MathUtil.floorDiv(epochMilli, 1000);
    var mos = MathUtil.floorMod(epochMilli, 1000);
    return Instant._create(secs, mos * 1000000);
  };
  Instant.ofEpochMicro = function ofEpochMicro(epochMicro) {
    var secs = MathUtil.floorDiv(epochMicro, 1000000);
    var mos = MathUtil.floorMod(epochMicro, 1000000);
    return Instant._create(secs, mos * 1000);
  };
  Instant.from = function from(temporal) {
    try {
      var instantSecs = temporal.getLong(ChronoField.INSTANT_SECONDS);
      var nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);
      return Instant.ofEpochSecond(instantSecs, nanoOfSecond);
    } catch (ex) {
      throw new DateTimeException("Unable to obtain Instant from TemporalAccessor: " + temporal + ", type " + typeof temporal, ex);
    }
  };
  Instant.parse = function parse(text) {
    return DateTimeFormatter.ISO_INSTANT.parse(text, Instant.FROM);
  };
  Instant._create = function _create(seconds, nanoOfSecond) {
    if (seconds === 0 && nanoOfSecond === 0) {
      return Instant.EPOCH;
    }
    return new Instant(seconds, nanoOfSecond);
  };
  Instant._validate = function _validate(seconds, nanoOfSecond) {
    if (seconds < Instant.MIN_SECONDS || seconds > Instant.MAX_SECONDS) {
      throw new DateTimeException('Instant exceeds minimum or maximum instant');
    }
    if (nanoOfSecond < 0 || nanoOfSecond > LocalTime.NANOS_PER_SECOND) {
      throw new DateTimeException('Instant exceeds minimum or maximum instant');
    }
  };
  function Instant(seconds, nanoOfSecond) {
    var _this;
    _this = _Temporal.call(this) || this;
    Instant._validate(seconds, nanoOfSecond);
    _this._seconds = MathUtil.safeToInt(seconds);
    _this._nanos = MathUtil.safeToInt(nanoOfSecond);
    return _this;
  }
  var _proto = Instant.prototype;
  _proto.isSupported = function isSupported(fieldOrUnit) {
    if (fieldOrUnit instanceof ChronoField) {
      return fieldOrUnit === ChronoField.INSTANT_SECONDS || fieldOrUnit === ChronoField.NANO_OF_SECOND || fieldOrUnit === ChronoField.MICRO_OF_SECOND || fieldOrUnit === ChronoField.MILLI_OF_SECOND;
    }
    if (fieldOrUnit instanceof ChronoUnit) {
      return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoUnit.DAYS;
    }
    return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);
  };
  _proto.range = function range(field) {
    return _Temporal.prototype.range.call(this, field);
  };
  _proto.get = function get(field) {
    return this.getLong(field);
  };
  _proto.getLong = function getLong(field) {
    if (field instanceof ChronoField) {
      switch (field) {
        case ChronoField.NANO_OF_SECOND:
          return this._nanos;
        case ChronoField.MICRO_OF_SECOND:
          return MathUtil.intDiv(this._nanos, 1000);
        case ChronoField.MILLI_OF_SECOND:
          return MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);
        case ChronoField.INSTANT_SECONDS:
          return this._seconds;
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
  };
  _proto.epochSecond = function epochSecond() {
    return this._seconds;
  };
  _proto.nano = function nano() {
    return this._nanos;
  };
  _proto._withField = function _withField(field, newValue) {
    requireNonNull(field, 'field');
    if (field instanceof ChronoField) {
      field.checkValidValue(newValue);
      switch (field) {
        case ChronoField.MILLI_OF_SECOND:
          {
            var nval = newValue * NANOS_PER_MILLI;
            return nval !== this._nanos ? Instant._create(this._seconds, nval) : this;
          }
        case ChronoField.MICRO_OF_SECOND:
          {
            var _nval = newValue * 1000;
            return _nval !== this._nanos ? Instant._create(this._seconds, _nval) : this;
          }
        case ChronoField.NANO_OF_SECOND:
          return newValue !== this._nanos ? Instant._create(this._seconds, newValue) : this;
        case ChronoField.INSTANT_SECONDS:
          return newValue !== this._seconds ? Instant._create(newValue, this._nanos) : this;
      }
      throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.adjustInto(this, newValue);
  };
  _proto.truncatedTo = function truncatedTo(unit) {
    requireNonNull(unit, 'unit');
    if (unit === ChronoUnit.NANOS) {
      return this;
    }
    var unitDur = unit.duration();
    if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {
      throw new DateTimeException('Unit is too large to be used for truncation');
    }
    var dur = unitDur.toNanos();
    if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {
      throw new DateTimeException('Unit must divide into a standard day without remainder');
    }
    var nod = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_DAY) * LocalTime.NANOS_PER_SECOND + this._nanos;
    var result = MathUtil.intDiv(nod, dur) * dur;
    return this.plusNanos(result - nod);
  };
  _proto._plusUnit = function _plusUnit(amountToAdd, unit) {
    requireNonNull(amountToAdd, 'amountToAdd');
    requireNonNull(unit, 'unit');
    requireInstance(unit, TemporalUnit);
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.NANOS:
          return this.plusNanos(amountToAdd);
        case ChronoUnit.MICROS:
          return this.plusMicros(amountToAdd);
        case ChronoUnit.MILLIS:
          return this.plusMillis(amountToAdd);
        case ChronoUnit.SECONDS:
          return this.plusSeconds(amountToAdd);
        case ChronoUnit.MINUTES:
          return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_MINUTE));
        case ChronoUnit.HOURS:
          return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_HOUR));
        case ChronoUnit.HALF_DAYS:
          return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY / 2));
        case ChronoUnit.DAYS:
          return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY));
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.addTo(this, amountToAdd);
  };
  _proto.plusSeconds = function plusSeconds(secondsToAdd) {
    return this._plus(secondsToAdd, 0);
  };
  _proto.plusMillis = function plusMillis(millisToAdd) {
    return this._plus(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * NANOS_PER_MILLI);
  };
  _proto.plusNanos = function plusNanos(nanosToAdd) {
    return this._plus(0, nanosToAdd);
  };
  _proto.plusMicros = function plusMicros(microsToAdd) {
    return this._plus(MathUtil.intDiv(microsToAdd, 1000000), MathUtil.intMod(microsToAdd, 1000000) * 1000);
  };
  _proto._plus = function _plus(secondsToAdd, nanosToAdd) {
    if (secondsToAdd === 0 && nanosToAdd === 0) {
      return this;
    }
    var epochSec = this._seconds + secondsToAdd;
    epochSec = epochSec + MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND);
    var nanoAdjustment = this._nanos + nanosToAdd % LocalTime.NANOS_PER_SECOND;
    return Instant.ofEpochSecond(epochSec, nanoAdjustment);
  };
  _proto._minusUnit = function _minusUnit(amountToSubtract, unit) {
    return this._plusUnit(-1 * amountToSubtract, unit);
  };
  _proto.minusSeconds = function minusSeconds(secondsToSubtract) {
    return this.plusSeconds(secondsToSubtract * -1);
  };
  _proto.minusMillis = function minusMillis(millisToSubtract) {
    return this.plusMillis(-1 * millisToSubtract);
  };
  _proto.minusNanos = function minusNanos(nanosToSubtract) {
    return this.plusNanos(-1 * nanosToSubtract);
  };
  _proto.minusMicros = function minusMicros(microsToSubtract) {
    return this.plusMicros(-1 * microsToSubtract);
  };
  _proto.query = function query(_query) {
    requireNonNull(_query, 'query');
    if (_query === TemporalQueries.precision()) {
      return ChronoUnit.NANOS;
    }
    if (_query === TemporalQueries.localDate() || _query === TemporalQueries.localTime() || _query === TemporalQueries.chronology() || _query === TemporalQueries.zoneId() || _query === TemporalQueries.zone() || _query === TemporalQueries.offset()) {
      return null;
    }
    return _query.queryFrom(this);
  };
  _proto.adjustInto = function adjustInto(temporal) {
    requireNonNull(temporal, 'temporal');
    return temporal.with(ChronoField.INSTANT_SECONDS, this._seconds).with(ChronoField.NANO_OF_SECOND, this._nanos);
  };
  _proto.until = function until(endExclusive, unit) {
    requireNonNull(endExclusive, 'endExclusive');
    requireNonNull(unit, 'unit');
    var end = Instant.from(endExclusive);
    if (unit instanceof ChronoUnit) {
      switch (unit) {
        case ChronoUnit.NANOS:
          return this._nanosUntil(end);
        case ChronoUnit.MICROS:
          return this._microsUntil(end);
        case ChronoUnit.MILLIS:
          return MathUtil.safeSubtract(end.toEpochMilli(), this.toEpochMilli());
        case ChronoUnit.SECONDS:
          return this._secondsUntil(end);
        case ChronoUnit.MINUTES:
          return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_MINUTE);
        case ChronoUnit.HOURS:
          return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_HOUR);
        case ChronoUnit.HALF_DAYS:
          return MathUtil.intDiv(this._secondsUntil(end), 12 * LocalTime.SECONDS_PER_HOUR);
        case ChronoUnit.DAYS:
          return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_DAY);
      }
      throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
  };
  _proto._microsUntil = function _microsUntil(end) {
    var secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());
    var totalMicros = MathUtil.safeMultiply(secsDiff, 1000000);
    return MathUtil.safeAdd(totalMicros, MathUtil.intDiv(end.nano() - this.nano(), 1000));
  };
  _proto._nanosUntil = function _nanosUntil(end) {
    var secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());
    var totalNanos = MathUtil.safeMultiply(secsDiff, LocalTime.NANOS_PER_SECOND);
    return MathUtil.safeAdd(totalNanos, end.nano() - this.nano());
  };
  _proto._secondsUntil = function _secondsUntil(end) {
    var secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());
    var nanosDiff = end.nano() - this.nano();
    if (secsDiff > 0 && nanosDiff < 0) {
      secsDiff--;
    } else if (secsDiff < 0 && nanosDiff > 0) {
      secsDiff++;
    }
    return secsDiff;
  };
  _proto.atOffset = function atOffset(offset) {
    return OffsetDateTime.ofInstant(this, offset);
  };
  _proto.atZone = function atZone(zone) {
    return ZonedDateTime.ofInstant(this, zone);
  };
  _proto.toEpochMilli = function toEpochMilli() {
    var millis = MathUtil.safeMultiply(this._seconds, 1000);
    return millis + MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);
  };
  _proto.compareTo = function compareTo(otherInstant) {
    requireNonNull(otherInstant, 'otherInstant');
    requireInstance(otherInstant, Instant, 'otherInstant');
    var cmp = MathUtil.compareNumbers(this._seconds, otherInstant._seconds);
    if (cmp !== 0) {
      return cmp;
    }
    return this._nanos - otherInstant._nanos;
  };
  _proto.isAfter = function isAfter(otherInstant) {
    return this.compareTo(otherInstant) > 0;
  };
  _proto.isBefore = function isBefore(otherInstant) {
    return this.compareTo(otherInstant) < 0;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    if (other instanceof Instant) {
      return this.epochSecond() === other.epochSecond() && this.nano() === other.nano();
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return MathUtil.hashCode(this._seconds, this._nanos);
  };
  _proto.toString = function toString() {
    return DateTimeFormatter.ISO_INSTANT.format(this);
  };
  _proto.toJSON = function toJSON() {
    return this.toString();
  };
  return Instant;
}(Temporal);
function _init$2() {
  Instant.MIN_SECONDS = -31619119219200;
  Instant.MAX_SECONDS = 31494816403199;
  Instant.EPOCH = new Instant(0, 0);
  Instant.MIN = Instant.ofEpochSecond(Instant.MIN_SECONDS, 0);
  Instant.MAX = Instant.ofEpochSecond(Instant.MAX_SECONDS, 999999999);
  Instant.FROM = createTemporalQuery('Instant.FROM', function (temporal) {
    return Instant.from(temporal);
  });
}

var Clock = function () {
  function Clock() {}
  Clock.systemUTC = function systemUTC() {
    return new SystemClock(ZoneOffset.UTC);
  };
  Clock.systemDefaultZone = function systemDefaultZone() {
    return new SystemClock(ZoneId.systemDefault());
  };
  Clock.system = function system(zone) {
    return new SystemClock(zone);
  };
  Clock.fixed = function fixed(fixedInstant, zoneId) {
    return new FixedClock(fixedInstant, zoneId);
  };
  Clock.offset = function offset(baseClock, duration) {
    return new OffsetClock(baseClock, duration);
  };
  var _proto = Clock.prototype;
  _proto.millis = function millis() {
    abstractMethodFail('Clock.millis');
  };
  _proto.instant = function instant() {
    abstractMethodFail('Clock.instant');
  };
  _proto.zone = function zone() {
    abstractMethodFail('Clock.zone');
  };
  _proto.withZone = function withZone() {
    abstractMethodFail('Clock.withZone');
  };
  return Clock;
}();
var SystemClock = function (_Clock) {
  _inheritsLoose(SystemClock, _Clock);
  function SystemClock(zone) {
    var _this;
    requireNonNull(zone, 'zone');
    _this = _Clock.call(this) || this;
    _this._zone = zone;
    return _this;
  }
  var _proto2 = SystemClock.prototype;
  _proto2.zone = function zone() {
    return this._zone;
  };
  _proto2.millis = function millis() {
    return new Date().getTime();
  };
  _proto2.instant = function instant() {
    return Instant.ofEpochMilli(this.millis());
  };
  _proto2.equals = function equals(obj) {
    if (obj instanceof SystemClock) {
      return this._zone.equals(obj._zone);
    }
    return false;
  };
  _proto2.withZone = function withZone(zone) {
    if (zone.equals(this._zone)) {
      return this;
    }
    return new SystemClock(zone);
  };
  _proto2.toString = function toString() {
    return "SystemClock[" + this._zone.toString() + "]";
  };
  return SystemClock;
}(Clock);
var FixedClock = function (_Clock2) {
  _inheritsLoose(FixedClock, _Clock2);
  function FixedClock(fixedInstant, zoneId) {
    var _this2;
    _this2 = _Clock2.call(this) || this;
    _this2._instant = fixedInstant;
    _this2._zoneId = zoneId;
    return _this2;
  }
  var _proto3 = FixedClock.prototype;
  _proto3.instant = function instant() {
    return this._instant;
  };
  _proto3.millis = function millis() {
    return this._instant.toEpochMilli();
  };
  _proto3.zone = function zone() {
    return this._zoneId;
  };
  _proto3.toString = function toString() {
    return 'FixedClock[]';
  };
  _proto3.equals = function equals(obj) {
    if (obj instanceof FixedClock) {
      return this._instant.equals(obj._instant) && this._zoneId.equals(obj._zoneId);
    }
    return false;
  };
  _proto3.withZone = function withZone(zone) {
    if (zone.equals(this._zoneId)) {
      return this;
    }
    return new FixedClock(this._instant, zone);
  };
  return FixedClock;
}(Clock);
var OffsetClock = function (_Clock3) {
  _inheritsLoose(OffsetClock, _Clock3);
  function OffsetClock(baseClock, offset) {
    var _this3;
    _this3 = _Clock3.call(this) || this;
    _this3._baseClock = baseClock;
    _this3._offset = offset;
    return _this3;
  }
  var _proto4 = OffsetClock.prototype;
  _proto4.zone = function zone() {
    return this._baseClock.zone();
  };
  _proto4.withZone = function withZone(zone) {
    if (zone.equals(this._baseClock.zone())) {
      return this;
    }
    return new OffsetClock(this._baseClock.withZone(zone), this._offset);
  };
  _proto4.millis = function millis() {
    return this._baseClock.millis() + this._offset.toMillis();
  };
  _proto4.instant = function instant() {
    return this._baseClock.instant().plus(this._offset);
  };
  _proto4.equals = function equals(obj) {
    if (obj instanceof OffsetClock) {
      return this._baseClock.equals(obj._baseClock) && this._offset.equals(obj._offset);
    }
    return false;
  };
  _proto4.toString = function toString() {
    return "OffsetClock[" + this._baseClock + "," + this._offset + "]";
  };
  return OffsetClock;
}(Clock);

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ZoneOffsetTransition = function () {
  ZoneOffsetTransition.of = function of(transition, offsetBefore, offsetAfter) {
    return new ZoneOffsetTransition(transition, offsetBefore, offsetAfter);
  };
  function ZoneOffsetTransition(transition, offsetBefore, offsetAfter) {
    requireNonNull(transition, 'transition');
    requireNonNull(offsetBefore, 'offsetBefore');
    requireNonNull(offsetAfter, 'offsetAfter');
    if (offsetBefore.equals(offsetAfter)) {
      throw new IllegalArgumentException('Offsets must not be equal');
    }
    if (transition.nano() !== 0) {
      throw new IllegalArgumentException('Nano-of-second must be zero');
    }
    if (transition instanceof LocalDateTime) {
      this._transition = transition;
    } else {
      this._transition = LocalDateTime.ofEpochSecond(transition, 0, offsetBefore);
    }
    this._offsetBefore = offsetBefore;
    this._offsetAfter = offsetAfter;
  }
  var _proto = ZoneOffsetTransition.prototype;
  _proto.instant = function instant() {
    return this._transition.toInstant(this._offsetBefore);
  };
  _proto.toEpochSecond = function toEpochSecond() {
    return this._transition.toEpochSecond(this._offsetBefore);
  };
  _proto.dateTimeBefore = function dateTimeBefore() {
    return this._transition;
  };
  _proto.dateTimeAfter = function dateTimeAfter() {
    return this._transition.plusSeconds(this.durationSeconds());
  };
  _proto.offsetBefore = function offsetBefore() {
    return this._offsetBefore;
  };
  _proto.offsetAfter = function offsetAfter() {
    return this._offsetAfter;
  };
  _proto.duration = function duration() {
    return Duration.ofSeconds(this.durationSeconds());
  };
  _proto.durationSeconds = function durationSeconds() {
    return this._offsetAfter.totalSeconds() - this._offsetBefore.totalSeconds();
  };
  _proto.isGap = function isGap() {
    return this._offsetAfter.totalSeconds() > this._offsetBefore.totalSeconds();
  };
  _proto.isOverlap = function isOverlap() {
    return this._offsetAfter.totalSeconds() < this._offsetBefore.totalSeconds();
  };
  _proto.isValidOffset = function isValidOffset(offset) {
    return this.isGap() ? false : this._offsetBefore.equals(offset) || this._offsetAfter.equals(offset);
  };
  _proto.validOffsets = function validOffsets() {
    if (this.isGap()) {
      return [];
    } else {
      return [this._offsetBefore, this._offsetAfter];
    }
  };
  _proto.compareTo = function compareTo(transition) {
    return this.instant().compareTo(transition.instant());
  };
  _proto.equals = function equals(other) {
    if (other === this) {
      return true;
    }
    if (other instanceof ZoneOffsetTransition) {
      var d = other;
      return this._transition.equals(d._transition) && this._offsetBefore.equals(d.offsetBefore()) && this._offsetAfter.equals(d.offsetAfter());
    }
    return false;
  };
  _proto.hashCode = function hashCode() {
    return this._transition.hashCode() ^ this._offsetBefore.hashCode() ^ this._offsetAfter.hashCode() >>> 16;
  };
  _proto.toString = function toString() {
    return "Transition[" + (this.isGap() ? 'Gap' : 'Overlap') + " at " + this._transition.toString() + this._offsetBefore.toString() + " to " + this._offsetAfter + "]";
  };
  return ZoneOffsetTransition;
}();

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
function _init$1() {
  TemporalQueries.ZONE_ID = createTemporalQuery('ZONE_ID', function (temporal) {
    return temporal.query(TemporalQueries.ZONE_ID);
  });
  TemporalQueries.CHRONO = createTemporalQuery('CHRONO', function (temporal) {
    return temporal.query(TemporalQueries.CHRONO);
  });
  TemporalQueries.PRECISION = createTemporalQuery('PRECISION', function (temporal) {
    return temporal.query(TemporalQueries.PRECISION);
  });
  TemporalQueries.OFFSET = createTemporalQuery('OFFSET', function (temporal) {
    if (temporal.isSupported(ChronoField.OFFSET_SECONDS)) {
      return ZoneOffset.ofTotalSeconds(temporal.get(ChronoField.OFFSET_SECONDS));
    }
    return null;
  });
  TemporalQueries.ZONE = createTemporalQuery('ZONE', function (temporal) {
    var zone = temporal.query(TemporalQueries.ZONE_ID);
    return zone != null ? zone : temporal.query(TemporalQueries.OFFSET);
  });
  TemporalQueries.LOCAL_DATE = createTemporalQuery('LOCAL_DATE', function (temporal) {
    if (temporal.isSupported(ChronoField.EPOCH_DAY)) {
      return LocalDate.ofEpochDay(temporal.getLong(ChronoField.EPOCH_DAY));
    }
    return null;
  });
  TemporalQueries.LOCAL_TIME = createTemporalQuery('LOCAL_TIME', function (temporal) {
    if (temporal.isSupported(ChronoField.NANO_OF_DAY)) {
      return LocalTime.ofNanoOfDay(temporal.getLong(ChronoField.NANO_OF_DAY));
    }
    return null;
  });
}

var SystemDefaultZoneRules = function (_ZoneRules) {
  _inheritsLoose(SystemDefaultZoneRules, _ZoneRules);
  function SystemDefaultZoneRules() {
    return _ZoneRules.apply(this, arguments) || this;
  }
  var _proto = SystemDefaultZoneRules.prototype;
  _proto.isFixedOffset = function isFixedOffset() {
    return false;
  };
  _proto.offsetOfInstant = function offsetOfInstant(instant) {
    var offsetInMinutes = new Date(instant.toEpochMilli()).getTimezoneOffset();
    return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);
  };
  _proto.offsetOfEpochMilli = function offsetOfEpochMilli(epochMilli) {
    var offsetInMinutes = new Date(epochMilli).getTimezoneOffset();
    return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);
  };
  _proto.offsetOfLocalDateTime = function offsetOfLocalDateTime(localDateTime) {
    var epochMilli = localDateTime.toEpochSecond(ZoneOffset.UTC) * 1000;
    var offsetInMinutesBeforePossibleTransition = new Date(epochMilli).getTimezoneOffset();
    var epochMilliSystemZone = epochMilli + offsetInMinutesBeforePossibleTransition * 60000;
    var offsetInMinutesAfterPossibleTransition = new Date(epochMilliSystemZone).getTimezoneOffset();
    return ZoneOffset.ofTotalMinutes(offsetInMinutesAfterPossibleTransition * -1);
  };
  _proto.validOffsets = function validOffsets(localDateTime) {
    return [this.offsetOfLocalDateTime(localDateTime)];
  };
  _proto.transition = function transition() {
    return null;
  };
  _proto.standardOffset = function standardOffset(instant) {
    return this.offsetOfInstant(instant);
  };
  _proto.daylightSavings = function daylightSavings() {
    this._throwNotSupported();
  };
  _proto.isDaylightSavings = function isDaylightSavings() {
    this._throwNotSupported();
  };
  _proto.isValidOffset = function isValidOffset(dateTime, offset) {
    return this.offsetOfLocalDateTime(dateTime).equals(offset);
  };
  _proto.nextTransition = function nextTransition() {
    this._throwNotSupported();
  };
  _proto.previousTransition = function previousTransition() {
    this._throwNotSupported();
  };
  _proto.transitions = function transitions() {
    this._throwNotSupported();
  };
  _proto.transitionRules = function transitionRules() {
    this._throwNotSupported();
  };
  _proto._throwNotSupported = function _throwNotSupported() {
    throw new DateTimeException('not supported operation');
  };
  _proto.equals = function equals(other) {
    if (this === other || other instanceof SystemDefaultZoneRules) {
      return true;
    } else {
      return false;
    }
  };
  _proto.toString = function toString() {
    return 'SYSTEM';
  };
  return SystemDefaultZoneRules;
}(ZoneRules);

var SystemDefaultZoneId = function (_ZoneId) {
  _inheritsLoose(SystemDefaultZoneId, _ZoneId);
  function SystemDefaultZoneId() {
    var _this;
    _this = _ZoneId.call(this) || this;
    _this._rules = new SystemDefaultZoneRules();
    return _this;
  }
  var _proto = SystemDefaultZoneId.prototype;
  _proto.rules = function rules() {
    return this._rules;
  };
  _proto.equals = function equals(other) {
    if (this === other) {
      return true;
    }
    return false;
  };
  _proto.id = function id() {
    return 'SYSTEM';
  };
  return SystemDefaultZoneId;
}(ZoneId);

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ZoneIdFactory = function () {
  function ZoneIdFactory() {}
  ZoneIdFactory.systemDefault = function systemDefault() {
    return SYSTEM_DEFAULT_ZONE_ID_INSTANCE;
  };
  ZoneIdFactory.getAvailableZoneIds = function getAvailableZoneIds() {
    return ZoneRulesProvider.getAvailableZoneIds();
  };
  ZoneIdFactory.of = function of(zoneId) {
    requireNonNull(zoneId, 'zoneId');
    if (zoneId === 'Z') {
      return ZoneOffset.UTC;
    }
    if (zoneId.length === 1) {
      throw new DateTimeException("Invalid zone: " + zoneId);
    }
    if (StringUtil.startsWith(zoneId, '+') || StringUtil.startsWith(zoneId, '-')) {
      return ZoneOffset.of(zoneId);
    }
    if (zoneId === 'UTC' || zoneId === 'GMT' || zoneId === 'GMT0' || zoneId === 'UT') {
      return new ZoneRegion(zoneId, ZoneOffset.UTC.rules());
    }
    if (StringUtil.startsWith(zoneId, 'UTC+') || StringUtil.startsWith(zoneId, 'GMT+') || StringUtil.startsWith(zoneId, 'UTC-') || StringUtil.startsWith(zoneId, 'GMT-')) {
      var offset = ZoneOffset.of(zoneId.substring(3));
      if (offset.totalSeconds() === 0) {
        return new ZoneRegion(zoneId.substring(0, 3), offset.rules());
      }
      return new ZoneRegion(zoneId.substring(0, 3) + offset.id(), offset.rules());
    }
    if (StringUtil.startsWith(zoneId, 'UT+') || StringUtil.startsWith(zoneId, 'UT-')) {
      var _offset = ZoneOffset.of(zoneId.substring(2));
      if (_offset.totalSeconds() === 0) {
        return new ZoneRegion('UT', _offset.rules());
      }
      return new ZoneRegion("UT" + _offset.id(), _offset.rules());
    }
    if (zoneId === 'SYSTEM') {
      return ZoneId.systemDefault();
    }
    return ZoneRegion.ofId(zoneId);
  };
  ZoneIdFactory.ofOffset = function ofOffset(prefix, offset) {
    requireNonNull(prefix, 'prefix');
    requireNonNull(offset, 'offset');
    if (prefix.length === 0) {
      return offset;
    }
    if (prefix === 'GMT' || prefix === 'UTC' || prefix === 'UT') {
      if (offset.totalSeconds() === 0) {
        return new ZoneRegion(prefix, offset.rules());
      }
      return new ZoneRegion(prefix + offset.id(), offset.rules());
    }
    throw new IllegalArgumentException("Invalid prefix, must be GMT, UTC or UT: " + prefix);
  };
  ZoneIdFactory.from = function from(temporal) {
    requireNonNull(temporal, 'temporal');
    var obj = temporal.query(TemporalQueries.zone());
    if (obj == null) {
      throw new DateTimeException("Unable to obtain ZoneId from TemporalAccessor: " + temporal + ", type " + (temporal.constructor != null ? temporal.constructor.name : ''));
    }
    return obj;
  };
  return ZoneIdFactory;
}();
var SYSTEM_DEFAULT_ZONE_ID_INSTANCE = null;
function _init() {
  SYSTEM_DEFAULT_ZONE_ID_INSTANCE = new SystemDefaultZoneId();
  ZoneId.systemDefault = ZoneIdFactory.systemDefault;
  ZoneId.getAvailableZoneIds = ZoneIdFactory.getAvailableZoneIds;
  ZoneId.of = ZoneIdFactory.of;
  ZoneId.ofOffset = ZoneIdFactory.ofOffset;
  ZoneId.from = ZoneIdFactory.from;
  ZoneOffset.from = ZoneIdFactory.from;
  ZoneId.SYSTEM = SYSTEM_DEFAULT_ZONE_ID_INSTANCE;
  ZoneId.UTC = ZoneOffset.ofTotalSeconds(0);
}

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var isInit = false;
function init() {
  if (isInit) {
    return;
  }
  isInit = true;
  _init$m();
  _init$n();
  _init$l();
  _init$k();
  _init$3();
  _init$f();
  _init$1();
  _init$j();
  _init$2();
  _init$5();
  _init$4();
  _init$a();
  _init$i();
  _init$b();
  _init$c();
  _init$h();
  _init$g();
  _init$7();
  _init();
  _init$9();
  _init$d();
  _init$e();
  _init$6();
  _init$8();
}
init();

/*
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var ToNativeJsConverter = function () {
  function ToNativeJsConverter(temporal, zone) {
    var zonedDateTime;
    if (temporal instanceof Instant) {
      this.instant = temporal;
      return;
    } else if (temporal instanceof LocalDate) {
      zone = zone == null ? ZoneId.systemDefault() : zone;
      zonedDateTime = temporal.atStartOfDay(zone);
    } else if (temporal instanceof LocalDateTime) {
      zone = zone == null ? ZoneId.systemDefault() : zone;
      zonedDateTime = temporal.atZone(zone);
    } else if (temporal instanceof ZonedDateTime) {
      if (zone == null) {
        zonedDateTime = temporal;
      } else {
        zonedDateTime = temporal.withZoneSameInstant(zone);
      }
    } else {
      throw new IllegalArgumentException("unsupported instance for convert operation:" + temporal);
    }
    this.instant = zonedDateTime.toInstant();
  }
  var _proto = ToNativeJsConverter.prototype;
  _proto.toDate = function toDate() {
    return new Date(this.instant.toEpochMilli());
  };
  _proto.toEpochMilli = function toEpochMilli() {
    return this.instant.toEpochMilli();
  };
  return ToNativeJsConverter;
}();
function convert(temporal, zone) {
  return new ToNativeJsConverter(temporal, zone);
}

/*
 * @copyright (c) 2015-present, Philipp Thürwächter, Pattrick Hüper & js-joda contributors
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
function nativeJs(date, zone) {
  if (zone === void 0) {
    zone = ZoneId.systemDefault();
  }
  requireNonNull(date, 'date');
  requireNonNull(zone, 'zone');
  if (date instanceof Date) {
    return Instant.ofEpochMilli(date.getTime()).atZone(zone);
  } else if (typeof date.toDate === 'function' && date.toDate() instanceof Date) {
    return Instant.ofEpochMilli(date.toDate().getTime()).atZone(zone);
  }
  throw new IllegalArgumentException('date must be a javascript Date or a moment instance');
}

function bindUse(jsJoda) {
  var used = [];
  return function use(fn) {
    if (!~used.indexOf(fn)) {
      fn(jsJoda);
      used.push(fn);
    }
    return jsJoda;
  };
}

/**
 * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper
 * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)
 */
var _ = {
  assert: assert$1,
  DateTimeBuilder: DateTimeBuilder,
  DateTimeParseContext: DateTimeParseContext,
  DateTimePrintContext: DateTimePrintContext,
  MathUtil: MathUtil,
  StringUtil: StringUtil,
  StringBuilder: StringBuilder
};
var jsJodaExports = {
  _: _,
  convert: convert,
  nativeJs: nativeJs,
  ArithmeticException: ArithmeticException,
  DateTimeException: DateTimeException,
  DateTimeParseException: DateTimeParseException,
  IllegalArgumentException: IllegalArgumentException,
  IllegalStateException: IllegalStateException,
  UnsupportedTemporalTypeException: UnsupportedTemporalTypeException,
  NullPointerException: NullPointerException,
  Clock: Clock,
  DayOfWeek: DayOfWeek,
  Duration: Duration,
  Instant: Instant,
  LocalDate: LocalDate,
  LocalTime: LocalTime,
  LocalDateTime: LocalDateTime,
  OffsetTime: OffsetTime,
  OffsetDateTime: OffsetDateTime,
  Month: Month,
  MonthDay: MonthDay,
  ParsePosition: ParsePosition,
  Period: Period,
  Year: Year,
  YearConstants: YearConstants,
  YearMonth: YearMonth,
  ZonedDateTime: ZonedDateTime,
  ZoneOffset: ZoneOffset,
  ZoneId: ZoneId,
  ZoneRegion: ZoneRegion,
  ZoneOffsetTransition: ZoneOffsetTransition,
  ZoneRules: ZoneRules,
  ZoneRulesProvider: ZoneRulesProvider,
  ChronoLocalDate: ChronoLocalDate,
  ChronoLocalDateTime: ChronoLocalDateTime,
  ChronoZonedDateTime: ChronoZonedDateTime,
  IsoChronology: IsoChronology,
  ChronoField: ChronoField,
  ChronoUnit: ChronoUnit,
  IsoFields: IsoFields,
  Temporal: Temporal,
  TemporalAccessor: TemporalAccessor,
  TemporalAdjuster: TemporalAdjuster,
  TemporalAdjusters: TemporalAdjusters,
  TemporalAmount: TemporalAmount,
  TemporalField: TemporalField,
  TemporalQueries: TemporalQueries,
  TemporalQuery: TemporalQuery,
  TemporalUnit: TemporalUnit,
  ValueRange: ValueRange,
  DateTimeFormatter: DateTimeFormatter,
  DateTimeFormatterBuilder: DateTimeFormatterBuilder,
  DecimalStyle: DecimalStyle,
  ResolverStyle: ResolverStyle,
  SignStyle: SignStyle,
  TextStyle: TextStyle
};
var use = bindUse(jsJodaExports);
jsJodaExports.use = use;

var jsJoda_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    ArithmeticException: ArithmeticException,
    ChronoField: ChronoField,
    ChronoLocalDate: ChronoLocalDate,
    ChronoLocalDateTime: ChronoLocalDateTime,
    ChronoUnit: ChronoUnit,
    ChronoZonedDateTime: ChronoZonedDateTime,
    Clock: Clock,
    DateTimeException: DateTimeException,
    DateTimeFormatter: DateTimeFormatter,
    DateTimeFormatterBuilder: DateTimeFormatterBuilder,
    DateTimeParseException: DateTimeParseException,
    DayOfWeek: DayOfWeek,
    DecimalStyle: DecimalStyle,
    Duration: Duration,
    IllegalArgumentException: IllegalArgumentException,
    IllegalStateException: IllegalStateException,
    Instant: Instant,
    IsoChronology: IsoChronology,
    IsoFields: IsoFields,
    LocalDate: LocalDate,
    LocalDateTime: LocalDateTime,
    LocalTime: LocalTime,
    Month: Month,
    MonthDay: MonthDay,
    NullPointerException: NullPointerException,
    OffsetDateTime: OffsetDateTime,
    OffsetTime: OffsetTime,
    ParsePosition: ParsePosition,
    Period: Period,
    ResolverStyle: ResolverStyle,
    SignStyle: SignStyle,
    Temporal: Temporal,
    TemporalAccessor: TemporalAccessor,
    TemporalAdjuster: TemporalAdjuster,
    TemporalAdjusters: TemporalAdjusters,
    TemporalAmount: TemporalAmount,
    TemporalField: TemporalField,
    TemporalQueries: TemporalQueries,
    TemporalQuery: TemporalQuery,
    TemporalUnit: TemporalUnit,
    TextStyle: TextStyle,
    UnsupportedTemporalTypeException: UnsupportedTemporalTypeException,
    ValueRange: ValueRange,
    Year: Year,
    YearConstants: YearConstants,
    YearMonth: YearMonth,
    ZoneId: ZoneId,
    ZoneOffset: ZoneOffset,
    ZoneOffsetTransition: ZoneOffsetTransition,
    ZoneRegion: ZoneRegion,
    ZoneRules: ZoneRules,
    ZoneRulesProvider: ZoneRulesProvider,
    ZonedDateTime: ZonedDateTime,
    _: _,
    convert: convert,
    nativeJs: nativeJs,
    use: use
});

var require$$0 = /*@__PURE__*/getAugmentedNamespace(jsJoda_esm);

var hasRequiredKotlinDateTimeLibraryKotlinxDatetimeJsIr;

function requireKotlinDateTimeLibraryKotlinxDatetimeJsIr () {
	if (hasRequiredKotlinDateTimeLibraryKotlinxDatetimeJsIr) return KotlinDateTimeLibraryKotlinxDatetimeJsIrExports;
	hasRequiredKotlinDateTimeLibraryKotlinxDatetimeJsIr = 1;
	(function (module, exports) {
		(function (root, factory) {
		  factory(module.exports, require$$0, requireKotlinKotlinStdlib(), requireKotlinxSerializationKotlinxSerializationCoreJsIr());
		}(globalThis, function (_, $module$_js_joda_core_gcv2k, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
		  //region block: imports
		  var Instant = $module$_js_joda_core_gcv2k.Instant;
		  var OffsetDateTime = $module$_js_joda_core_gcv2k.OffsetDateTime;
		  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.e1;
		  var protoOf = kotlin_kotlin.$_$.a8;
		  var objectCreate = kotlin_kotlin.$_$.z7;
		  var captureStack = kotlin_kotlin.$_$.l6;
		  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.d1;
		  var IllegalArgumentException = kotlin_kotlin.$_$.t9;
		  var initMetadataForClass = kotlin_kotlin.$_$.z6;
		  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
		  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
		  var THROW_CCE = kotlin_kotlin.$_$.y9;
		  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
		  var initMetadataForObject = kotlin_kotlin.$_$.e7;
		  var VOID = kotlin_kotlin.$_$.f;
		  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.n1;
		  var indexOf = kotlin_kotlin.$_$.p8;
		  var charSequenceLength = kotlin_kotlin.$_$.o6;
		  var charSequenceGet = kotlin_kotlin.$_$.n6;
		  var Long = kotlin_kotlin.$_$.u9;
		  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
		  var numberToInt = kotlin_kotlin.$_$.x7;
		  var equals = kotlin_kotlin.$_$.r6;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForClass(DateTimeFormatException, 'DateTimeFormatException', DateTimeFormatException_init_$Create$, IllegalArgumentException);
		  initMetadataForObject(InstantIso8601Serializer, 'InstantIso8601Serializer', VOID, VOID, [KSerializer]);
		  initMetadataForCompanion(Companion);
		  initMetadataForClass(Instant_0, 'Instant', VOID, VOID, VOID, VOID, VOID, {0: InstantIso8601Serializer_getInstance});
		  //endregion
		  function DateTimeFormatException_init_$Init$($this) {
		    IllegalArgumentException_init_$Init$($this);
		    DateTimeFormatException.call($this);
		    return $this;
		  }
		  function DateTimeFormatException_init_$Create$() {
		    var tmp = DateTimeFormatException_init_$Init$(objectCreate(protoOf(DateTimeFormatException)));
		    captureStack(tmp, DateTimeFormatException_init_$Create$);
		    return tmp;
		  }
		  function DateTimeFormatException_init_$Init$_0(cause, $this) {
		    IllegalArgumentException_init_$Init$_0(cause, $this);
		    DateTimeFormatException.call($this);
		    return $this;
		  }
		  function DateTimeFormatException_init_$Create$_0(cause) {
		    var tmp = DateTimeFormatException_init_$Init$_0(cause, objectCreate(protoOf(DateTimeFormatException)));
		    captureStack(tmp, DateTimeFormatException_init_$Create$_0);
		    return tmp;
		  }
		  function DateTimeFormatException() {
		    captureStack(this, DateTimeFormatException);
		  }
		  function InstantIso8601Serializer() {
		    InstantIso8601Serializer_instance = this;
		    this.q10_1 = PrimitiveSerialDescriptor('Instant', STRING_getInstance());
		  }
		  protoOf(InstantIso8601Serializer).xf = function () {
		    return this.q10_1;
		  };
		  protoOf(InstantIso8601Serializer).zf = function (decoder) {
		    return Companion_getInstance().v10(decoder.cj());
		  };
		  protoOf(InstantIso8601Serializer).w10 = function (encoder, value) {
		    encoder.lk(value.toString());
		  };
		  protoOf(InstantIso8601Serializer).yf = function (encoder, value) {
		    return this.w10(encoder, value instanceof Instant_0 ? value : THROW_CCE());
		  };
		  var InstantIso8601Serializer_instance;
		  function InstantIso8601Serializer_getInstance() {
		    if (InstantIso8601Serializer_instance == null)
		      new InstantIso8601Serializer();
		    return InstantIso8601Serializer_instance;
		  }
		  function fixOffsetRepresentation($this, isoString) {
		    var time = indexOf(isoString, _Char___init__impl__6a9atx(84), VOID, true);
		    if (time === -1)
		      return isoString;
		    var tmp$ret$1;
		    $l$block: {
		      // Inline function 'kotlin.text.indexOfLast' call
		      var inductionVariable = charSequenceLength(isoString) - 1 | 0;
		      if (0 <= inductionVariable)
		        do {
		          var index = inductionVariable;
		          inductionVariable = inductionVariable + -1 | 0;
		          // Inline function 'kotlinx.datetime.Companion.fixOffsetRepresentation.<anonymous>' call
		          var c = charSequenceGet(isoString, index);
		          if (c === _Char___init__impl__6a9atx(43) || c === _Char___init__impl__6a9atx(45)) {
		            tmp$ret$1 = index;
		            break $l$block;
		          }
		        }
		         while (0 <= inductionVariable);
		      tmp$ret$1 = -1;
		    }
		    var offset = tmp$ret$1;
		    if (offset < time)
		      return isoString;
		    var separator = indexOf(isoString, _Char___init__impl__6a9atx(58), offset);
		    return !(separator === -1) ? isoString : isoString + ':00';
		  }
		  function Companion() {
		    Companion_instance = this;
		    this.r10_1 = new Instant_0(Instant.ofEpochSecond(new Long(-931914497, -750), 999999999));
		    this.s10_1 = new Instant_0(Instant.ofEpochSecond(new Long(1151527680, 720), 0));
		    this.t10_1 = new Instant_0(Instant.MIN);
		    this.u10_1 = new Instant_0(Instant.MAX);
		  }
		  protoOf(Companion).v10 = function (isoString) {
		    var tmp;
		    try {
		      tmp = new Instant_0(OffsetDateTime.parse(fixOffsetRepresentation(this, isoString)).toInstant());
		    } catch ($p) {
		      if ($p instanceof Error) {
		        var e = $p;
		        if (isJodaDateTimeParseException(e))
		          throw DateTimeFormatException_init_$Create$_0(e);
		        throw e;
		      } else {
		        throw $p;
		      }
		    }
		    return tmp;
		  };
		  var Companion_instance;
		  function Companion_getInstance() {
		    if (Companion_instance == null)
		      new Companion();
		    return Companion_instance;
		  }
		  function Instant_0(value) {
		    Companion_getInstance();
		    this.x10_1 = value;
		  }
		  protoOf(Instant_0).y10 = function (other) {
		    return numberToInt(this.x10_1.compareTo(other.x10_1));
		  };
		  protoOf(Instant_0).n1 = function (other) {
		    return this.y10(other instanceof Instant_0 ? other : THROW_CCE());
		  };
		  protoOf(Instant_0).equals = function (other) {
		    var tmp;
		    if (this === other) {
		      tmp = true;
		    } else {
		      var tmp_0;
		      if (other instanceof Instant_0) {
		        tmp_0 = equals(this.x10_1, other.x10_1);
		      } else {
		        tmp_0 = false;
		      }
		      tmp = tmp_0;
		    }
		    return tmp;
		  };
		  protoOf(Instant_0).hashCode = function () {
		    return numberToInt(this.x10_1.hashCode());
		  };
		  protoOf(Instant_0).toString = function () {
		    return this.x10_1.toString();
		  };
		  function isJodaDateTimeParseException(_this__u8e3s4) {
		    // Inline function 'kotlin.js.asDynamic' call
		    return _this__u8e3s4.name == 'DateTimeParseException';
		  }
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = Companion_getInstance;
		  //endregion
		  return _;
		}));

		
} (KotlinDateTimeLibraryKotlinxDatetimeJsIr));
	return KotlinDateTimeLibraryKotlinxDatetimeJsIrExports;
}

var KermitKermitJsIrExports = {};
var KermitKermitJsIr = {
  get exports(){ return KermitKermitJsIrExports; },
  set exports(v){ KermitKermitJsIrExports = v; },
};

var hasRequiredKermitKermitJsIr;

function requireKermitKermitJsIr () {
	if (hasRequiredKermitKermitJsIr) return KermitKermitJsIrExports;
	hasRequiredKermitKermitJsIr = 1;
	(function (module, exports) {
		(function (root, factory) {
		  factory(module.exports, requireKotlinKotlinStdlib());
		}(globalThis, function (_, kotlin_kotlin) {
		  //region block: imports
		  var protoOf = kotlin_kotlin.$_$.a8;
		  var initMetadataForClass = kotlin_kotlin.$_$.z6;
		  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
		  var VOID = kotlin_kotlin.$_$.f;
		  var Unit_instance = kotlin_kotlin.$_$.w3;
		  var listOf = kotlin_kotlin.$_$.q5;
		  var initMetadataForObject = kotlin_kotlin.$_$.e7;
		  var THROW_IAE = kotlin_kotlin.$_$.z9;
		  var Enum = kotlin_kotlin.$_$.r9;
		  var stackTraceToString = kotlin_kotlin.$_$.va;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForClass(LogWriter, 'LogWriter');
		  initMetadataForClass(Logger, 'Logger');
		  initMetadataForCompanion(Companion, Logger);
		  initMetadataForObject(LoggerGlobal, 'LoggerGlobal');
		  initMetadataForClass(Severity, 'Severity', VOID, Enum);
		  initMetadataForClass(ConsoleWriter, 'ConsoleWriter', ConsoleWriter, LogWriter);
		  initMetadataForClass(JsMutableLoggerConfig, 'JsMutableLoggerConfig');
		  //endregion
		  function LogWriter() {
		  }
		  protoOf(LogWriter).l1d = function (severity) {
		    return true;
		  };
		  function get_DEFAULT_MIN_SEVERITY() {
		    _init_properties_Logger_kt__mpqsw();
		    return DEFAULT_MIN_SEVERITY;
		  }
		  var DEFAULT_MIN_SEVERITY;
		  function Companion() {
		    Companion_instance = this;
		    Logger.call(this, LoggerGlobal_getInstance().n1d_1);
		  }
		  var Companion_instance;
		  function Companion_getInstance() {
		    if (Companion_instance == null)
		      new Companion();
		    return Companion_instance;
		  }
		  function Logger(config, tag) {
		    Companion_getInstance();
		    tag = tag === VOID ? 'Kermit' : tag;
		    this.o1d_1 = config;
		    this.p1d_1 = tag;
		  }
		  protoOf(Logger).q1d = function (severity, tag, throwable, message) {
		    // Inline function 'co.touchlab.kermit.Logger.processLog' call
		    // Inline function 'kotlin.collections.forEach' call
		    var tmp0_iterator = this.o1d_1.r1d().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'co.touchlab.kermit.Logger.processLog.<anonymous>' call
		      if (element.l1d(severity)) {
		        // Inline function 'co.touchlab.kermit.Logger.log.<anonymous>' call
		        element.m1d(severity, message, tag, throwable);
		      }
		    }
		  };
		  function LoggerGlobal() {
		    LoggerGlobal_instance = this;
		    this.n1d_1 = mutableKermitConfigInit(listOf(platformLogWriter()));
		  }
		  var LoggerGlobal_instance;
		  function LoggerGlobal_getInstance() {
		    if (LoggerGlobal_instance == null)
		      new LoggerGlobal();
		    return LoggerGlobal_instance;
		  }
		  var properties_initialized_Logger_kt_6n8a9a;
		  function _init_properties_Logger_kt__mpqsw() {
		    if (!properties_initialized_Logger_kt_6n8a9a) {
		      properties_initialized_Logger_kt_6n8a9a = true;
		      DEFAULT_MIN_SEVERITY = Severity_Verbose_getInstance();
		    }
		  }
		  var Severity_Verbose_instance;
		  var Severity_Debug_instance;
		  var Severity_Info_instance;
		  var Severity_Warn_instance;
		  var Severity_Error_instance;
		  var Severity_Assert_instance;
		  function valueOf(value) {
		    switch (value) {
		      case 'Verbose':
		        return Severity_Verbose_getInstance();
		      case 'Debug':
		        return Severity_Debug_getInstance();
		      case 'Info':
		        return Severity_Info_getInstance();
		      case 'Warn':
		        return Severity_Warn_getInstance();
		      case 'Error':
		        return Severity_Error_getInstance();
		      case 'Assert':
		        return Severity_Assert_getInstance();
		      default:
		        Severity_initEntries();
		        THROW_IAE('No enum constant value.');
		        break;
		    }
		  }
		  var Severity_entriesInitialized;
		  function Severity_initEntries() {
		    if (Severity_entriesInitialized)
		      return Unit_instance;
		    Severity_entriesInitialized = true;
		    Severity_Verbose_instance = new Severity('Verbose', 0);
		    Severity_Debug_instance = new Severity('Debug', 1);
		    Severity_Info_instance = new Severity('Info', 2);
		    Severity_Warn_instance = new Severity('Warn', 3);
		    Severity_Error_instance = new Severity('Error', 4);
		    Severity_Assert_instance = new Severity('Assert', 5);
		  }
		  function Severity(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function Severity_Verbose_getInstance() {
		    Severity_initEntries();
		    return Severity_Verbose_instance;
		  }
		  function Severity_Debug_getInstance() {
		    Severity_initEntries();
		    return Severity_Debug_instance;
		  }
		  function Severity_Info_getInstance() {
		    Severity_initEntries();
		    return Severity_Info_instance;
		  }
		  function Severity_Warn_getInstance() {
		    Severity_initEntries();
		    return Severity_Warn_instance;
		  }
		  function Severity_Error_getInstance() {
		    Severity_initEntries();
		    return Severity_Error_instance;
		  }
		  function Severity_Assert_getInstance() {
		    Severity_initEntries();
		    return Severity_Assert_instance;
		  }
		  function ConsoleWriter() {
		    LogWriter.call(this);
		  }
		  protoOf(ConsoleWriter).m1d = function (severity, message, tag, throwable) {
		    var output = '[' + tag + '] ' + message;
		    if (throwable == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      output = output + (' ' + stackTraceToString(throwable));
		    }
		    switch (severity.e2_1) {
		      case 5:
		      case 4:
		        console.error(output);
		        break;
		      case 3:
		        console.warn(output);
		        break;
		      case 2:
		        console.info(output);
		        break;
		      case 1:
		      case 0:
		        console.log(output);
		        break;
		    }
		  };
		  function JsMutableLoggerConfig(logWriters) {
		    this.s1d_1 = get_DEFAULT_MIN_SEVERITY();
		    this.t1d_1 = logWriters;
		  }
		  protoOf(JsMutableLoggerConfig).r1d = function () {
		    return this.t1d_1;
		  };
		  function mutableKermitConfigInit(logWriters) {
		    return new JsMutableLoggerConfig(logWriters);
		  }
		  function platformLogWriter() {
		    return new ConsoleWriter();
		  }
		  //endregion
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = Logger;
		  _.$_$.b = valueOf;
		  _.$_$.c = Companion_getInstance;
		  //endregion
		  return _;
		}));

		
} (KermitKermitJsIr));
	return KermitKermitJsIrExports;
}

var hasRequiredClientsdkClientcore;

function requireClientsdkClientcore () {
	if (hasRequiredClientsdkClientcore) return clientsdkClientcoreExports;
	hasRequiredClientsdkClientcore = 1;
	(function (module, exports) {
		(function (root, factory) {
		  factory(module.exports, requireKotlinKotlinStdlib(), requireKotlinxSerializationKotlinxSerializationCoreJsIr(), requireKotlinxSerializationKotlinxSerializationJsonJsIr(), requireKotlinDateTimeLibraryKotlinxDatetimeJsIr(), requireKermitKermitJsIr());
		}(globalThis, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_datetime, kotlin_co_touchlab_kermit) {
		  //region block: imports
		  var imul = Math.imul;
		  var protoOf = kotlin_kotlin.$_$.a8;
		  var initMetadataForObject = kotlin_kotlin.$_$.e7;
		  var initMetadataForInterface = kotlin_kotlin.$_$.c7;
		  var VOID = kotlin_kotlin.$_$.f;
		  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.wa;
		  var Unit_instance = kotlin_kotlin.$_$.w3;
		  var THROW_CCE = kotlin_kotlin.$_$.y9;
		  var isInterface = kotlin_kotlin.$_$.m7;
		  var initMetadataForClass = kotlin_kotlin.$_$.z6;
		  var listOfNotNull = kotlin_kotlin.$_$.p5;
		  var toString = kotlin_kotlin.$_$.e8;
		  var hashCode = kotlin_kotlin.$_$.y6;
		  var equals = kotlin_kotlin.$_$.r6;
		  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.n3;
		  var arrayOf = kotlin_kotlin.$_$.ka;
		  var createKType = kotlin_kotlin.$_$.b;
		  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q2;
		  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
		  var getKClass = kotlin_kotlin.$_$.e;
		  var getStringHashCode = kotlin_kotlin.$_$.x6;
		  var ReferenceArraySerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b2;
		  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
		  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
		  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
		  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
		  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
		  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
		  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e2;
		  var objectCreate = kotlin_kotlin.$_$.z7;
		  var LongSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
		  var get_nullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
		  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
		  var toString_0 = kotlin_kotlin.$_$.xa;
		  var EnumSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
		  var to = kotlin_kotlin.$_$.ya;
		  var mapOf = kotlin_kotlin.$_$.u5;
		  var ArrayListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
		  var put = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.q;
		  var putJsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.p;
		  var emptyMap = kotlin_kotlin.$_$.c5;
		  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.i;
		  var JsonObjectBuilder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.h;
		  var removePrefix = kotlin_kotlin.$_$.t8;
		  var BooleanSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
		  var getBooleanHashCode = kotlin_kotlin.$_$.u6;
		  var Exception_init_$Init$ = kotlin_kotlin.$_$.z;
		  var captureStack = kotlin_kotlin.$_$.l6;
		  var Exception = kotlin_kotlin.$_$.s9;
		  var defineProp = kotlin_kotlin.$_$.q6;
		  var JsonObjectSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
		  var Regex_init_$Create$ = kotlin_kotlin.$_$.v;
		  var mapOf_0 = kotlin_kotlin.$_$.t5;
		  var DoubleSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
		  var Long = kotlin_kotlin.$_$.u9;
		  var getNumberHashCode = kotlin_kotlin.$_$.v6;
		  var JsonContentPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.f;
		  var NotImplementedError = kotlin_kotlin.$_$.v9;
		  var LinkedHashMapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
		  var Enum = kotlin_kotlin.$_$.r9;
		  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c2;
		  var get_jsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.n;
		  var get_jsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.o;
		  var startsWith = kotlin_kotlin.$_$.y8;
		  var Companion_instance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
		  var emptySet = kotlin_kotlin.$_$.d5;
		  var plus = kotlin_kotlin.$_$.v5;
		  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.r;
		  var noWhenBranchMatchedException = kotlin_kotlin.$_$.ta;
		  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.g;
		  var lazy = kotlin_kotlin.$_$.ra;
		  var EnumDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
		  var THROW_IAE = kotlin_kotlin.$_$.z9;
		  var Exception_init_$Init$_0 = kotlin_kotlin.$_$.c1;
		  var UnitSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
		  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
		  var collectionSizeOrDefault = kotlin_kotlin.$_$.m4;
		  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.h;
		  var IllegalArgumentException = kotlin_kotlin.$_$.t9;
		  var joinToString = kotlin_kotlin.$_$.k5;
		  var Companion_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_datetime.$_$.a;
		  var Pair = kotlin_kotlin.$_$.w9;
		  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.l1;
		  var Json = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.m;
		  var numberToLong = kotlin_kotlin.$_$.y7;
		  var KtMap = kotlin_kotlin.$_$.f4;
		  var KtMutableMap = kotlin_kotlin.$_$.h4;
		  var getKClassFromExpression = kotlin_kotlin.$_$.d;
		  var ObjectSerializer_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
		  var SealedClassSerializer_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
		  var FloatSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
		  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
		  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
		  var flatten = kotlin_kotlin.$_$.f5;
		  var Companion_getInstance_0 = kotlin_co_touchlab_kermit.$_$.c;
		  var numberRangeToNumber = kotlin_kotlin.$_$.u7;
		  var slice = kotlin_kotlin.$_$.w8;
		  var Logger = kotlin_co_touchlab_kermit.$_$.a;
		  var valueOf = kotlin_co_touchlab_kermit.$_$.b;
		  var copyToArray = kotlin_kotlin.$_$.z4;
		  var arrayConcat = kotlin_kotlin.$_$.a;
		  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.i;
		  var listOf = kotlin_kotlin.$_$.r5;
		  var listOf_0 = kotlin_kotlin.$_$.q5;
		  var Exception_init_$Create$ = kotlin_kotlin.$_$.b1;
		  var replaceFirst = kotlin_kotlin.$_$.u8;
		  var charSequenceLength = kotlin_kotlin.$_$.o6;
		  var Exception_init_$Init$_1 = kotlin_kotlin.$_$.a1;
		  var reversed = kotlin_kotlin.$_$.x5;
		  var filterNotNull = kotlin_kotlin.$_$.e5;
		  var cast = kotlin_kotlin.$_$.n8;
		  var substringAfter = kotlin_kotlin.$_$.z8;
		  var split = kotlin_kotlin.$_$.x8;
		  var mapCapacity = kotlin_kotlin.$_$.s5;
		  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.q;
		  var JsonNull_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
		  var Serializable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m2;
		  var JsonElement = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.g;
		  var KtList = kotlin_kotlin.$_$.d4;
		  var isArray = kotlin_kotlin.$_$.f7;
		  var JsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.j;
		  var JsonPrimitive_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.l;
		  var JsonPrimitive_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.k;
		  var isNumber = kotlin_kotlin.$_$.o7;
		  var JsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.e;
		  var toLong = kotlin_kotlin.$_$.c8;
		  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.n1;
		  var Char = kotlin_kotlin.$_$.o9;
		  var Default_getInstance_0 = kotlin_kotlin.$_$.m3;
		  var random = kotlin_kotlin.$_$.h8;
		  //endregion
		  //region block: pre-declaration
		  initMetadataForObject(BuildKonfig, 'BuildKonfig');
		  function getConversationEvents$default(cid, parameters, filterGroup, filterGroupVersion, callback, $super) {
		    parameters = parameters === VOID ? null : parameters;
		    filterGroup = filterGroup === VOID ? 'ChatEvents' : filterGroup;
		    filterGroupVersion = filterGroupVersion === VOID ? 3 : filterGroupVersion;
		    var tmp;
		    if ($super === VOID) {
		      this.n1f(cid, parameters, filterGroup, filterGroupVersion, callback);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.n1f.call(this, cid, parameters, filterGroup, filterGroupVersion, callback);
		    }
		    return tmp;
		  }
		  function sendMessageEvent$default(cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback, $super) {
		    text = text === VOID ? null : text;
		    imageUrl = imageUrl === VOID ? null : imageUrl;
		    videoUrl = videoUrl === VOID ? null : videoUrl;
		    audioUrl = audioUrl === VOID ? null : audioUrl;
		    fileUrl = fileUrl === VOID ? null : fileUrl;
		    vCardUrl = vCardUrl === VOID ? null : vCardUrl;
		    customBody = customBody === VOID ? null : customBody;
		    location = location === VOID ? null : location;
		    template = template === VOID ? null : template;
		    var tmp;
		    if ($super === VOID) {
		      this.w1f(cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.w1f.call(this, cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback);
		    }
		    return tmp;
		  }
		  initMetadataForInterface(ChatAPI, 'ChatAPI');
		  initMetadataForInterface(CoreClientWithMedia, 'CoreClientWithMedia', VOID, VOID, [ChatAPI]);
		  initMetadataForClass(Builder, 'Builder', Builder);
		  initMetadataForClass(CoreClientImpl, 'CoreClientImpl', VOID, VOID, [ChatAPI, CoreClientWithMedia]);
		  initMetadataForObject(SdkInfo, 'SdkInfo');
		  initMetadataForClass(ErrorReport, 'ErrorReport');
		  function queryParams() {
		    return null;
		  }
		  function encode(encoder, originatingSessionId) {
		    return '';
		  }
		  function isSanitized() {
		    return true;
		  }
		  initMetadataForInterface(ApiRequest, 'ApiRequest');
		  initMetadataForClass(UpdateSessionRequest, 'UpdateSessionRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion);
		  initMetadataForObject($serializer, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_0);
		  initMetadataForObject($serializer_0, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_1);
		  initMetadataForObject($serializer_1, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MetricsWsReconnectionTimeBody, 'MetricsWsReconnectionTimeBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance});
		  initMetadataForClass(MetricsBody, 'MetricsBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_0});
		  initMetadataForClass(Body, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_1});
		  initMetadataForClass(MetricsWsReconnectionTimeReq, 'MetricsWsReconnectionTimeReq', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_2);
		  initMetadataForObject($serializer_2, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForInterface(ApiResponse, 'ApiResponse');
		  initMetadataForClass(MetricsWsReconnectionTime, 'MetricsWsReconnectionTime', MetricsWsReconnectionTime, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_2});
		  initMetadataForClass(GetLegRequest, 'GetLegRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_3);
		  initMetadataForObject($serializer_3, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetLeg, 'GetLeg', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_3});
		  initMetadataForClass(GetConversationRequest, 'GetConversationRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForObject($serializer_4, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(EmbeddedMember, 'EmbeddedMember', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_4});
		  initMetadataForCompanion(Companion_4);
		  initMetadataForObject($serializer_5, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetConversation, 'GetConversation', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_5});
		  initMetadataForClass(GetConversationLegsRequest, 'GetConversationLegsRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_5);
		  initMetadataForObject($serializer_6, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationLegsEmbedded, 'ConversationLegsEmbedded', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_6});
		  initMetadataForCompanion(Companion_6);
		  initMetadataForObject($serializer_7, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetConversationLegs, 'GetConversationLegs', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_7});
		  initMetadataForObject($serializer_8, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PageNavigationLink, 'PageNavigationLink', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_8});
		  initMetadataForCompanion(Companion_7);
		  initMetadataForObject($serializer_9, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PageNavigationLinks, 'PageNavigationLinks', PageNavigationLinks, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_9});
		  initMetadataForClass(AppKnockingRequest, 'AppKnockingRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForClass(MemberKickRequest, 'MemberKickRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_8);
		  initMetadataForObject($serializer_10, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_9);
		  initMetadataForObject($serializer_11, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberJoinChannel, 'MemberJoinChannel', MemberJoinChannel, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_10});
		  initMetadataForClass(Body_0, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_11});
		  initMetadataForClass(MemberJoinRequest, 'MemberJoinRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForClass(DeleteKnockerRequest, 'DeleteKnockerRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_10);
		  initMetadataForObject($serializer_12, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_11);
		  initMetadataForObject($serializer_13, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegMuteBody, 'LegMuteBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_12});
		  initMetadataForClass(Body_1, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_13});
		  initMetadataForClass(LegMuteRequest, 'LegMuteRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_12);
		  initMetadataForObject($serializer_14, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_13);
		  initMetadataForObject($serializer_15, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegUnmuteBody, 'LegUnmuteBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_14});
		  initMetadataForClass(Body_2, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_15});
		  initMetadataForClass(LegUnmuteRequest, 'LegUnmuteRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_14);
		  initMetadataForObject($serializer_16, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_15);
		  initMetadataForObject($serializer_17, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegEarmuffEnableBody, 'LegEarmuffEnableBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_16});
		  initMetadataForClass(Body_3, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_17});
		  initMetadataForClass(LegEarmuffEnableRequest, 'LegEarmuffEnableRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_16);
		  initMetadataForObject($serializer_18, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_17);
		  initMetadataForObject($serializer_19, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegEarmuffDisableBody, 'LegEarmuffDisableBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_18});
		  initMetadataForClass(Body_4, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_19});
		  initMetadataForClass(LegEarmuffDisableRequest, 'LegEarmuffDisableRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_18);
		  initMetadataForObject($serializer_20, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_19);
		  initMetadataForObject($serializer_21, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegDTMFBody, 'LegDTMFBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_20});
		  initMetadataForClass(Body_5, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_21});
		  initMetadataForClass(LegDTMFRequest, 'LegDTMFRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_20);
		  initMetadataForObject($serializer_22, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_21);
		  initMetadataForObject($serializer_23, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioSayBody, 'AudioSayBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_22});
		  initMetadataForClass(Body_6, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_23});
		  initMetadataForClass(AudioSayRequest, 'AudioSayRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForObject($serializer_24, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(InvalidParameter, 'InvalidParameter', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_24});
		  initMetadataForCompanion(Companion_22);
		  initMetadataForObject($serializer_25, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSError, 'CSError', CSError, Exception, VOID, VOID, VOID, {0: $serializer_getInstance_25});
		  initMetadataForClass(GetMyMemberRequest, 'GetMyMemberRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForObject($serializer_26, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(EmbeddedUser, 'EmbeddedUser', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_26});
		  initMetadataForCompanion(Companion_23);
		  initMetadataForObject($serializer_27, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetMember, 'GetMember', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_27});
		  initMetadataForCompanion(Companion_24);
		  initMetadataForObject($serializer_28, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Properties, 'Properties', Properties, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_28});
		  initMetadataForCompanion(Companion_25);
		  initMetadataForObject($serializer_29, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PostedEvent, 'PostedEvent', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_29});
		  initMetadataForClass(PostConversationEventRequest, 'PostConversationEventRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_26);
		  initMetadataForObject($serializer_30, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  function isSanitized_0() {
		    return true;
		  }
		  initMetadataForInterface(PostConversationEventRequestBody, 'PostConversationEventRequestBody', VOID, VOID, VOID, VOID, VOID, {0: EmptySerializer_getInstance});
		  initMetadataForClass(UpdateEventStateRequestBody, 'UpdateEventStateRequestBody', VOID, VOID, [PostConversationEventRequestBody], VOID, VOID, {0: $serializer_getInstance_30});
		  initMetadataForCompanion(Companion_27);
		  initMetadataForObject($serializer_31, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Body_7, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_31});
		  initMetadataForClass(CreateConversationRequest, 'CreateConversationRequest', CreateConversationRequest, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_28);
		  initMetadataForObject($serializer_32, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationCreate, 'ConversationCreate', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_32});
		  initMetadataForCompanion(Companion_29);
		  initMetadataForObject($serializer_33, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_30);
		  initMetadataForObject($serializer_34, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Body_8, 'Body', Body_8, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_33});
		  initMetadataForClass(Properties_0, 'Properties', Properties_0, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_34});
		  initMetadataForClass(UpdateConversationRequest, 'UpdateConversationRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_31);
		  initMetadataForObject($serializer_35, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_32);
		  initMetadataForObject($serializer_36, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_33);
		  initMetadataForObject($serializer_37, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberJoinChannel_0, 'MemberJoinChannel', MemberJoinChannel_0, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_35});
		  initMetadataForClass(JoinUser, 'JoinUser', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_36});
		  initMetadataForClass(Body_9, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_37});
		  initMetadataForClass(ConversationJoinRequest, 'ConversationJoinRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_34);
		  initMetadataForObject($serializer_38, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationJoin, 'ConversationJoin', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_38});
		  initMetadataForCompanion(Companion_35);
		  initMetadataForObject($serializer_39, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_36);
		  initMetadataForObject($serializer_40, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_37);
		  initMetadataForObject($serializer_41, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_38);
		  initMetadataForObject($serializer_42, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_39);
		  initMetadataForObject($serializer_43, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationInviteTo, 'ConversationInviteTo', ConversationInviteTo, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_39});
		  initMetadataForClass(ConversationInviteFrom, 'ConversationInviteFrom', ConversationInviteFrom, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_40});
		  initMetadataForClass(ConversationInviteChannel, 'ConversationInviteChannel', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_41});
		  initMetadataForClass(ConversationInviteUser, 'ConversationInviteUser', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_42});
		  initMetadataForClass(Body_10, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_43});
		  initMetadataForClass(ConversationInviteRequest, 'ConversationInviteRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_40);
		  initMetadataForObject($serializer_44, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationInvite, 'ConversationInvite', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_44});
		  initMetadataForClass(MemberLeft, 'MemberLeft', VOID, VOID, [ApiResponse]);
		  initMetadataForClass(ConversationDeleteRequest, 'ConversationDeleteRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForClass(ConversationDelete, 'ConversationDelete', VOID, VOID, [ApiResponse]);
		  initMetadataForClass(GetUserConversationsRequest, 'GetUserConversationsRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_41);
		  initMetadataForObject($serializer_45, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UserConversationsEmbedded, 'UserConversationsEmbedded', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_45});
		  initMetadataForCompanion(Companion_42);
		  initMetadataForObject($serializer_46, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetUserConversations, 'GetUserConversations', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_46});
		  initMetadataForClass(GetConversationEventsRequest, 'GetConversationEventsRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_43);
		  initMetadataForObject($serializer_47, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationEventsEmbedded, 'ConversationEventsEmbedded', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_47});
		  initMetadataForCompanion(Companion_44);
		  initMetadataForObject($serializer_48, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetConversationEvents, 'GetConversationEvents', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_48});
		  initMetadataForClass(GetConversationMembersRequest, 'GetConversationMembersRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_45);
		  initMetadataForObject($serializer_49, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationMembersEmbedded, 'ConversationMembersEmbedded', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_49});
		  initMetadataForCompanion(Companion_46);
		  initMetadataForObject($serializer_50, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetConversationMembers, 'GetConversationMembers', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_50});
		  initMetadataForClass(GetConversationMemberRequest, 'GetConversationMemberRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_47);
		  initMetadataForObject($serializer_51, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(GetUser, 'GetUser', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_51});
		  initMetadataForCompanion(Companion_48);
		  initMetadataForObject($serializer_52, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PostConversationEvent, 'PostConversationEvent', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_52});
		  initMetadataForClass(DeleteConversationEventRequest, 'DeleteConversationEventRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_49);
		  initMetadataForObject($serializer_53, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(DeleteConversationEvent, 'DeleteConversationEvent', DeleteConversationEvent, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_53});
		  initMetadataForCompanion(Companion_50);
		  initMetadataForObject($serializer_54, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Embedded, 'Embedded', Embedded, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_54});
		  initMetadataForObject($serializer_55, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(FromUser, 'FromUser', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_55});
		  initMetadataForObject($serializer_56, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(FromMember, 'FromMember', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_56});
		  initMetadataForClass(OptionSerializer, 'OptionSerializer', VOID, VOID, [KSerializer]);
		  initMetadataForClass(GetUserRequest, 'GetUserRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_51);
		  initMetadataForObject($serializer_57, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCUpdateStatsReport, 'RTCUpdateStatsReport', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_57});
		  initMetadataForClass(RTCStatsReportRequest, 'RTCStatsReportRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_52);
		  initMetadataForObject($serializer_58, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_53);
		  initMetadataForObject($serializer_59, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_54);
		  initMetadataForObject($serializer_60, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PostLegBody, 'PostLegBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_58});
		  initMetadataForClass(PostLegOffer, 'PostLegOffer', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_59});
		  initMetadataForClass(Body_11, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_60});
		  initMetadataForClass(PostLegRequest, 'PostLegRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_55);
		  initMetadataForObject($serializer_61, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PostLeg, 'PostLeg', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_61});
		  initMetadataForCompanion(Companion_56);
		  initMetadataForObject($serializer_62, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_57);
		  initMetadataForObject($serializer_63, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RtcAnswerBody, 'RtcAnswerBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_62});
		  initMetadataForClass(Body_12, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_63});
		  initMetadataForClass(RTCAnswerRequest, 'RTCAnswerRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_58);
		  initMetadataForObject($serializer_64, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_59);
		  initMetadataForObject($serializer_65, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_60);
		  initMetadataForObject($serializer_66, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RtcReconnectBody, 'RtcReconnectBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_64});
		  initMetadataForClass(RtcReconnectOffer, 'RtcReconnectOffer', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_65});
		  initMetadataForClass(Body_13, 'Body', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_66});
		  initMetadataForClass(RTCReconnectRequest, 'RTCReconnectRequest', VOID, VOID, [ApiRequest]);
		  initMetadataForCompanion(Companion_61);
		  initMetadataForObject($serializer_67, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AppKnocking, 'AppKnocking', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_67});
		  initMetadataForCompanion(Companion_62);
		  initMetadataForObject($serializer_68, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCReconnect, 'RTCReconnect', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_68});
		  initMetadataForClass(DeletedKnocker, 'DeletedKnocker', VOID, VOID, [ApiResponse]);
		  initMetadataForCompanion(Companion_63);
		  initMetadataForObject($serializer_69, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UpdateSession, 'UpdateSession', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_69});
		  initMetadataForCompanion(Companion_64);
		  initMetadataForObject($serializer_70, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberJoin, 'MemberJoin', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_70});
		  initMetadataForCompanion(Companion_65);
		  initMetadataForObject($serializer_71, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegMute, 'LegMute', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_71});
		  initMetadataForCompanion(Companion_66);
		  initMetadataForObject($serializer_72, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegUnmute, 'LegUnmute', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_72});
		  initMetadataForCompanion(Companion_67);
		  initMetadataForObject($serializer_73, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegEarmuffEnable, 'LegEarmuffEnable', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_73});
		  initMetadataForCompanion(Companion_68);
		  initMetadataForObject($serializer_74, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegEarmuffDisable, 'LegEarmuffDisable', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_74});
		  initMetadataForCompanion(Companion_69);
		  initMetadataForObject($serializer_75, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegDTMF, 'LegDTMF', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_75});
		  initMetadataForCompanion(Companion_70);
		  initMetadataForObject($serializer_76, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioSay, 'AudioSay', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_76});
		  initMetadataForObject(EmptySerializer, 'EmptySerializer', VOID, JsonContentPolymorphicSerializer);
		  initMetadataForCompanion(Companion_71);
		  initMetadataForObject($serializer_77, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCStatsReportResponse, 'RTCStatsReportResponse', RTCStatsReportResponse, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_77});
		  initMetadataForCompanion(Companion_72);
		  initMetadataForObject($serializer_78, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCAnswerResponse, 'RTCAnswerResponse', VOID, VOID, [ApiResponse], VOID, VOID, {0: $serializer_getInstance_78});
		  initMetadataForCompanion(Companion_73);
		  initMetadataForObject($serializer_79, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Links, 'Links', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_79});
		  initMetadataForClass(CSConversationEventType, 'CSConversationEventType', VOID, Enum);
		  initMetadataForCompanion(Companion_74, VOID, [SerializerFactory]);
		  initMetadataForInterface(CSConversationEvent, 'CSConversationEvent', VOID, VOID, VOID, VOID, VOID, {0: CSConversationEventsSerializer_getInstance});
		  initMetadataForCompanion(Companion_75);
		  initMetadataForClass(CSConversationEventJsonBody, 'CSConversationEventJsonBody', VOID, VOID, [PostConversationEventRequestBody], VOID, VOID, {0: CSConversationEventJsonBodySerializer_getInstance});
		  initMetadataForObject(CSConversationEventsSerializer, 'CSConversationEventsSerializer', VOID, JsonContentPolymorphicSerializer);
		  initMetadataForObject(CSConversationEventJsonBodySerializer, 'CSConversationEventJsonBodySerializer', VOID, VOID, [KSerializer]);
		  initMetadataForCompanion(Companion_76);
		  initMetadataForObject($serializer_80, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSCustomEvent, 'CSCustomEvent', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_80});
		  initMetadataForCompanion(Companion_77);
		  initMetadataForObject($serializer_81, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMemberInvitedEvent, 'CSMemberInvitedEvent', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_81});
		  initMetadataForCompanion(Companion_78);
		  initMetadataForObject($serializer_82, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMemberJoinedEvent, 'CSMemberJoinedEvent', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_82});
		  initMetadataForCompanion(Companion_79);
		  initMetadataForObject($serializer_83, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMemberLeftEvent, 'CSMemberLeftEvent', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_83});
		  initMetadataForCompanion(Companion_80);
		  initMetadataForObject($serializer_84, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSEventDelete, 'CSEventDelete', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_84});
		  initMetadataForObject($serializer_85, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMemberEventBody, 'CSMemberEventBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_85});
		  initMetadataForCompanion(Companion_81);
		  initMetadataForObject($serializer_86, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSEventState, 'CSEventState', CSEventState, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_86});
		  initMetadataForObject($serializer_87, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSEventTimestamp, 'CSEventTimestamp', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_87});
		  initMetadataForObject($serializer_88, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCHangup, 'RTCHangup', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_88});
		  initMetadataForCompanion(Companion_82);
		  initMetadataForObject($serializer_89, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForInterface(SocketEvent, 'SocketEvent', VOID, VOID, VOID, VOID, VOID, {0: SocketEventSerializer_getInstance});
		  initMetadataForClass(AudioSayEvent, 'AudioSayEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_89});
		  initMetadataForCompanion(Companion_83);
		  initMetadataForObject($serializer_90, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegStatusUpdateEvent, 'LegStatusUpdateEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_90});
		  initMetadataForCompanion(Companion_84);
		  initMetadataForObject($serializer_91, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegStatusUpdate, 'LegStatusUpdate', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_91});
		  initMetadataForCompanion(Companion_85);
		  initMetadataForObject($serializer_92, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioMuteOnEvent, 'AudioMuteOnEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_92});
		  initMetadataForObject($serializer_93, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioMuteBody, 'AudioMuteBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_93});
		  initMetadataForCompanion(Companion_86);
		  initMetadataForObject($serializer_94, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioMuteOffEvent, 'AudioMuteOffEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_94});
		  initMetadataForCompanion(Companion_87);
		  initMetadataForObject($serializer_95, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioEarmuffOnEvent, 'AudioEarmuffOnEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_95});
		  initMetadataForObject($serializer_96, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioEarmuffBody, 'AudioEarmuffBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_96});
		  initMetadataForCompanion(Companion_88);
		  initMetadataForObject($serializer_97, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioEarmuffOffEvent, 'AudioEarmuffOffEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_97});
		  initMetadataForCompanion(Companion_89);
		  initMetadataForObject($serializer_98, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioDTMFEvent, 'AudioDTMFEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_98});
		  initMetadataForObject($serializer_99, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioDTMFBody, 'AudioDTMFBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_99});
		  initMetadataForCompanion(Companion_90);
		  initMetadataForObject($serializer_100, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCHangupEvent, 'RTCHangupEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_100});
		  initMetadataForCompanion(Companion_91);
		  initMetadataForObject($serializer_101, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCTransferEvent, 'RTCTransferEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_101});
		  initMetadataForObject($serializer_102, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCTransfer, 'RTCTransfer', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_102});
		  initMetadataForObject($serializer_103, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberInvited, 'MemberInvited', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_103});
		  initMetadataForObject($serializer_104, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PushMemberInvitedEvent, 'PushMemberInvitedEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_104});
		  initMetadataForCompanion(Companion_92);
		  initMetadataForObject($serializer_105, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionSuccessEvent, 'SessionSuccessEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_105});
		  initMetadataForCompanion(Companion_93);
		  initMetadataForObject($serializer_106, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionSuccess, 'SessionSuccess', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_106});
		  initMetadataForCompanion(Companion_94);
		  initMetadataForObject($serializer_107, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForInterface(SocketConversationEvent, 'SocketConversationEvent', VOID, VOID, [SocketEvent]);
		  initMetadataForClass(MemberJoinedEvent, 'MemberJoinedEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_107});
		  initMetadataForObject($serializer_108, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberJoined, 'MemberJoined', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_108});
		  initMetadataForCompanion(Companion_95);
		  initMetadataForObject($serializer_109, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCAnswerEvent, 'RTCAnswerEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_109});
		  initMetadataForObject($serializer_110, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCAnswer, 'RTCAnswer', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_110});
		  initMetadataForCompanion(Companion_96);
		  initMetadataForObject($serializer_111, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberInvitedEvent, 'MemberInvitedEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_111});
		  initMetadataForCompanion(Companion_97);
		  initMetadataForObject($serializer_112, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberMediaEvent, 'MemberMediaEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_112});
		  initMetadataForObject($serializer_113, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberMedia, 'MemberMedia', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_113});
		  initMetadataForCompanion(Companion_98);
		  initMetadataForObject($serializer_114, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberLeftEvent, 'MemberLeftEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_114});
		  initMetadataForObject($serializer_115, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberLeftBody, 'MemberLeftBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_115});
		  initMetadataForCompanion(Companion_99);
		  initMetadataForObject($serializer_116, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberLeftReason, 'MemberLeftReason', MemberLeftReason, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_116});
		  initMetadataForObject($serializer_117, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioSayBody_0, 'AudioSayBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_117});
		  initMetadataForObject($serializer_118, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LegStatusHistory, 'LegStatusHistory', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_118});
		  initMetadataForObject($serializer_119, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSEventStateBody, 'CSEventStateBody', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_119});
		  initMetadataForCompanion(Companion_100);
		  initMetadataForObject($serializer_120, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageEvent, 'MessageEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_120});
		  initMetadataForCompanion(Companion_101);
		  initMetadataForObject($serializer_121, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(EphemeralEvent, 'EphemeralEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_121});
		  initMetadataForCompanion(Companion_102);
		  initMetadataForObject($serializer_122, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(DeleteEvent, 'DeleteEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_122});
		  initMetadataForCompanion(Companion_103);
		  initMetadataForObject($serializer_123, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageDeliveredSocketEvent, 'MessageDeliveredSocketEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_123});
		  initMetadataForCompanion(Companion_104);
		  initMetadataForObject($serializer_124, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageRejectedSocketEvent, 'MessageRejectedSocketEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_124});
		  initMetadataForCompanion(Companion_105);
		  initMetadataForObject($serializer_125, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageSubmittedSocketEvent, 'MessageSubmittedSocketEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_125});
		  initMetadataForCompanion(Companion_106);
		  initMetadataForObject($serializer_126, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageUndeliverableSocketEvent, 'MessageUndeliverableSocketEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_126});
		  initMetadataForCompanion(Companion_107);
		  initMetadataForObject($serializer_127, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MessageSeenSocketEvent, 'MessageSeenSocketEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_127});
		  initMetadataForCompanion(Companion_108);
		  initMetadataForObject($serializer_128, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioSayDoneEvent, 'AudioSayDoneEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_128});
		  initMetadataForCompanion(Companion_109);
		  initMetadataForObject($serializer_129, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CustomEvent, 'CustomEvent', VOID, VOID, [SocketConversationEvent], VOID, VOID, {0: $serializer_getInstance_129});
		  initMetadataForObject($serializer_130, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AudioSayDone, 'AudioSayDone', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_130});
		  initMetadataForCompanion(Companion_110);
		  initMetadataForObject($serializer_131, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_111);
		  initMetadataForObject($serializer_132, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_112);
		  initMetadataForObject($serializer_133, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_113);
		  initMetadataForObject($serializer_134, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_114);
		  initMetadataForObject($serializer_135, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_115);
		  initMetadataForObject($serializer_136, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_116);
		  initMetadataForObject($serializer_137, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_117);
		  initMetadataForObject($serializer_138, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForCompanion(Companion_118);
		  initMetadataForObject($serializer_139, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForInterface(Body_14, 'Body', VOID, VOID, [PostConversationEventRequestBody], VOID, VOID, {0: CSMessageEventBodySerializer_getInstance});
		  initMetadataForClass(TextBody, 'TextBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_131});
		  initMetadataForClass(ImageBody, 'ImageBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_132});
		  initMetadataForClass(VideoBody, 'VideoBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_133});
		  initMetadataForClass(AudioBody, 'AudioBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_134});
		  initMetadataForClass(FileBody, 'FileBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_135});
		  initMetadataForClass(VCardBody, 'VCardBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_136});
		  initMetadataForClass(CustomBody, 'CustomBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_137});
		  initMetadataForClass(TemplateBody, 'TemplateBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_138});
		  initMetadataForClass(LocationBody, 'LocationBody', VOID, VOID, [Body_14], VOID, VOID, {0: $serializer_getInstance_139});
		  initMetadataForCompanion(Companion_119);
		  initMetadataForObject($serializer_140, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMessageEvent, 'CSMessageEvent', VOID, VOID, [CSConversationEvent], VOID, VOID, {0: $serializer_getInstance_140});
		  initMetadataForCompanion(Companion_120);
		  initMetadataForObject($serializer_141, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UrlObject, 'UrlObject', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_141});
		  initMetadataForCompanion(Companion_121, VOID, [SerializerFactory]);
		  initMetadataForObject($serializer_142, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CSMessageType, 'CSMessageType', VOID, Enum, VOID, VOID, VOID, {0: Companion_getInstance_123});
		  initMetadataForObject(CSMessageEventBodySerializer, 'CSMessageEventBodySerializer', VOID, JsonContentPolymorphicSerializer);
		  initMetadataForCompanion(Companion_122);
		  initMetadataForObject($serializer_143, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(TemplateObject, 'TemplateObject', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_143});
		  initMetadataForCompanion(Companion_123);
		  initMetadataForObject($serializer_144, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(WhatsappObject, 'WhatsappObject', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_144});
		  initMetadataForCompanion(Companion_124);
		  initMetadataForObject($serializer_145, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(LocationObject, 'LocationObject', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_145});
		  initMetadataForClass(TimeoutAction, 'TimeoutAction');
		  initMetadataForInterface(MediaEvent, 'MediaEvent');
		  initMetadataForClass(MediaDisable, 'MediaDisable', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(Mute, 'Mute', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(Unmute, 'Unmute', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(EnableEarmuff, 'EnableEarmuff', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(DisableEarmuff, 'DisableEarmuff', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(EnableNoiseSuppression, 'EnableNoiseSuppression', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(DisableNoiseSuppression, 'DisableNoiseSuppression', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(CallReconnectionRetry, 'CallReconnectionRetry', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(MediaErrorEvent, 'MediaErrorEvent', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(RTCStatsUpdate, 'RTCStatsUpdate', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(MediaConnectionStateUpdate, 'MediaConnectionStateUpdate', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(MediaOffer, 'MediaOffer', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(MediaAnswer, 'MediaAnswer', VOID, VOID, [MediaEvent]);
		  initMetadataForClass(UnknownSocketEvent, 'UnknownSocketEvent');
		  initMetadataForClass(SocketConnectionStatus, 'SocketConnectionStatus', VOID, Enum);
		  initMetadataForClass(SocketConnectionFailedReason, 'SocketConnectionFailedReason', VOID, Enum);
		  initMetadataForClass(SessionStatus, 'SessionStatus');
		  initMetadataForObject(None, 'None', VOID, SessionStatus);
		  initMetadataForClass(Active, 'Active', VOID, SessionStatus);
		  initMetadataForClass(Inactive, 'Inactive', Inactive, SessionStatus);
		  initMetadataForClass(SessionError, 'SessionError', VOID, Exception);
		  initMetadataForClass(SessionConnectError, 'SessionConnectError', VOID, SessionError);
		  initMetadataForClass(SessionNoActiveSessionError, 'SessionNoActiveSessionError', SessionNoActiveSessionError, SessionConnectError);
		  initMetadataForClass(SocketConnect, 'SocketConnect');
		  function encode_0() {
		    // Inline function 'kotlin.collections.mapOf' call
		    return emptyMap();
		  }
		  initMetadataForInterface(SocketEmitAction, 'SocketEmitAction');
		  initMetadataForObject(DeleteSession, 'DeleteSession', VOID, VOID, [SocketEmitAction]);
		  initMetadataForObject(SocketDisconnect, 'SocketDisconnect');
		  initMetadataForClass(SocketSetSession, 'SocketSetSession');
		  initMetadataForClass(SocketConnectionStatusWrapper, 'SocketConnectionStatusWrapper');
		  initMetadataForClass(MetricsSuccessfullySent, 'MetricsSuccessfullySent');
		  initMetadataForClass(SocketSetSessionId, 'SocketSetSessionId');
		  initMetadataForCompanion(Companion_125, VOID, [SerializerFactory]);
		  initMetadataForClass(SocketStatus, 'SocketStatus');
		  initMetadataForObject(SocketConnectEmptyTokenError, 'SocketConnectEmptyTokenError');
		  initMetadataForClass(SessionTimerEvent, 'SessionTimerEvent');
		  initMetadataForCompanion(Companion_126);
		  initMetadataForObject($serializer_146, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionInvalidTokenEvent, 'SessionInvalidTokenEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_146});
		  initMetadataForCompanion(Companion_127);
		  initMetadataForObject($serializer_147, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionInvalidEvent, 'SessionInvalidEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_147});
		  initMetadataForCompanion(Companion_128);
		  initMetadataForObject($serializer_148, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionExpiredTokenEvent, 'SessionExpiredTokenEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_148});
		  initMetadataForCompanion(Companion_129);
		  initMetadataForObject($serializer_149, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionMaxOpenEvent, 'SessionMaxOpenEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_149});
		  initMetadataForCompanion(Companion_130);
		  initMetadataForObject($serializer_150, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AuthorizationErrorEvent, 'AuthorizationErrorEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_150});
		  initMetadataForClass(SessionEmptyTokenError, 'SessionEmptyTokenError', SessionEmptyTokenError, SessionError);
		  initMetadataForClass(SessionSocketTransportError, 'SessionSocketTransportError', SessionSocketTransportError, SessionConnectError);
		  initMetadataForClass(SessionTimeoutError, 'SessionTimeoutError', SessionTimeoutError, SessionConnectError);
		  initMetadataForClass(SessionInvalidError, 'SessionInvalidError', SessionInvalidError, SessionConnectError);
		  initMetadataForClass(SessionInvalidTokenError, 'SessionInvalidTokenError', SessionInvalidTokenError, SessionConnectError);
		  initMetadataForClass(AuthorizationError, 'AuthorizationError', AuthorizationError, SessionConnectError);
		  initMetadataForClass(SessionExpiredTokenError, 'SessionExpiredTokenError', SessionExpiredTokenError, SessionConnectError);
		  initMetadataForClass(SessionMaxOpenSessions, 'SessionMaxOpenSessions', SessionMaxOpenSessions, SessionConnectError);
		  initMetadataForObject(SocketEventSerializer, 'SocketEventSerializer', VOID, JsonContentPolymorphicSerializer);
		  initMetadataForCompanion(Companion_131);
		  initMetadataForObject($serializer_151, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionUpdateTokenSuccessEvent, 'SessionUpdateTokenSuccessEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_151});
		  initMetadataForCompanion(Companion_132);
		  initMetadataForObject($serializer_152, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionLogoutSuccessEvent, 'SessionLogoutSuccessEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_152});
		  initMetadataForCompanion(Companion_133);
		  initMetadataForObject($serializer_153, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SessionTerminatedEvent, 'SessionTerminatedEvent', VOID, VOID, [SocketEvent], VOID, VOID, {0: $serializer_getInstance_153});
		  function onAudioSay() {
		  }
		  function onAudioMuteUpdate(conversationId, legId, isMuted) {
		  }
		  function onAudioEarmuffUpdate(conversationId, legId, earmuffStatus) {
		  }
		  function onAudioDTMFUpdate(conversationId, legId, digits) {
		  }
		  initMetadataForInterface(AudioEventListener, 'AudioEventListener');
		  function onRTCHangup(conversationId, legId, hangup) {
		  }
		  function onRTCTransfer(conversationId, legId) {
		  }
		  function onLegStatusUpdate(conversationId, legId, fromUserId, status) {
		  }
		  initMetadataForInterface(RTCEventListener, 'RTCEventListener');
		  function onConversationEvent(event) {
		  }
		  initMetadataForInterface(ConversationEventListener, 'ConversationEventListener');
		  initMetadataForClass(ChatAPIImpl$1, VOID, VOID, VOID, [AudioEventListener, RTCEventListener, ConversationEventListener]);
		  initMetadataForClass(ChatAPIImpl, 'ChatAPIImpl', VOID, VOID, [ChatAPI]);
		  initMetadataForClass(LoggingLevel, 'LoggingLevel', VOID, Enum);
		  initMetadataForObject(DefaultConfig, 'DefaultConfig');
		  initMetadataForClass(ClientConfigRegion, 'ClientConfigRegion', VOID, Enum);
		  initMetadataForClass(ConversationAPIImpl, 'ConversationAPIImpl');
		  initMetadataForClass(InternalError, 'InternalError', VOID, Exception);
		  initMetadataForClass(CustomLoggersLimitReached, 'CustomLoggersLimitReached', VOID, InternalError);
		  initMetadataForClass(NoCallFound, 'NoCallFound', NoCallFound, InternalError);
		  initMetadataForClass(NoCallMediaFound, 'NoCallMediaFound', NoCallMediaFound, InternalError);
		  initMetadataForClass(MediaTimeout, 'MediaTimeout', MediaTimeout, InternalError);
		  initMetadataForClass(NoInviteFound, 'NoInviteFound', NoInviteFound, InternalError);
		  initMetadataForClass(InvalidCallAction, 'InvalidCallAction', InvalidCallAction, InternalError);
		  initMetadataForClass(NoOfferFound, 'NoOfferFound', NoOfferFound, InternalError);
		  initMetadataForClass(InboundCallFailed, 'InboundCallFailed', InboundCallFailed, InternalError);
		  initMetadataForClass(AuthorizationError_0, 'AuthorizationError', AuthorizationError_0, InternalError);
		  initMetadataForClass(MemberNotInConversation, 'MemberNotInConversation', MemberNotInConversation, InternalError);
		  initMetadataForClass(NoConversationFound, 'NoConversationFound', NoConversationFound, InternalError);
		  initMetadataForClass(NoLegFound, 'NoLegFound', NoLegFound, InternalError);
		  initMetadataForClass(ServiceTempNotAvailable, 'ServiceTempNotAvailable', ServiceTempNotAvailable, InternalError);
		  initMetadataForClass(UnexpectedNullValue, 'UnexpectedNullValue', UnexpectedNullValue, InternalError);
		  initMetadataForClass(IllegalArgumentException_0, 'IllegalArgumentException', IllegalArgumentException_0, InternalError);
		  initMetadataForClass(ServiceNotAvailable, 'ServiceNotAvailable', ServiceNotAvailable, InternalError);
		  initMetadataForClass(ParsingException, 'ParsingException', VOID, InternalError);
		  initMetadataForClass(UnsanitizedInputError, 'UnsanitizedInputError', UnsanitizedInputError, InternalError);
		  initMetadataForClass(NoAnswerFound, 'NoAnswerFound', NoAnswerFound, InternalError);
		  initMetadataForCompanion(Companion_134);
		  initMetadataForClass(MediaClientError, 'MediaClientError', VOID, Exception);
		  initMetadataForClass(PeerConnectionNotFound, 'PeerConnectionNotFound', VOID, MediaClientError);
		  initMetadataForClass(TrackNotFound, 'TrackNotFound', VOID, MediaClientError);
		  initMetadataForClass(ProcessAnswerError, 'ProcessAnswerError', VOID, MediaClientError);
		  initMetadataForClass(CreateAnswerError, 'CreateAnswerError', CreateAnswerError, MediaClientError);
		  initMetadataForClass(CreateOfferError, 'CreateOfferError', CreateOfferError, MediaClientError);
		  initMetadataForClass(VonageError, 'VonageError', VOID, Exception);
		  initMetadataForClass(VonageErrorType, 'VonageErrorType', VOID, Enum);
		  initMetadataForClass(EventAPIImpl, 'EventAPIImpl');
		  initMetadataForCompanion(Companion_135);
		  initMetadataForObject($serializer_154, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Channel, 'Channel', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_154});
		  initMetadataForObject($serializer_155, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberChannel, 'MemberChannel', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_155});
		  initMetadataForCompanion(Companion_136);
		  initMetadataForObject($serializer_156, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UserChannels, 'UserChannels', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_156});
		  initMetadataForCompanion(Companion_137, VOID, [SerializerFactory]);
		  initMetadataForObject($serializer_157, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ChannelType, 'ChannelType', VOID, Enum, VOID, VOID, VOID, {0: Companion_getInstance_139});
		  initMetadataForObject($serializer_158, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ChannelFromTo, 'ChannelFromTo', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_158});
		  initMetadataForClass(Properties_1, 'Properties');
		  initMetadataForCompanion(Companion_138);
		  initMetadataForClass(Conversation, 'Conversation');
		  initMetadataForObject($serializer_159, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationTimestamp, 'ConversationTimestamp', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_159});
		  initMetadataForClass(ConversationState, 'ConversationState', VOID, Enum);
		  initMetadataForClass(ConversationsPage, 'ConversationsPage');
		  initMetadataForClass(EventState, 'EventState', EventState);
		  initMetadataForClass(EventStateType, 'EventStateType', VOID, Enum);
		  initMetadataForClass(EventsPage, 'EventsPage');
		  initMetadataForInterface(PersistentConversationEvent, 'PersistentConversationEvent');
		  initMetadataForClass(EmbeddedInfo, 'EmbeddedInfo');
		  initMetadataForClass(Body_15, 'Body');
		  initMetadataForClass(MemberInvitedConversationEvent, 'MemberInvitedConversationEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForCompanion(Companion_139);
		  initMetadataForClass(MemberJoinedConversationEvent, 'MemberJoinedConversationEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MemberLeftConversationEvent, 'MemberLeftConversationEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(CustomConversationEvent, 'CustomConversationEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(EphemeralConversationEvent, 'EphemeralConversationEvent');
		  initMetadataForClass(EventStateBody, 'EventStateBody');
		  initMetadataForClass(EventDeleteConversationEvent, 'EventDeleteConversationEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageDeliveredEvent, 'MessageDeliveredEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageRejectedEvent, 'MessageRejectedEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageUndeliverableEvent, 'MessageUndeliverableEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageSubmittedEvent, 'MessageSubmittedEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageSeenEvent, 'MessageSeenEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForObject(System, 'System');
		  initMetadataForCompanion(Companion_140);
		  initMetadataForObject($serializer_160, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MediaState, 'MediaState', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_160});
		  initMetadataForCompanion(Companion_141);
		  initMetadataForClass(Leg, 'Leg');
		  initMetadataForClass(LegsPage, 'LegsPage');
		  initMetadataForClass(MemberState, 'MemberState', VOID, Enum);
		  initMetadataForCompanion(Companion_142);
		  initMetadataForClass(Member, 'Member');
		  initMetadataForObject($serializer_161, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(MemberTimestamp, 'MemberTimestamp', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_161});
		  initMetadataForClass(MembersPage, 'MembersPage');
		  initMetadataForClass(Body_16, 'Body');
		  initMetadataForInterface(MessageEvent_0, 'MessageEvent', VOID, VOID, [PersistentConversationEvent]);
		  initMetadataForClass(MessageTextEvent, 'MessageTextEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_17, 'Body');
		  initMetadataForClass(MessageCustomEvent, 'MessageCustomEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_18, 'Body');
		  initMetadataForClass(MessageImageEvent, 'MessageImageEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_19, 'Body');
		  initMetadataForClass(MessageVideoEvent, 'MessageVideoEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_20, 'Body');
		  initMetadataForClass(MessageAudioEvent, 'MessageAudioEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_21, 'Body');
		  initMetadataForClass(MessageFileEvent, 'MessageFileEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_22, 'Body');
		  initMetadataForClass(MessageVCardEvent, 'MessageVCardEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_23, 'Body');
		  initMetadataForClass(TemplateObject_0, 'TemplateObject');
		  initMetadataForClass(WhatsappObject_0, 'WhatsappObject');
		  initMetadataForClass(MessageTemplateEvent, 'MessageTemplateEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(Body_24, 'Body');
		  initMetadataForClass(Location, 'Location');
		  initMetadataForClass(MessageLocationEvent, 'MessageLocationEvent', VOID, VOID, [MessageEvent_0]);
		  initMetadataForClass(PresentingOrder, 'PresentingOrder', VOID, Enum);
		  initMetadataForClass(OrderBy, 'OrderBy', VOID, Enum);
		  initMetadataForClass(OrderBy$CREATED, 'CREATED', VOID, OrderBy);
		  initMetadataForClass(OrderBy$CUSTOM_SORT_KEY, 'CUSTOM_SORT_KEY', VOID, OrderBy);
		  initMetadataForClass(CreateConversationParameters, 'CreateConversationParameters', CreateConversationParameters);
		  initMetadataForClass(GetConversationsParameters, 'GetConversationsParameters', GetConversationsParameters);
		  initMetadataForClass(GetConversationMembersParameters, 'GetConversationMembersParameters', GetConversationMembersParameters);
		  initMetadataForClass(GetConversationEventsParameters, 'GetConversationEventsParameters', GetConversationEventsParameters);
		  initMetadataForClass(UpdateConversationParameters, 'UpdateConversationParameters', UpdateConversationParameters);
		  initMetadataForClass(GetCallLegsParameters, 'GetCallLegsParameters', GetCallLegsParameters);
		  initMetadataForClass(User, 'User');
		  initMetadataForObject($serializer_162, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UserTimestamp, 'UserTimestamp', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_162});
		  initMetadataForClass(PushAPIImpl, 'PushAPIImpl');
		  initMetadataForClass(SessionErrorReason, 'SessionErrorReason', VOID, Enum);
		  initMetadataForClass(SessionAPIImpl, 'SessionAPIImpl');
		  initMetadataForInterface(VoiceClientListener, 'VoiceClientListener');
		  initMetadataForClass(VoiceInviteCancelReason, 'VoiceInviteCancelReason', VOID, Enum);
		  initMetadataForClass(HangupReason, 'HangupReason', VOID, Enum);
		  initMetadataForClass(LegStatus, 'LegStatus', VOID, Enum);
		  initMetadataForClass(CallDisconnectReason, 'CallDisconnectReason', VOID, Enum);
		  initMetadataForClass(VoiceAPIImpl$1, VOID, VOID, VOID, [AudioEventListener, RTCEventListener, ConversationEventListener]);
		  initMetadataForClass(VoiceAPIImpl, 'VoiceAPIImpl');
		  initMetadataForInterface(CallEvent, 'CallEvent');
		  initMetadataForClass(SetupOutboundCall, 'SetupOutboundCall', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallKnockingRequestFailure, 'CallKnockingRequestFailure', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallCleanup, 'CallCleanup', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallReconnect, 'CallReconnect', VOID, VOID, [CallEvent]);
		  initMetadataForClass(SetupInboundCall, 'SetupInboundCall', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallReconnectSuccess, 'CallReconnectSuccess', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallReconnectFailure, 'CallReconnectFailure', VOID, VOID, [CallEvent]);
		  initMetadataForClass(InviteReconcile, 'InviteReconcile', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallCreate, 'CallCreate', VOID, VOID, [CallEvent]);
		  initMetadataForClass(CallMemberMediaTimeout, 'CallMemberMediaTimeout', VOID, VOID, [CallEvent]);
		  initMetadataForClass(MemberJoinInfo, 'MemberJoinInfo');
		  initMetadataForClass(CallConversationUpdate, 'CallConversationUpdate', VOID, VOID, [CallEvent]);
		  initMetadataForClass(InviteCleanup, 'InviteCleanup', VOID, VOID, [CallEvent]);
		  initMetadataForClass(VoiceChannelType, 'VoiceChannelType', VOID, Enum);
		  initMetadataForCompanion(Companion_143, VOID, [SerializerFactory]);
		  initMetadataForClass(ChannelEndpoint, 'ChannelEndpoint', VOID, VOID, VOID, VOID, VOID, {0: Companion_getInstance_145});
		  initMetadataForCompanion(Companion_144);
		  initMetadataForObject($serializer_163, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(PhoneChannelEndpoint, 'PhoneChannelEndpoint', VOID, ChannelEndpoint, VOID, VOID, VOID, {0: $serializer_getInstance_163});
		  initMetadataForCompanion(Companion_145);
		  initMetadataForObject($serializer_164, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(AppChannelEndpoint, 'AppChannelEndpoint', VOID, ChannelEndpoint, VOID, VOID, VOID, {0: $serializer_getInstance_164});
		  initMetadataForObject(AppChannelEndpointNoUser, 'AppChannelEndpointNoUser', VOID, ChannelEndpoint, [ChannelEndpoint, SerializerFactory], VOID, VOID, {0: AppChannelEndpointNoUser_getInstance});
		  initMetadataForCompanion(Companion_146);
		  initMetadataForObject($serializer_165, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(SipChannelEndpoint, 'SipChannelEndpoint', VOID, ChannelEndpoint, VOID, VOID, VOID, {0: $serializer_getInstance_165});
		  initMetadataForCompanion(Companion_147);
		  initMetadataForObject($serializer_166, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(WebSocketChannelEndpoint, 'WebSocketChannelEndpoint', VOID, ChannelEndpoint, VOID, VOID, VOID, {0: $serializer_getInstance_166});
		  initMetadataForCompanion(Companion_148);
		  initMetadataForObject($serializer_167, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(DTMFChannel, 'DTMFChannel', DTMFChannel, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_167});
		  initMetadataForCompanion(Companion_149);
		  initMetadataForObject($serializer_168, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(Channel_0, 'Channel', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_168});
		  initMetadataForObject(ChannelEndpointSerializer, 'ChannelEndpointSerializer', VOID, JsonContentPolymorphicSerializer);
		  initMetadataForObject($serializer_169, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(ConversationInfo, 'ConversationInfo', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_169});
		  initMetadataForClass(LegState, 'LegState');
		  initMetadataForObject(None_0, 'None', VOID, LegState);
		  initMetadataForClass(Prewarm, 'Prewarm', VOID, LegState);
		  initMetadataForClass(Started, 'Started', VOID, LegState);
		  initMetadataForClass(Completed, 'Completed', VOID, LegState);
		  initMetadataForClass(MediaDescription, 'MediaDescription');
		  initMetadataForClass(Offer, 'Offer', VOID, MediaDescription);
		  initMetadataForClass(Answer, 'Answer', VOID, MediaDescription);
		  initMetadataForClass(MediaTransport, 'MediaTransport', MediaTransport);
		  initMetadataForObject($serializer_170, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(UserAudio, 'UserAudio', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_170});
		  initMetadataForObject($serializer_171, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(InvitedUserMedia, 'InvitedUserMedia', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_171});
		  initMetadataForObject($serializer_172, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCQuality, 'RTCQuality', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_172});
		  initMetadataForCompanion(Companion_150, VOID, [SerializerFactory]);
		  initMetadataForObject($serializer_173, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(CallCompleteReason, 'CallCompleteReason', VOID, Enum, VOID, VOID, VOID, {0: Companion_getInstance_152});
		  initMetadataForObject($serializer_174, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCHangupReason, 'RTCHangupReason', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_174});
		  initMetadataForObject(CallCompleteReasonSerialiser, 'CallCompleteReasonSerialiser', VOID, VOID, [KSerializer]);
		  initMetadataForObject($serializer_175, '$serializer', VOID, VOID, [GeneratedSerializer]);
		  initMetadataForClass(RTCBandwidth, 'RTCBandwidth', VOID, VOID, VOID, VOID, VOID, {0: $serializer_getInstance_175});
		  initMetadataForClass(BaseVonageLogger, 'BaseVonageLogger');
		  initMetadataForClass(ConsoleLogger, 'ConsoleLogger', ConsoleLogger, BaseVonageLogger);
		  initMetadataForClass(WebRTCLogger, 'WebRTCLogger', WebRTCLogger, BaseVonageLogger);
		  initMetadataForClass(BaseVonageLogger$config$1);
		  function e(topic, message, throwable) {
		    return this.m3d(LoggingLevel_Error_getInstance(), topic, message, throwable);
		  }
		  function v(topic, throwable, message) {
		    return this.l3d(LoggingLevel_Verbose_getInstance(), topic, throwable, message);
		  }
		  function d(topic, throwable, message) {
		    return this.l3d(LoggingLevel_Debug_getInstance(), topic, throwable, message);
		  }
		  function i(topic, throwable, message) {
		    return this.l3d(LoggingLevel_Info_getInstance(), topic, throwable, message);
		  }
		  function w(topic, throwable, message) {
		    return this.l3d(LoggingLevel_Warn_getInstance(), topic, throwable, message);
		  }
		  function e_0(topic, throwable, message) {
		    return this.l3d(LoggingLevel_Error_getInstance(), topic, throwable, message);
		  }
		  initMetadataForInterface(ILoggerAdapter, 'ILoggerAdapter');
		  initMetadataForClass(LoggerAdapter, 'LoggerAdapter', VOID, VOID, [ILoggerAdapter]);
		  initMetadataForClass(TopicLoggerAdapter, 'TopicLoggerAdapter', VOID, VOID, [ILoggerAdapter]);
		  initMetadataForClass(Topic, 'Topic');
		  initMetadataForClass(Http, 'Http', VOID, Topic);
		  initMetadataForObject(Client, 'Client', VOID, Http);
		  initMetadataForObject(Middleware, 'Middleware', VOID, Http);
		  initMetadataForClass(Ws, 'Ws', VOID, Topic);
		  initMetadataForObject(Client_0, 'Client', VOID, Ws);
		  initMetadataForObject(Middleware_0, 'Middleware', VOID, Ws);
		  initMetadataForObject(EventParser, 'EventParser', VOID, Ws);
		  initMetadataForObject(EventEmit, 'EventEmit', VOID, Ws);
		  initMetadataForObject(Connection, 'Connection', VOID, Ws);
		  initMetadataForClass(Media, 'Media', VOID, Topic);
		  initMetadataForObject(Client_1, 'Client', VOID, Media);
		  initMetadataForObject(Middleware_1, 'Middleware', VOID, Media);
		  initMetadataForObject(WebRtc, 'WebRtc', VOID, Media);
		  initMetadataForClass(Api, 'Api', VOID, Topic);
		  initMetadataForObject(Session, 'Session', VOID, Api);
		  initMetadataForObject(Voice, 'Voice', VOID, Api);
		  initMetadataForObject(Chat, 'Chat', VOID, Api);
		  initMetadataForObject(Push, 'Push', VOID, Api);
		  initMetadataForObject(Conversation_0, 'Conversation', VOID, Api);
		  initMetadataForClass(Store, 'Store', VOID, Topic);
		  initMetadataForObject(Action, 'Action', VOID, Store);
		  initMetadataForObject(Callback, 'Callback', VOID, Store);
		  initMetadataForClass(Reducer, 'Reducer', VOID, Topic);
		  initMetadataForObject(Call, 'Call', VOID, Reducer);
		  initMetadataForObject(Invite, 'Invite', VOID, Reducer);
		  initMetadataForObject(Session_0, 'Session', VOID, Reducer);
		  initMetadataForObject(Config, 'Config', VOID, Reducer);
		  initMetadataForObject(RemoteEvent, 'RemoteEvent', VOID, Reducer);
		  initMetadataForObject(MediaEvent_0, 'MediaEvent', VOID, Reducer);
		  initMetadataForCompanion(Companion_151);
		  initMetadataForClass(createVonageLogger$1);
		  function clear() {
		  }
		  initMetadataForInterface(HTTPClient, 'HTTPClient');
		  initMetadataForClass(HTTPClientLogger, 'HTTPClientLogger', VOID, VOID, [HTTPClient]);
		  initMetadataForClass(SocketClientLogger, 'SocketClientLogger');
		  initMetadataForClass(MediaClientLogger, 'MediaClientLogger');
		  initMetadataForClass(SessionAPILogger, 'SessionAPILogger');
		  initMetadataForClass(VoiceAPILogger, 'VoiceAPILogger');
		  initMetadataForClass(PushAPILogger, 'PushAPILogger');
		  initMetadataForClass(ConversationAPILogger, 'ConversationAPILogger');
		  initMetadataForClass(ChatAPILogger, 'ChatAPILogger', VOID, VOID, [ChatAPI]);
		  initMetadataForClass(SocketClientDelegateLogger, 'SocketClientDelegateLogger');
		  initMetadataForClass(MediaClientDelegateLogger, 'MediaClientDelegateLogger');
		  initMetadataForClass(SessionAPIListenerLogger, 'SessionAPIListenerLogger');
		  initMetadataForClass(VoiceAPIListenerLogger, 'VoiceAPIListenerLogger', VOID, VOID, [VoiceClientListener]);
		  initMetadataForClass(ChatAPIListenerLogger, 'ChatAPIListenerLogger');
		  initMetadataForClass(CallbackAction, 'CallbackAction');
		  initMetadataForClass(BufferedSocketEvent, 'BufferedSocketEvent');
		  initMetadataForClass(CSEndPoints, 'CSEndPoints');
		  initMetadataForClass(UserConversations, 'UserConversations', VOID, CSEndPoints);
		  initMetadataForClass(User_0, 'User', VOID, CSEndPoints);
		  initMetadataForClass(ConversationMembers, 'ConversationMembers', VOID, CSEndPoints);
		  initMetadataForClass(ConversationMember, 'ConversationMember', VOID, CSEndPoints);
		  initMetadataForClass(Conversations, 'Conversations', Conversations, CSEndPoints);
		  initMetadataForClass(Conversation_1, 'Conversation', VOID, CSEndPoints);
		  initMetadataForClass(ConversationEvents, 'ConversationEvents', VOID, CSEndPoints);
		  initMetadataForClass(ConversationEvent, 'ConversationEvent', VOID, CSEndPoints);
		  initMetadataForClass(RtcReconnect, 'RtcReconnect', VOID, CSEndPoints);
		  initMetadataForClass(ConversationMemberMe, 'ConversationMemberMe', VOID, CSEndPoints);
		  initMetadataForClass(Leg_0, 'Leg', VOID, CSEndPoints);
		  initMetadataForClass(Knockers, 'Knockers', Knockers, CSEndPoints);
		  initMetadataForClass(Knocker, 'Knocker', VOID, CSEndPoints);
		  initMetadataForClass(Legs, 'Legs', Legs, CSEndPoints);
		  initMetadataForClass(Sessions, 'Sessions', VOID, CSEndPoints);
		  initMetadataForClass(RTCAnswer_0, 'RTCAnswer', VOID, CSEndPoints);
		  initMetadataForClass(ConversationLegs, 'ConversationLegs', VOID, CSEndPoints);
		  initMetadataForClass(CapiEndpoints, 'CapiEndpoints');
		  initMetadataForClass(Metrics, 'Metrics', Metrics, CapiEndpoints);
		  initMetadataForClass(HTTPMethod, 'HTTPMethod', VOID, Enum);
		  initMetadataForClass(HTTPClientError, 'HTTPClientError', HTTPClientError, Exception);
		  initMetadataForClass(HTTPClientResponse, 'HTTPClientResponse');
		  initMetadataForClass(RtcStatsEndpoints, 'RtcStatsEndpoints');
		  initMetadataForObject(RTCStats, 'RTCStats', VOID, RtcStatsEndpoints);
		  initMetadataForClass(mediaActionMiddleware$2$1);
		  initMetadataForClass(MediaConnectionState, 'MediaConnectionState', VOID, Enum);
		  initMetadataForClass(SocketConfig, 'SocketConfig');
		  initMetadataForClass(SocketConnectionMiddleware$2$1);
		  initMetadataForClass(IgnoredSerializerException, 'IgnoredSerializerException', VOID, Exception);
		  initMetadataForClass(WSEndPoints, 'WSEndPoints');
		  initMetadataForClass(Logout, 'Logout', Logout, WSEndPoints);
		  initMetadataForClass(SetConfig, 'SetConfig');
		  initMetadataForClass(Reducer_0, 'Reducer');
		  initMetadataForClass(ConfigReducer, 'ConfigReducer', VOID, Reducer_0);
		  initMetadataForClass(ConfigState, 'ConfigState', ConfigState);
		  initMetadataForClass(RemoteEventReducer, 'RemoteEventReducer', VOID, Reducer_0);
		  initMetadataForClass(RemoteEventState, 'RemoteEventState', RemoteEventState);
		  initMetadataForClass(SessionReducer, 'SessionReducer', VOID, Reducer_0);
		  initMetadataForClass(SessionState, 'SessionState', SessionState);
		  initMetadataForClass(SessionUser, 'SessionUser');
		  initMetadataForClass(Call_0, 'Call');
		  initMetadataForClass(CallDirection, 'CallDirection', VOID, Enum);
		  initMetadataForObject(New, 'New');
		  initMetadataForObject(Connected, 'Connected');
		  initMetadataForObject(Disconnected, 'Disconnected');
		  initMetadataForClass(Reconnecting, 'Reconnecting', Reconnecting);
		  initMetadataForClass(CallReducer, 'CallReducer', VOID, Reducer_0);
		  initMetadataForClass(CallState, 'CallState', CallState);
		  initMetadataForObject(None_1, 'None');
		  initMetadataForClass(Knocking, 'Knocking');
		  initMetadataForInterface(CoreMemberStateWithCid, 'CoreMemberStateWithCid');
		  initMetadataForClass(Invited, 'Invited', VOID, VOID, [CoreMemberStateWithCid]);
		  initMetadataForClass(Joined, 'Joined', VOID, VOID, [CoreMemberStateWithCid]);
		  initMetadataForClass(Left, 'Left', VOID, VOID, [CoreMemberStateWithCid]);
		  initMetadataForClass(Invite_0, 'Invite');
		  initMetadataForClass(InviteReducer, 'InviteReducer', VOID, Reducer_0);
		  initMetadataForClass(InviteState, 'InviteState', InviteState);
		  initMetadataForClass(MediaEventReducer, 'MediaEventReducer', VOID, Reducer_0);
		  initMetadataForClass(MediaEventState, 'MediaEventState', MediaEventState);
		  initMetadataForClass(RTCStats_0, 'RTCStats');
		  initMetadataForCompanion(Companion_152);
		  initMetadataForClass(EventBuffer, 'EventBuffer', EventBuffer);
		  initMetadataForCompanion(Companion_153);
		  initMetadataForClass(Action_0, 'Action');
		  initMetadataForObject(UnitActionable, 'UnitActionable');
		  initMetadataForClass(ActionMeta, 'ActionMeta', ActionMeta);
		  initMetadataForClass(Store_0, 'Store', Store_0);
		  initMetadataForClass(StoredSubscription, 'StoredSubscription');
		  initMetadataForCompanion(Companion_154);
		  initMetadataForClass(Option, 'Option', VOID, VOID, VOID, VOID, VOID, {0: Companion_getInstance_157});
		  initMetadataForClass(None_2, 'None', None_2, Option);
		  initMetadataForClass(Some, 'Some', VOID, Option);
		  initMetadataForCompanion(Companion_155, VOID, [SerializerFactory]);
		  initMetadataForClass(StateTransition, 'StateTransition');
		  initMetadataForClass(Pending, 'Pending', VOID, StateTransition);
		  initMetadataForClass(Resolved, 'Resolved', VOID, StateTransition);
		  initMetadataForClass(Failed, 'Failed', VOID, StateTransition);
		  //endregion
		  function BuildKonfig() {
		    this.u1d_1 = '2.0.0';
		  }
		  var BuildKonfig_instance;
		  function CoreClientWithMedia() {
		  }
		  function _get_logger__rkp4sl($this) {
		    var tmp = $this.n1e_1;
		    if (!(tmp == null))
		      return tmp;
		    else {
		      throwUninitializedPropertyAccessException('logger');
		    }
		  }
		  function _get_http__d7tner($this) {
		    var tmp = $this.o1e_1;
		    if (!(tmp == null))
		      return tmp;
		    else {
		      throwUninitializedPropertyAccessException('http');
		    }
		  }
		  function _get_socket__42u6ew($this) {
		    var tmp = $this.p1e_1;
		    if (!(tmp == null))
		      return tmp;
		    else {
		      throwUninitializedPropertyAccessException('socket');
		    }
		  }
		  function media($this, a) {
		    $this.q1e_1 = new MediaClientLogger(a, _get_logger__rkp4sl($this));
		    return $this;
		  }
		  function Builder() {
		    this.q1e_1 = null;
		    this.r1e_1 = null;
		  }
		  protoOf(Builder).s1e = function (adapter) {
		    this.n1e_1 = adapter;
		    return this;
		  };
		  protoOf(Builder).t1e = function (a) {
		    this.o1e_1 = new HTTPClientLogger(a, _get_logger__rkp4sl(this));
		    return this;
		  };
		  protoOf(Builder).u1e = function (a) {
		    this.p1e_1 = new SocketClientLogger(a, _get_logger__rkp4sl(this));
		    return this;
		  };
		  protoOf(Builder).v1e = function (media_0) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.Builder.build.<anonymous>' call
		    // Inline function 'kotlin.let' call
		    // Inline function 'kotlin.contracts.contract' call
		    media(this, media_0);
		    var tmp = this.w1e();
		    return isInterface(tmp, CoreClientWithMedia) ? tmp : THROW_CCE();
		  };
		  protoOf(Builder).w1e = function () {
		    var tmp0_elvis_lhs = this.r1e_1;
		    var store = tmp0_elvis_lhs == null ? getStoreWithReducersAndMiddleware(_get_socket__42u6ew(this), _get_http__d7tner(this), this.q1e_1, _get_logger__rkp4sl(this)) : tmp0_elvis_lhs;
		    var eventAPI = new EventAPIImpl(store);
		    var sessionAPI = new SessionAPIImpl(store, _get_logger__rkp4sl(this));
		    var voiceAPI = new VoiceAPIImpl(store, eventAPI, _get_logger__rkp4sl(this));
		    var pushAPI = new PushAPIImpl(store, sessionAPI);
		    var conversationAPI = new ConversationAPIImpl(store);
		    var chatAPI = new ChatAPIImpl(store, eventAPI);
		    return new CoreClientImpl(store, eventAPI, new SessionAPILogger(sessionAPI, _get_logger__rkp4sl(this)), new VoiceAPILogger(voiceAPI, _get_logger__rkp4sl(this)), new PushAPILogger(pushAPI, _get_logger__rkp4sl(this)), new ConversationAPILogger(conversationAPI, _get_logger__rkp4sl(this)), new ChatAPILogger(chatAPI, _get_logger__rkp4sl(this)));
		  };
		  function getStoreWithReducersAndMiddleware(socket, http, media, logger) {
		    var store = new Store_0();
		    store.z1e(getStoreWithReducersAndMiddleware$lambda(logger, socket, http, media));
		    store.c1f(listOfNotNull([new CallReducer(logger.b1f(Call_getInstance())), new InviteReducer(logger.b1f(Invite_getInstance())), new SessionReducer(logger.b1f(Session_getInstance_0())), new ConfigReducer(logger.b1f(Config_getInstance())), new RemoteEventReducer(logger.b1f(RemoteEvent_getInstance())), new MediaEventReducer(logger.b1f(MediaEvent_getInstance()))]));
		    return store;
		  }
		  function CoreClientImpl(store, eventAPI, sessionAPI, voiceAPI, pushAPI, conversationAPI, chatAPI) {
		    this.d1f_1 = store;
		    this.e1f_1 = eventAPI;
		    this.f1f_1 = sessionAPI;
		    this.g1f_1 = voiceAPI;
		    this.h1f_1 = pushAPI;
		    this.i1f_1 = conversationAPI;
		    this.j1f_1 = chatAPI;
		  }
		  protoOf(CoreClientImpl).f1e = function (callId, callback) {
		    this.g1f_1.f1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).k1e = function (callId, callback) {
		    this.g1f_1.k1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).j1e = function (callId, callback) {
		    this.g1f_1.j1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).d1e = function (callId, parameters, callback) {
		    this.g1f_1.d1e(callId, parameters, callback);
		  };
		  protoOf(CoreClientImpl).c1e = function (legId, callback) {
		    this.g1f_1.c1e(legId, callback);
		  };
		  protoOf(CoreClientImpl).g1e = function (callId, reasonText, reasonCode, callback) {
		    this.g1f_1.g1e(callId, reasonText, reasonCode, callback);
		  };
		  protoOf(CoreClientImpl).h1e = function (callId, callback) {
		    this.g1f_1.h1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).b1e = function (callId, callback) {
		    this.g1f_1.b1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).e1e = function (callId, callback) {
		    this.g1f_1.e1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).m1e = function (callId, text, level, loop, queue, voiceName, ssml, callback) {
		    this.g1f_1.m1e(callId, text, level, loop, queue, voiceName, ssml, callback);
		  };
		  protoOf(CoreClientImpl).l1e = function (callId, digits, callback) {
		    this.g1f_1.l1e(callId, digits, callback);
		  };
		  protoOf(CoreClientImpl).a1e = function (context, callback) {
		    this.g1f_1.a1e(context, callback);
		  };
		  protoOf(CoreClientImpl).z1d = function (listener) {
		    this.g1f_1.z1d(listener);
		  };
		  protoOf(CoreClientImpl).i1e = function (callId, callback) {
		    this.g1f_1.i1e(callId, callback);
		  };
		  protoOf(CoreClientImpl).w1d = function (_set____db54di) {
		    this.j1f_1.w1d(_set____db54di);
		  };
		  protoOf(CoreClientImpl).k1f = function (parameters, callback) {
		    this.j1f_1.k1f(parameters, callback);
		  };
		  protoOf(CoreClientImpl).l1f = function (cid, callback) {
		    this.j1f_1.l1f(cid, callback);
		  };
		  protoOf(CoreClientImpl).m1f = function (id, cid, callback) {
		    this.j1f_1.m1f(id, cid, callback);
		  };
		  protoOf(CoreClientImpl).n1f = function (cid, parameters, filterGroup, filterGroupVersion, callback) {
		    this.j1f_1.n1f(cid, parameters, filterGroup, filterGroupVersion, callback);
		  };
		  protoOf(CoreClientImpl).o1f = function (cid, mid, callback) {
		    this.j1f_1.o1f(cid, mid, callback);
		  };
		  protoOf(CoreClientImpl).p1f = function (cid, parameters, callback) {
		    this.j1f_1.p1f(cid, parameters, callback);
		  };
		  protoOf(CoreClientImpl).q1f = function (parameters, callback) {
		    this.j1f_1.q1f(parameters, callback);
		  };
		  protoOf(CoreClientImpl).r1f = function (cid, username, callback) {
		    this.j1f_1.r1f(cid, username, callback);
		  };
		  protoOf(CoreClientImpl).s1f = function (cid, callback) {
		    this.j1f_1.s1f(cid, callback);
		  };
		  protoOf(CoreClientImpl).t1f = function (cid, callback) {
		    this.j1f_1.t1f(cid, callback);
		  };
		  protoOf(CoreClientImpl).u1f = function (cid, eventType, customData, callback) {
		    this.j1f_1.u1f(cid, eventType, customData, callback);
		  };
		  protoOf(CoreClientImpl).v1f = function (cid, customData, callback) {
		    this.j1f_1.v1f(cid, customData, callback);
		  };
		  protoOf(CoreClientImpl).w1f = function (cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback) {
		    this.j1f_1.w1f(cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback);
		  };
		  protoOf(CoreClientImpl).x1f = function (id, cid, callback) {
		    this.j1f_1.x1f(id, cid, callback);
		  };
		  protoOf(CoreClientImpl).y1f = function (conversationId, parameters, callback) {
		    this.j1f_1.y1f(conversationId, parameters, callback);
		  };
		  protoOf(CoreClientImpl).z1f = function (token, sessionId, callback) {
		    this.f1f_1.z1f(token, sessionId, callback);
		  };
		  protoOf(CoreClientImpl).a1g = function (callback) {
		    this.f1f_1.a1g(callback);
		  };
		  protoOf(CoreClientImpl).b1g = function (token, callback) {
		    this.f1f_1.b1g(token, callback);
		  };
		  protoOf(CoreClientImpl).v1d = function (listener) {
		    this.f1f_1.v1d(listener);
		  };
		  protoOf(CoreClientImpl).c1g = function (listener) {
		    this.e1f_1.c1g(listener);
		  };
		  protoOf(CoreClientImpl).d1g = function (conversationIdOrName, callback) {
		    this.i1f_1.d1g(conversationIdOrName, callback);
		  };
		  protoOf(CoreClientImpl).e1g = function (userIdOrName, callback) {
		    this.i1f_1.e1g(userIdOrName, callback);
		  };
		  protoOf(CoreClientImpl).f1g = function (actionable) {
		    this.d1f_1.g1g(Action_init_$Create$(actionable));
		  };
		  function getStoreWithReducersAndMiddleware$lambda($logger, $socket, $http, $media) {
		    return function (s) {
		      var storeActionLoggerAdapter = $logger.b1f(Action_getInstance());
		      return compose([loggingMiddleware(s, storeActionLoggerAdapter), exceptionHandlerMiddleware(s, storeActionLoggerAdapter), socketEventParseMiddleware(s, $logger.b1f(EventParser_getInstance())), SocketConnectionMiddleware(s, $socket, $logger.b1f(Connection_getInstance())), httpActionMiddleware(s, $http, $logger.b1f(Middleware_getInstance())), SocketEmitMiddleware(s, $socket, $logger.b1f(EventEmit_getInstance())), CallbackMiddleware(s, $logger.b1f(Callback_getInstance())), SessionMiddleware(s, storeActionLoggerAdapter), !($media == null) ? mediaActionMiddleware(s, $media, $logger.b1f(Middleware_getInstance_1())) : null]);
		    };
		  }
		  function SdkInfo() {
		    SdkInfo_instance = this;
		    this.h1g_1 = BuildKonfig_instance.u1d_1;
		  }
		  var SdkInfo_instance;
		  function SdkInfo_getInstance() {
		    if (SdkInfo_instance == null)
		      new SdkInfo();
		    return SdkInfo_instance;
		  }
		  function ErrorReport(error, src) {
		    this.i1g_1 = error;
		    this.j1g_1 = src;
		  }
		  protoOf(ErrorReport).toString = function () {
		    return 'ErrorReport(error=' + this.i1g_1.toString() + ', src=' + toString(this.j1g_1) + ')';
		  };
		  protoOf(ErrorReport).hashCode = function () {
		    var result = hashCode(this.i1g_1);
		    result = imul(result, 31) + hashCode(this.j1g_1) | 0;
		    return result;
		  };
		  protoOf(ErrorReport).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ErrorReport))
		      return false;
		    var tmp0_other_with_cast = other instanceof ErrorReport ? other : THROW_CCE();
		    if (!equals(this.i1g_1, tmp0_other_with_cast.i1g_1))
		      return false;
		    if (!equals(this.j1g_1, tmp0_other_with_cast.j1g_1))
		      return false;
		    return true;
		  };
		  function UpdateSessionRequest(sessionId, token) {
		    this.k1g_1 = sessionId;
		    this.l1g_1 = token;
		    this.m1g_1 = new Sessions(this.k1g_1);
		    this.n1g_1 = HTTPMethod_PUT_getInstance();
		  }
		  protoOf(UpdateSessionRequest).o1g = function () {
		    return this.m1g_1;
		  };
		  protoOf(UpdateSessionRequest).p1g = function () {
		    return this.n1g_1;
		  };
		  protoOf(UpdateSessionRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(PrimitiveClasses_getInstance().r9(), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, '');
		  };
		  protoOf(UpdateSessionRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(UpdateSession), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(UpdateSessionRequest).toString = function () {
		    return 'UpdateSessionRequest(sessionId=' + this.k1g_1 + ', token=' + this.l1g_1 + ')';
		  };
		  protoOf(UpdateSessionRequest).hashCode = function () {
		    var result = getStringHashCode(this.k1g_1);
		    result = imul(result, 31) + getStringHashCode(this.l1g_1) | 0;
		    return result;
		  };
		  protoOf(UpdateSessionRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UpdateSessionRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof UpdateSessionRequest ? other : THROW_CCE();
		    if (!(this.k1g_1 === tmp0_other_with_cast.k1g_1))
		      return false;
		    if (!(this.l1g_1 === tmp0_other_with_cast.l1g_1))
		      return false;
		    return true;
		  };
		  function Companion() {
		    Companion_instance_0 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.u1g_1 = [null, new ReferenceArraySerializer(getKClass(MetricsBody), $serializer_getInstance_0())];
		  }
		  var Companion_instance_0;
		  function Companion_getInstance_1() {
		    if (Companion_instance_0 == null)
		      new Companion();
		    return Companion_instance_0;
		  }
		  function $serializer() {
		    $serializer_instance = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MetricsWsReconnectionTimeReq.MetricsWsReconnectionTimeBody', this, 2);
		    tmp0_serialDesc.rq('sessionId', false);
		    tmp0_serialDesc.rq('metrics', false);
		    this.v1g_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer).xf = function () {
		    return this.v1g_1;
		  };
		  protoOf($serializer).gr = function () {
		    var tmp0_cached = Companion_getInstance_1().u1g_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), tmp0_cached[1]];
		  };
		  protoOf($serializer).zf = function (decoder) {
		    var tmp0_desc = this.v1g_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    var tmp7_cached = Companion_getInstance_1().u1g_1;
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return MetricsWsReconnectionTimeBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer).w1g = function (encoder, value) {
		    var tmp0_desc = this.v1g_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_1().u1g_1;
		    tmp1_output.wk(tmp0_desc, 0, value.x1g_1);
		    tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.y1g_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer).yf = function (encoder, value) {
		    return this.w1g(encoder, value instanceof MetricsWsReconnectionTimeBody ? value : THROW_CCE());
		  };
		  var $serializer_instance;
		  function $serializer_getInstance() {
		    if ($serializer_instance == null)
		      new $serializer();
		    return $serializer_instance;
		  }
		  function MetricsWsReconnectionTimeBody_init_$Init$(seen1, sessionId, metrics, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance().v1g_1);
		    }
		    $this.x1g_1 = sessionId;
		    $this.y1g_1 = metrics;
		    return $this;
		  }
		  function MetricsWsReconnectionTimeBody_init_$Create$(seen1, sessionId, metrics, serializationConstructorMarker) {
		    return MetricsWsReconnectionTimeBody_init_$Init$(seen1, sessionId, metrics, serializationConstructorMarker, objectCreate(protoOf(MetricsWsReconnectionTimeBody)));
		  }
		  function Companion_0() {
		  }
		  function $serializer_0() {
		    $serializer_instance_0 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MetricsWsReconnectionTimeReq.MetricsBody', this, 3);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('time', false);
		    tmp0_serialDesc.rq('attempt', false);
		    this.z1g_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_0).xf = function () {
		    return this.z1g_1;
		  };
		  protoOf($serializer_0).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), get_nullable(LongSerializer_getInstance()), get_nullable(IntSerializer_getInstance())];
		  };
		  protoOf($serializer_0).zf = function (decoder) {
		    var tmp0_desc = this.z1g_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, LongSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, LongSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return MetricsBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_0).a1h = function (encoder, value) {
		    var tmp0_desc = this.z1g_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.b1h_1);
		    tmp1_output.al(tmp0_desc, 1, LongSerializer_getInstance(), value.c1h_1);
		    tmp1_output.al(tmp0_desc, 2, IntSerializer_getInstance(), value.d1h_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_0).yf = function (encoder, value) {
		    return this.a1h(encoder, value instanceof MetricsBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_0;
		  function $serializer_getInstance_0() {
		    if ($serializer_instance_0 == null)
		      new $serializer_0();
		    return $serializer_instance_0;
		  }
		  function MetricsBody_init_$Init$(seen1, name, time, attempt, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_0().z1g_1);
		    }
		    $this.b1h_1 = name;
		    $this.c1h_1 = time;
		    $this.d1h_1 = attempt;
		    return $this;
		  }
		  function MetricsBody_init_$Create$(seen1, name, time, attempt, serializationConstructorMarker) {
		    return MetricsBody_init_$Init$(seen1, name, time, attempt, serializationConstructorMarker, objectCreate(protoOf(MetricsBody)));
		  }
		  function Companion_1() {
		  }
		  function $serializer_1() {
		    $serializer_instance_1 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MetricsWsReconnectionTimeReq.Body', this, 1);
		    tmp0_serialDesc.rq('body', false);
		    this.e1h_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_1).xf = function () {
		    return this.e1h_1;
		  };
		  protoOf($serializer_1).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance()];
		  };
		  protoOf($serializer_1).zf = function (decoder) {
		    var tmp0_desc = this.e1h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return Body_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_1).f1h = function (encoder, value) {
		    var tmp0_desc = this.e1h_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance(), value.g1h_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_1).yf = function (encoder, value) {
		    return this.f1h(encoder, value instanceof Body ? value : THROW_CCE());
		  };
		  var $serializer_instance_1;
		  function $serializer_getInstance_1() {
		    if ($serializer_instance_1 == null)
		      new $serializer_1();
		    return $serializer_instance_1;
		  }
		  function Body_init_$Init$(seen1, body, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_1().e1h_1);
		    }
		    $this.g1h_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$(seen1, body, serializationConstructorMarker) {
		    return Body_init_$Init$(seen1, body, serializationConstructorMarker, objectCreate(protoOf(Body)));
		  }
		  function MetricsWsReconnectionTimeBody(sessionId, metrics) {
		    Companion_getInstance_1();
		    this.x1g_1 = sessionId;
		    this.y1g_1 = metrics;
		  }
		  protoOf(MetricsWsReconnectionTimeBody).toString = function () {
		    return 'MetricsWsReconnectionTimeBody(sessionId=' + this.x1g_1 + ', metrics=' + toString(this.y1g_1) + ')';
		  };
		  protoOf(MetricsWsReconnectionTimeBody).hashCode = function () {
		    var result = getStringHashCode(this.x1g_1);
		    result = imul(result, 31) + hashCode(this.y1g_1) | 0;
		    return result;
		  };
		  protoOf(MetricsWsReconnectionTimeBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MetricsWsReconnectionTimeBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof MetricsWsReconnectionTimeBody ? other : THROW_CCE();
		    if (!(this.x1g_1 === tmp0_other_with_cast.x1g_1))
		      return false;
		    if (!equals(this.y1g_1, tmp0_other_with_cast.y1g_1))
		      return false;
		    return true;
		  };
		  function MetricsBody(name, time, attempt) {
		    this.b1h_1 = name;
		    this.c1h_1 = time;
		    this.d1h_1 = attempt;
		  }
		  protoOf(MetricsBody).toString = function () {
		    return 'MetricsBody(name=' + this.b1h_1 + ', time=' + toString_0(this.c1h_1) + ', attempt=' + this.d1h_1 + ')';
		  };
		  protoOf(MetricsBody).hashCode = function () {
		    var result = getStringHashCode(this.b1h_1);
		    result = imul(result, 31) + (this.c1h_1 == null ? 0 : this.c1h_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.d1h_1 == null ? 0 : this.d1h_1) | 0;
		    return result;
		  };
		  protoOf(MetricsBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MetricsBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof MetricsBody ? other : THROW_CCE();
		    if (!(this.b1h_1 === tmp0_other_with_cast.b1h_1))
		      return false;
		    if (!equals(this.c1h_1, tmp0_other_with_cast.c1h_1))
		      return false;
		    if (!(this.d1h_1 == tmp0_other_with_cast.d1h_1))
		      return false;
		    return true;
		  };
		  function Body(body) {
		    this.g1h_1 = body;
		  }
		  function MetricsWsReconnectionTimeReq(sessionId, time, retryNumber, name) {
		    this.h1h_1 = sessionId;
		    this.i1h_1 = time;
		    this.j1h_1 = retryNumber;
		    this.k1h_1 = name;
		    this.l1h_1 = new Metrics('v2');
		    this.m1h_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(MetricsWsReconnectionTimeReq).o1g = function () {
		    return this.l1h_1;
		  };
		  protoOf(MetricsWsReconnectionTimeReq).p1g = function () {
		    return this.m1h_1;
		  };
		  protoOf(MetricsWsReconnectionTimeReq).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp$ret$2 = [new MetricsBody(this.k1h_1, this.i1h_1, this.j1h_1)];
		    var value = new Body(new MetricsWsReconnectionTimeBody(this.h1h_1, tmp$ret$2));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body), arrayOf([]), false));
		    var tmp$ret$4 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$4, value);
		  };
		  protoOf(MetricsWsReconnectionTimeReq).r1g = function (data, decoder) {
		    return new MetricsWsReconnectionTime();
		  };
		  function Companion_2() {
		  }
		  function $serializer_2() {
		    $serializer_instance_2 = this;
		    this.n1h_1 = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MetricsWsReconnectionTime', this, 0);
		  }
		  protoOf($serializer_2).xf = function () {
		    return this.n1h_1;
		  };
		  protoOf($serializer_2).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_2).zf = function (decoder) {
		    var tmp0_desc = this.n1h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp4_input = decoder.hj(tmp0_desc);
		    if (!tmp4_input.xj())
		      while (tmp1_flag) {
		        tmp2_index = tmp4_input.yj(tmp0_desc);
		        if (tmp2_index === -1)
		          tmp1_flag = false;
		        else
		          throw UnknownFieldException_init_$Create$(tmp2_index);
		      }
		    tmp4_input.ij(tmp0_desc);
		    return MetricsWsReconnectionTime_init_$Create$(0, null);
		  };
		  protoOf($serializer_2).o1h = function (encoder, value) {
		    var tmp0_desc = this.n1h_1;
		    encoder.hj(tmp0_desc).ij(tmp0_desc);
		  };
		  protoOf($serializer_2).yf = function (encoder, value) {
		    return this.o1h(encoder, value instanceof MetricsWsReconnectionTime ? value : THROW_CCE());
		  };
		  var $serializer_instance_2;
		  function $serializer_getInstance_2() {
		    if ($serializer_instance_2 == null)
		      new $serializer_2();
		    return $serializer_instance_2;
		  }
		  function MetricsWsReconnectionTime_init_$Init$(seen1, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_2().n1h_1);
		    }
		    return $this;
		  }
		  function MetricsWsReconnectionTime_init_$Create$(seen1, serializationConstructorMarker) {
		    return MetricsWsReconnectionTime_init_$Init$(seen1, serializationConstructorMarker, objectCreate(protoOf(MetricsWsReconnectionTime)));
		  }
		  function MetricsWsReconnectionTime() {
		  }
		  function GetLegRequest(legId) {
		    this.p1h_1 = legId;
		    this.q1h_1 = new Leg_0(this.p1h_1);
		    this.r1h_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetLegRequest).o1g = function () {
		    return this.q1h_1;
		  };
		  protoOf(GetLegRequest).p1g = function () {
		    return this.r1h_1;
		  };
		  protoOf(GetLegRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetLeg), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetLegRequest).toString = function () {
		    return 'GetLegRequest(legId=' + this.p1h_1 + ')';
		  };
		  protoOf(GetLegRequest).hashCode = function () {
		    return getStringHashCode(this.p1h_1);
		  };
		  protoOf(GetLegRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetLegRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetLegRequest ? other : THROW_CCE();
		    if (!(this.p1h_1 === tmp0_other_with_cast.p1h_1))
		      return false;
		    return true;
		  };
		  function Companion_3() {
		  }
		  function $serializer_3() {
		    $serializer_instance_3 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetLeg', this, 10);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('conversation_id', false);
		    tmp0_serialDesc.rq('status', false);
		    tmp0_serialDesc.rq('start_time', false);
		    tmp0_serialDesc.rq('end_time', false);
		    tmp0_serialDesc.rq('direction', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    tmp0_serialDesc.rq('media_state', true);
		    this.s1h_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_3).xf = function () {
		    return this.s1h_1;
		  };
		  protoOf($serializer_3).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_158(), $serializer_getInstance_158(), get_nullable($serializer_getInstance_160())];
		  };
		  protoOf($serializer_3).zf = function (decoder) {
		    var tmp0_desc = this.s1h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_local8 = null;
		    var tmp13_local9 = null;
		    var tmp14_input = decoder.hj(tmp0_desc);
		    if (tmp14_input.xj()) {
		      tmp4_local0 = tmp14_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp14_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp14_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp14_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp14_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp14_input.rj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp14_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp14_input.tj(tmp0_desc, 7, $serializer_getInstance_158(), tmp11_local7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp14_input.tj(tmp0_desc, 8, $serializer_getInstance_158(), tmp12_local8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		      tmp13_local9 = tmp14_input.vj(tmp0_desc, 9, $serializer_getInstance_160(), tmp13_local9);
		      tmp3_bitMask0 = tmp3_bitMask0 | 512;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp14_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp14_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp14_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp14_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp14_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp14_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp14_input.rj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp14_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp14_input.tj(tmp0_desc, 7, $serializer_getInstance_158(), tmp11_local7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp14_input.tj(tmp0_desc, 8, $serializer_getInstance_158(), tmp12_local8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          case 9:
		            tmp13_local9 = tmp14_input.vj(tmp0_desc, 9, $serializer_getInstance_160(), tmp13_local9);
		            tmp3_bitMask0 = tmp3_bitMask0 | 512;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp14_input.ij(tmp0_desc);
		    return GetLeg_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, null);
		  };
		  protoOf($serializer_3).t1h = function (encoder, value) {
		    var tmp0_desc = this.s1h_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.u1h_1);
		    tmp1_output.wk(tmp0_desc, 1, value.v1h_1);
		    tmp1_output.wk(tmp0_desc, 2, value.w1h_1);
		    tmp1_output.wk(tmp0_desc, 3, value.x1h_1);
		    tmp1_output.wk(tmp0_desc, 4, value.y1h_1);
		    tmp1_output.wk(tmp0_desc, 5, value.z1h_1);
		    tmp1_output.wk(tmp0_desc, 6, value.a1i_1);
		    tmp1_output.yk(tmp0_desc, 7, $serializer_getInstance_158(), value.b1i_1);
		    tmp1_output.yk(tmp0_desc, 8, $serializer_getInstance_158(), value.c1i_1);
		    if (tmp1_output.el(tmp0_desc, 9) ? true : !(value.d1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 9, $serializer_getInstance_160(), value.d1i_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_3).yf = function (encoder, value) {
		    return this.t1h(encoder, value instanceof GetLeg ? value : THROW_CCE());
		  };
		  var $serializer_instance_3;
		  function $serializer_getInstance_3() {
		    if ($serializer_instance_3 == null)
		      new $serializer_3();
		    return $serializer_instance_3;
		  }
		  function GetLeg_init_$Init$(seen1, id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state, serializationConstructorMarker, $this) {
		    if (!(511 === (511 & seen1))) {
		      throwMissingFieldException(seen1, 511, $serializer_getInstance_3().s1h_1);
		    }
		    $this.u1h_1 = id;
		    $this.v1h_1 = conversation_id;
		    $this.w1h_1 = status;
		    $this.x1h_1 = start_time;
		    $this.y1h_1 = end_time;
		    $this.z1h_1 = direction;
		    $this.a1i_1 = type;
		    $this.b1i_1 = from;
		    $this.c1i_1 = to;
		    if (0 === (seen1 & 512))
		      $this.d1i_1 = null;
		    else
		      $this.d1i_1 = media_state;
		    return $this;
		  }
		  function GetLeg_init_$Create$(seen1, id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state, serializationConstructorMarker) {
		    return GetLeg_init_$Init$(seen1, id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state, serializationConstructorMarker, objectCreate(protoOf(GetLeg)));
		  }
		  function GetLeg(id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state) {
		    media_state = media_state === VOID ? null : media_state;
		    this.u1h_1 = id;
		    this.v1h_1 = conversation_id;
		    this.w1h_1 = status;
		    this.x1h_1 = start_time;
		    this.y1h_1 = end_time;
		    this.z1h_1 = direction;
		    this.a1i_1 = type;
		    this.b1i_1 = from;
		    this.c1i_1 = to;
		    this.d1i_1 = media_state;
		  }
		  protoOf(GetLeg).e1i = function (id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state) {
		    return new GetLeg(id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state);
		  };
		  protoOf(GetLeg).f1i = function (id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state, $super) {
		    id = id === VOID ? this.u1h_1 : id;
		    conversation_id = conversation_id === VOID ? this.v1h_1 : conversation_id;
		    status = status === VOID ? this.w1h_1 : status;
		    start_time = start_time === VOID ? this.x1h_1 : start_time;
		    end_time = end_time === VOID ? this.y1h_1 : end_time;
		    direction = direction === VOID ? this.z1h_1 : direction;
		    type = type === VOID ? this.a1i_1 : type;
		    from = from === VOID ? this.b1i_1 : from;
		    to = to === VOID ? this.c1i_1 : to;
		    media_state = media_state === VOID ? this.d1i_1 : media_state;
		    return $super === VOID ? this.e1i(id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state) : $super.e1i.call(this, id, conversation_id, status, start_time, end_time, direction, type, from, to, media_state);
		  };
		  protoOf(GetLeg).toString = function () {
		    return 'GetLeg(id=' + this.u1h_1 + ', conversation_id=' + this.v1h_1 + ', status=' + this.w1h_1 + ', start_time=' + this.x1h_1 + ', end_time=' + this.y1h_1 + ', direction=' + this.z1h_1 + ', type=' + this.a1i_1 + ', from=' + this.b1i_1.toString() + ', to=' + this.c1i_1.toString() + ', media_state=' + toString_0(this.d1i_1) + ')';
		  };
		  protoOf(GetLeg).hashCode = function () {
		    var result = getStringHashCode(this.u1h_1);
		    result = imul(result, 31) + getStringHashCode(this.v1h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w1h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x1h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.y1h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z1h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.a1i_1) | 0;
		    result = imul(result, 31) + this.b1i_1.hashCode() | 0;
		    result = imul(result, 31) + this.c1i_1.hashCode() | 0;
		    result = imul(result, 31) + (this.d1i_1 == null ? 0 : this.d1i_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(GetLeg).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetLeg))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetLeg ? other : THROW_CCE();
		    if (!(this.u1h_1 === tmp0_other_with_cast.u1h_1))
		      return false;
		    if (!(this.v1h_1 === tmp0_other_with_cast.v1h_1))
		      return false;
		    if (!(this.w1h_1 === tmp0_other_with_cast.w1h_1))
		      return false;
		    if (!(this.x1h_1 === tmp0_other_with_cast.x1h_1))
		      return false;
		    if (!(this.y1h_1 === tmp0_other_with_cast.y1h_1))
		      return false;
		    if (!(this.z1h_1 === tmp0_other_with_cast.z1h_1))
		      return false;
		    if (!(this.a1i_1 === tmp0_other_with_cast.a1i_1))
		      return false;
		    if (!this.b1i_1.equals(tmp0_other_with_cast.b1i_1))
		      return false;
		    if (!this.c1i_1.equals(tmp0_other_with_cast.c1i_1))
		      return false;
		    if (!equals(this.d1i_1, tmp0_other_with_cast.d1i_1))
		      return false;
		    return true;
		  };
		  function GetConversationRequest(cid) {
		    this.g1i_1 = cid;
		    this.h1i_1 = new Conversation_1(this.g1i_1);
		    this.i1i_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetConversationRequest).o1g = function () {
		    return this.h1i_1;
		  };
		  protoOf(GetConversationRequest).p1g = function () {
		    return this.i1i_1;
		  };
		  protoOf(GetConversationRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetConversation), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetConversationRequest).toString = function () {
		    return 'GetConversationRequest(cid=' + this.g1i_1 + ')';
		  };
		  protoOf(GetConversationRequest).hashCode = function () {
		    return getStringHashCode(this.g1i_1);
		  };
		  protoOf(GetConversationRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationRequest ? other : THROW_CCE();
		    if (!(this.g1i_1 === tmp0_other_with_cast.g1i_1))
		      return false;
		    return true;
		  };
		  function $serializer_4() {
		    $serializer_instance_4 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversation.EmbeddedMember', this, 1);
		    tmp0_serialDesc.rq('member', false);
		    this.j1i_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_4).xf = function () {
		    return this.j1i_1;
		  };
		  protoOf($serializer_4).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_27()];
		  };
		  protoOf($serializer_4).zf = function (decoder) {
		    var tmp0_desc = this.j1i_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_27(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_27(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return EmbeddedMember_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_4).k1i = function (encoder, value) {
		    var tmp0_desc = this.j1i_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_27(), value.l1i_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_4).yf = function (encoder, value) {
		    return this.k1i(encoder, value instanceof EmbeddedMember ? value : THROW_CCE());
		  };
		  var $serializer_instance_4;
		  function $serializer_getInstance_4() {
		    if ($serializer_instance_4 == null)
		      new $serializer_4();
		    return $serializer_instance_4;
		  }
		  function EmbeddedMember_init_$Init$(seen1, member, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_4().j1i_1);
		    }
		    $this.l1i_1 = member;
		    return $this;
		  }
		  function EmbeddedMember_init_$Create$(seen1, member, serializationConstructorMarker) {
		    return EmbeddedMember_init_$Init$(seen1, member, serializationConstructorMarker, objectCreate(protoOf(EmbeddedMember)));
		  }
		  function EmbeddedMember() {
		  }
		  protoOf(EmbeddedMember).toString = function () {
		    return 'EmbeddedMember(member=' + toString(this.l1i_1) + ')';
		  };
		  protoOf(EmbeddedMember).hashCode = function () {
		    return hashCode(this.l1i_1);
		  };
		  protoOf(EmbeddedMember).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EmbeddedMember))
		      return false;
		    var tmp0_other_with_cast = other instanceof EmbeddedMember ? other : THROW_CCE();
		    if (!equals(this.l1i_1, tmp0_other_with_cast.l1i_1))
		      return false;
		    return true;
		  };
		  function Companion_4() {
		    Companion_instance_5 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.m1i_1 = [null, null, null, null, new EnumSerializer('com.vonage.clientcore.core.api.models.ConversationState', values_1()), null, null, null, null];
		  }
		  var Companion_instance_5;
		  function Companion_getInstance_6() {
		    if (Companion_instance_5 == null)
		      new Companion_4();
		    return Companion_instance_5;
		  }
		  function $serializer_5() {
		    $serializer_instance_5 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversation', this, 9);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('display_name', true);
		    tmp0_serialDesc.rq('state', true);
		    tmp0_serialDesc.rq('image_url', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('properties', true);
		    tmp0_serialDesc.rq('media_state', true);
		    this.n1i_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_5).xf = function () {
		    return this.n1i_1;
		  };
		  protoOf($serializer_5).gr = function () {
		    var tmp0_cached = Companion_getInstance_6().m1i_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_159(), get_nullable(StringSerializer_getInstance()), get_nullable(tmp0_cached[4]), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_4()), get_nullable($serializer_getInstance_28()), get_nullable($serializer_getInstance_160())];
		  };
		  protoOf($serializer_5).zf = function (decoder) {
		    var tmp0_desc = this.n1i_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_local8 = null;
		    var tmp13_input = decoder.hj(tmp0_desc);
		    var tmp14_cached = Companion_getInstance_6().m1i_1;
		    if (tmp13_input.xj()) {
		      tmp4_local0 = tmp13_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp13_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp13_input.tj(tmp0_desc, 2, $serializer_getInstance_159(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp13_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp13_input.vj(tmp0_desc, 4, tmp14_cached[4], tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp13_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp13_input.vj(tmp0_desc, 6, $serializer_getInstance_4(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp13_input.vj(tmp0_desc, 7, $serializer_getInstance_28(), tmp11_local7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp13_input.vj(tmp0_desc, 8, $serializer_getInstance_160(), tmp12_local8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp13_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp13_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp13_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp13_input.tj(tmp0_desc, 2, $serializer_getInstance_159(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp13_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp13_input.vj(tmp0_desc, 4, tmp14_cached[4], tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp13_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp13_input.vj(tmp0_desc, 6, $serializer_getInstance_4(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp13_input.vj(tmp0_desc, 7, $serializer_getInstance_28(), tmp11_local7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp13_input.vj(tmp0_desc, 8, $serializer_getInstance_160(), tmp12_local8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp13_input.ij(tmp0_desc);
		    return GetConversation_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, null);
		  };
		  protoOf($serializer_5).o1i = function (encoder, value) {
		    var tmp0_desc = this.n1i_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_6().m1i_1;
		    tmp1_output.wk(tmp0_desc, 0, value.p1i_1);
		    tmp1_output.wk(tmp0_desc, 1, value.q1i_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_159(), value.r1i_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.s1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.s1i_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.t1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, tmp2_cached[4], value.t1i_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.u1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, StringSerializer_getInstance(), value.u1i_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.v1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, $serializer_getInstance_4(), value.v1i_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 7) ? true : !(value.w1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 7, $serializer_getInstance_28(), value.w1i_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 8) ? true : !(value.x1i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 8, $serializer_getInstance_160(), value.x1i_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_5).yf = function (encoder, value) {
		    return this.o1i(encoder, value instanceof GetConversation ? value : THROW_CCE());
		  };
		  var $serializer_instance_5;
		  function $serializer_getInstance_5() {
		    if ($serializer_instance_5 == null)
		      new $serializer_5();
		    return $serializer_instance_5;
		  }
		  function GetConversation_init_$Init$(seen1, id, name, timestamp, display_name, state, image_url, _embedded, properties, media_state, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_5().n1i_1);
		    }
		    $this.p1i_1 = id;
		    $this.q1i_1 = name;
		    $this.r1i_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.s1i_1 = null;
		    else
		      $this.s1i_1 = display_name;
		    if (0 === (seen1 & 16))
		      $this.t1i_1 = null;
		    else
		      $this.t1i_1 = state;
		    if (0 === (seen1 & 32))
		      $this.u1i_1 = null;
		    else
		      $this.u1i_1 = image_url;
		    if (0 === (seen1 & 64))
		      $this.v1i_1 = null;
		    else
		      $this.v1i_1 = _embedded;
		    if (0 === (seen1 & 128))
		      $this.w1i_1 = null;
		    else
		      $this.w1i_1 = properties;
		    if (0 === (seen1 & 256))
		      $this.x1i_1 = null;
		    else
		      $this.x1i_1 = media_state;
		    return $this;
		  }
		  function GetConversation_init_$Create$(seen1, id, name, timestamp, display_name, state, image_url, _embedded, properties, media_state, serializationConstructorMarker) {
		    return GetConversation_init_$Init$(seen1, id, name, timestamp, display_name, state, image_url, _embedded, properties, media_state, serializationConstructorMarker, objectCreate(protoOf(GetConversation)));
		  }
		  function GetConversation(id, name, timestamp, display_name, state, image_url, _embedded, properties, media_state) {
		    Companion_getInstance_6();
		    display_name = display_name === VOID ? null : display_name;
		    state = state === VOID ? null : state;
		    image_url = image_url === VOID ? null : image_url;
		    _embedded = _embedded === VOID ? null : _embedded;
		    properties = properties === VOID ? null : properties;
		    media_state = media_state === VOID ? null : media_state;
		    this.p1i_1 = id;
		    this.q1i_1 = name;
		    this.r1i_1 = timestamp;
		    this.s1i_1 = display_name;
		    this.t1i_1 = state;
		    this.u1i_1 = image_url;
		    this.v1i_1 = _embedded;
		    this.w1i_1 = properties;
		    this.x1i_1 = media_state;
		  }
		  function GetConversationLegsRequest(cid, order, pageSize, cursor) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    this.y1i_1 = cid;
		    this.z1i_1 = order;
		    this.a1j_1 = pageSize;
		    this.b1j_1 = cursor;
		    this.c1j_1 = new ConversationLegs(this.y1i_1);
		    this.d1j_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetConversationLegsRequest).o1g = function () {
		    return this.c1j_1;
		  };
		  protoOf(GetConversationLegsRequest).p1g = function () {
		    return this.d1j_1;
		  };
		  protoOf(GetConversationLegsRequest).s1g = function () {
		    var tmp0_safe_receiver = this.z1i_1;
		    var tmp = to('order', tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d2_1);
		    var tmp1_safe_receiver = this.a1j_1;
		    return mapOf([tmp, to('page_size', tmp1_safe_receiver == null ? null : tmp1_safe_receiver.toString()), to('cursor', this.b1j_1)]);
		  };
		  protoOf(GetConversationLegsRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetConversationLegs), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetConversationLegsRequest).toString = function () {
		    return 'GetConversationLegsRequest(cid=' + this.y1i_1 + ', order=' + toString_0(this.z1i_1) + ', pageSize=' + this.a1j_1 + ', cursor=' + this.b1j_1 + ')';
		  };
		  protoOf(GetConversationLegsRequest).hashCode = function () {
		    var result = getStringHashCode(this.y1i_1);
		    result = imul(result, 31) + (this.z1i_1 == null ? 0 : this.z1i_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.a1j_1 == null ? 0 : this.a1j_1) | 0;
		    result = imul(result, 31) + (this.b1j_1 == null ? 0 : getStringHashCode(this.b1j_1)) | 0;
		    return result;
		  };
		  protoOf(GetConversationLegsRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationLegsRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationLegsRequest ? other : THROW_CCE();
		    if (!(this.y1i_1 === tmp0_other_with_cast.y1i_1))
		      return false;
		    if (!equals(this.z1i_1, tmp0_other_with_cast.z1i_1))
		      return false;
		    if (!(this.a1j_1 == tmp0_other_with_cast.a1j_1))
		      return false;
		    if (!(this.b1j_1 == tmp0_other_with_cast.b1j_1))
		      return false;
		    return true;
		  };
		  function Companion_5() {
		    Companion_instance_6 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.e1j_1 = [new ArrayListSerializer($serializer_getInstance_3())];
		  }
		  var Companion_instance_6;
		  function Companion_getInstance_7() {
		    if (Companion_instance_6 == null)
		      new Companion_5();
		    return Companion_instance_6;
		  }
		  function $serializer_6() {
		    $serializer_instance_6 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationLegs.ConversationLegsEmbedded', this, 1);
		    tmp0_serialDesc.rq('legs', false);
		    this.f1j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_6).xf = function () {
		    return this.f1j_1;
		  };
		  protoOf($serializer_6).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [Companion_getInstance_7().e1j_1[0]];
		  };
		  protoOf($serializer_6).zf = function (decoder) {
		    var tmp0_desc = this.f1j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    var tmp6_cached = Companion_getInstance_7().e1j_1;
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationLegsEmbedded_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_6).g1j = function (encoder, value) {
		    var tmp0_desc = this.f1j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_7().e1j_1;
		    tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.h1j_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_6).yf = function (encoder, value) {
		    return this.g1j(encoder, value instanceof ConversationLegsEmbedded ? value : THROW_CCE());
		  };
		  var $serializer_instance_6;
		  function $serializer_getInstance_6() {
		    if ($serializer_instance_6 == null)
		      new $serializer_6();
		    return $serializer_instance_6;
		  }
		  function ConversationLegsEmbedded_init_$Init$(seen1, legs, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_6().f1j_1);
		    }
		    $this.h1j_1 = legs;
		    return $this;
		  }
		  function ConversationLegsEmbedded_init_$Create$(seen1, legs, serializationConstructorMarker) {
		    return ConversationLegsEmbedded_init_$Init$(seen1, legs, serializationConstructorMarker, objectCreate(protoOf(ConversationLegsEmbedded)));
		  }
		  function ConversationLegsEmbedded() {
		  }
		  protoOf(ConversationLegsEmbedded).toString = function () {
		    return 'ConversationLegsEmbedded(legs=' + toString(this.h1j_1) + ')';
		  };
		  protoOf(ConversationLegsEmbedded).hashCode = function () {
		    return hashCode(this.h1j_1);
		  };
		  protoOf(ConversationLegsEmbedded).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationLegsEmbedded))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationLegsEmbedded ? other : THROW_CCE();
		    if (!equals(this.h1j_1, tmp0_other_with_cast.h1j_1))
		      return false;
		    return true;
		  };
		  function Companion_6() {
		  }
		  function $serializer_7() {
		    $serializer_instance_7 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationLegs', this, 2);
		    tmp0_serialDesc.rq('_embedded', false);
		    tmp0_serialDesc.rq('_links', false);
		    this.i1j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_7).xf = function () {
		    return this.i1j_1;
		  };
		  protoOf($serializer_7).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_6(), $serializer_getInstance_9()];
		  };
		  protoOf($serializer_7).zf = function (decoder) {
		    var tmp0_desc = this.i1j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_6(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_6(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return GetConversationLegs_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_7).j1j = function (encoder, value) {
		    var tmp0_desc = this.i1j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_6(), value.k1j_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_9(), value.l1j_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_7).yf = function (encoder, value) {
		    return this.j1j(encoder, value instanceof GetConversationLegs ? value : THROW_CCE());
		  };
		  var $serializer_instance_7;
		  function $serializer_getInstance_7() {
		    if ($serializer_instance_7 == null)
		      new $serializer_7();
		    return $serializer_instance_7;
		  }
		  function GetConversationLegs_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_7().i1j_1);
		    }
		    $this.k1j_1 = _embedded;
		    $this.l1j_1 = _links;
		    return $this;
		  }
		  function GetConversationLegs_init_$Create$(seen1, _embedded, _links, serializationConstructorMarker) {
		    return GetConversationLegs_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, objectCreate(protoOf(GetConversationLegs)));
		  }
		  function GetConversationLegs(_embedded, _links) {
		    this.k1j_1 = _embedded;
		    this.l1j_1 = _links;
		  }
		  function $serializer_8() {
		    $serializer_instance_8 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PageNavigationLinks.PageNavigationLink', this, 1);
		    tmp0_serialDesc.rq('href', false);
		    this.m1j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_8).xf = function () {
		    return this.m1j_1;
		  };
		  protoOf($serializer_8).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_8).zf = function (decoder) {
		    var tmp0_desc = this.m1j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return PageNavigationLink_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_8).n1j = function (encoder, value) {
		    var tmp0_desc = this.m1j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.o1j_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_8).yf = function (encoder, value) {
		    return this.n1j(encoder, value instanceof PageNavigationLink ? value : THROW_CCE());
		  };
		  var $serializer_instance_8;
		  function $serializer_getInstance_8() {
		    if ($serializer_instance_8 == null)
		      new $serializer_8();
		    return $serializer_instance_8;
		  }
		  function PageNavigationLink_init_$Init$(seen1, href, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_8().m1j_1);
		    }
		    $this.o1j_1 = href;
		    return $this;
		  }
		  function PageNavigationLink_init_$Create$(seen1, href, serializationConstructorMarker) {
		    return PageNavigationLink_init_$Init$(seen1, href, serializationConstructorMarker, objectCreate(protoOf(PageNavigationLink)));
		  }
		  function PageNavigationLink() {
		  }
		  protoOf(PageNavigationLink).toString = function () {
		    return 'PageNavigationLink(href=' + this.o1j_1 + ')';
		  };
		  protoOf(PageNavigationLink).hashCode = function () {
		    return getStringHashCode(this.o1j_1);
		  };
		  protoOf(PageNavigationLink).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PageNavigationLink))
		      return false;
		    var tmp0_other_with_cast = other instanceof PageNavigationLink ? other : THROW_CCE();
		    if (!(this.o1j_1 === tmp0_other_with_cast.o1j_1))
		      return false;
		    return true;
		  };
		  function Companion_7() {
		  }
		  function $serializer_9() {
		    $serializer_instance_9 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PageNavigationLinks', this, 2);
		    tmp0_serialDesc.rq('next', true);
		    tmp0_serialDesc.rq('prev', true);
		    this.p1j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_9).xf = function () {
		    return this.p1j_1;
		  };
		  protoOf($serializer_9).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable($serializer_getInstance_8()), get_nullable($serializer_getInstance_8())];
		  };
		  protoOf($serializer_9).zf = function (decoder) {
		    var tmp0_desc = this.p1j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, $serializer_getInstance_8(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, $serializer_getInstance_8(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, $serializer_getInstance_8(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, $serializer_getInstance_8(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return PageNavigationLinks_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_9).q1j = function (encoder, value) {
		    var tmp0_desc = this.p1j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.r1j_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, $serializer_getInstance_8(), value.r1j_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.s1j_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, $serializer_getInstance_8(), value.s1j_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_9).yf = function (encoder, value) {
		    return this.q1j(encoder, value instanceof PageNavigationLinks ? value : THROW_CCE());
		  };
		  var $serializer_instance_9;
		  function $serializer_getInstance_9() {
		    if ($serializer_instance_9 == null)
		      new $serializer_9();
		    return $serializer_instance_9;
		  }
		  function PageNavigationLinks_init_$Init$(seen1, next, prev, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_9().p1j_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.r1j_1 = null;
		    else
		      $this.r1j_1 = next;
		    if (0 === (seen1 & 2))
		      $this.s1j_1 = null;
		    else
		      $this.s1j_1 = prev;
		    return $this;
		  }
		  function PageNavigationLinks_init_$Create$(seen1, next, prev, serializationConstructorMarker) {
		    return PageNavigationLinks_init_$Init$(seen1, next, prev, serializationConstructorMarker, objectCreate(protoOf(PageNavigationLinks)));
		  }
		  function PageNavigationLinks(next, prev) {
		    next = next === VOID ? null : next;
		    prev = prev === VOID ? null : prev;
		    this.r1j_1 = next;
		    this.s1j_1 = prev;
		  }
		  protoOf(PageNavigationLinks).toString = function () {
		    return 'PageNavigationLinks(next=' + toString_0(this.r1j_1) + ', prev=' + toString_0(this.s1j_1) + ')';
		  };
		  protoOf(PageNavigationLinks).hashCode = function () {
		    var result = this.r1j_1 == null ? 0 : this.r1j_1.hashCode();
		    result = imul(result, 31) + (this.s1j_1 == null ? 0 : this.s1j_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(PageNavigationLinks).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PageNavigationLinks))
		      return false;
		    var tmp0_other_with_cast = other instanceof PageNavigationLinks ? other : THROW_CCE();
		    if (!equals(this.r1j_1, tmp0_other_with_cast.r1j_1))
		      return false;
		    if (!equals(this.s1j_1, tmp0_other_with_cast.s1j_1))
		      return false;
		    return true;
		  };
		  function AppKnockingRequest$encode$lambda(channel, it) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.actions.AppKnockingRequest.encode.<anonymous>.<anonymous>' call
		    if (channel instanceof AppChannelEndpoint) {
		      // Inline function 'kotlin.text.lowercase' call
		      // Inline function 'kotlin.js.asDynamic' call
		      var tmp$ret$1 = 'app'.toLowerCase();
		      put(it, 'type', tmp$ret$1);
		      put(it, 'user', channel.b1k_1);
		    } else {
		      if (channel instanceof AppChannelEndpointNoUser) {
		        // Inline function 'kotlin.text.lowercase' call
		        // Inline function 'kotlin.js.asDynamic' call
		        var tmp$ret$3 = 'app'.toLowerCase();
		        put(it, 'type', tmp$ret$3);
		      } else {
		        if (channel instanceof PhoneChannelEndpoint) {
		          // Inline function 'kotlin.text.lowercase' call
		          // Inline function 'kotlin.js.asDynamic' call
		          var tmp$ret$5 = 'phone'.toLowerCase();
		          put(it, 'type', tmp$ret$5);
		          put(it, 'number', channel.z1j_1);
		        } else {
		          if (channel instanceof WebSocketChannelEndpoint) {
		            // Inline function 'kotlin.text.lowercase' call
		            // Inline function 'kotlin.js.asDynamic' call
		            var tmp$ret$7 = 'phone'.toLowerCase();
		            put(it, 'type', tmp$ret$7);
		            put(it, 'uri', channel.x1j_1);
		          } else {
		            if (channel instanceof SipChannelEndpoint) {
		              // Inline function 'kotlin.text.lowercase' call
		              // Inline function 'kotlin.js.asDynamic' call
		              var tmp$ret$9 = 'phone'.toLowerCase();
		              put(it, 'type', tmp$ret$9);
		              put(it, 'uri', channel.t1j_1);
		            }
		          }
		        }
		      }
		    }
		    return Unit_instance;
		  }
		  function AppKnockingRequest$encode$lambda$lambda($translateChannel, this$0) {
		    return function ($this$putJsonObject) {
		      $translateChannel(this$0.e1k_1, $this$putJsonObject);
		      return Unit_instance;
		    };
		  }
		  function AppKnockingRequest$encode$lambda$lambda_0($translateChannel, this$0) {
		    return function ($this$putJsonObject) {
		      $translateChannel(this$0.d1k_1, $this$putJsonObject);
		      return Unit_instance;
		    };
		  }
		  function AppKnockingRequest$encode$lambda_0(this$0, $translateChannel) {
		    return function ($this$putJsonObject) {
		      put($this$putJsonObject, 'type', 'app');
		      putJsonObject($this$putJsonObject, 'to', AppKnockingRequest$encode$lambda$lambda($translateChannel, this$0));
		      putJsonObject($this$putJsonObject, 'from', AppKnockingRequest$encode$lambda$lambda_0($translateChannel, this$0));
		      put($this$putJsonObject, 'id', this$0.f1k_1);
		      return Unit_instance;
		    };
		  }
		  function AppKnockingRequest$encode$lambda_1(this$0) {
		    return function ($this$putJsonObject) {
		      var tmp0_safe_receiver = this$0.g1k_1;
		      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toJsonElement(tmp0_safe_receiver);
		      var tmp;
		      if (tmp1_elvis_lhs == null) {
		        // Inline function 'kotlin.collections.mapOf' call
		        var tmp$ret$0 = emptyMap();
		        tmp = new JsonObject(tmp$ret$0);
		      } else {
		        tmp = tmp1_elvis_lhs;
		      }
		      $this$putJsonObject.o13('custom_data', tmp);
		      return Unit_instance;
		    };
		  }
		  function AppKnockingRequest(from, to, legId, context) {
		    this.d1k_1 = from;
		    this.e1k_1 = to;
		    this.f1k_1 = legId;
		    this.g1k_1 = context;
		    this.h1k_1 = new Knockers();
		    this.i1k_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(AppKnockingRequest).o1g = function () {
		    return this.h1k_1;
		  };
		  protoOf(AppKnockingRequest).p1g = function () {
		    return this.i1k_1;
		  };
		  protoOf(AppKnockingRequest).q1g = function (encoder, originatingSessionId) {
		    var translateChannel = AppKnockingRequest$encode$lambda;
		    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
		    // Inline function 'kotlin.contracts.contract' call
		    var builder = new JsonObjectBuilder();
		    // Inline function 'com.vonage.clientcore.core.actions.AppKnockingRequest.encode.<anonymous>' call
		    put(builder, 'originating_session', originatingSessionId);
		    putJsonObject(builder, 'channel', AppKnockingRequest$encode$lambda_0(this, translateChannel));
		    putJsonObject(builder, 'properties', AppKnockingRequest$encode$lambda_1(this));
		    return builder.j12().toString();
		  };
		  protoOf(AppKnockingRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(AppKnocking), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(AppKnockingRequest).toString = function () {
		    return 'AppKnockingRequest(from=' + toString(this.d1k_1) + ', to=' + toString(this.e1k_1) + ', legId=' + this.f1k_1 + ', context=' + toString_0(this.g1k_1) + ')';
		  };
		  protoOf(AppKnockingRequest).hashCode = function () {
		    var result = hashCode(this.d1k_1);
		    result = imul(result, 31) + hashCode(this.e1k_1) | 0;
		    result = imul(result, 31) + (this.f1k_1 == null ? 0 : getStringHashCode(this.f1k_1)) | 0;
		    result = imul(result, 31) + (this.g1k_1 == null ? 0 : hashCode(this.g1k_1)) | 0;
		    return result;
		  };
		  protoOf(AppKnockingRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AppKnockingRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof AppKnockingRequest ? other : THROW_CCE();
		    if (!equals(this.d1k_1, tmp0_other_with_cast.d1k_1))
		      return false;
		    if (!equals(this.e1k_1, tmp0_other_with_cast.e1k_1))
		      return false;
		    if (!(this.f1k_1 == tmp0_other_with_cast.f1k_1))
		      return false;
		    if (!equals(this.g1k_1, tmp0_other_with_cast.g1k_1))
		      return false;
		    return true;
		  };
		  function MemberKickRequest(cid, mid, reasonText, reasonCode) {
		    reasonText = reasonText === VOID ? null : reasonText;
		    reasonCode = reasonCode === VOID ? null : reasonCode;
		    this.j1k_1 = cid;
		    this.k1k_1 = mid;
		    this.l1k_1 = reasonText;
		    this.m1k_1 = reasonCode;
		    this.n1k_1 = HTTPMethod_DELETE_getInstance();
		    this.o1k_1 = new ConversationMember(this.j1k_1, this.k1k_1, 'v0.2');
		  }
		  protoOf(MemberKickRequest).p1g = function () {
		    return this.n1k_1;
		  };
		  protoOf(MemberKickRequest).o1g = function () {
		    return this.o1k_1;
		  };
		  protoOf(MemberKickRequest).s1g = function () {
		    var tmp;
		    if (!(this.l1k_1 == null) || !(this.m1k_1 == null)) {
		      var tmp0_elvis_lhs = this.m1k_1;
		      var tmp_0 = to('reason_code', tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs);
		      var tmp1_elvis_lhs = this.l1k_1;
		      tmp = mapOf([tmp_0, to('reason_text', tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs)]);
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  };
		  protoOf(MemberKickRequest).q1g = function (encoder, originatingSessionId) {
		    return '';
		  };
		  protoOf(MemberKickRequest).r1g = function (data, decoder) {
		    return new MemberLeft(this.j1k_1, this.k1k_1);
		  };
		  protoOf(MemberKickRequest).toString = function () {
		    return 'MemberKickRequest(cid=' + this.j1k_1 + ', mid=' + this.k1k_1 + ', reasonText=' + this.l1k_1 + ', reasonCode=' + this.m1k_1 + ')';
		  };
		  protoOf(MemberKickRequest).hashCode = function () {
		    var result = getStringHashCode(this.j1k_1);
		    result = imul(result, 31) + getStringHashCode(this.k1k_1) | 0;
		    result = imul(result, 31) + (this.l1k_1 == null ? 0 : getStringHashCode(this.l1k_1)) | 0;
		    result = imul(result, 31) + (this.m1k_1 == null ? 0 : getStringHashCode(this.m1k_1)) | 0;
		    return result;
		  };
		  protoOf(MemberKickRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberKickRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberKickRequest ? other : THROW_CCE();
		    if (!(this.j1k_1 === tmp0_other_with_cast.j1k_1))
		      return false;
		    if (!(this.k1k_1 === tmp0_other_with_cast.k1k_1))
		      return false;
		    if (!(this.l1k_1 == tmp0_other_with_cast.l1k_1))
		      return false;
		    if (!(this.m1k_1 == tmp0_other_with_cast.m1k_1))
		      return false;
		    return true;
		  };
		  function Companion_8() {
		  }
		  function $serializer_10() {
		    $serializer_instance_10 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberJoinRequest.MemberJoinChannel', this, 1);
		    tmp0_serialDesc.rq('type', true);
		    this.p1k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_10).xf = function () {
		    return this.p1k_1;
		  };
		  protoOf($serializer_10).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_10).zf = function (decoder) {
		    var tmp0_desc = this.p1k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return MemberJoinChannel_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_10).q1k = function (encoder, value) {
		    var tmp0_desc = this.p1k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.r1k_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 0, value.r1k_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_10).yf = function (encoder, value) {
		    return this.q1k(encoder, value instanceof MemberJoinChannel ? value : THROW_CCE());
		  };
		  var $serializer_instance_10;
		  function $serializer_getInstance_10() {
		    if ($serializer_instance_10 == null)
		      new $serializer_10();
		    return $serializer_instance_10;
		  }
		  function MemberJoinChannel_init_$Init$(seen1, type, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_10().p1k_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.r1k_1 = 'app';
		    else
		      $this.r1k_1 = type;
		    return $this;
		  }
		  function MemberJoinChannel_init_$Create$(seen1, type, serializationConstructorMarker) {
		    return MemberJoinChannel_init_$Init$(seen1, type, serializationConstructorMarker, objectCreate(protoOf(MemberJoinChannel)));
		  }
		  function Companion_9() {
		  }
		  function $serializer_11() {
		    $serializer_instance_11 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberJoinRequest.Body', this, 3);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('channel', false);
		    tmp0_serialDesc.rq('state', true);
		    this.s1k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_11).xf = function () {
		    return this.s1k_1;
		  };
		  protoOf($serializer_11).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_10(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_11).zf = function (decoder) {
		    var tmp0_desc = this.s1k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_10(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_10(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return Body_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_11).t1k = function (encoder, value) {
		    var tmp0_desc = this.s1k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.u1k_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_10(), value.v1k_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.w1k_1 === 'joined')) {
		      tmp1_output.wk(tmp0_desc, 2, value.w1k_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_11).yf = function (encoder, value) {
		    return this.t1k(encoder, value instanceof Body_0 ? value : THROW_CCE());
		  };
		  var $serializer_instance_11;
		  function $serializer_getInstance_11() {
		    if ($serializer_instance_11 == null)
		      new $serializer_11();
		    return $serializer_instance_11;
		  }
		  function Body_init_$Init$_0(seen1, originating_session, channel, state, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_11().s1k_1);
		    }
		    $this.u1k_1 = originating_session;
		    $this.v1k_1 = channel;
		    if (0 === (seen1 & 4))
		      $this.w1k_1 = 'joined';
		    else
		      $this.w1k_1 = state;
		    return $this;
		  }
		  function Body_init_$Create$_0(seen1, originating_session, channel, state, serializationConstructorMarker) {
		    return Body_init_$Init$_0(seen1, originating_session, channel, state, serializationConstructorMarker, objectCreate(protoOf(Body_0)));
		  }
		  function MemberJoinChannel(type) {
		    type = type === VOID ? 'app' : type;
		    this.r1k_1 = type;
		  }
		  protoOf(MemberJoinChannel).toString = function () {
		    return 'MemberJoinChannel(type=' + this.r1k_1 + ')';
		  };
		  protoOf(MemberJoinChannel).hashCode = function () {
		    return getStringHashCode(this.r1k_1);
		  };
		  protoOf(MemberJoinChannel).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinChannel))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinChannel ? other : THROW_CCE();
		    if (!(this.r1k_1 === tmp0_other_with_cast.r1k_1))
		      return false;
		    return true;
		  };
		  function Body_0(originating_session, channel, state) {
		    state = state === VOID ? 'joined' : state;
		    this.u1k_1 = originating_session;
		    this.v1k_1 = channel;
		    this.w1k_1 = state;
		  }
		  function MemberJoinRequest(cid, mid) {
		    this.x1k_1 = cid;
		    this.y1k_1 = mid;
		    this.z1k_1 = new ConversationMember(this.x1k_1, this.y1k_1);
		    this.a1l_1 = HTTPMethod_PUT_getInstance();
		  }
		  protoOf(MemberJoinRequest).o1g = function () {
		    return this.z1k_1;
		  };
		  protoOf(MemberJoinRequest).p1g = function () {
		    return this.a1l_1;
		  };
		  protoOf(MemberJoinRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_0(originatingSessionId, new MemberJoinChannel());
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_0), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(MemberJoinRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(MemberJoin), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(MemberJoinRequest).toString = function () {
		    return 'MemberJoinRequest(cid=' + this.x1k_1 + ', mid=' + this.y1k_1 + ')';
		  };
		  protoOf(MemberJoinRequest).hashCode = function () {
		    var result = getStringHashCode(this.x1k_1);
		    result = imul(result, 31) + getStringHashCode(this.y1k_1) | 0;
		    return result;
		  };
		  protoOf(MemberJoinRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinRequest ? other : THROW_CCE();
		    if (!(this.x1k_1 === tmp0_other_with_cast.x1k_1))
		      return false;
		    if (!(this.y1k_1 === tmp0_other_with_cast.y1k_1))
		      return false;
		    return true;
		  };
		  function DeleteKnockerRequest(knockingId) {
		    this.b1l_1 = knockingId;
		    this.c1l_1 = removePrefix(this.b1l_1, 'knocker:');
		    this.d1l_1 = new Knocker(this.c1l_1);
		    this.e1l_1 = HTTPMethod_DELETE_getInstance();
		  }
		  protoOf(DeleteKnockerRequest).o1g = function () {
		    return this.d1l_1;
		  };
		  protoOf(DeleteKnockerRequest).p1g = function () {
		    return this.e1l_1;
		  };
		  protoOf(DeleteKnockerRequest).q1g = function (encoder, originatingSessionId) {
		    return '';
		  };
		  protoOf(DeleteKnockerRequest).r1g = function (data, decoder) {
		    return new DeletedKnocker(this.b1l_1);
		  };
		  protoOf(DeleteKnockerRequest).toString = function () {
		    return 'DeleteKnockerRequest(knockingId=' + this.b1l_1 + ')';
		  };
		  protoOf(DeleteKnockerRequest).hashCode = function () {
		    return getStringHashCode(this.b1l_1);
		  };
		  protoOf(DeleteKnockerRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof DeleteKnockerRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof DeleteKnockerRequest ? other : THROW_CCE();
		    if (!(this.b1l_1 === tmp0_other_with_cast.b1l_1))
		      return false;
		    return true;
		  };
		  function Companion_10() {
		  }
		  function $serializer_12() {
		    $serializer_instance_12 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegMuteRequest.LegMuteBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.f1l_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_12).xf = function () {
		    return this.f1l_1;
		  };
		  protoOf($serializer_12).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_12).zf = function (decoder) {
		    var tmp0_desc = this.f1l_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegMuteBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_12).g1l = function (encoder, value) {
		    var tmp0_desc = this.f1l_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.h1l_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_12).yf = function (encoder, value) {
		    return this.g1l(encoder, value instanceof LegMuteBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_12;
		  function $serializer_getInstance_12() {
		    if ($serializer_instance_12 == null)
		      new $serializer_12();
		    return $serializer_instance_12;
		  }
		  function LegMuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_12().f1l_1);
		    }
		    $this.h1l_1 = rtc_id;
		    return $this;
		  }
		  function LegMuteBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return LegMuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(LegMuteBody)));
		  }
		  function Companion_11() {
		  }
		  function $serializer_13() {
		    $serializer_instance_13 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegMuteRequest.Body', this, 5);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.i1l_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_13).xf = function () {
		    return this.i1l_1;
		  };
		  protoOf($serializer_13).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_12()];
		  };
		  protoOf($serializer_13).zf = function (decoder) {
		    var tmp0_desc = this.i1l_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_12(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_12(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return Body_init_$Create$_1(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_13).j1l = function (encoder, value) {
		    var tmp0_desc = this.i1l_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.k1l_1);
		    tmp1_output.wk(tmp0_desc, 1, value.l1l_1);
		    tmp1_output.wk(tmp0_desc, 2, value.m1l_1);
		    tmp1_output.wk(tmp0_desc, 3, value.n1l_1);
		    tmp1_output.yk(tmp0_desc, 4, $serializer_getInstance_12(), value.o1l_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_13).yf = function (encoder, value) {
		    return this.j1l(encoder, value instanceof Body_1 ? value : THROW_CCE());
		  };
		  var $serializer_instance_13;
		  function $serializer_getInstance_13() {
		    if ($serializer_instance_13 == null)
		      new $serializer_13();
		    return $serializer_instance_13;
		  }
		  function Body_init_$Init$_1(seen1, type, from, to, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_13().i1l_1);
		    }
		    $this.k1l_1 = type;
		    $this.l1l_1 = from;
		    $this.m1l_1 = to;
		    $this.n1l_1 = originating_session;
		    $this.o1l_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_1(seen1, type, from, to, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_1(seen1, type, from, to, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_1)));
		  }
		  function LegMuteBody(rtc_id) {
		    this.h1l_1 = rtc_id;
		  }
		  protoOf(LegMuteBody).toString = function () {
		    return 'LegMuteBody(rtc_id=' + this.h1l_1 + ')';
		  };
		  protoOf(LegMuteBody).hashCode = function () {
		    return getStringHashCode(this.h1l_1);
		  };
		  protoOf(LegMuteBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegMuteBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegMuteBody ? other : THROW_CCE();
		    if (!(this.h1l_1 === tmp0_other_with_cast.h1l_1))
		      return false;
		    return true;
		  };
		  function Body_1(type, from, to, originating_session, body) {
		    this.k1l_1 = type;
		    this.l1l_1 = from;
		    this.m1l_1 = to;
		    this.n1l_1 = originating_session;
		    this.o1l_1 = body;
		  }
		  function LegMuteRequest(conversationId, legId, memberId) {
		    this.p1l_1 = conversationId;
		    this.q1l_1 = legId;
		    this.r1l_1 = memberId;
		    this.s1l_1 = new ConversationEvents(this.p1l_1);
		    this.t1l_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(LegMuteRequest).o1g = function () {
		    return this.s1l_1;
		  };
		  protoOf(LegMuteRequest).p1g = function () {
		    return this.t1l_1;
		  };
		  protoOf(LegMuteRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_1('audio:mute:on', this.r1l_1, this.r1l_1, originatingSessionId, new LegMuteBody(this.q1l_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_1), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(LegMuteRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(LegMute), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(LegMuteRequest).toString = function () {
		    return 'LegMuteRequest(conversationId=' + this.p1l_1 + ', legId=' + this.q1l_1 + ', memberId=' + this.r1l_1 + ')';
		  };
		  protoOf(LegMuteRequest).hashCode = function () {
		    var result = getStringHashCode(this.p1l_1);
		    result = imul(result, 31) + getStringHashCode(this.q1l_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.r1l_1) | 0;
		    return result;
		  };
		  protoOf(LegMuteRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegMuteRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegMuteRequest ? other : THROW_CCE();
		    if (!(this.p1l_1 === tmp0_other_with_cast.p1l_1))
		      return false;
		    if (!(this.q1l_1 === tmp0_other_with_cast.q1l_1))
		      return false;
		    if (!(this.r1l_1 === tmp0_other_with_cast.r1l_1))
		      return false;
		    return true;
		  };
		  function Companion_12() {
		  }
		  function $serializer_14() {
		    $serializer_instance_14 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegUnmuteRequest.LegUnmuteBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.u1l_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_14).xf = function () {
		    return this.u1l_1;
		  };
		  protoOf($serializer_14).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_14).zf = function (decoder) {
		    var tmp0_desc = this.u1l_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegUnmuteBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_14).v1l = function (encoder, value) {
		    var tmp0_desc = this.u1l_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.w1l_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_14).yf = function (encoder, value) {
		    return this.v1l(encoder, value instanceof LegUnmuteBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_14;
		  function $serializer_getInstance_14() {
		    if ($serializer_instance_14 == null)
		      new $serializer_14();
		    return $serializer_instance_14;
		  }
		  function LegUnmuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_14().u1l_1);
		    }
		    $this.w1l_1 = rtc_id;
		    return $this;
		  }
		  function LegUnmuteBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return LegUnmuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(LegUnmuteBody)));
		  }
		  function Companion_13() {
		  }
		  function $serializer_15() {
		    $serializer_instance_15 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegUnmuteRequest.Body', this, 5);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.x1l_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_15).xf = function () {
		    return this.x1l_1;
		  };
		  protoOf($serializer_15).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_14()];
		  };
		  protoOf($serializer_15).zf = function (decoder) {
		    var tmp0_desc = this.x1l_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_14(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_14(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return Body_init_$Create$_2(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_15).y1l = function (encoder, value) {
		    var tmp0_desc = this.x1l_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.z1l_1);
		    tmp1_output.wk(tmp0_desc, 1, value.a1m_1);
		    tmp1_output.wk(tmp0_desc, 2, value.b1m_1);
		    tmp1_output.wk(tmp0_desc, 3, value.c1m_1);
		    tmp1_output.yk(tmp0_desc, 4, $serializer_getInstance_14(), value.d1m_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_15).yf = function (encoder, value) {
		    return this.y1l(encoder, value instanceof Body_2 ? value : THROW_CCE());
		  };
		  var $serializer_instance_15;
		  function $serializer_getInstance_15() {
		    if ($serializer_instance_15 == null)
		      new $serializer_15();
		    return $serializer_instance_15;
		  }
		  function Body_init_$Init$_2(seen1, type, from, to, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_15().x1l_1);
		    }
		    $this.z1l_1 = type;
		    $this.a1m_1 = from;
		    $this.b1m_1 = to;
		    $this.c1m_1 = originating_session;
		    $this.d1m_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_2(seen1, type, from, to, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_2(seen1, type, from, to, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_2)));
		  }
		  function LegUnmuteBody(rtc_id) {
		    this.w1l_1 = rtc_id;
		  }
		  protoOf(LegUnmuteBody).toString = function () {
		    return 'LegUnmuteBody(rtc_id=' + this.w1l_1 + ')';
		  };
		  protoOf(LegUnmuteBody).hashCode = function () {
		    return getStringHashCode(this.w1l_1);
		  };
		  protoOf(LegUnmuteBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegUnmuteBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegUnmuteBody ? other : THROW_CCE();
		    if (!(this.w1l_1 === tmp0_other_with_cast.w1l_1))
		      return false;
		    return true;
		  };
		  function Body_2(type, from, to, originating_session, body) {
		    this.z1l_1 = type;
		    this.a1m_1 = from;
		    this.b1m_1 = to;
		    this.c1m_1 = originating_session;
		    this.d1m_1 = body;
		  }
		  function LegUnmuteRequest(conversationId, legId, memberId) {
		    this.e1m_1 = conversationId;
		    this.f1m_1 = legId;
		    this.g1m_1 = memberId;
		    this.h1m_1 = new ConversationEvents(this.e1m_1);
		    this.i1m_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(LegUnmuteRequest).o1g = function () {
		    return this.h1m_1;
		  };
		  protoOf(LegUnmuteRequest).p1g = function () {
		    return this.i1m_1;
		  };
		  protoOf(LegUnmuteRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_2('audio:mute:off', this.g1m_1, this.g1m_1, originatingSessionId, new LegUnmuteBody(this.f1m_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_2), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(LegUnmuteRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(LegUnmute), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(LegUnmuteRequest).toString = function () {
		    return 'LegUnmuteRequest(conversationId=' + this.e1m_1 + ', legId=' + this.f1m_1 + ', memberId=' + this.g1m_1 + ')';
		  };
		  protoOf(LegUnmuteRequest).hashCode = function () {
		    var result = getStringHashCode(this.e1m_1);
		    result = imul(result, 31) + getStringHashCode(this.f1m_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g1m_1) | 0;
		    return result;
		  };
		  protoOf(LegUnmuteRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegUnmuteRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegUnmuteRequest ? other : THROW_CCE();
		    if (!(this.e1m_1 === tmp0_other_with_cast.e1m_1))
		      return false;
		    if (!(this.f1m_1 === tmp0_other_with_cast.f1m_1))
		      return false;
		    if (!(this.g1m_1 === tmp0_other_with_cast.g1m_1))
		      return false;
		    return true;
		  };
		  function Companion_14() {
		  }
		  function $serializer_16() {
		    $serializer_instance_16 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffEnableRequest.LegEarmuffEnableBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.j1m_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_16).xf = function () {
		    return this.j1m_1;
		  };
		  protoOf($serializer_16).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_16).zf = function (decoder) {
		    var tmp0_desc = this.j1m_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegEarmuffEnableBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_16).k1m = function (encoder, value) {
		    var tmp0_desc = this.j1m_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.l1m_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_16).yf = function (encoder, value) {
		    return this.k1m(encoder, value instanceof LegEarmuffEnableBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_16;
		  function $serializer_getInstance_16() {
		    if ($serializer_instance_16 == null)
		      new $serializer_16();
		    return $serializer_instance_16;
		  }
		  function LegEarmuffEnableBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_16().j1m_1);
		    }
		    $this.l1m_1 = rtc_id;
		    return $this;
		  }
		  function LegEarmuffEnableBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return LegEarmuffEnableBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(LegEarmuffEnableBody)));
		  }
		  function Companion_15() {
		  }
		  function $serializer_17() {
		    $serializer_instance_17 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffEnableRequest.Body', this, 5);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.m1m_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_17).xf = function () {
		    return this.m1m_1;
		  };
		  protoOf($serializer_17).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_16()];
		  };
		  protoOf($serializer_17).zf = function (decoder) {
		    var tmp0_desc = this.m1m_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_16(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_16(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return Body_init_$Create$_3(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_17).n1m = function (encoder, value) {
		    var tmp0_desc = this.m1m_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.o1m_1);
		    tmp1_output.wk(tmp0_desc, 1, value.p1m_1);
		    tmp1_output.wk(tmp0_desc, 2, value.q1m_1);
		    tmp1_output.wk(tmp0_desc, 3, value.r1m_1);
		    tmp1_output.yk(tmp0_desc, 4, $serializer_getInstance_16(), value.s1m_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_17).yf = function (encoder, value) {
		    return this.n1m(encoder, value instanceof Body_3 ? value : THROW_CCE());
		  };
		  var $serializer_instance_17;
		  function $serializer_getInstance_17() {
		    if ($serializer_instance_17 == null)
		      new $serializer_17();
		    return $serializer_instance_17;
		  }
		  function Body_init_$Init$_3(seen1, type, from, to, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_17().m1m_1);
		    }
		    $this.o1m_1 = type;
		    $this.p1m_1 = from;
		    $this.q1m_1 = to;
		    $this.r1m_1 = originating_session;
		    $this.s1m_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_3(seen1, type, from, to, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_3(seen1, type, from, to, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_3)));
		  }
		  function LegEarmuffEnableBody(rtc_id) {
		    this.l1m_1 = rtc_id;
		  }
		  protoOf(LegEarmuffEnableBody).toString = function () {
		    return 'LegEarmuffEnableBody(rtc_id=' + this.l1m_1 + ')';
		  };
		  protoOf(LegEarmuffEnableBody).hashCode = function () {
		    return getStringHashCode(this.l1m_1);
		  };
		  protoOf(LegEarmuffEnableBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffEnableBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffEnableBody ? other : THROW_CCE();
		    if (!(this.l1m_1 === tmp0_other_with_cast.l1m_1))
		      return false;
		    return true;
		  };
		  function Body_3(type, from, to, originating_session, body) {
		    this.o1m_1 = type;
		    this.p1m_1 = from;
		    this.q1m_1 = to;
		    this.r1m_1 = originating_session;
		    this.s1m_1 = body;
		  }
		  function LegEarmuffEnableRequest(conversationId, legId, memberId) {
		    this.t1m_1 = conversationId;
		    this.u1m_1 = legId;
		    this.v1m_1 = memberId;
		    this.w1m_1 = new ConversationEvents(this.t1m_1);
		    this.x1m_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(LegEarmuffEnableRequest).o1g = function () {
		    return this.w1m_1;
		  };
		  protoOf(LegEarmuffEnableRequest).p1g = function () {
		    return this.x1m_1;
		  };
		  protoOf(LegEarmuffEnableRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_3('audio:earmuff:on', this.v1m_1, this.v1m_1, originatingSessionId, new LegEarmuffEnableBody(this.u1m_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_3), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(LegEarmuffEnableRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(LegEarmuffEnable), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(LegEarmuffEnableRequest).toString = function () {
		    return 'LegEarmuffEnableRequest(conversationId=' + this.t1m_1 + ', legId=' + this.u1m_1 + ', memberId=' + this.v1m_1 + ')';
		  };
		  protoOf(LegEarmuffEnableRequest).hashCode = function () {
		    var result = getStringHashCode(this.t1m_1);
		    result = imul(result, 31) + getStringHashCode(this.u1m_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.v1m_1) | 0;
		    return result;
		  };
		  protoOf(LegEarmuffEnableRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffEnableRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffEnableRequest ? other : THROW_CCE();
		    if (!(this.t1m_1 === tmp0_other_with_cast.t1m_1))
		      return false;
		    if (!(this.u1m_1 === tmp0_other_with_cast.u1m_1))
		      return false;
		    if (!(this.v1m_1 === tmp0_other_with_cast.v1m_1))
		      return false;
		    return true;
		  };
		  function Companion_16() {
		  }
		  function $serializer_18() {
		    $serializer_instance_18 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffDisableRequest.LegEarmuffDisableBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.y1m_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_18).xf = function () {
		    return this.y1m_1;
		  };
		  protoOf($serializer_18).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_18).zf = function (decoder) {
		    var tmp0_desc = this.y1m_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegEarmuffDisableBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_18).z1m = function (encoder, value) {
		    var tmp0_desc = this.y1m_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.a1n_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_18).yf = function (encoder, value) {
		    return this.z1m(encoder, value instanceof LegEarmuffDisableBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_18;
		  function $serializer_getInstance_18() {
		    if ($serializer_instance_18 == null)
		      new $serializer_18();
		    return $serializer_instance_18;
		  }
		  function LegEarmuffDisableBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_18().y1m_1);
		    }
		    $this.a1n_1 = rtc_id;
		    return $this;
		  }
		  function LegEarmuffDisableBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return LegEarmuffDisableBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(LegEarmuffDisableBody)));
		  }
		  function Companion_17() {
		  }
		  function $serializer_19() {
		    $serializer_instance_19 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffDisableRequest.Body', this, 5);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.b1n_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_19).xf = function () {
		    return this.b1n_1;
		  };
		  protoOf($serializer_19).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_18()];
		  };
		  protoOf($serializer_19).zf = function (decoder) {
		    var tmp0_desc = this.b1n_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_18(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, $serializer_getInstance_18(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return Body_init_$Create$_4(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_19).c1n = function (encoder, value) {
		    var tmp0_desc = this.b1n_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.d1n_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e1n_1);
		    tmp1_output.wk(tmp0_desc, 2, value.f1n_1);
		    tmp1_output.wk(tmp0_desc, 3, value.g1n_1);
		    tmp1_output.yk(tmp0_desc, 4, $serializer_getInstance_18(), value.h1n_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_19).yf = function (encoder, value) {
		    return this.c1n(encoder, value instanceof Body_4 ? value : THROW_CCE());
		  };
		  var $serializer_instance_19;
		  function $serializer_getInstance_19() {
		    if ($serializer_instance_19 == null)
		      new $serializer_19();
		    return $serializer_instance_19;
		  }
		  function Body_init_$Init$_4(seen1, type, from, to, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_19().b1n_1);
		    }
		    $this.d1n_1 = type;
		    $this.e1n_1 = from;
		    $this.f1n_1 = to;
		    $this.g1n_1 = originating_session;
		    $this.h1n_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_4(seen1, type, from, to, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_4(seen1, type, from, to, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_4)));
		  }
		  function LegEarmuffDisableBody(rtc_id) {
		    this.a1n_1 = rtc_id;
		  }
		  protoOf(LegEarmuffDisableBody).toString = function () {
		    return 'LegEarmuffDisableBody(rtc_id=' + this.a1n_1 + ')';
		  };
		  protoOf(LegEarmuffDisableBody).hashCode = function () {
		    return getStringHashCode(this.a1n_1);
		  };
		  protoOf(LegEarmuffDisableBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffDisableBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffDisableBody ? other : THROW_CCE();
		    if (!(this.a1n_1 === tmp0_other_with_cast.a1n_1))
		      return false;
		    return true;
		  };
		  function Body_4(type, from, to, originating_session, body) {
		    this.d1n_1 = type;
		    this.e1n_1 = from;
		    this.f1n_1 = to;
		    this.g1n_1 = originating_session;
		    this.h1n_1 = body;
		  }
		  function LegEarmuffDisableRequest(conversationId, legId, memberId) {
		    this.i1n_1 = conversationId;
		    this.j1n_1 = legId;
		    this.k1n_1 = memberId;
		    this.l1n_1 = new ConversationEvents(this.i1n_1);
		    this.m1n_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(LegEarmuffDisableRequest).o1g = function () {
		    return this.l1n_1;
		  };
		  protoOf(LegEarmuffDisableRequest).p1g = function () {
		    return this.m1n_1;
		  };
		  protoOf(LegEarmuffDisableRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_4('audio:earmuff:off', this.k1n_1, this.k1n_1, originatingSessionId, new LegEarmuffDisableBody(this.j1n_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_4), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(LegEarmuffDisableRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(LegEarmuffDisable), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(LegEarmuffDisableRequest).toString = function () {
		    return 'LegEarmuffDisableRequest(conversationId=' + this.i1n_1 + ', legId=' + this.j1n_1 + ', memberId=' + this.k1n_1 + ')';
		  };
		  protoOf(LegEarmuffDisableRequest).hashCode = function () {
		    var result = getStringHashCode(this.i1n_1);
		    result = imul(result, 31) + getStringHashCode(this.j1n_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k1n_1) | 0;
		    return result;
		  };
		  protoOf(LegEarmuffDisableRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffDisableRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffDisableRequest ? other : THROW_CCE();
		    if (!(this.i1n_1 === tmp0_other_with_cast.i1n_1))
		      return false;
		    if (!(this.j1n_1 === tmp0_other_with_cast.j1n_1))
		      return false;
		    if (!(this.k1n_1 === tmp0_other_with_cast.k1n_1))
		      return false;
		    return true;
		  };
		  function Companion_18() {
		  }
		  function $serializer_20() {
		    $serializer_instance_20 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegDTMFRequest.LegDTMFBody', this, 2);
		    tmp0_serialDesc.rq('digit', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.n1n_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_20).xf = function () {
		    return this.n1n_1;
		  };
		  protoOf($serializer_20).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_167()];
		  };
		  protoOf($serializer_20).zf = function (decoder) {
		    var tmp0_desc = this.n1n_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_167(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_167(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return LegDTMFBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_20).o1n = function (encoder, value) {
		    var tmp0_desc = this.n1n_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.p1n_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_167(), value.q1n_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_20).yf = function (encoder, value) {
		    return this.o1n(encoder, value instanceof LegDTMFBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_20;
		  function $serializer_getInstance_20() {
		    if ($serializer_instance_20 == null)
		      new $serializer_20();
		    return $serializer_instance_20;
		  }
		  function LegDTMFBody_init_$Init$(seen1, digit, channel, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_20().n1n_1);
		    }
		    $this.p1n_1 = digit;
		    $this.q1n_1 = channel;
		    return $this;
		  }
		  function LegDTMFBody_init_$Create$(seen1, digit, channel, serializationConstructorMarker) {
		    return LegDTMFBody_init_$Init$(seen1, digit, channel, serializationConstructorMarker, objectCreate(protoOf(LegDTMFBody)));
		  }
		  function Companion_19() {
		  }
		  function $serializer_21() {
		    $serializer_instance_21 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegDTMFRequest.Body', this, 4);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.r1n_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_21).xf = function () {
		    return this.r1n_1;
		  };
		  protoOf($serializer_21).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_20()];
		  };
		  protoOf($serializer_21).zf = function (decoder) {
		    var tmp0_desc = this.r1n_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_20(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_20(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_5(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_21).s1n = function (encoder, value) {
		    var tmp0_desc = this.r1n_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.t1n_1);
		    tmp1_output.wk(tmp0_desc, 1, value.u1n_1);
		    tmp1_output.wk(tmp0_desc, 2, value.v1n_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_20(), value.w1n_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_21).yf = function (encoder, value) {
		    return this.s1n(encoder, value instanceof Body_5 ? value : THROW_CCE());
		  };
		  var $serializer_instance_21;
		  function $serializer_getInstance_21() {
		    if ($serializer_instance_21 == null)
		      new $serializer_21();
		    return $serializer_instance_21;
		  }
		  function Body_init_$Init$_5(seen1, type, from, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_21().r1n_1);
		    }
		    $this.t1n_1 = type;
		    $this.u1n_1 = from;
		    $this.v1n_1 = originating_session;
		    $this.w1n_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_5(seen1, type, from, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_5(seen1, type, from, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_5)));
		  }
		  function LegDTMFBody(digit, channel) {
		    this.p1n_1 = digit;
		    this.q1n_1 = channel;
		  }
		  protoOf(LegDTMFBody).toString = function () {
		    return 'LegDTMFBody(digit=' + this.p1n_1 + ', channel=' + this.q1n_1.toString() + ')';
		  };
		  protoOf(LegDTMFBody).hashCode = function () {
		    var result = getStringHashCode(this.p1n_1);
		    result = imul(result, 31) + this.q1n_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(LegDTMFBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegDTMFBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegDTMFBody ? other : THROW_CCE();
		    if (!(this.p1n_1 === tmp0_other_with_cast.p1n_1))
		      return false;
		    if (!this.q1n_1.equals(tmp0_other_with_cast.q1n_1))
		      return false;
		    return true;
		  };
		  function Body_5(type, from, originating_session, body) {
		    this.t1n_1 = type;
		    this.u1n_1 = from;
		    this.v1n_1 = originating_session;
		    this.w1n_1 = body;
		  }
		  function LegDTMFRequest(conversationId, legId, memberId, digits) {
		    this.x1n_1 = conversationId;
		    this.y1n_1 = legId;
		    this.z1n_1 = memberId;
		    this.a1o_1 = digits;
		    this.b1o_1 = new ConversationEvents(this.x1n_1);
		    this.c1o_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(LegDTMFRequest).o1g = function () {
		    return this.b1o_1;
		  };
		  protoOf(LegDTMFRequest).p1g = function () {
		    return this.c1o_1;
		  };
		  protoOf(LegDTMFRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_5('audio:dtmf', this.z1n_1, originatingSessionId, new LegDTMFBody(this.a1o_1, new DTMFChannel(this.y1n_1, 'app')));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_5), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(LegDTMFRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(LegDTMF), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(LegDTMFRequest).toString = function () {
		    return 'LegDTMFRequest(conversationId=' + this.x1n_1 + ', legId=' + this.y1n_1 + ', memberId=' + this.z1n_1 + ', digits=' + this.a1o_1 + ')';
		  };
		  protoOf(LegDTMFRequest).hashCode = function () {
		    var result = getStringHashCode(this.x1n_1);
		    result = imul(result, 31) + getStringHashCode(this.y1n_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z1n_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.a1o_1) | 0;
		    return result;
		  };
		  protoOf(LegDTMFRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegDTMFRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegDTMFRequest ? other : THROW_CCE();
		    if (!(this.x1n_1 === tmp0_other_with_cast.x1n_1))
		      return false;
		    if (!(this.y1n_1 === tmp0_other_with_cast.y1n_1))
		      return false;
		    if (!(this.z1n_1 === tmp0_other_with_cast.z1n_1))
		      return false;
		    if (!(this.a1o_1 === tmp0_other_with_cast.a1o_1))
		      return false;
		    return true;
		  };
		  function Companion_20() {
		  }
		  function $serializer_22() {
		    $serializer_instance_22 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayRequest.AudioSayBody', this, 6);
		    tmp0_serialDesc.rq('text', false);
		    tmp0_serialDesc.rq('level', false);
		    tmp0_serialDesc.rq('loop', false);
		    tmp0_serialDesc.rq('queue', false);
		    tmp0_serialDesc.rq('voice_name', false);
		    tmp0_serialDesc.rq('ssml', false);
		    this.d1o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_22).xf = function () {
		    return this.d1o_1;
		  };
		  protoOf($serializer_22).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), BooleanSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance()];
		  };
		  protoOf($serializer_22).zf = function (decoder) {
		    var tmp0_desc = this.d1o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = 0;
		    var tmp7_local3 = false;
		    var tmp8_local4 = null;
		    var tmp9_local5 = false;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.mj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.jj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.jj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.mj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.jj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.jj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return AudioSayBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_22).e1o = function (encoder, value) {
		    var tmp0_desc = this.d1o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.f1o_1);
		    tmp1_output.rk(tmp0_desc, 1, value.g1o_1);
		    tmp1_output.rk(tmp0_desc, 2, value.h1o_1);
		    tmp1_output.ok(tmp0_desc, 3, value.i1o_1);
		    tmp1_output.wk(tmp0_desc, 4, value.j1o_1);
		    tmp1_output.ok(tmp0_desc, 5, value.k1o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_22).yf = function (encoder, value) {
		    return this.e1o(encoder, value instanceof AudioSayBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_22;
		  function $serializer_getInstance_22() {
		    if ($serializer_instance_22 == null)
		      new $serializer_22();
		    return $serializer_instance_22;
		  }
		  function AudioSayBody_init_$Init$(seen1, text, level, loop, queue, voice_name, ssml, serializationConstructorMarker, $this) {
		    if (!(63 === (63 & seen1))) {
		      throwMissingFieldException(seen1, 63, $serializer_getInstance_22().d1o_1);
		    }
		    $this.f1o_1 = text;
		    $this.g1o_1 = level;
		    $this.h1o_1 = loop;
		    $this.i1o_1 = queue;
		    $this.j1o_1 = voice_name;
		    $this.k1o_1 = ssml;
		    return $this;
		  }
		  function AudioSayBody_init_$Create$(seen1, text, level, loop, queue, voice_name, ssml, serializationConstructorMarker) {
		    return AudioSayBody_init_$Init$(seen1, text, level, loop, queue, voice_name, ssml, serializationConstructorMarker, objectCreate(protoOf(AudioSayBody)));
		  }
		  function Companion_21() {
		  }
		  function $serializer_23() {
		    $serializer_instance_23 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayRequest.Body', this, 4);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.l1o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_23).xf = function () {
		    return this.l1o_1;
		  };
		  protoOf($serializer_23).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_22()];
		  };
		  protoOf($serializer_23).zf = function (decoder) {
		    var tmp0_desc = this.l1o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_22(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_22(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_6(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_23).m1o = function (encoder, value) {
		    var tmp0_desc = this.l1o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.n1o_1);
		    tmp1_output.wk(tmp0_desc, 1, value.o1o_1);
		    tmp1_output.wk(tmp0_desc, 2, value.p1o_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_22(), value.q1o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_23).yf = function (encoder, value) {
		    return this.m1o(encoder, value instanceof Body_6 ? value : THROW_CCE());
		  };
		  var $serializer_instance_23;
		  function $serializer_getInstance_23() {
		    if ($serializer_instance_23 == null)
		      new $serializer_23();
		    return $serializer_instance_23;
		  }
		  function Body_init_$Init$_6(seen1, type, from, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_23().l1o_1);
		    }
		    $this.n1o_1 = type;
		    $this.o1o_1 = from;
		    $this.p1o_1 = originating_session;
		    $this.q1o_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_6(seen1, type, from, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_6(seen1, type, from, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_6)));
		  }
		  function AudioSayBody(text, level, loop, queue, voice_name, ssml) {
		    this.f1o_1 = text;
		    this.g1o_1 = level;
		    this.h1o_1 = loop;
		    this.i1o_1 = queue;
		    this.j1o_1 = voice_name;
		    this.k1o_1 = ssml;
		  }
		  protoOf(AudioSayBody).toString = function () {
		    return 'AudioSayBody(text=' + this.f1o_1 + ', level=' + this.g1o_1 + ', loop=' + this.h1o_1 + ', queue=' + this.i1o_1 + ', voice_name=' + this.j1o_1 + ', ssml=' + this.k1o_1 + ')';
		  };
		  protoOf(AudioSayBody).hashCode = function () {
		    var result = getStringHashCode(this.f1o_1);
		    result = imul(result, 31) + this.g1o_1 | 0;
		    result = imul(result, 31) + this.h1o_1 | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.i1o_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j1o_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.k1o_1) | 0;
		    return result;
		  };
		  protoOf(AudioSayBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayBody ? other : THROW_CCE();
		    if (!(this.f1o_1 === tmp0_other_with_cast.f1o_1))
		      return false;
		    if (!(this.g1o_1 === tmp0_other_with_cast.g1o_1))
		      return false;
		    if (!(this.h1o_1 === tmp0_other_with_cast.h1o_1))
		      return false;
		    if (!(this.i1o_1 === tmp0_other_with_cast.i1o_1))
		      return false;
		    if (!(this.j1o_1 === tmp0_other_with_cast.j1o_1))
		      return false;
		    if (!(this.k1o_1 === tmp0_other_with_cast.k1o_1))
		      return false;
		    return true;
		  };
		  function Body_6(type, from, originating_session, body) {
		    this.n1o_1 = type;
		    this.o1o_1 = from;
		    this.p1o_1 = originating_session;
		    this.q1o_1 = body;
		  }
		  function AudioSayRequest(cid, mid, text, level, loop, queue, voiceName, ssml) {
		    this.r1o_1 = cid;
		    this.s1o_1 = mid;
		    this.t1o_1 = text;
		    this.u1o_1 = level;
		    this.v1o_1 = loop;
		    this.w1o_1 = queue;
		    this.x1o_1 = voiceName;
		    this.y1o_1 = ssml;
		    this.z1o_1 = new ConversationEvents(this.r1o_1);
		    this.a1p_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(AudioSayRequest).o1g = function () {
		    return this.z1o_1;
		  };
		  protoOf(AudioSayRequest).p1g = function () {
		    return this.a1p_1;
		  };
		  protoOf(AudioSayRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_6('audio:say', this.s1o_1, originatingSessionId, new AudioSayBody(this.t1o_1, this.u1o_1, this.v1o_1, this.w1o_1, this.x1o_1, this.y1o_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_6), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(AudioSayRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(AudioSay), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(AudioSayRequest).toString = function () {
		    return 'AudioSayRequest(cid=' + this.r1o_1 + ', mid=' + this.s1o_1 + ', text=' + this.t1o_1 + ', level=' + this.u1o_1 + ', loop=' + this.v1o_1 + ', queue=' + this.w1o_1 + ', voiceName=' + this.x1o_1 + ', ssml=' + this.y1o_1 + ')';
		  };
		  protoOf(AudioSayRequest).hashCode = function () {
		    var result = getStringHashCode(this.r1o_1);
		    result = imul(result, 31) + getStringHashCode(this.s1o_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.t1o_1) | 0;
		    result = imul(result, 31) + this.u1o_1 | 0;
		    result = imul(result, 31) + this.v1o_1 | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.w1o_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x1o_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.y1o_1) | 0;
		    return result;
		  };
		  protoOf(AudioSayRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayRequest ? other : THROW_CCE();
		    if (!(this.r1o_1 === tmp0_other_with_cast.r1o_1))
		      return false;
		    if (!(this.s1o_1 === tmp0_other_with_cast.s1o_1))
		      return false;
		    if (!(this.t1o_1 === tmp0_other_with_cast.t1o_1))
		      return false;
		    if (!(this.u1o_1 === tmp0_other_with_cast.u1o_1))
		      return false;
		    if (!(this.v1o_1 === tmp0_other_with_cast.v1o_1))
		      return false;
		    if (!(this.w1o_1 === tmp0_other_with_cast.w1o_1))
		      return false;
		    if (!(this.x1o_1 === tmp0_other_with_cast.x1o_1))
		      return false;
		    if (!(this.y1o_1 === tmp0_other_with_cast.y1o_1))
		      return false;
		    return true;
		  };
		  function $serializer_24() {
		    $serializer_instance_24 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSError.InvalidParameter', this, 2);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('reason', false);
		    this.b1p_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_24).xf = function () {
		    return this.b1p_1;
		  };
		  protoOf($serializer_24).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_24).zf = function (decoder) {
		    var tmp0_desc = this.b1p_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return InvalidParameter_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_24).c1p = function (encoder, value) {
		    var tmp0_desc = this.b1p_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.d1p_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e1p_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_24).yf = function (encoder, value) {
		    return this.c1p(encoder, value instanceof InvalidParameter ? value : THROW_CCE());
		  };
		  var $serializer_instance_24;
		  function $serializer_getInstance_24() {
		    if ($serializer_instance_24 == null)
		      new $serializer_24();
		    return $serializer_instance_24;
		  }
		  function InvalidParameter_init_$Init$(seen1, name, reason, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_24().b1p_1);
		    }
		    $this.d1p_1 = name;
		    $this.e1p_1 = reason;
		    return $this;
		  }
		  function InvalidParameter_init_$Create$(seen1, name, reason, serializationConstructorMarker) {
		    return InvalidParameter_init_$Init$(seen1, name, reason, serializationConstructorMarker, objectCreate(protoOf(InvalidParameter)));
		  }
		  function InvalidParameter() {
		  }
		  protoOf(InvalidParameter).toString = function () {
		    return 'InvalidParameter(name=' + this.d1p_1 + ', reason=' + this.e1p_1 + ')';
		  };
		  protoOf(InvalidParameter).hashCode = function () {
		    var result = getStringHashCode(this.d1p_1);
		    result = imul(result, 31) + getStringHashCode(this.e1p_1) | 0;
		    return result;
		  };
		  protoOf(InvalidParameter).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof InvalidParameter))
		      return false;
		    var tmp0_other_with_cast = other instanceof InvalidParameter ? other : THROW_CCE();
		    if (!(this.d1p_1 === tmp0_other_with_cast.d1p_1))
		      return false;
		    if (!(this.e1p_1 === tmp0_other_with_cast.e1p_1))
		      return false;
		    return true;
		  };
		  function Companion_22() {
		    Companion_instance_23 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.f1p_1 = [null, null, null, null, null, new ArrayListSerializer($serializer_getInstance_24()), null];
		  }
		  protoOf(Companion_22).b13 = function () {
		    return $serializer_getInstance_25();
		  };
		  var Companion_instance_23;
		  function Companion_getInstance_24() {
		    if (Companion_instance_23 == null)
		      new Companion_22();
		    return Companion_instance_23;
		  }
		  function $serializer_25() {
		    $serializer_instance_25 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSError', this, 7);
		    tmp0_serialDesc.rq('title', true);
		    tmp0_serialDesc.rq('type', true);
		    tmp0_serialDesc.rq('code', true);
		    tmp0_serialDesc.rq('detail', true);
		    tmp0_serialDesc.rq('instance', true);
		    tmp0_serialDesc.rq('invalid_parameters', true);
		    tmp0_serialDesc.rq('message', true);
		    this.g1p_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_25).xf = function () {
		    return this.g1p_1;
		  };
		  protoOf($serializer_25).gr = function () {
		    var tmp0_cached = Companion_getInstance_24().f1p_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(tmp0_cached[5]), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_25).zf = function (decoder) {
		    var tmp0_desc = this.g1p_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    var tmp12_cached = Companion_getInstance_24().f1p_1;
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, tmp12_cached[5], tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, tmp12_cached[5], tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSError_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_25).h1p = function (encoder, value) {
		    var tmp0_desc = this.g1p_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_24().f1p_1;
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.i1p_1 === '')) {
		      tmp1_output.wk(tmp0_desc, 0, value.i1p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.j1p_1 === '')) {
		      tmp1_output.wk(tmp0_desc, 1, value.j1p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.k1p_1 === '')) {
		      tmp1_output.wk(tmp0_desc, 2, value.k1p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.l1p_1 === '')) {
		      tmp1_output.wk(tmp0_desc, 3, value.l1p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.m1p_1 === '')) {
		      tmp1_output.wk(tmp0_desc, 4, value.m1p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.n1p_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, tmp2_cached[5], value.n1p_1);
		    }
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 6)) {
		      tmp = true;
		    } else {
		      var tmp0_safe_receiver = value.n1p_1;
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.actions.$serializer.serialize.<anonymous>' call
		        tmp_0 = ' - invalid_parameters: ' + toString(tmp0_safe_receiver);
		      }
		      var tmp1_elvis_lhs = tmp_0;
		      tmp = !(value.o1p_1 === value.l1p_1 + (tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs));
		    }
		    if (tmp) {
		      tmp1_output.wk(tmp0_desc, 6, value.o1p_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_25).yf = function (encoder, value) {
		    return this.h1p(encoder, value instanceof CSError ? value : THROW_CCE());
		  };
		  var $serializer_instance_25;
		  function $serializer_getInstance_25() {
		    if ($serializer_instance_25 == null)
		      new $serializer_25();
		    return $serializer_instance_25;
		  }
		  function CSError_init_$Init$(seen1, title, type, code, detail, instance, invalid_parameters, message, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_25().g1p_1);
		    }
		    Exception_init_$Init$($this);
		    if (0 === (seen1 & 1))
		      $this.i1p_1 = '';
		    else
		      $this.i1p_1 = title;
		    if (0 === (seen1 & 2))
		      $this.j1p_1 = '';
		    else
		      $this.j1p_1 = type;
		    if (0 === (seen1 & 4))
		      $this.k1p_1 = '';
		    else
		      $this.k1p_1 = code;
		    if (0 === (seen1 & 8))
		      $this.l1p_1 = '';
		    else
		      $this.l1p_1 = detail;
		    if (0 === (seen1 & 16))
		      $this.m1p_1 = '';
		    else
		      $this.m1p_1 = instance;
		    if (0 === (seen1 & 32))
		      $this.n1p_1 = null;
		    else
		      $this.n1p_1 = invalid_parameters;
		    if (0 === (seen1 & 64)) {
		      var tmp = $this;
		      var tmp0_safe_receiver = $this.n1p_1;
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.actions.CSError.<init>.<anonymous>' call
		        tmp_0 = ' - invalid_parameters: ' + toString(tmp0_safe_receiver);
		      }
		      var tmp1_elvis_lhs = tmp_0;
		      tmp.o1p_1 = $this.l1p_1 + (tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs);
		    } else
		      $this.o1p_1 = message;
		    return $this;
		  }
		  function CSError_init_$Create$(seen1, title, type, code, detail, instance, invalid_parameters, message, serializationConstructorMarker) {
		    var tmp = CSError_init_$Init$(seen1, title, type, code, detail, instance, invalid_parameters, message, serializationConstructorMarker, objectCreate(protoOf(CSError)));
		    captureStack(tmp, CSError_init_$Create$);
		    return tmp;
		  }
		  function CSError(title, type, code, detail, instance, invalid_parameters) {
		    Companion_getInstance_24();
		    title = title === VOID ? '' : title;
		    type = type === VOID ? '' : type;
		    code = code === VOID ? '' : code;
		    detail = detail === VOID ? '' : detail;
		    instance = instance === VOID ? '' : instance;
		    invalid_parameters = invalid_parameters === VOID ? null : invalid_parameters;
		    Exception_init_$Init$(this);
		    captureStack(this, CSError);
		    this.i1p_1 = title;
		    this.j1p_1 = type;
		    this.k1p_1 = code;
		    this.l1p_1 = detail;
		    this.m1p_1 = instance;
		    this.n1p_1 = invalid_parameters;
		    var tmp = this;
		    var tmp0_safe_receiver = this.n1p_1;
		    var tmp_0;
		    if (tmp0_safe_receiver == null) {
		      tmp_0 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.actions.CSError.message.<anonymous>' call
		      tmp_0 = ' - invalid_parameters: ' + toString(tmp0_safe_receiver);
		    }
		    var tmp1_elvis_lhs = tmp_0;
		    tmp.o1p_1 = this.l1p_1 + (tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs);
		  }
		  protoOf(CSError).k8 = function () {
		    return this.o1p_1;
		  };
		  protoOf(CSError).toString = function () {
		    return 'CSError(title=' + this.i1p_1 + ', type=' + this.j1p_1 + ', code=' + this.k1p_1 + ', detail=' + this.l1p_1 + ', instance=' + this.m1p_1 + ', invalid_parameters=' + toString_0(this.n1p_1) + ')';
		  };
		  protoOf(CSError).hashCode = function () {
		    var result = getStringHashCode(this.i1p_1);
		    result = imul(result, 31) + getStringHashCode(this.j1p_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k1p_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.l1p_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.m1p_1) | 0;
		    result = imul(result, 31) + (this.n1p_1 == null ? 0 : hashCode(this.n1p_1)) | 0;
		    return result;
		  };
		  protoOf(CSError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSError))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSError ? other : THROW_CCE();
		    if (!(this.i1p_1 === tmp0_other_with_cast.i1p_1))
		      return false;
		    if (!(this.j1p_1 === tmp0_other_with_cast.j1p_1))
		      return false;
		    if (!(this.k1p_1 === tmp0_other_with_cast.k1p_1))
		      return false;
		    if (!(this.l1p_1 === tmp0_other_with_cast.l1p_1))
		      return false;
		    if (!(this.m1p_1 === tmp0_other_with_cast.m1p_1))
		      return false;
		    if (!equals(this.n1p_1, tmp0_other_with_cast.n1p_1))
		      return false;
		    return true;
		  };
		  function GetMyMemberRequest(cid) {
		    this.p1p_1 = cid;
		    this.q1p_1 = new ConversationMemberMe(this.p1p_1);
		    this.r1p_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetMyMemberRequest).o1g = function () {
		    return this.q1p_1;
		  };
		  protoOf(GetMyMemberRequest).p1g = function () {
		    return this.r1p_1;
		  };
		  protoOf(GetMyMemberRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetMember), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetMyMemberRequest).toString = function () {
		    return 'GetMyMemberRequest(cid=' + this.p1p_1 + ')';
		  };
		  protoOf(GetMyMemberRequest).hashCode = function () {
		    return getStringHashCode(this.p1p_1);
		  };
		  protoOf(GetMyMemberRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetMyMemberRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetMyMemberRequest ? other : THROW_CCE();
		    if (!(this.p1p_1 === tmp0_other_with_cast.p1p_1))
		      return false;
		    return true;
		  };
		  function $serializer_26() {
		    $serializer_instance_26 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetMember.EmbeddedUser', this, 1);
		    tmp0_serialDesc.rq('user', false);
		    this.s1p_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_26).xf = function () {
		    return this.s1p_1;
		  };
		  protoOf($serializer_26).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_51()];
		  };
		  protoOf($serializer_26).zf = function (decoder) {
		    var tmp0_desc = this.s1p_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_51(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_51(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return EmbeddedUser_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_26).t1p = function (encoder, value) {
		    var tmp0_desc = this.s1p_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_51(), value.u1p_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_26).yf = function (encoder, value) {
		    return this.t1p(encoder, value instanceof EmbeddedUser ? value : THROW_CCE());
		  };
		  var $serializer_instance_26;
		  function $serializer_getInstance_26() {
		    if ($serializer_instance_26 == null)
		      new $serializer_26();
		    return $serializer_instance_26;
		  }
		  function EmbeddedUser_init_$Init$(seen1, user, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_26().s1p_1);
		    }
		    $this.u1p_1 = user;
		    return $this;
		  }
		  function EmbeddedUser_init_$Create$(seen1, user, serializationConstructorMarker) {
		    return EmbeddedUser_init_$Init$(seen1, user, serializationConstructorMarker, objectCreate(protoOf(EmbeddedUser)));
		  }
		  function EmbeddedUser() {
		  }
		  protoOf(EmbeddedUser).toString = function () {
		    return 'EmbeddedUser(user=' + toString(this.u1p_1) + ')';
		  };
		  protoOf(EmbeddedUser).hashCode = function () {
		    return hashCode(this.u1p_1);
		  };
		  protoOf(EmbeddedUser).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EmbeddedUser))
		      return false;
		    var tmp0_other_with_cast = other instanceof EmbeddedUser ? other : THROW_CCE();
		    if (!equals(this.u1p_1, tmp0_other_with_cast.u1p_1))
		      return false;
		    return true;
		  };
		  function Companion_23() {
		    Companion_instance_24 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.v1p_1 = [null, new EnumSerializer('com.vonage.clientcore.core.api.models.MemberState', values_2()), null, null, null];
		  }
		  var Companion_instance_24;
		  function Companion_getInstance_25() {
		    if (Companion_instance_24 == null)
		      new Companion_23();
		    return Companion_instance_24;
		  }
		  function $serializer_27() {
		    $serializer_instance_27 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetMember', this, 5);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('state', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('channel', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.w1p_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_27).xf = function () {
		    return this.w1p_1;
		  };
		  protoOf($serializer_27).gr = function () {
		    var tmp0_cached = Companion_getInstance_25().v1p_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), tmp0_cached[1], get_nullable($serializer_getInstance_26()), get_nullable($serializer_getInstance_155()), get_nullable($serializer_getInstance_161())];
		  };
		  protoOf($serializer_27).zf = function (decoder) {
		    var tmp0_desc = this.w1p_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    var tmp10_cached = Companion_getInstance_25().v1p_1;
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.tj(tmp0_desc, 1, tmp10_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, $serializer_getInstance_26(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, $serializer_getInstance_155(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, $serializer_getInstance_161(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.tj(tmp0_desc, 1, tmp10_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, $serializer_getInstance_26(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, $serializer_getInstance_155(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, $serializer_getInstance_161(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return GetMember_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_27).x1p = function (encoder, value) {
		    var tmp0_desc = this.w1p_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_25().v1p_1;
		    tmp1_output.wk(tmp0_desc, 0, value.y1p_1);
		    tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.z1p_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.a1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_26(), value.a1q_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.b1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, $serializer_getInstance_155(), value.b1q_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.c1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, $serializer_getInstance_161(), value.c1q_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_27).yf = function (encoder, value) {
		    return this.x1p(encoder, value instanceof GetMember ? value : THROW_CCE());
		  };
		  var $serializer_instance_27;
		  function $serializer_getInstance_27() {
		    if ($serializer_instance_27 == null)
		      new $serializer_27();
		    return $serializer_instance_27;
		  }
		  function GetMember_init_$Init$(seen1, id, state, _embedded, channel, timestamp, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_27().w1p_1);
		    }
		    $this.y1p_1 = id;
		    $this.z1p_1 = state;
		    if (0 === (seen1 & 4))
		      $this.a1q_1 = null;
		    else
		      $this.a1q_1 = _embedded;
		    if (0 === (seen1 & 8))
		      $this.b1q_1 = null;
		    else
		      $this.b1q_1 = channel;
		    if (0 === (seen1 & 16))
		      $this.c1q_1 = null;
		    else
		      $this.c1q_1 = timestamp;
		    return $this;
		  }
		  function GetMember_init_$Create$(seen1, id, state, _embedded, channel, timestamp, serializationConstructorMarker) {
		    return GetMember_init_$Init$(seen1, id, state, _embedded, channel, timestamp, serializationConstructorMarker, objectCreate(protoOf(GetMember)));
		  }
		  function GetMember(id, state, _embedded, channel, timestamp) {
		    Companion_getInstance_25();
		    _embedded = _embedded === VOID ? null : _embedded;
		    channel = channel === VOID ? null : channel;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.y1p_1 = id;
		    this.z1p_1 = state;
		    this.a1q_1 = _embedded;
		    this.b1q_1 = channel;
		    this.c1q_1 = timestamp;
		  }
		  function Companion_24() {
		  }
		  function $serializer_28() {
		    $serializer_instance_28 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.Properties', this, 3);
		    tmp0_serialDesc.rq('custom_sort_key', true);
		    tmp0_serialDesc.rq('custom_data', true);
		    tmp0_serialDesc.rq('ttl', true);
		    this.d1q_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_28).xf = function () {
		    return this.d1q_1;
		  };
		  protoOf($serializer_28).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(JsonObjectSerializer_getInstance()), get_nullable(IntSerializer_getInstance())];
		  };
		  protoOf($serializer_28).zf = function (decoder) {
		    var tmp0_desc = this.d1q_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, JsonObjectSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, JsonObjectSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return Properties_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_28).e1q = function (encoder, value) {
		    var tmp0_desc = this.d1q_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.f1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.f1q_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.g1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, JsonObjectSerializer_getInstance(), value.g1q_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.h1q_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, IntSerializer_getInstance(), value.h1q_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_28).yf = function (encoder, value) {
		    return this.e1q(encoder, value instanceof Properties ? value : THROW_CCE());
		  };
		  var $serializer_instance_28;
		  function $serializer_getInstance_28() {
		    if ($serializer_instance_28 == null)
		      new $serializer_28();
		    return $serializer_instance_28;
		  }
		  function Properties_init_$Init$(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_28().d1q_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.f1q_1 = null;
		    else
		      $this.f1q_1 = custom_sort_key;
		    if (0 === (seen1 & 2))
		      $this.g1q_1 = null;
		    else
		      $this.g1q_1 = custom_data;
		    if (0 === (seen1 & 4))
		      $this.h1q_1 = null;
		    else
		      $this.h1q_1 = ttl;
		    return $this;
		  }
		  function Properties_init_$Create$(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker) {
		    return Properties_init_$Init$(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker, objectCreate(protoOf(Properties)));
		  }
		  function Properties(custom_sort_key, custom_data, ttl) {
		    custom_sort_key = custom_sort_key === VOID ? null : custom_sort_key;
		    custom_data = custom_data === VOID ? null : custom_data;
		    ttl = ttl === VOID ? null : ttl;
		    this.f1q_1 = custom_sort_key;
		    this.g1q_1 = custom_data;
		    this.h1q_1 = ttl;
		  }
		  protoOf(Properties).i1q = function () {
		    var tmp0_safe_receiver = this.g1q_1;
		    return new Properties_1(this.h1q_1, this.f1q_1, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString());
		  };
		  protoOf(Properties).toString = function () {
		    return 'Properties(custom_sort_key=' + this.f1q_1 + ', custom_data=' + toString_0(this.g1q_1) + ', ttl=' + this.h1q_1 + ')';
		  };
		  protoOf(Properties).hashCode = function () {
		    var result = this.f1q_1 == null ? 0 : getStringHashCode(this.f1q_1);
		    result = imul(result, 31) + (this.g1q_1 == null ? 0 : this.g1q_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.h1q_1 == null ? 0 : this.h1q_1) | 0;
		    return result;
		  };
		  protoOf(Properties).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Properties))
		      return false;
		    var tmp0_other_with_cast = other instanceof Properties ? other : THROW_CCE();
		    if (!(this.f1q_1 == tmp0_other_with_cast.f1q_1))
		      return false;
		    if (!equals(this.g1q_1, tmp0_other_with_cast.g1q_1))
		      return false;
		    if (!(this.h1q_1 == tmp0_other_with_cast.h1q_1))
		      return false;
		    return true;
		  };
		  function Companion_25() {
		  }
		  function $serializer_29() {
		    $serializer_instance_29 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostConversationEventRequest.PostedEvent', this, 4);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('body', false);
		    this.j1q_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_29).xf = function () {
		    return this.j1q_1;
		  };
		  protoOf($serializer_29).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), EmptySerializer_getInstance()];
		  };
		  protoOf($serializer_29).zf = function (decoder) {
		    var tmp0_desc = this.j1q_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, EmptySerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, EmptySerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return PostedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_29).k1q = function (encoder, value) {
		    var tmp0_desc = this.j1q_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.l1q_1);
		    tmp1_output.wk(tmp0_desc, 1, value.m1q_1);
		    tmp1_output.wk(tmp0_desc, 2, value.n1q_1);
		    tmp1_output.yk(tmp0_desc, 3, EmptySerializer_getInstance(), value.o1q_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_29).yf = function (encoder, value) {
		    return this.k1q(encoder, value instanceof PostedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_29;
		  function $serializer_getInstance_29() {
		    if ($serializer_instance_29 == null)
		      new $serializer_29();
		    return $serializer_instance_29;
		  }
		  function PostedEvent_init_$Init$(seen1, cid, from, type, body, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_29().j1q_1);
		    }
		    $this.l1q_1 = cid;
		    $this.m1q_1 = from;
		    $this.n1q_1 = type;
		    $this.o1q_1 = body;
		    return $this;
		  }
		  function PostedEvent_init_$Create$(seen1, cid, from, type, body, serializationConstructorMarker) {
		    return PostedEvent_init_$Init$(seen1, cid, from, type, body, serializationConstructorMarker, objectCreate(protoOf(PostedEvent)));
		  }
		  function PostedEvent(cid, from, type, body) {
		    this.l1q_1 = cid;
		    this.m1q_1 = from;
		    this.n1q_1 = type;
		    this.o1q_1 = body;
		  }
		  protoOf(PostedEvent).toString = function () {
		    return 'PostedEvent(cid=' + this.l1q_1 + ', from=' + this.m1q_1 + ', type=' + this.n1q_1 + ', body=' + toString(this.o1q_1) + ')';
		  };
		  protoOf(PostedEvent).hashCode = function () {
		    var result = getStringHashCode(this.l1q_1);
		    result = imul(result, 31) + getStringHashCode(this.m1q_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.n1q_1) | 0;
		    result = imul(result, 31) + hashCode(this.o1q_1) | 0;
		    return result;
		  };
		  protoOf(PostedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostedEvent ? other : THROW_CCE();
		    if (!(this.l1q_1 === tmp0_other_with_cast.l1q_1))
		      return false;
		    if (!(this.m1q_1 === tmp0_other_with_cast.m1q_1))
		      return false;
		    if (!(this.n1q_1 === tmp0_other_with_cast.n1q_1))
		      return false;
		    if (!equals(this.o1q_1, tmp0_other_with_cast.o1q_1))
		      return false;
		    return true;
		  };
		  function PostConversationEventRequest(cid, from, type, body) {
		    this.p1q_1 = cid;
		    this.q1q_1 = from;
		    this.r1q_1 = type;
		    this.s1q_1 = body;
		    this.t1q_1 = new ConversationEvents(this.p1q_1);
		    this.u1q_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(PostConversationEventRequest).o1g = function () {
		    return this.t1q_1;
		  };
		  protoOf(PostConversationEventRequest).p1g = function () {
		    return this.u1q_1;
		  };
		  protoOf(PostConversationEventRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new PostedEvent(this.p1q_1, this.q1q_1, this.r1q_1.x1q_1, this.s1q_1);
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(PostedEvent), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(PostConversationEventRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(PostConversationEvent), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(PostConversationEventRequest).t1g = function () {
		    return this.s1q_1.t1g();
		  };
		  protoOf(PostConversationEventRequest).toString = function () {
		    return 'PostConversationEventRequest(cid=' + this.p1q_1 + ', from=' + this.q1q_1 + ', type=' + this.r1q_1.toString() + ', body=' + toString(this.s1q_1) + ')';
		  };
		  protoOf(PostConversationEventRequest).hashCode = function () {
		    var result = getStringHashCode(this.p1q_1);
		    result = imul(result, 31) + getStringHashCode(this.q1q_1) | 0;
		    result = imul(result, 31) + this.r1q_1.hashCode() | 0;
		    result = imul(result, 31) + hashCode(this.s1q_1) | 0;
		    return result;
		  };
		  protoOf(PostConversationEventRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostConversationEventRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostConversationEventRequest ? other : THROW_CCE();
		    if (!(this.p1q_1 === tmp0_other_with_cast.p1q_1))
		      return false;
		    if (!(this.q1q_1 === tmp0_other_with_cast.q1q_1))
		      return false;
		    if (!this.r1q_1.equals(tmp0_other_with_cast.r1q_1))
		      return false;
		    if (!equals(this.s1q_1, tmp0_other_with_cast.s1q_1))
		      return false;
		    return true;
		  };
		  function Companion_26() {
		  }
		  function $serializer_30() {
		    $serializer_instance_30 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.UpdateEventStateRequestBody', this, 1);
		    tmp0_serialDesc.rq('event_id', false);
		    this.y1q_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_30).xf = function () {
		    return this.y1q_1;
		  };
		  protoOf($serializer_30).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_30).zf = function (decoder) {
		    var tmp0_desc = this.y1q_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return UpdateEventStateRequestBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_30).z1q = function (encoder, value) {
		    var tmp0_desc = this.y1q_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.a1r_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_30).yf = function (encoder, value) {
		    return this.z1q(encoder, value instanceof UpdateEventStateRequestBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_30;
		  function $serializer_getInstance_30() {
		    if ($serializer_instance_30 == null)
		      new $serializer_30();
		    return $serializer_instance_30;
		  }
		  function UpdateEventStateRequestBody_init_$Init$(seen1, eventId, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_30().y1q_1);
		    }
		    $this.a1r_1 = eventId;
		    return $this;
		  }
		  function UpdateEventStateRequestBody_init_$Create$(seen1, eventId, serializationConstructorMarker) {
		    return UpdateEventStateRequestBody_init_$Init$(seen1, eventId, serializationConstructorMarker, objectCreate(protoOf(UpdateEventStateRequestBody)));
		  }
		  function UpdateEventStateRequestBody(eventId) {
		    this.a1r_1 = eventId;
		  }
		  function Companion_27() {
		  }
		  function $serializer_31() {
		    $serializer_instance_31 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CreateConversationRequest.Body', this, 4);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('display_name', false);
		    tmp0_serialDesc.rq('properties', false);
		    tmp0_serialDesc.rq('image_url', false);
		    this.b1r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_31).xf = function () {
		    return this.b1r_1;
		  };
		  protoOf($serializer_31).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_28()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_31).zf = function (decoder) {
		    var tmp0_desc = this.b1r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, $serializer_getInstance_28(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, $serializer_getInstance_28(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_7(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_31).c1r = function (encoder, value) {
		    var tmp0_desc = this.b1r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.d1r_1);
		    tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.e1r_1);
		    tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_28(), value.f1r_1);
		    tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.g1r_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_31).yf = function (encoder, value) {
		    return this.c1r(encoder, value instanceof Body_7 ? value : THROW_CCE());
		  };
		  var $serializer_instance_31;
		  function $serializer_getInstance_31() {
		    if ($serializer_instance_31 == null)
		      new $serializer_31();
		    return $serializer_instance_31;
		  }
		  function Body_init_$Init$_7(seen1, name, display_name, properties, image_url, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_31().b1r_1);
		    }
		    $this.d1r_1 = name;
		    $this.e1r_1 = display_name;
		    $this.f1r_1 = properties;
		    $this.g1r_1 = image_url;
		    return $this;
		  }
		  function Body_init_$Create$_7(seen1, name, display_name, properties, image_url, serializationConstructorMarker) {
		    return Body_init_$Init$_7(seen1, name, display_name, properties, image_url, serializationConstructorMarker, objectCreate(protoOf(Body_7)));
		  }
		  function Body_7(name, display_name, properties, image_url) {
		    this.d1r_1 = name;
		    this.e1r_1 = display_name;
		    this.f1r_1 = properties;
		    this.g1r_1 = image_url;
		  }
		  function CreateConversationRequest(name, displayName, imageUrl, properties) {
		    name = name === VOID ? null : name;
		    displayName = displayName === VOID ? null : displayName;
		    imageUrl = imageUrl === VOID ? null : imageUrl;
		    properties = properties === VOID ? null : properties;
		    this.h1r_1 = name;
		    this.i1r_1 = displayName;
		    this.j1r_1 = imageUrl;
		    this.k1r_1 = properties;
		    this.l1r_1 = new Conversations();
		    this.m1r_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(CreateConversationRequest).o1g = function () {
		    return this.l1r_1;
		  };
		  protoOf(CreateConversationRequest).p1g = function () {
		    return this.m1r_1;
		  };
		  protoOf(CreateConversationRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_7(this.h1r_1, this.i1r_1, this.k1r_1, this.j1r_1);
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_7), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(CreateConversationRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(ConversationCreate), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(CreateConversationRequest).t1g = function () {
		    var tmp0_safe_receiver = this.h1r_1;
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp0_safe_receiver);
		    }
		    var tmp1_elvis_lhs = tmp;
		    var nameSanitized = !(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
		    var tmp2_safe_receiver = this.i1r_1;
		    var tmp_0;
		    if (tmp2_safe_receiver == null) {
		      tmp_0 = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp_0 = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp2_safe_receiver);
		    }
		    var tmp3_elvis_lhs = tmp_0;
		    var displayNameSanitized = !(tmp3_elvis_lhs == null ? false : tmp3_elvis_lhs);
		    var tmp4_safe_receiver = this.j1r_1;
		    var tmp_1;
		    if (tmp4_safe_receiver == null) {
		      tmp_1 = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp_1 = Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(tmp4_safe_receiver);
		    }
		    var tmp5_elvis_lhs = tmp_1;
		    var imageUrlSanitized = !(tmp5_elvis_lhs == null ? false : tmp5_elvis_lhs);
		    return nameSanitized && displayNameSanitized && imageUrlSanitized;
		  };
		  protoOf(CreateConversationRequest).toString = function () {
		    return 'CreateConversationRequest(name=' + this.h1r_1 + ', displayName=' + this.i1r_1 + ', imageUrl=' + this.j1r_1 + ', properties=' + toString_0(this.k1r_1) + ')';
		  };
		  protoOf(CreateConversationRequest).hashCode = function () {
		    var result = this.h1r_1 == null ? 0 : getStringHashCode(this.h1r_1);
		    result = imul(result, 31) + (this.i1r_1 == null ? 0 : getStringHashCode(this.i1r_1)) | 0;
		    result = imul(result, 31) + (this.j1r_1 == null ? 0 : getStringHashCode(this.j1r_1)) | 0;
		    result = imul(result, 31) + (this.k1r_1 == null ? 0 : this.k1r_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(CreateConversationRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CreateConversationRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof CreateConversationRequest ? other : THROW_CCE();
		    if (!(this.h1r_1 == tmp0_other_with_cast.h1r_1))
		      return false;
		    if (!(this.i1r_1 == tmp0_other_with_cast.i1r_1))
		      return false;
		    if (!(this.j1r_1 == tmp0_other_with_cast.j1r_1))
		      return false;
		    if (!equals(this.k1r_1, tmp0_other_with_cast.k1r_1))
		      return false;
		    return true;
		  };
		  function Companion_28() {
		  }
		  function $serializer_32() {
		    $serializer_instance_32 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationCreate', this, 4);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('state', false);
		    tmp0_serialDesc.rq('display_name', true);
		    this.n1r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_32).xf = function () {
		    return this.n1r_1;
		  };
		  protoOf($serializer_32).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_32).zf = function (decoder) {
		    var tmp0_desc = this.n1r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return ConversationCreate_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_32).o1r = function (encoder, value) {
		    var tmp0_desc = this.n1r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.p1r_1);
		    tmp1_output.wk(tmp0_desc, 1, value.q1r_1);
		    tmp1_output.wk(tmp0_desc, 2, value.r1r_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.s1r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.s1r_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_32).yf = function (encoder, value) {
		    return this.o1r(encoder, value instanceof ConversationCreate ? value : THROW_CCE());
		  };
		  var $serializer_instance_32;
		  function $serializer_getInstance_32() {
		    if ($serializer_instance_32 == null)
		      new $serializer_32();
		    return $serializer_instance_32;
		  }
		  function ConversationCreate_init_$Init$(seen1, id, name, state, display_name, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_32().n1r_1);
		    }
		    $this.p1r_1 = id;
		    $this.q1r_1 = name;
		    $this.r1r_1 = state;
		    if (0 === (seen1 & 8))
		      $this.s1r_1 = null;
		    else
		      $this.s1r_1 = display_name;
		    return $this;
		  }
		  function ConversationCreate_init_$Create$(seen1, id, name, state, display_name, serializationConstructorMarker) {
		    return ConversationCreate_init_$Init$(seen1, id, name, state, display_name, serializationConstructorMarker, objectCreate(protoOf(ConversationCreate)));
		  }
		  function ConversationCreate(id, name, state, display_name) {
		    display_name = display_name === VOID ? null : display_name;
		    this.p1r_1 = id;
		    this.q1r_1 = name;
		    this.r1r_1 = state;
		    this.s1r_1 = display_name;
		  }
		  protoOf(ConversationCreate).toString = function () {
		    return 'ConversationCreate(id=' + this.p1r_1 + ', name=' + this.q1r_1 + ', state=' + this.r1r_1 + ', display_name=' + this.s1r_1 + ')';
		  };
		  protoOf(ConversationCreate).hashCode = function () {
		    var result = getStringHashCode(this.p1r_1);
		    result = imul(result, 31) + getStringHashCode(this.q1r_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.r1r_1) | 0;
		    result = imul(result, 31) + (this.s1r_1 == null ? 0 : getStringHashCode(this.s1r_1)) | 0;
		    return result;
		  };
		  protoOf(ConversationCreate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationCreate))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationCreate ? other : THROW_CCE();
		    if (!(this.p1r_1 === tmp0_other_with_cast.p1r_1))
		      return false;
		    if (!(this.q1r_1 === tmp0_other_with_cast.q1r_1))
		      return false;
		    if (!(this.r1r_1 === tmp0_other_with_cast.r1r_1))
		      return false;
		    if (!(this.s1r_1 == tmp0_other_with_cast.s1r_1))
		      return false;
		    return true;
		  };
		  function Companion_29() {
		    Companion_instance_30 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.t1r_1 = [new OptionSerializer(StringSerializer_getInstance()), new OptionSerializer(get_nullable(StringSerializer_getInstance())), new OptionSerializer(get_nullable(StringSerializer_getInstance())), new OptionSerializer(get_nullable($serializer_getInstance_34()))];
		  }
		  var Companion_instance_30;
		  function Companion_getInstance_31() {
		    if (Companion_instance_30 == null)
		      new Companion_29();
		    return Companion_instance_30;
		  }
		  function $serializer_33() {
		    $serializer_instance_33 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.UpdateConversationRequest.Body', this, 4);
		    tmp0_serialDesc.rq('name', true);
		    tmp0_serialDesc.rq('display_name', true);
		    tmp0_serialDesc.rq('image_url', true);
		    tmp0_serialDesc.rq('properties', true);
		    this.u1r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_33).xf = function () {
		    return this.u1r_1;
		  };
		  protoOf($serializer_33).gr = function () {
		    var tmp0_cached = Companion_getInstance_31().t1r_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [tmp0_cached[0], tmp0_cached[1], tmp0_cached[2], tmp0_cached[3]];
		  };
		  protoOf($serializer_33).zf = function (decoder) {
		    var tmp0_desc = this.u1r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    var tmp9_cached = Companion_getInstance_31().t1r_1;
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.tj(tmp0_desc, 0, tmp9_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, tmp9_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, tmp9_cached[2], tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, tmp9_cached[3], tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.tj(tmp0_desc, 0, tmp9_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, tmp9_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, tmp9_cached[2], tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, tmp9_cached[3], tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_8(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_33).v1r = function (encoder, value) {
		    var tmp0_desc = this.u1r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_31().t1r_1;
		    if (!value.w1r_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.w1r_1);
		    }
		    if (!value.x1r_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.x1r_1);
		    }
		    if (!value.y1r_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 2, tmp2_cached[2], value.y1r_1);
		    }
		    if (!value.z1r_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 3, tmp2_cached[3], value.z1r_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_33).yf = function (encoder, value) {
		    return this.v1r(encoder, value instanceof Body_8 ? value : THROW_CCE());
		  };
		  var $serializer_instance_33;
		  function $serializer_getInstance_33() {
		    if ($serializer_instance_33 == null)
		      new $serializer_33();
		    return $serializer_instance_33;
		  }
		  function Body_init_$Init$_8(seen1, name, display_name, image_url, properties, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_33().u1r_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.w1r_1 = none();
		    else
		      $this.w1r_1 = name;
		    if (0 === (seen1 & 2))
		      $this.x1r_1 = none();
		    else
		      $this.x1r_1 = display_name;
		    if (0 === (seen1 & 4))
		      $this.y1r_1 = none();
		    else
		      $this.y1r_1 = image_url;
		    if (0 === (seen1 & 8))
		      $this.z1r_1 = none();
		    else
		      $this.z1r_1 = properties;
		    return $this;
		  }
		  function Body_init_$Create$_8(seen1, name, display_name, image_url, properties, serializationConstructorMarker) {
		    return Body_init_$Init$_8(seen1, name, display_name, image_url, properties, serializationConstructorMarker, objectCreate(protoOf(Body_8)));
		  }
		  function Companion_30() {
		    Companion_instance_31 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.a1s_1 = [new OptionSerializer(get_nullable(StringSerializer_getInstance())), new OptionSerializer(get_nullable(JsonObjectSerializer_getInstance())), new OptionSerializer(IntSerializer_getInstance())];
		  }
		  var Companion_instance_31;
		  function Companion_getInstance_32() {
		    if (Companion_instance_31 == null)
		      new Companion_30();
		    return Companion_instance_31;
		  }
		  function $serializer_34() {
		    $serializer_instance_34 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.UpdateConversationRequest.Properties', this, 3);
		    tmp0_serialDesc.rq('custom_sort_key', true);
		    tmp0_serialDesc.rq('custom_data', true);
		    tmp0_serialDesc.rq('ttl', true);
		    this.b1s_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_34).xf = function () {
		    return this.b1s_1;
		  };
		  protoOf($serializer_34).gr = function () {
		    var tmp0_cached = Companion_getInstance_32().a1s_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [tmp0_cached[0], tmp0_cached[1], tmp0_cached[2]];
		  };
		  protoOf($serializer_34).zf = function (decoder) {
		    var tmp0_desc = this.b1s_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    var tmp8_cached = Companion_getInstance_32().a1s_1;
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, tmp8_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, tmp8_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, tmp8_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, tmp8_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return Properties_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_34).c1s = function (encoder, value) {
		    var tmp0_desc = this.b1s_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_32().a1s_1;
		    if (!value.d1s_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.d1s_1);
		    }
		    if (!value.e1s_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.e1s_1);
		    }
		    if (!value.f1s_1.equals(none())) {
		      tmp1_output.yk(tmp0_desc, 2, tmp2_cached[2], value.f1s_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_34).yf = function (encoder, value) {
		    return this.c1s(encoder, value instanceof Properties_0 ? value : THROW_CCE());
		  };
		  var $serializer_instance_34;
		  function $serializer_getInstance_34() {
		    if ($serializer_instance_34 == null)
		      new $serializer_34();
		    return $serializer_instance_34;
		  }
		  function Properties_init_$Init$_0(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_34().b1s_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.d1s_1 = none();
		    else
		      $this.d1s_1 = custom_sort_key;
		    if (0 === (seen1 & 2))
		      $this.e1s_1 = none();
		    else
		      $this.e1s_1 = custom_data;
		    if (0 === (seen1 & 4))
		      $this.f1s_1 = none();
		    else
		      $this.f1s_1 = ttl;
		    return $this;
		  }
		  function Properties_init_$Create$_0(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker) {
		    return Properties_init_$Init$_0(seen1, custom_sort_key, custom_data, ttl, serializationConstructorMarker, objectCreate(protoOf(Properties_0)));
		  }
		  function Body_8(name, display_name, image_url, properties) {
		    Companion_getInstance_31();
		    name = name === VOID ? none() : name;
		    display_name = display_name === VOID ? none() : display_name;
		    image_url = image_url === VOID ? none() : image_url;
		    properties = properties === VOID ? none() : properties;
		    this.w1r_1 = name;
		    this.x1r_1 = display_name;
		    this.y1r_1 = image_url;
		    this.z1r_1 = properties;
		  }
		  protoOf(Body_8).toString = function () {
		    return 'Body(name=' + toString(this.w1r_1) + ', display_name=' + toString(this.x1r_1) + ', image_url=' + toString(this.y1r_1) + ', properties=' + toString(this.z1r_1) + ')';
		  };
		  protoOf(Body_8).hashCode = function () {
		    var result = this.w1r_1.hashCode();
		    result = imul(result, 31) + this.x1r_1.hashCode() | 0;
		    result = imul(result, 31) + this.y1r_1.hashCode() | 0;
		    result = imul(result, 31) + this.z1r_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(Body_8).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_8))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_8 ? other : THROW_CCE();
		    if (!this.w1r_1.equals(tmp0_other_with_cast.w1r_1))
		      return false;
		    if (!this.x1r_1.equals(tmp0_other_with_cast.x1r_1))
		      return false;
		    if (!this.y1r_1.equals(tmp0_other_with_cast.y1r_1))
		      return false;
		    if (!this.z1r_1.equals(tmp0_other_with_cast.z1r_1))
		      return false;
		    return true;
		  };
		  function Properties_0(custom_sort_key, custom_data, ttl) {
		    Companion_getInstance_32();
		    custom_sort_key = custom_sort_key === VOID ? none() : custom_sort_key;
		    custom_data = custom_data === VOID ? none() : custom_data;
		    ttl = ttl === VOID ? none() : ttl;
		    this.d1s_1 = custom_sort_key;
		    this.e1s_1 = custom_data;
		    this.f1s_1 = ttl;
		  }
		  protoOf(Properties_0).toString = function () {
		    return 'Properties(custom_sort_key=' + toString(this.d1s_1) + ', custom_data=' + toString(this.e1s_1) + ', ttl=' + toString(this.f1s_1) + ')';
		  };
		  protoOf(Properties_0).hashCode = function () {
		    var result = this.d1s_1.hashCode();
		    result = imul(result, 31) + this.e1s_1.hashCode() | 0;
		    result = imul(result, 31) + this.f1s_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(Properties_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Properties_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof Properties_0 ? other : THROW_CCE();
		    if (!this.d1s_1.equals(tmp0_other_with_cast.d1s_1))
		      return false;
		    if (!this.e1s_1.equals(tmp0_other_with_cast.e1s_1))
		      return false;
		    if (!this.f1s_1.equals(tmp0_other_with_cast.f1s_1))
		      return false;
		    return true;
		  };
		  function UpdateConversationRequest(cid, name, displayName, imageUrl, properties) {
		    this.g1s_1 = cid;
		    this.h1s_1 = name;
		    this.i1s_1 = displayName;
		    this.j1s_1 = imageUrl;
		    this.k1s_1 = properties;
		    this.l1s_1 = new Conversation_1(this.g1s_1);
		    this.m1s_1 = HTTPMethod_PATCH_getInstance();
		  }
		  protoOf(UpdateConversationRequest).o1g = function () {
		    return this.l1s_1;
		  };
		  protoOf(UpdateConversationRequest).p1g = function () {
		    return this.m1s_1;
		  };
		  protoOf(UpdateConversationRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_8(this.h1s_1, this.i1s_1, this.j1s_1, this.k1s_1);
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_8), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(UpdateConversationRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetConversation), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(UpdateConversationRequest).t1g = function () {
		    var tmp0_safe_receiver = this.h1s_1.n1s();
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp0_safe_receiver);
		    }
		    var tmp1_elvis_lhs = tmp;
		    var nameSanitized = !(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
		    var tmp2_safe_receiver = this.i1s_1.n1s();
		    var tmp_0;
		    if (tmp2_safe_receiver == null) {
		      tmp_0 = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp_0 = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp2_safe_receiver);
		    }
		    var tmp3_elvis_lhs = tmp_0;
		    var displayNameSanitized = !(tmp3_elvis_lhs == null ? false : tmp3_elvis_lhs);
		    var tmp4_safe_receiver = this.j1s_1.n1s();
		    var tmp_1;
		    if (tmp4_safe_receiver == null) {
		      tmp_1 = null;
		    } else {
		      // Inline function 'kotlin.text.contains' call
		      tmp_1 = Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(tmp4_safe_receiver);
		    }
		    var tmp5_elvis_lhs = tmp_1;
		    var imageUrlSanitized = !(tmp5_elvis_lhs == null ? false : tmp5_elvis_lhs);
		    return nameSanitized && displayNameSanitized && imageUrlSanitized;
		  };
		  protoOf(UpdateConversationRequest).toString = function () {
		    return 'UpdateConversationRequest(cid=' + this.g1s_1 + ', name=' + toString(this.h1s_1) + ', displayName=' + toString(this.i1s_1) + ', imageUrl=' + toString(this.j1s_1) + ', properties=' + toString(this.k1s_1) + ')';
		  };
		  protoOf(UpdateConversationRequest).hashCode = function () {
		    var result = getStringHashCode(this.g1s_1);
		    result = imul(result, 31) + this.h1s_1.hashCode() | 0;
		    result = imul(result, 31) + this.i1s_1.hashCode() | 0;
		    result = imul(result, 31) + this.j1s_1.hashCode() | 0;
		    result = imul(result, 31) + this.k1s_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(UpdateConversationRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UpdateConversationRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof UpdateConversationRequest ? other : THROW_CCE();
		    if (!(this.g1s_1 === tmp0_other_with_cast.g1s_1))
		      return false;
		    if (!this.h1s_1.equals(tmp0_other_with_cast.h1s_1))
		      return false;
		    if (!this.i1s_1.equals(tmp0_other_with_cast.i1s_1))
		      return false;
		    if (!this.j1s_1.equals(tmp0_other_with_cast.j1s_1))
		      return false;
		    if (!this.k1s_1.equals(tmp0_other_with_cast.k1s_1))
		      return false;
		    return true;
		  };
		  function Companion_31() {
		  }
		  function $serializer_35() {
		    $serializer_instance_35 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationJoinRequest.MemberJoinChannel', this, 1);
		    tmp0_serialDesc.rq('type', true);
		    this.o1s_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_35).xf = function () {
		    return this.o1s_1;
		  };
		  protoOf($serializer_35).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_35).zf = function (decoder) {
		    var tmp0_desc = this.o1s_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return MemberJoinChannel_init_$Create$_0(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_35).p1s = function (encoder, value) {
		    var tmp0_desc = this.o1s_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.q1s_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 0, value.q1s_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_35).yf = function (encoder, value) {
		    return this.p1s(encoder, value instanceof MemberJoinChannel_0 ? value : THROW_CCE());
		  };
		  var $serializer_instance_35;
		  function $serializer_getInstance_35() {
		    if ($serializer_instance_35 == null)
		      new $serializer_35();
		    return $serializer_instance_35;
		  }
		  function MemberJoinChannel_init_$Init$_0(seen1, type, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_35().o1s_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.q1s_1 = 'app';
		    else
		      $this.q1s_1 = type;
		    return $this;
		  }
		  function MemberJoinChannel_init_$Create$_0(seen1, type, serializationConstructorMarker) {
		    return MemberJoinChannel_init_$Init$_0(seen1, type, serializationConstructorMarker, objectCreate(protoOf(MemberJoinChannel_0)));
		  }
		  function Companion_32() {
		  }
		  function $serializer_36() {
		    $serializer_instance_36 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationJoinRequest.JoinUser', this, 2);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', false);
		    this.r1s_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_36).xf = function () {
		    return this.r1s_1;
		  };
		  protoOf($serializer_36).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_36).zf = function (decoder) {
		    var tmp0_desc = this.r1s_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return JoinUser_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_36).s1s = function (encoder, value) {
		    var tmp0_desc = this.r1s_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.t1s_1);
		    tmp1_output.wk(tmp0_desc, 1, value.u1s_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_36).yf = function (encoder, value) {
		    return this.s1s(encoder, value instanceof JoinUser ? value : THROW_CCE());
		  };
		  var $serializer_instance_36;
		  function $serializer_getInstance_36() {
		    if ($serializer_instance_36 == null)
		      new $serializer_36();
		    return $serializer_instance_36;
		  }
		  function JoinUser_init_$Init$(seen1, id, name, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_36().r1s_1);
		    }
		    $this.t1s_1 = id;
		    $this.u1s_1 = name;
		    return $this;
		  }
		  function JoinUser_init_$Create$(seen1, id, name, serializationConstructorMarker) {
		    return JoinUser_init_$Init$(seen1, id, name, serializationConstructorMarker, objectCreate(protoOf(JoinUser)));
		  }
		  function Companion_33() {
		  }
		  function $serializer_37() {
		    $serializer_instance_37 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationJoinRequest.Body', this, 4);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('channel', false);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('state', true);
		    this.v1s_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_37).xf = function () {
		    return this.v1s_1;
		  };
		  protoOf($serializer_37).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_35(), $serializer_getInstance_36(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_37).zf = function (decoder) {
		    var tmp0_desc = this.v1s_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_35(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_36(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_35(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_36(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_9(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_37).w1s = function (encoder, value) {
		    var tmp0_desc = this.v1s_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.x1s_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_35(), value.y1s_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_36(), value.z1s_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.a1t_1 === 'joined')) {
		      tmp1_output.wk(tmp0_desc, 3, value.a1t_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_37).yf = function (encoder, value) {
		    return this.w1s(encoder, value instanceof Body_9 ? value : THROW_CCE());
		  };
		  var $serializer_instance_37;
		  function $serializer_getInstance_37() {
		    if ($serializer_instance_37 == null)
		      new $serializer_37();
		    return $serializer_instance_37;
		  }
		  function Body_init_$Init$_9(seen1, originating_session, channel, user, state, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_37().v1s_1);
		    }
		    $this.x1s_1 = originating_session;
		    $this.y1s_1 = channel;
		    $this.z1s_1 = user;
		    if (0 === (seen1 & 8))
		      $this.a1t_1 = 'joined';
		    else
		      $this.a1t_1 = state;
		    return $this;
		  }
		  function Body_init_$Create$_9(seen1, originating_session, channel, user, state, serializationConstructorMarker) {
		    return Body_init_$Init$_9(seen1, originating_session, channel, user, state, serializationConstructorMarker, objectCreate(protoOf(Body_9)));
		  }
		  function MemberJoinChannel_0(type) {
		    type = type === VOID ? 'app' : type;
		    this.q1s_1 = type;
		  }
		  protoOf(MemberJoinChannel_0).toString = function () {
		    return 'MemberJoinChannel(type=' + this.q1s_1 + ')';
		  };
		  protoOf(MemberJoinChannel_0).hashCode = function () {
		    return getStringHashCode(this.q1s_1);
		  };
		  protoOf(MemberJoinChannel_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinChannel_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinChannel_0 ? other : THROW_CCE();
		    if (!(this.q1s_1 === tmp0_other_with_cast.q1s_1))
		      return false;
		    return true;
		  };
		  function JoinUser(id, name) {
		    this.t1s_1 = id;
		    this.u1s_1 = name;
		  }
		  protoOf(JoinUser).toString = function () {
		    return 'JoinUser(id=' + this.t1s_1 + ', name=' + this.u1s_1 + ')';
		  };
		  protoOf(JoinUser).hashCode = function () {
		    var result = getStringHashCode(this.t1s_1);
		    result = imul(result, 31) + getStringHashCode(this.u1s_1) | 0;
		    return result;
		  };
		  protoOf(JoinUser).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof JoinUser))
		      return false;
		    var tmp0_other_with_cast = other instanceof JoinUser ? other : THROW_CCE();
		    if (!(this.t1s_1 === tmp0_other_with_cast.t1s_1))
		      return false;
		    if (!(this.u1s_1 === tmp0_other_with_cast.u1s_1))
		      return false;
		    return true;
		  };
		  function Body_9(originating_session, channel, user, state) {
		    state = state === VOID ? 'joined' : state;
		    this.x1s_1 = originating_session;
		    this.y1s_1 = channel;
		    this.z1s_1 = user;
		    this.a1t_1 = state;
		  }
		  function ConversationJoinRequest(cid, userId, username) {
		    this.b1t_1 = cid;
		    this.c1t_1 = userId;
		    this.d1t_1 = username;
		    this.e1t_1 = new ConversationMembers(this.b1t_1);
		    this.f1t_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(ConversationJoinRequest).o1g = function () {
		    return this.e1t_1;
		  };
		  protoOf(ConversationJoinRequest).p1g = function () {
		    return this.f1t_1;
		  };
		  protoOf(ConversationJoinRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_9(originatingSessionId, new MemberJoinChannel_0(), new JoinUser(this.c1t_1, this.d1t_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_9), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(ConversationJoinRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(ConversationJoin), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(ConversationJoinRequest).toString = function () {
		    return 'ConversationJoinRequest(cid=' + this.b1t_1 + ', userId=' + this.c1t_1 + ', username=' + this.d1t_1 + ')';
		  };
		  protoOf(ConversationJoinRequest).hashCode = function () {
		    var result = getStringHashCode(this.b1t_1);
		    result = imul(result, 31) + getStringHashCode(this.c1t_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.d1t_1) | 0;
		    return result;
		  };
		  protoOf(ConversationJoinRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationJoinRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationJoinRequest ? other : THROW_CCE();
		    if (!(this.b1t_1 === tmp0_other_with_cast.b1t_1))
		      return false;
		    if (!(this.c1t_1 === tmp0_other_with_cast.c1t_1))
		      return false;
		    if (!(this.d1t_1 === tmp0_other_with_cast.d1t_1))
		      return false;
		    return true;
		  };
		  function Companion_34() {
		  }
		  function $serializer_38() {
		    $serializer_instance_38 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationJoin', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.g1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_38).xf = function () {
		    return this.g1t_1;
		  };
		  protoOf($serializer_38).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_38).zf = function (decoder) {
		    var tmp0_desc = this.g1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationJoin_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_38).h1t = function (encoder, value) {
		    var tmp0_desc = this.g1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.i1t_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_38).yf = function (encoder, value) {
		    return this.h1t(encoder, value instanceof ConversationJoin ? value : THROW_CCE());
		  };
		  var $serializer_instance_38;
		  function $serializer_getInstance_38() {
		    if ($serializer_instance_38 == null)
		      new $serializer_38();
		    return $serializer_instance_38;
		  }
		  function ConversationJoin_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_38().g1t_1);
		    }
		    $this.i1t_1 = id;
		    return $this;
		  }
		  function ConversationJoin_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return ConversationJoin_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(ConversationJoin)));
		  }
		  function ConversationJoin(id) {
		    this.i1t_1 = id;
		  }
		  protoOf(ConversationJoin).toString = function () {
		    return 'ConversationJoin(id=' + this.i1t_1 + ')';
		  };
		  protoOf(ConversationJoin).hashCode = function () {
		    return getStringHashCode(this.i1t_1);
		  };
		  protoOf(ConversationJoin).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationJoin))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationJoin ? other : THROW_CCE();
		    if (!(this.i1t_1 === tmp0_other_with_cast.i1t_1))
		      return false;
		    return true;
		  };
		  function Companion_35() {
		  }
		  function $serializer_39() {
		    $serializer_instance_39 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInviteRequest.ConversationInviteTo', this, 1);
		    tmp0_serialDesc.rq('type', true);
		    this.j1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_39).xf = function () {
		    return this.j1t_1;
		  };
		  protoOf($serializer_39).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_39).zf = function (decoder) {
		    var tmp0_desc = this.j1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationInviteTo_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_39).k1t = function (encoder, value) {
		    var tmp0_desc = this.j1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.l1t_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 0, value.l1t_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_39).yf = function (encoder, value) {
		    return this.k1t(encoder, value instanceof ConversationInviteTo ? value : THROW_CCE());
		  };
		  var $serializer_instance_39;
		  function $serializer_getInstance_39() {
		    if ($serializer_instance_39 == null)
		      new $serializer_39();
		    return $serializer_instance_39;
		  }
		  function ConversationInviteTo_init_$Init$(seen1, type, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_39().j1t_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.l1t_1 = 'app';
		    else
		      $this.l1t_1 = type;
		    return $this;
		  }
		  function ConversationInviteTo_init_$Create$(seen1, type, serializationConstructorMarker) {
		    return ConversationInviteTo_init_$Init$(seen1, type, serializationConstructorMarker, objectCreate(protoOf(ConversationInviteTo)));
		  }
		  function Companion_36() {
		  }
		  function $serializer_40() {
		    $serializer_instance_40 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInviteRequest.ConversationInviteFrom', this, 1);
		    tmp0_serialDesc.rq('type', true);
		    this.m1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_40).xf = function () {
		    return this.m1t_1;
		  };
		  protoOf($serializer_40).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_40).zf = function (decoder) {
		    var tmp0_desc = this.m1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationInviteFrom_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_40).n1t = function (encoder, value) {
		    var tmp0_desc = this.m1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.o1t_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 0, value.o1t_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_40).yf = function (encoder, value) {
		    return this.n1t(encoder, value instanceof ConversationInviteFrom ? value : THROW_CCE());
		  };
		  var $serializer_instance_40;
		  function $serializer_getInstance_40() {
		    if ($serializer_instance_40 == null)
		      new $serializer_40();
		    return $serializer_instance_40;
		  }
		  function ConversationInviteFrom_init_$Init$(seen1, type, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_40().m1t_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.o1t_1 = 'app';
		    else
		      $this.o1t_1 = type;
		    return $this;
		  }
		  function ConversationInviteFrom_init_$Create$(seen1, type, serializationConstructorMarker) {
		    return ConversationInviteFrom_init_$Init$(seen1, type, serializationConstructorMarker, objectCreate(protoOf(ConversationInviteFrom)));
		  }
		  function Companion_37() {
		  }
		  function $serializer_41() {
		    $serializer_instance_41 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInviteRequest.ConversationInviteChannel', this, 3);
		    tmp0_serialDesc.rq('type', true);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('to', false);
		    this.p1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_41).xf = function () {
		    return this.p1t_1;
		  };
		  protoOf($serializer_41).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_40(), $serializer_getInstance_39()];
		  };
		  protoOf($serializer_41).zf = function (decoder) {
		    var tmp0_desc = this.p1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_40(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_39(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_40(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_39(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return ConversationInviteChannel_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_41).q1t = function (encoder, value) {
		    var tmp0_desc = this.p1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.r1t_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 0, value.r1t_1);
		    }
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_40(), value.s1t_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_39(), value.t1t_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_41).yf = function (encoder, value) {
		    return this.q1t(encoder, value instanceof ConversationInviteChannel ? value : THROW_CCE());
		  };
		  var $serializer_instance_41;
		  function $serializer_getInstance_41() {
		    if ($serializer_instance_41 == null)
		      new $serializer_41();
		    return $serializer_instance_41;
		  }
		  function ConversationInviteChannel_init_$Init$(seen1, type, from, to, serializationConstructorMarker, $this) {
		    if (!(6 === (6 & seen1))) {
		      throwMissingFieldException(seen1, 6, $serializer_getInstance_41().p1t_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.r1t_1 = 'app';
		    else
		      $this.r1t_1 = type;
		    $this.s1t_1 = from;
		    $this.t1t_1 = to;
		    return $this;
		  }
		  function ConversationInviteChannel_init_$Create$(seen1, type, from, to, serializationConstructorMarker) {
		    return ConversationInviteChannel_init_$Init$(seen1, type, from, to, serializationConstructorMarker, objectCreate(protoOf(ConversationInviteChannel)));
		  }
		  function Companion_38() {
		  }
		  function $serializer_42() {
		    $serializer_instance_42 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInviteRequest.ConversationInviteUser', this, 1);
		    tmp0_serialDesc.rq('name', false);
		    this.u1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_42).xf = function () {
		    return this.u1t_1;
		  };
		  protoOf($serializer_42).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_42).zf = function (decoder) {
		    var tmp0_desc = this.u1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationInviteUser_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_42).v1t = function (encoder, value) {
		    var tmp0_desc = this.u1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.w1t_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_42).yf = function (encoder, value) {
		    return this.v1t(encoder, value instanceof ConversationInviteUser ? value : THROW_CCE());
		  };
		  var $serializer_instance_42;
		  function $serializer_getInstance_42() {
		    if ($serializer_instance_42 == null)
		      new $serializer_42();
		    return $serializer_instance_42;
		  }
		  function ConversationInviteUser_init_$Init$(seen1, name, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_42().u1t_1);
		    }
		    $this.w1t_1 = name;
		    return $this;
		  }
		  function ConversationInviteUser_init_$Create$(seen1, name, serializationConstructorMarker) {
		    return ConversationInviteUser_init_$Init$(seen1, name, serializationConstructorMarker, objectCreate(protoOf(ConversationInviteUser)));
		  }
		  function Companion_39() {
		  }
		  function $serializer_43() {
		    $serializer_instance_43 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInviteRequest.Body', this, 4);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('state', false);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.x1t_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_43).xf = function () {
		    return this.x1t_1;
		  };
		  protoOf($serializer_43).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_42(), $serializer_getInstance_41()];
		  };
		  protoOf($serializer_43).zf = function (decoder) {
		    var tmp0_desc = this.x1t_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_42(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_41(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_42(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_41(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return Body_init_$Create$_10(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_43).y1t = function (encoder, value) {
		    var tmp0_desc = this.x1t_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.z1t_1);
		    tmp1_output.wk(tmp0_desc, 1, value.a1u_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_42(), value.b1u_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_41(), value.c1u_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_43).yf = function (encoder, value) {
		    return this.y1t(encoder, value instanceof Body_10 ? value : THROW_CCE());
		  };
		  var $serializer_instance_43;
		  function $serializer_getInstance_43() {
		    if ($serializer_instance_43 == null)
		      new $serializer_43();
		    return $serializer_instance_43;
		  }
		  function Body_init_$Init$_10(seen1, originating_session, state, user, channel, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_43().x1t_1);
		    }
		    $this.z1t_1 = originating_session;
		    $this.a1u_1 = state;
		    $this.b1u_1 = user;
		    $this.c1u_1 = channel;
		    return $this;
		  }
		  function Body_init_$Create$_10(seen1, originating_session, state, user, channel, serializationConstructorMarker) {
		    return Body_init_$Init$_10(seen1, originating_session, state, user, channel, serializationConstructorMarker, objectCreate(protoOf(Body_10)));
		  }
		  function ConversationInviteTo(type) {
		    type = type === VOID ? 'app' : type;
		    this.l1t_1 = type;
		  }
		  protoOf(ConversationInviteTo).toString = function () {
		    return 'ConversationInviteTo(type=' + this.l1t_1 + ')';
		  };
		  protoOf(ConversationInviteTo).hashCode = function () {
		    return getStringHashCode(this.l1t_1);
		  };
		  protoOf(ConversationInviteTo).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInviteTo))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInviteTo ? other : THROW_CCE();
		    if (!(this.l1t_1 === tmp0_other_with_cast.l1t_1))
		      return false;
		    return true;
		  };
		  function ConversationInviteFrom(type) {
		    type = type === VOID ? 'app' : type;
		    this.o1t_1 = type;
		  }
		  protoOf(ConversationInviteFrom).toString = function () {
		    return 'ConversationInviteFrom(type=' + this.o1t_1 + ')';
		  };
		  protoOf(ConversationInviteFrom).hashCode = function () {
		    return getStringHashCode(this.o1t_1);
		  };
		  protoOf(ConversationInviteFrom).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInviteFrom))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInviteFrom ? other : THROW_CCE();
		    if (!(this.o1t_1 === tmp0_other_with_cast.o1t_1))
		      return false;
		    return true;
		  };
		  function ConversationInviteChannel(type, from, to) {
		    type = type === VOID ? 'app' : type;
		    this.r1t_1 = type;
		    this.s1t_1 = from;
		    this.t1t_1 = to;
		  }
		  protoOf(ConversationInviteChannel).toString = function () {
		    return 'ConversationInviteChannel(type=' + this.r1t_1 + ', from=' + this.s1t_1.toString() + ', to=' + this.t1t_1.toString() + ')';
		  };
		  protoOf(ConversationInviteChannel).hashCode = function () {
		    var result = getStringHashCode(this.r1t_1);
		    result = imul(result, 31) + this.s1t_1.hashCode() | 0;
		    result = imul(result, 31) + this.t1t_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(ConversationInviteChannel).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInviteChannel))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInviteChannel ? other : THROW_CCE();
		    if (!(this.r1t_1 === tmp0_other_with_cast.r1t_1))
		      return false;
		    if (!this.s1t_1.equals(tmp0_other_with_cast.s1t_1))
		      return false;
		    if (!this.t1t_1.equals(tmp0_other_with_cast.t1t_1))
		      return false;
		    return true;
		  };
		  function ConversationInviteUser(name) {
		    this.w1t_1 = name;
		  }
		  protoOf(ConversationInviteUser).toString = function () {
		    return 'ConversationInviteUser(name=' + this.w1t_1 + ')';
		  };
		  protoOf(ConversationInviteUser).hashCode = function () {
		    return getStringHashCode(this.w1t_1);
		  };
		  protoOf(ConversationInviteUser).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInviteUser))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInviteUser ? other : THROW_CCE();
		    if (!(this.w1t_1 === tmp0_other_with_cast.w1t_1))
		      return false;
		    return true;
		  };
		  function Body_10(originating_session, state, user, channel) {
		    this.z1t_1 = originating_session;
		    this.a1u_1 = state;
		    this.b1u_1 = user;
		    this.c1u_1 = channel;
		  }
		  function ConversationInviteRequest(cid, username) {
		    this.d1u_1 = cid;
		    this.e1u_1 = username;
		    this.f1u_1 = new ConversationMembers(this.d1u_1);
		    this.g1u_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(ConversationInviteRequest).o1g = function () {
		    return this.f1u_1;
		  };
		  protoOf(ConversationInviteRequest).p1g = function () {
		    return this.g1u_1;
		  };
		  protoOf(ConversationInviteRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_10(originatingSessionId, 'invited', new ConversationInviteUser(this.e1u_1), new ConversationInviteChannel('app', new ConversationInviteFrom(), new ConversationInviteTo()));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_10), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(ConversationInviteRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(ConversationInvite), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(ConversationInviteRequest).toString = function () {
		    return 'ConversationInviteRequest(cid=' + this.d1u_1 + ', username=' + this.e1u_1 + ')';
		  };
		  protoOf(ConversationInviteRequest).hashCode = function () {
		    var result = getStringHashCode(this.d1u_1);
		    result = imul(result, 31) + getStringHashCode(this.e1u_1) | 0;
		    return result;
		  };
		  protoOf(ConversationInviteRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInviteRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInviteRequest ? other : THROW_CCE();
		    if (!(this.d1u_1 === tmp0_other_with_cast.d1u_1))
		      return false;
		    if (!(this.e1u_1 === tmp0_other_with_cast.e1u_1))
		      return false;
		    return true;
		  };
		  function Companion_40() {
		  }
		  function $serializer_44() {
		    $serializer_instance_44 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.ConversationInvite', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.h1u_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_44).xf = function () {
		    return this.h1u_1;
		  };
		  protoOf($serializer_44).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_44).zf = function (decoder) {
		    var tmp0_desc = this.h1u_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationInvite_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_44).i1u = function (encoder, value) {
		    var tmp0_desc = this.h1u_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.j1u_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_44).yf = function (encoder, value) {
		    return this.i1u(encoder, value instanceof ConversationInvite ? value : THROW_CCE());
		  };
		  var $serializer_instance_44;
		  function $serializer_getInstance_44() {
		    if ($serializer_instance_44 == null)
		      new $serializer_44();
		    return $serializer_instance_44;
		  }
		  function ConversationInvite_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_44().h1u_1);
		    }
		    $this.j1u_1 = id;
		    return $this;
		  }
		  function ConversationInvite_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return ConversationInvite_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(ConversationInvite)));
		  }
		  function ConversationInvite(id) {
		    this.j1u_1 = id;
		  }
		  protoOf(ConversationInvite).toString = function () {
		    return 'ConversationInvite(id=' + this.j1u_1 + ')';
		  };
		  protoOf(ConversationInvite).hashCode = function () {
		    return getStringHashCode(this.j1u_1);
		  };
		  protoOf(ConversationInvite).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInvite))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInvite ? other : THROW_CCE();
		    if (!(this.j1u_1 === tmp0_other_with_cast.j1u_1))
		      return false;
		    return true;
		  };
		  function MemberLeft(cid, mid) {
		    this.k1u_1 = cid;
		    this.l1u_1 = mid;
		  }
		  function ConversationDeleteRequest(cid) {
		    this.m1u_1 = cid;
		    this.n1u_1 = new Conversation_1(this.m1u_1);
		    this.o1u_1 = HTTPMethod_DELETE_getInstance();
		  }
		  protoOf(ConversationDeleteRequest).o1g = function () {
		    return this.n1u_1;
		  };
		  protoOf(ConversationDeleteRequest).p1g = function () {
		    return this.o1u_1;
		  };
		  protoOf(ConversationDeleteRequest).q1g = function (encoder, originatingSessionId) {
		    return '';
		  };
		  protoOf(ConversationDeleteRequest).r1g = function (data, decoder) {
		    return new ConversationDelete(this.m1u_1);
		  };
		  protoOf(ConversationDeleteRequest).toString = function () {
		    return 'ConversationDeleteRequest(cid=' + this.m1u_1 + ')';
		  };
		  protoOf(ConversationDeleteRequest).hashCode = function () {
		    return getStringHashCode(this.m1u_1);
		  };
		  protoOf(ConversationDeleteRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationDeleteRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationDeleteRequest ? other : THROW_CCE();
		    if (!(this.m1u_1 === tmp0_other_with_cast.m1u_1))
		      return false;
		    return true;
		  };
		  function ConversationDelete(cid) {
		    this.p1u_1 = cid;
		  }
		  protoOf(ConversationDelete).toString = function () {
		    return 'ConversationDelete(cid=' + this.p1u_1 + ')';
		  };
		  protoOf(ConversationDelete).hashCode = function () {
		    return getStringHashCode(this.p1u_1);
		  };
		  protoOf(ConversationDelete).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationDelete))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationDelete ? other : THROW_CCE();
		    if (!(this.p1u_1 === tmp0_other_with_cast.p1u_1))
		      return false;
		    return true;
		  };
		  function GetUserConversationsRequest(uid, order, pageSize, cursor, includeCustomData, orderBy) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    includeCustomData = includeCustomData === VOID ? null : includeCustomData;
		    orderBy = orderBy === VOID ? null : orderBy;
		    this.q1u_1 = uid;
		    this.r1u_1 = order;
		    this.s1u_1 = pageSize;
		    this.t1u_1 = cursor;
		    this.u1u_1 = includeCustomData;
		    this.v1u_1 = orderBy;
		    this.w1u_1 = new UserConversations(this.q1u_1);
		    this.x1u_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetUserConversationsRequest).o1g = function () {
		    return this.w1u_1;
		  };
		  protoOf(GetUserConversationsRequest).p1g = function () {
		    return this.x1u_1;
		  };
		  protoOf(GetUserConversationsRequest).s1g = function () {
		    var tmp0_safe_receiver = this.r1u_1;
		    var tmp = to('order', tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d2_1);
		    var tmp1_safe_receiver = this.s1u_1;
		    var tmp_0 = to('page_size', tmp1_safe_receiver == null ? null : tmp1_safe_receiver.toString());
		    var tmp_1 = to('cursor', this.t1u_1);
		    var tmp2_safe_receiver = this.u1u_1;
		    var tmp_2;
		    if (tmp2_safe_receiver == null) {
		      tmp_2 = null;
		    } else {
		      // Inline function 'kotlin.takeIf' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_3;
		      // Inline function 'com.vonage.clientcore.core.actions.GetUserConversationsRequest.queryParams.<anonymous>' call
		      if (tmp2_safe_receiver) {
		        tmp_3 = tmp2_safe_receiver;
		      } else {
		        tmp_3 = null;
		      }
		      tmp_2 = tmp_3;
		    }
		    var tmp3_safe_receiver = tmp_2;
		    var tmp_4 = to('include_custom_data', tmp3_safe_receiver == null ? null : tmp3_safe_receiver.toString());
		    var tmp4_safe_receiver = this.v1u_1;
		    return mapOf([tmp, tmp_0, tmp_1, tmp_4, to('order_by', tmp4_safe_receiver == null ? null : tmp4_safe_receiver.toString())]);
		  };
		  protoOf(GetUserConversationsRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetUserConversations), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetUserConversationsRequest).toString = function () {
		    return 'GetUserConversationsRequest(uid=' + this.q1u_1 + ', order=' + toString_0(this.r1u_1) + ', pageSize=' + this.s1u_1 + ', cursor=' + this.t1u_1 + ', includeCustomData=' + this.u1u_1 + ', orderBy=' + toString_0(this.v1u_1) + ')';
		  };
		  protoOf(GetUserConversationsRequest).hashCode = function () {
		    var result = getStringHashCode(this.q1u_1);
		    result = imul(result, 31) + (this.r1u_1 == null ? 0 : this.r1u_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.s1u_1 == null ? 0 : this.s1u_1) | 0;
		    result = imul(result, 31) + (this.t1u_1 == null ? 0 : getStringHashCode(this.t1u_1)) | 0;
		    result = imul(result, 31) + (this.u1u_1 == null ? 0 : getBooleanHashCode(this.u1u_1)) | 0;
		    result = imul(result, 31) + (this.v1u_1 == null ? 0 : this.v1u_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(GetUserConversationsRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetUserConversationsRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetUserConversationsRequest ? other : THROW_CCE();
		    if (!(this.q1u_1 === tmp0_other_with_cast.q1u_1))
		      return false;
		    if (!equals(this.r1u_1, tmp0_other_with_cast.r1u_1))
		      return false;
		    if (!(this.s1u_1 == tmp0_other_with_cast.s1u_1))
		      return false;
		    if (!(this.t1u_1 == tmp0_other_with_cast.t1u_1))
		      return false;
		    if (!(this.u1u_1 == tmp0_other_with_cast.u1u_1))
		      return false;
		    if (!equals(this.v1u_1, tmp0_other_with_cast.v1u_1))
		      return false;
		    return true;
		  };
		  function Companion_41() {
		    Companion_instance_42 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.y1u_1 = [new ArrayListSerializer($serializer_getInstance_5())];
		  }
		  var Companion_instance_42;
		  function Companion_getInstance_43() {
		    if (Companion_instance_42 == null)
		      new Companion_41();
		    return Companion_instance_42;
		  }
		  function $serializer_45() {
		    $serializer_instance_45 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetUserConversations.UserConversationsEmbedded', this, 1);
		    tmp0_serialDesc.rq('conversations', false);
		    this.z1u_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_45).xf = function () {
		    return this.z1u_1;
		  };
		  protoOf($serializer_45).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [Companion_getInstance_43().y1u_1[0]];
		  };
		  protoOf($serializer_45).zf = function (decoder) {
		    var tmp0_desc = this.z1u_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    var tmp6_cached = Companion_getInstance_43().y1u_1;
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return UserConversationsEmbedded_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_45).a1v = function (encoder, value) {
		    var tmp0_desc = this.z1u_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_43().y1u_1;
		    tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.b1v_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_45).yf = function (encoder, value) {
		    return this.a1v(encoder, value instanceof UserConversationsEmbedded ? value : THROW_CCE());
		  };
		  var $serializer_instance_45;
		  function $serializer_getInstance_45() {
		    if ($serializer_instance_45 == null)
		      new $serializer_45();
		    return $serializer_instance_45;
		  }
		  function UserConversationsEmbedded_init_$Init$(seen1, conversations, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_45().z1u_1);
		    }
		    $this.b1v_1 = conversations;
		    return $this;
		  }
		  function UserConversationsEmbedded_init_$Create$(seen1, conversations, serializationConstructorMarker) {
		    return UserConversationsEmbedded_init_$Init$(seen1, conversations, serializationConstructorMarker, objectCreate(protoOf(UserConversationsEmbedded)));
		  }
		  function UserConversationsEmbedded() {
		  }
		  protoOf(UserConversationsEmbedded).toString = function () {
		    return 'UserConversationsEmbedded(conversations=' + toString(this.b1v_1) + ')';
		  };
		  protoOf(UserConversationsEmbedded).hashCode = function () {
		    return hashCode(this.b1v_1);
		  };
		  protoOf(UserConversationsEmbedded).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UserConversationsEmbedded))
		      return false;
		    var tmp0_other_with_cast = other instanceof UserConversationsEmbedded ? other : THROW_CCE();
		    if (!equals(this.b1v_1, tmp0_other_with_cast.b1v_1))
		      return false;
		    return true;
		  };
		  function Companion_42() {
		  }
		  function $serializer_46() {
		    $serializer_instance_46 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetUserConversations', this, 2);
		    tmp0_serialDesc.rq('_embedded', false);
		    tmp0_serialDesc.rq('_links', false);
		    this.c1v_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_46).xf = function () {
		    return this.c1v_1;
		  };
		  protoOf($serializer_46).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_45(), $serializer_getInstance_9()];
		  };
		  protoOf($serializer_46).zf = function (decoder) {
		    var tmp0_desc = this.c1v_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_45(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_45(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return GetUserConversations_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_46).d1v = function (encoder, value) {
		    var tmp0_desc = this.c1v_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_45(), value.e1v_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_9(), value.f1v_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_46).yf = function (encoder, value) {
		    return this.d1v(encoder, value instanceof GetUserConversations ? value : THROW_CCE());
		  };
		  var $serializer_instance_46;
		  function $serializer_getInstance_46() {
		    if ($serializer_instance_46 == null)
		      new $serializer_46();
		    return $serializer_instance_46;
		  }
		  function GetUserConversations_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_46().c1v_1);
		    }
		    $this.e1v_1 = _embedded;
		    $this.f1v_1 = _links;
		    return $this;
		  }
		  function GetUserConversations_init_$Create$(seen1, _embedded, _links, serializationConstructorMarker) {
		    return GetUserConversations_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, objectCreate(protoOf(GetUserConversations)));
		  }
		  function GetUserConversations(_embedded, _links) {
		    this.e1v_1 = _embedded;
		    this.f1v_1 = _links;
		  }
		  function GetConversationEventsRequest(cid, order, pageSize, cursor, filterGroup, filterGroupVersion, eventType, excludeDeletedEvents, startId) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    eventType = eventType === VOID ? null : eventType;
		    excludeDeletedEvents = excludeDeletedEvents === VOID ? true : excludeDeletedEvents;
		    startId = startId === VOID ? null : startId;
		    this.g1v_1 = cid;
		    this.h1v_1 = order;
		    this.i1v_1 = pageSize;
		    this.j1v_1 = cursor;
		    this.k1v_1 = filterGroup;
		    this.l1v_1 = filterGroupVersion;
		    this.m1v_1 = eventType;
		    this.n1v_1 = excludeDeletedEvents;
		    this.o1v_1 = startId;
		    this.p1v_1 = new ConversationEvents(this.g1v_1);
		    this.q1v_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetConversationEventsRequest).o1g = function () {
		    return this.p1v_1;
		  };
		  protoOf(GetConversationEventsRequest).p1g = function () {
		    return this.q1v_1;
		  };
		  protoOf(GetConversationEventsRequest).s1g = function () {
		    var tmp0_safe_receiver = this.h1v_1;
		    var tmp = to('order', tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d2_1);
		    var tmp1_safe_receiver = this.i1v_1;
		    var tmp_0 = to('page_size', tmp1_safe_receiver == null ? null : tmp1_safe_receiver.toString());
		    var tmp_1 = to('cursor', this.j1v_1);
		    var tmp_2 = to('filter_group_type', this.k1v_1);
		    var tmp_3 = to('filter_group_version', this.l1v_1.toString());
		    var tmp_4 = to('event_type', this.m1v_1);
		    var tmp_5 = to('exclude_deleted_events', this.n1v_1.toString());
		    var tmp2_safe_receiver = this.o1v_1;
		    return mapOf([tmp, tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, to('start_id', tmp2_safe_receiver == null ? null : tmp2_safe_receiver.toString())]);
		  };
		  protoOf(GetConversationEventsRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetConversationEvents), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetConversationEventsRequest).toString = function () {
		    return 'GetConversationEventsRequest(cid=' + this.g1v_1 + ', order=' + toString_0(this.h1v_1) + ', pageSize=' + this.i1v_1 + ', cursor=' + this.j1v_1 + ', filterGroup=' + this.k1v_1 + ', filterGroupVersion=' + this.l1v_1 + ', eventType=' + this.m1v_1 + ', excludeDeletedEvents=' + this.n1v_1 + ', startId=' + this.o1v_1 + ')';
		  };
		  protoOf(GetConversationEventsRequest).hashCode = function () {
		    var result = getStringHashCode(this.g1v_1);
		    result = imul(result, 31) + (this.h1v_1 == null ? 0 : this.h1v_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.i1v_1 == null ? 0 : this.i1v_1) | 0;
		    result = imul(result, 31) + (this.j1v_1 == null ? 0 : getStringHashCode(this.j1v_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k1v_1) | 0;
		    result = imul(result, 31) + this.l1v_1 | 0;
		    result = imul(result, 31) + (this.m1v_1 == null ? 0 : getStringHashCode(this.m1v_1)) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.n1v_1) | 0;
		    result = imul(result, 31) + (this.o1v_1 == null ? 0 : this.o1v_1) | 0;
		    return result;
		  };
		  protoOf(GetConversationEventsRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationEventsRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationEventsRequest ? other : THROW_CCE();
		    if (!(this.g1v_1 === tmp0_other_with_cast.g1v_1))
		      return false;
		    if (!equals(this.h1v_1, tmp0_other_with_cast.h1v_1))
		      return false;
		    if (!(this.i1v_1 == tmp0_other_with_cast.i1v_1))
		      return false;
		    if (!(this.j1v_1 == tmp0_other_with_cast.j1v_1))
		      return false;
		    if (!(this.k1v_1 === tmp0_other_with_cast.k1v_1))
		      return false;
		    if (!(this.l1v_1 === tmp0_other_with_cast.l1v_1))
		      return false;
		    if (!(this.m1v_1 == tmp0_other_with_cast.m1v_1))
		      return false;
		    if (!(this.n1v_1 === tmp0_other_with_cast.n1v_1))
		      return false;
		    if (!(this.o1v_1 == tmp0_other_with_cast.o1v_1))
		      return false;
		    return true;
		  };
		  function Companion_43() {
		    Companion_instance_44 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.r1v_1 = [new ArrayListSerializer(CSConversationEventsSerializer_getInstance())];
		  }
		  var Companion_instance_44;
		  function Companion_getInstance_45() {
		    if (Companion_instance_44 == null)
		      new Companion_43();
		    return Companion_instance_44;
		  }
		  function $serializer_47() {
		    $serializer_instance_47 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationEvents.ConversationEventsEmbedded', this, 1);
		    tmp0_serialDesc.rq('events', false);
		    this.s1v_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_47).xf = function () {
		    return this.s1v_1;
		  };
		  protoOf($serializer_47).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [Companion_getInstance_45().r1v_1[0]];
		  };
		  protoOf($serializer_47).zf = function (decoder) {
		    var tmp0_desc = this.s1v_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    var tmp6_cached = Companion_getInstance_45().r1v_1;
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationEventsEmbedded_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_47).t1v = function (encoder, value) {
		    var tmp0_desc = this.s1v_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_45().r1v_1;
		    tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.u1v_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_47).yf = function (encoder, value) {
		    return this.t1v(encoder, value instanceof ConversationEventsEmbedded ? value : THROW_CCE());
		  };
		  var $serializer_instance_47;
		  function $serializer_getInstance_47() {
		    if ($serializer_instance_47 == null)
		      new $serializer_47();
		    return $serializer_instance_47;
		  }
		  function ConversationEventsEmbedded_init_$Init$(seen1, events, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_47().s1v_1);
		    }
		    $this.u1v_1 = events;
		    return $this;
		  }
		  function ConversationEventsEmbedded_init_$Create$(seen1, events, serializationConstructorMarker) {
		    return ConversationEventsEmbedded_init_$Init$(seen1, events, serializationConstructorMarker, objectCreate(protoOf(ConversationEventsEmbedded)));
		  }
		  function ConversationEventsEmbedded() {
		  }
		  protoOf(ConversationEventsEmbedded).toString = function () {
		    return 'ConversationEventsEmbedded(events=' + toString(this.u1v_1) + ')';
		  };
		  protoOf(ConversationEventsEmbedded).hashCode = function () {
		    return hashCode(this.u1v_1);
		  };
		  protoOf(ConversationEventsEmbedded).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationEventsEmbedded))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationEventsEmbedded ? other : THROW_CCE();
		    if (!equals(this.u1v_1, tmp0_other_with_cast.u1v_1))
		      return false;
		    return true;
		  };
		  function Companion_44() {
		  }
		  function $serializer_48() {
		    $serializer_instance_48 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationEvents', this, 2);
		    tmp0_serialDesc.rq('_embedded', false);
		    tmp0_serialDesc.rq('_links', false);
		    this.v1v_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_48).xf = function () {
		    return this.v1v_1;
		  };
		  protoOf($serializer_48).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_47(), $serializer_getInstance_9()];
		  };
		  protoOf($serializer_48).zf = function (decoder) {
		    var tmp0_desc = this.v1v_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_47(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_47(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return GetConversationEvents_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_48).w1v = function (encoder, value) {
		    var tmp0_desc = this.v1v_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_47(), value.x1v_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_9(), value.y1v_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_48).yf = function (encoder, value) {
		    return this.w1v(encoder, value instanceof GetConversationEvents ? value : THROW_CCE());
		  };
		  var $serializer_instance_48;
		  function $serializer_getInstance_48() {
		    if ($serializer_instance_48 == null)
		      new $serializer_48();
		    return $serializer_instance_48;
		  }
		  function GetConversationEvents_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_48().v1v_1);
		    }
		    $this.x1v_1 = _embedded;
		    $this.y1v_1 = _links;
		    return $this;
		  }
		  function GetConversationEvents_init_$Create$(seen1, _embedded, _links, serializationConstructorMarker) {
		    return GetConversationEvents_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, objectCreate(protoOf(GetConversationEvents)));
		  }
		  function GetConversationEvents(_embedded, _links) {
		    this.x1v_1 = _embedded;
		    this.y1v_1 = _links;
		  }
		  function GetConversationMembersRequest(cid, order, pageSize, cursor) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    this.z1v_1 = cid;
		    this.a1w_1 = order;
		    this.b1w_1 = pageSize;
		    this.c1w_1 = cursor;
		    this.d1w_1 = new ConversationMembers(this.z1v_1);
		    this.e1w_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetConversationMembersRequest).o1g = function () {
		    return this.d1w_1;
		  };
		  protoOf(GetConversationMembersRequest).p1g = function () {
		    return this.e1w_1;
		  };
		  protoOf(GetConversationMembersRequest).s1g = function () {
		    var tmp0_safe_receiver = this.a1w_1;
		    var tmp = to('order', tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d2_1);
		    var tmp1_safe_receiver = this.b1w_1;
		    return mapOf([tmp, to('page_size', tmp1_safe_receiver == null ? null : tmp1_safe_receiver.toString()), to('cursor', this.c1w_1)]);
		  };
		  protoOf(GetConversationMembersRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetConversationMembers), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetConversationMembersRequest).toString = function () {
		    return 'GetConversationMembersRequest(cid=' + this.z1v_1 + ', order=' + toString_0(this.a1w_1) + ', pageSize=' + this.b1w_1 + ', cursor=' + this.c1w_1 + ')';
		  };
		  protoOf(GetConversationMembersRequest).hashCode = function () {
		    var result = getStringHashCode(this.z1v_1);
		    result = imul(result, 31) + (this.a1w_1 == null ? 0 : this.a1w_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.b1w_1 == null ? 0 : this.b1w_1) | 0;
		    result = imul(result, 31) + (this.c1w_1 == null ? 0 : getStringHashCode(this.c1w_1)) | 0;
		    return result;
		  };
		  protoOf(GetConversationMembersRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationMembersRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationMembersRequest ? other : THROW_CCE();
		    if (!(this.z1v_1 === tmp0_other_with_cast.z1v_1))
		      return false;
		    if (!equals(this.a1w_1, tmp0_other_with_cast.a1w_1))
		      return false;
		    if (!(this.b1w_1 == tmp0_other_with_cast.b1w_1))
		      return false;
		    if (!(this.c1w_1 == tmp0_other_with_cast.c1w_1))
		      return false;
		    return true;
		  };
		  function Companion_45() {
		    Companion_instance_46 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.f1w_1 = [new ArrayListSerializer($serializer_getInstance_27())];
		  }
		  var Companion_instance_46;
		  function Companion_getInstance_47() {
		    if (Companion_instance_46 == null)
		      new Companion_45();
		    return Companion_instance_46;
		  }
		  function $serializer_49() {
		    $serializer_instance_49 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationMembers.ConversationMembersEmbedded', this, 1);
		    tmp0_serialDesc.rq('members', false);
		    this.g1w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_49).xf = function () {
		    return this.g1w_1;
		  };
		  protoOf($serializer_49).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [Companion_getInstance_47().f1w_1[0]];
		  };
		  protoOf($serializer_49).zf = function (decoder) {
		    var tmp0_desc = this.g1w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    var tmp6_cached = Companion_getInstance_47().f1w_1;
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return ConversationMembersEmbedded_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_49).h1w = function (encoder, value) {
		    var tmp0_desc = this.g1w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_47().f1w_1;
		    tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.i1w_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_49).yf = function (encoder, value) {
		    return this.h1w(encoder, value instanceof ConversationMembersEmbedded ? value : THROW_CCE());
		  };
		  var $serializer_instance_49;
		  function $serializer_getInstance_49() {
		    if ($serializer_instance_49 == null)
		      new $serializer_49();
		    return $serializer_instance_49;
		  }
		  function ConversationMembersEmbedded_init_$Init$(seen1, members, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_49().g1w_1);
		    }
		    $this.i1w_1 = members;
		    return $this;
		  }
		  function ConversationMembersEmbedded_init_$Create$(seen1, members, serializationConstructorMarker) {
		    return ConversationMembersEmbedded_init_$Init$(seen1, members, serializationConstructorMarker, objectCreate(protoOf(ConversationMembersEmbedded)));
		  }
		  function ConversationMembersEmbedded() {
		  }
		  protoOf(ConversationMembersEmbedded).toString = function () {
		    return 'ConversationMembersEmbedded(members=' + toString(this.i1w_1) + ')';
		  };
		  protoOf(ConversationMembersEmbedded).hashCode = function () {
		    return hashCode(this.i1w_1);
		  };
		  protoOf(ConversationMembersEmbedded).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationMembersEmbedded))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationMembersEmbedded ? other : THROW_CCE();
		    if (!equals(this.i1w_1, tmp0_other_with_cast.i1w_1))
		      return false;
		    return true;
		  };
		  function Companion_46() {
		  }
		  function $serializer_50() {
		    $serializer_instance_50 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetConversationMembers', this, 2);
		    tmp0_serialDesc.rq('_embedded', false);
		    tmp0_serialDesc.rq('_links', false);
		    this.j1w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_50).xf = function () {
		    return this.j1w_1;
		  };
		  protoOf($serializer_50).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_49(), $serializer_getInstance_9()];
		  };
		  protoOf($serializer_50).zf = function (decoder) {
		    var tmp0_desc = this.j1w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_49(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.tj(tmp0_desc, 0, $serializer_getInstance_49(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_9(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return GetConversationMembers_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_50).k1w = function (encoder, value) {
		    var tmp0_desc = this.j1w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_49(), value.l1w_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_9(), value.m1w_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_50).yf = function (encoder, value) {
		    return this.k1w(encoder, value instanceof GetConversationMembers ? value : THROW_CCE());
		  };
		  var $serializer_instance_50;
		  function $serializer_getInstance_50() {
		    if ($serializer_instance_50 == null)
		      new $serializer_50();
		    return $serializer_instance_50;
		  }
		  function GetConversationMembers_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_50().j1w_1);
		    }
		    $this.l1w_1 = _embedded;
		    $this.m1w_1 = _links;
		    return $this;
		  }
		  function GetConversationMembers_init_$Create$(seen1, _embedded, _links, serializationConstructorMarker) {
		    return GetConversationMembers_init_$Init$(seen1, _embedded, _links, serializationConstructorMarker, objectCreate(protoOf(GetConversationMembers)));
		  }
		  function GetConversationMembers(_embedded, _links) {
		    this.l1w_1 = _embedded;
		    this.m1w_1 = _links;
		  }
		  function GetConversationMemberRequest(cid, mid) {
		    this.n1w_1 = cid;
		    this.o1w_1 = mid;
		    this.p1w_1 = new ConversationMember(this.n1w_1, this.o1w_1);
		    this.q1w_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetConversationMemberRequest).o1g = function () {
		    return this.p1w_1;
		  };
		  protoOf(GetConversationMemberRequest).p1g = function () {
		    return this.q1w_1;
		  };
		  protoOf(GetConversationMemberRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetMember), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetConversationMemberRequest).toString = function () {
		    return 'GetConversationMemberRequest(cid=' + this.n1w_1 + ', mid=' + this.o1w_1 + ')';
		  };
		  protoOf(GetConversationMemberRequest).hashCode = function () {
		    var result = getStringHashCode(this.n1w_1);
		    result = imul(result, 31) + getStringHashCode(this.o1w_1) | 0;
		    return result;
		  };
		  protoOf(GetConversationMemberRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationMemberRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationMemberRequest ? other : THROW_CCE();
		    if (!(this.n1w_1 === tmp0_other_with_cast.n1w_1))
		      return false;
		    if (!(this.o1w_1 === tmp0_other_with_cast.o1w_1))
		      return false;
		    return true;
		  };
		  function Companion_47() {
		  }
		  function $serializer_51() {
		    $serializer_instance_51 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.GetUser', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('display_name', true);
		    tmp0_serialDesc.rq('channels', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    tmp0_serialDesc.rq('image_url', true);
		    tmp0_serialDesc.rq('properties', true);
		    this.r1w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_51).xf = function () {
		    return this.r1w_1;
		  };
		  protoOf($serializer_51).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_156()), get_nullable($serializer_getInstance_162()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_28())];
		  };
		  protoOf($serializer_51).zf = function (decoder) {
		    var tmp0_desc = this.r1w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, $serializer_getInstance_156(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, $serializer_getInstance_162(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, $serializer_getInstance_28(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, $serializer_getInstance_156(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, $serializer_getInstance_162(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, $serializer_getInstance_28(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return GetUser_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_51).s1w = function (encoder, value) {
		    var tmp0_desc = this.r1w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.t1w_1);
		    tmp1_output.wk(tmp0_desc, 1, value.u1w_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.v1w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.v1w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.w1w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, $serializer_getInstance_156(), value.w1w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.x1w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, $serializer_getInstance_162(), value.x1w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.y1w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, StringSerializer_getInstance(), value.y1w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.z1w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, $serializer_getInstance_28(), value.z1w_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_51).yf = function (encoder, value) {
		    return this.s1w(encoder, value instanceof GetUser ? value : THROW_CCE());
		  };
		  var $serializer_instance_51;
		  function $serializer_getInstance_51() {
		    if ($serializer_instance_51 == null)
		      new $serializer_51();
		    return $serializer_instance_51;
		  }
		  function GetUser_init_$Init$(seen1, id, name, display_name, channels, timestamp, image_url, properties, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_51().r1w_1);
		    }
		    $this.t1w_1 = id;
		    $this.u1w_1 = name;
		    if (0 === (seen1 & 4))
		      $this.v1w_1 = null;
		    else
		      $this.v1w_1 = display_name;
		    if (0 === (seen1 & 8))
		      $this.w1w_1 = null;
		    else
		      $this.w1w_1 = channels;
		    if (0 === (seen1 & 16))
		      $this.x1w_1 = null;
		    else
		      $this.x1w_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.y1w_1 = null;
		    else
		      $this.y1w_1 = image_url;
		    if (0 === (seen1 & 64))
		      $this.z1w_1 = null;
		    else
		      $this.z1w_1 = properties;
		    return $this;
		  }
		  function GetUser_init_$Create$(seen1, id, name, display_name, channels, timestamp, image_url, properties, serializationConstructorMarker) {
		    return GetUser_init_$Init$(seen1, id, name, display_name, channels, timestamp, image_url, properties, serializationConstructorMarker, objectCreate(protoOf(GetUser)));
		  }
		  function GetUser(id, name, display_name, channels, timestamp, image_url, properties) {
		    display_name = display_name === VOID ? null : display_name;
		    channels = channels === VOID ? null : channels;
		    timestamp = timestamp === VOID ? null : timestamp;
		    image_url = image_url === VOID ? null : image_url;
		    properties = properties === VOID ? null : properties;
		    this.t1w_1 = id;
		    this.u1w_1 = name;
		    this.v1w_1 = display_name;
		    this.w1w_1 = channels;
		    this.x1w_1 = timestamp;
		    this.y1w_1 = image_url;
		    this.z1w_1 = properties;
		  }
		  protoOf(GetUser).a1x = function () {
		    var tmp0_safe_receiver = this.z1w_1;
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g1q_1;
		    var tmp;
		    if (tmp1_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.takeUnless' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_0;
		      // Inline function 'com.vonage.clientcore.core.actions.GetUser.toUser.<anonymous>' call
		      if (!tmp1_safe_receiver.n()) {
		        tmp_0 = tmp1_safe_receiver;
		      } else {
		        tmp_0 = null;
		      }
		      tmp = tmp_0;
		    }
		    var tmp2_safe_receiver = tmp;
		    return new User(this.t1w_1, this.u1w_1, this.v1w_1, this.w1w_1, this.x1w_1, this.y1w_1, tmp2_safe_receiver == null ? null : tmp2_safe_receiver.toString());
		  };
		  function PostConversationEventRequestBody() {
		  }
		  function Companion_48() {
		  }
		  function $serializer_52() {
		    $serializer_instance_52 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostConversationEvent', this, 1);
		    tmp0_serialDesc.rq('timestamp', false);
		    this.b1x_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_52).xf = function () {
		    return this.b1x_1;
		  };
		  protoOf($serializer_52).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_52).zf = function (decoder) {
		    var tmp0_desc = this.b1x_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return PostConversationEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_52).c1x = function (encoder, value) {
		    var tmp0_desc = this.b1x_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.d1x_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_52).yf = function (encoder, value) {
		    return this.c1x(encoder, value instanceof PostConversationEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_52;
		  function $serializer_getInstance_52() {
		    if ($serializer_instance_52 == null)
		      new $serializer_52();
		    return $serializer_instance_52;
		  }
		  function PostConversationEvent_init_$Init$(seen1, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_52().b1x_1);
		    }
		    $this.d1x_1 = timestamp;
		    return $this;
		  }
		  function PostConversationEvent_init_$Create$(seen1, timestamp, serializationConstructorMarker) {
		    return PostConversationEvent_init_$Init$(seen1, timestamp, serializationConstructorMarker, objectCreate(protoOf(PostConversationEvent)));
		  }
		  function PostConversationEvent(timestamp) {
		    this.d1x_1 = timestamp;
		  }
		  protoOf(PostConversationEvent).toString = function () {
		    return 'PostConversationEvent(timestamp=' + this.d1x_1 + ')';
		  };
		  protoOf(PostConversationEvent).hashCode = function () {
		    return getStringHashCode(this.d1x_1);
		  };
		  protoOf(PostConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostConversationEvent ? other : THROW_CCE();
		    if (!(this.d1x_1 === tmp0_other_with_cast.d1x_1))
		      return false;
		    return true;
		  };
		  function DeleteConversationEventRequest(eventId, cid, mid) {
		    this.e1x_1 = eventId;
		    this.f1x_1 = cid;
		    this.g1x_1 = mid;
		    this.h1x_1 = new ConversationEvent(this.f1x_1, this.e1x_1.toString());
		    this.i1x_1 = HTTPMethod_DELETE_getInstance();
		  }
		  protoOf(DeleteConversationEventRequest).o1g = function () {
		    return this.h1x_1;
		  };
		  protoOf(DeleteConversationEventRequest).p1g = function () {
		    return this.i1x_1;
		  };
		  protoOf(DeleteConversationEventRequest).s1g = function () {
		    return mapOf_0(to('from', this.g1x_1));
		  };
		  protoOf(DeleteConversationEventRequest).r1g = function (data, decoder) {
		    return new DeleteConversationEvent();
		  };
		  protoOf(DeleteConversationEventRequest).toString = function () {
		    return 'DeleteConversationEventRequest(eventId=' + this.e1x_1 + ', cid=' + this.f1x_1 + ', mid=' + this.g1x_1 + ')';
		  };
		  protoOf(DeleteConversationEventRequest).hashCode = function () {
		    var result = this.e1x_1;
		    result = imul(result, 31) + getStringHashCode(this.f1x_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g1x_1) | 0;
		    return result;
		  };
		  protoOf(DeleteConversationEventRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof DeleteConversationEventRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof DeleteConversationEventRequest ? other : THROW_CCE();
		    if (!(this.e1x_1 === tmp0_other_with_cast.e1x_1))
		      return false;
		    if (!(this.f1x_1 === tmp0_other_with_cast.f1x_1))
		      return false;
		    if (!(this.g1x_1 === tmp0_other_with_cast.g1x_1))
		      return false;
		    return true;
		  };
		  function Companion_49() {
		  }
		  function $serializer_53() {
		    $serializer_instance_53 = this;
		    this.j1x_1 = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.DeleteConversationEvent', this, 0);
		  }
		  protoOf($serializer_53).xf = function () {
		    return this.j1x_1;
		  };
		  protoOf($serializer_53).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_53).zf = function (decoder) {
		    var tmp0_desc = this.j1x_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp4_input = decoder.hj(tmp0_desc);
		    if (!tmp4_input.xj())
		      while (tmp1_flag) {
		        tmp2_index = tmp4_input.yj(tmp0_desc);
		        if (tmp2_index === -1)
		          tmp1_flag = false;
		        else
		          throw UnknownFieldException_init_$Create$(tmp2_index);
		      }
		    tmp4_input.ij(tmp0_desc);
		    return DeleteConversationEvent_init_$Create$(0, null);
		  };
		  protoOf($serializer_53).k1x = function (encoder, value) {
		    var tmp0_desc = this.j1x_1;
		    encoder.hj(tmp0_desc).ij(tmp0_desc);
		  };
		  protoOf($serializer_53).yf = function (encoder, value) {
		    return this.k1x(encoder, value instanceof DeleteConversationEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_53;
		  function $serializer_getInstance_53() {
		    if ($serializer_instance_53 == null)
		      new $serializer_53();
		    return $serializer_instance_53;
		  }
		  function DeleteConversationEvent_init_$Init$(seen1, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_53().j1x_1);
		    }
		    return $this;
		  }
		  function DeleteConversationEvent_init_$Create$(seen1, serializationConstructorMarker) {
		    return DeleteConversationEvent_init_$Init$(seen1, serializationConstructorMarker, objectCreate(protoOf(DeleteConversationEvent)));
		  }
		  function DeleteConversationEvent() {
		  }
		  function Companion_50() {
		  }
		  function $serializer_54() {
		    $serializer_instance_54 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.Embedded', this, 2);
		    tmp0_serialDesc.rq('from_member', true);
		    tmp0_serialDesc.rq('from_user', true);
		    this.l1x_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_54).xf = function () {
		    return this.l1x_1;
		  };
		  protoOf($serializer_54).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable($serializer_getInstance_56()), get_nullable($serializer_getInstance_55())];
		  };
		  protoOf($serializer_54).zf = function (decoder) {
		    var tmp0_desc = this.l1x_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, $serializer_getInstance_56(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, $serializer_getInstance_55(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, $serializer_getInstance_56(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, $serializer_getInstance_55(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return Embedded_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_54).m1x = function (encoder, value) {
		    var tmp0_desc = this.l1x_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.n1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, $serializer_getInstance_56(), value.n1x_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.o1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, $serializer_getInstance_55(), value.o1x_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_54).yf = function (encoder, value) {
		    return this.m1x(encoder, value instanceof Embedded ? value : THROW_CCE());
		  };
		  var $serializer_instance_54;
		  function $serializer_getInstance_54() {
		    if ($serializer_instance_54 == null)
		      new $serializer_54();
		    return $serializer_instance_54;
		  }
		  function Embedded_init_$Init$(seen1, from_member, from_user, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_54().l1x_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.n1x_1 = null;
		    else
		      $this.n1x_1 = from_member;
		    if (0 === (seen1 & 2))
		      $this.o1x_1 = null;
		    else
		      $this.o1x_1 = from_user;
		    return $this;
		  }
		  function Embedded_init_$Create$(seen1, from_member, from_user, serializationConstructorMarker) {
		    return Embedded_init_$Init$(seen1, from_member, from_user, serializationConstructorMarker, objectCreate(protoOf(Embedded)));
		  }
		  function Embedded(from_member, from_user) {
		    from_member = from_member === VOID ? null : from_member;
		    from_user = from_user === VOID ? null : from_user;
		    this.n1x_1 = from_member;
		    this.o1x_1 = from_user;
		  }
		  protoOf(Embedded).toString = function () {
		    return 'Embedded(from_member=' + toString_0(this.n1x_1) + ', from_user=' + toString_0(this.o1x_1) + ')';
		  };
		  protoOf(Embedded).hashCode = function () {
		    var result = this.n1x_1 == null ? 0 : hashCode(this.n1x_1);
		    result = imul(result, 31) + (this.o1x_1 == null ? 0 : hashCode(this.o1x_1)) | 0;
		    return result;
		  };
		  protoOf(Embedded).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Embedded))
		      return false;
		    var tmp0_other_with_cast = other instanceof Embedded ? other : THROW_CCE();
		    if (!equals(this.n1x_1, tmp0_other_with_cast.n1x_1))
		      return false;
		    if (!equals(this.o1x_1, tmp0_other_with_cast.o1x_1))
		      return false;
		    return true;
		  };
		  function $serializer_55() {
		    $serializer_instance_55 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.FromUser', this, 5);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('display_name', true);
		    tmp0_serialDesc.rq('image_url', true);
		    tmp0_serialDesc.rq('custom_data', true);
		    this.p1x_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_55).xf = function () {
		    return this.p1x_1;
		  };
		  protoOf($serializer_55).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(JsonObjectSerializer_getInstance())];
		  };
		  protoOf($serializer_55).zf = function (decoder) {
		    var tmp0_desc = this.p1x_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, JsonObjectSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, JsonObjectSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return FromUser_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_55).q1x = function (encoder, value) {
		    var tmp0_desc = this.p1x_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.r1x_1);
		    tmp1_output.wk(tmp0_desc, 1, value.s1x_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.t1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.t1x_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.u1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.u1x_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.v1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, JsonObjectSerializer_getInstance(), value.v1x_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_55).yf = function (encoder, value) {
		    return this.q1x(encoder, value instanceof FromUser ? value : THROW_CCE());
		  };
		  var $serializer_instance_55;
		  function $serializer_getInstance_55() {
		    if ($serializer_instance_55 == null)
		      new $serializer_55();
		    return $serializer_instance_55;
		  }
		  function FromUser_init_$Init$(seen1, id, name, display_name, image_url, custom_data, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_55().p1x_1);
		    }
		    $this.r1x_1 = id;
		    $this.s1x_1 = name;
		    if (0 === (seen1 & 4))
		      $this.t1x_1 = null;
		    else
		      $this.t1x_1 = display_name;
		    if (0 === (seen1 & 8))
		      $this.u1x_1 = null;
		    else
		      $this.u1x_1 = image_url;
		    if (0 === (seen1 & 16))
		      $this.v1x_1 = null;
		    else
		      $this.v1x_1 = custom_data;
		    return $this;
		  }
		  function FromUser_init_$Create$(seen1, id, name, display_name, image_url, custom_data, serializationConstructorMarker) {
		    return FromUser_init_$Init$(seen1, id, name, display_name, image_url, custom_data, serializationConstructorMarker, objectCreate(protoOf(FromUser)));
		  }
		  function FromUser() {
		  }
		  protoOf(FromUser).a1x = function () {
		    var tmp0_safe_receiver = this.v1x_1;
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.takeUnless' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_0;
		      // Inline function 'com.vonage.clientcore.core.actions.FromUser.toUser.<anonymous>' call
		      if (!tmp0_safe_receiver.n()) {
		        tmp_0 = tmp0_safe_receiver;
		      } else {
		        tmp_0 = null;
		      }
		      tmp = tmp_0;
		    }
		    var tmp1_safe_receiver = tmp;
		    return new User(this.r1x_1, this.s1x_1, this.t1x_1, VOID, VOID, this.u1x_1, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.toString());
		  };
		  function $serializer_56() {
		    $serializer_instance_56 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.FromMember', this, 3);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('name', true);
		    tmp0_serialDesc.rq('display_name', true);
		    this.w1x_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_56).xf = function () {
		    return this.w1x_1;
		  };
		  protoOf($serializer_56).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_56).zf = function (decoder) {
		    var tmp0_desc = this.w1x_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return FromMember_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_56).x1x = function (encoder, value) {
		    var tmp0_desc = this.w1x_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.y1x_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.z1x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.z1x_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.a1y_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.a1y_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_56).yf = function (encoder, value) {
		    return this.x1x(encoder, value instanceof FromMember ? value : THROW_CCE());
		  };
		  var $serializer_instance_56;
		  function $serializer_getInstance_56() {
		    if ($serializer_instance_56 == null)
		      new $serializer_56();
		    return $serializer_instance_56;
		  }
		  function FromMember_init_$Init$(seen1, id, name, display_name, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_56().w1x_1);
		    }
		    $this.y1x_1 = id;
		    if (0 === (seen1 & 2))
		      $this.z1x_1 = null;
		    else
		      $this.z1x_1 = name;
		    if (0 === (seen1 & 4))
		      $this.a1y_1 = null;
		    else
		      $this.a1y_1 = display_name;
		    return $this;
		  }
		  function FromMember_init_$Create$(seen1, id, name, display_name, serializationConstructorMarker) {
		    return FromMember_init_$Init$(seen1, id, name, display_name, serializationConstructorMarker, objectCreate(protoOf(FromMember)));
		  }
		  function FromMember() {
		  }
		  function OptionSerializer(valueSerializer) {
		    this.b1y_1 = valueSerializer;
		    this.c1y_1 = this.b1y_1.xf();
		  }
		  protoOf(OptionSerializer).xf = function () {
		    return this.c1y_1;
		  };
		  protoOf(OptionSerializer).d1y = function (encoder, value) {
		    if (value instanceof Some) {
		      encoder.zk(this.b1y_1, value.e1y_1);
		    }
		  };
		  protoOf(OptionSerializer).yf = function (encoder, value) {
		    return this.d1y(encoder, value instanceof Option ? value : THROW_CCE());
		  };
		  protoOf(OptionSerializer).zf = function (decoder) {
		    return new Some(decoder.gj(this.b1y_1));
		  };
		  function GetUserRequest(userIdOrName) {
		    this.f1y_1 = userIdOrName;
		    this.g1y_1 = new User_0(this.f1y_1);
		    this.h1y_1 = HTTPMethod_GET_getInstance();
		  }
		  protoOf(GetUserRequest).o1g = function () {
		    return this.g1y_1;
		  };
		  protoOf(GetUserRequest).p1g = function () {
		    return this.h1y_1;
		  };
		  protoOf(GetUserRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(GetUser), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(GetUserRequest).toString = function () {
		    return 'GetUserRequest(userIdOrName=' + this.f1y_1 + ')';
		  };
		  protoOf(GetUserRequest).hashCode = function () {
		    return getStringHashCode(this.f1y_1);
		  };
		  protoOf(GetUserRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetUserRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetUserRequest ? other : THROW_CCE();
		    if (!(this.f1y_1 === tmp0_other_with_cast.f1y_1))
		      return false;
		    return true;
		  };
		  function ApiRequest() {
		  }
		  function Companion_51() {
		  }
		  function $serializer_57() {
		    $serializer_instance_57 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCStatsReportRequest.RTCUpdateStatsReport', this, 15);
		    tmp0_serialDesc.rq('audioRecvPackets', false);
		    tmp0_serialDesc.rq('audioRecvPacketsLost', false);
		    tmp0_serialDesc.rq('audioRecvBytes', false);
		    tmp0_serialDesc.rq('audioRecvJitter', false);
		    tmp0_serialDesc.rq('audioSentPackets', false);
		    tmp0_serialDesc.rq('audioSentBytes', false);
		    tmp0_serialDesc.rq('audioSentPacketsLost', false);
		    tmp0_serialDesc.rq('audioRtt', false);
		    tmp0_serialDesc.rq('audioSentJitter', false);
		    tmp0_serialDesc.rq('networkMos', false);
		    tmp0_serialDesc.rq('legId', false);
		    tmp0_serialDesc.rq('apiKey', false);
		    tmp0_serialDesc.rq('applicationId', false);
		    tmp0_serialDesc.rq('conversationId', false);
		    tmp0_serialDesc.rq('conversationName', false);
		    this.i1y_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_57).xf = function () {
		    return this.i1y_1;
		  };
		  protoOf($serializer_57).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [LongSerializer_getInstance(), IntSerializer_getInstance(), LongSerializer_getInstance(), DoubleSerializer_getInstance(), LongSerializer_getInstance(), LongSerializer_getInstance(), IntSerializer_getInstance(), DoubleSerializer_getInstance(), DoubleSerializer_getInstance(), DoubleSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_57).zf = function (decoder) {
		    var tmp0_desc = this.i1y_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = new Long(0, 0);
		    var tmp5_local1 = 0;
		    var tmp6_local2 = new Long(0, 0);
		    var tmp7_local3 = 0.0;
		    var tmp8_local4 = new Long(0, 0);
		    var tmp9_local5 = new Long(0, 0);
		    var tmp10_local6 = 0;
		    var tmp11_local7 = 0.0;
		    var tmp12_local8 = 0.0;
		    var tmp13_local9 = 0.0;
		    var tmp14_local10 = null;
		    var tmp15_local11 = null;
		    var tmp16_local12 = null;
		    var tmp17_local13 = null;
		    var tmp18_local14 = null;
		    var tmp19_input = decoder.hj(tmp0_desc);
		    if (tmp19_input.xj()) {
		      tmp4_local0 = tmp19_input.nj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp19_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp19_input.nj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp19_input.pj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp19_input.nj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp19_input.nj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp19_input.mj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp19_input.pj(tmp0_desc, 7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp19_input.pj(tmp0_desc, 8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		      tmp13_local9 = tmp19_input.pj(tmp0_desc, 9);
		      tmp3_bitMask0 = tmp3_bitMask0 | 512;
		      tmp14_local10 = tmp19_input.rj(tmp0_desc, 10);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		      tmp15_local11 = tmp19_input.rj(tmp0_desc, 11);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2048;
		      tmp16_local12 = tmp19_input.rj(tmp0_desc, 12);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4096;
		      tmp17_local13 = tmp19_input.rj(tmp0_desc, 13);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8192;
		      tmp18_local14 = tmp19_input.rj(tmp0_desc, 14);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16384;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp19_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp19_input.nj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp19_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp19_input.nj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp19_input.pj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp19_input.nj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp19_input.nj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp19_input.mj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp19_input.pj(tmp0_desc, 7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp19_input.pj(tmp0_desc, 8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          case 9:
		            tmp13_local9 = tmp19_input.pj(tmp0_desc, 9);
		            tmp3_bitMask0 = tmp3_bitMask0 | 512;
		            break;
		          case 10:
		            tmp14_local10 = tmp19_input.rj(tmp0_desc, 10);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		            break;
		          case 11:
		            tmp15_local11 = tmp19_input.rj(tmp0_desc, 11);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2048;
		            break;
		          case 12:
		            tmp16_local12 = tmp19_input.rj(tmp0_desc, 12);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4096;
		            break;
		          case 13:
		            tmp17_local13 = tmp19_input.rj(tmp0_desc, 13);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8192;
		            break;
		          case 14:
		            tmp18_local14 = tmp19_input.rj(tmp0_desc, 14);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16384;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp19_input.ij(tmp0_desc);
		    return RTCUpdateStatsReport_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, tmp15_local11, tmp16_local12, tmp17_local13, tmp18_local14, null);
		  };
		  protoOf($serializer_57).j1y = function (encoder, value) {
		    var tmp0_desc = this.i1y_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.sk(tmp0_desc, 0, value.k1y_1);
		    tmp1_output.rk(tmp0_desc, 1, value.l1y_1);
		    tmp1_output.sk(tmp0_desc, 2, value.m1y_1);
		    tmp1_output.uk(tmp0_desc, 3, value.n1y_1);
		    tmp1_output.sk(tmp0_desc, 4, value.o1y_1);
		    tmp1_output.sk(tmp0_desc, 5, value.p1y_1);
		    tmp1_output.rk(tmp0_desc, 6, value.q1y_1);
		    tmp1_output.uk(tmp0_desc, 7, value.r1y_1);
		    tmp1_output.uk(tmp0_desc, 8, value.s1y_1);
		    tmp1_output.uk(tmp0_desc, 9, value.t1y_1);
		    tmp1_output.wk(tmp0_desc, 10, value.u1y_1);
		    tmp1_output.wk(tmp0_desc, 11, value.v1y_1);
		    tmp1_output.wk(tmp0_desc, 12, value.w1y_1);
		    tmp1_output.wk(tmp0_desc, 13, value.x1y_1);
		    tmp1_output.wk(tmp0_desc, 14, value.y1y_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_57).yf = function (encoder, value) {
		    return this.j1y(encoder, value instanceof RTCUpdateStatsReport ? value : THROW_CCE());
		  };
		  var $serializer_instance_57;
		  function $serializer_getInstance_57() {
		    if ($serializer_instance_57 == null)
		      new $serializer_57();
		    return $serializer_instance_57;
		  }
		  function RTCUpdateStatsReport_init_$Init$(seen1, audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter, networkMos, legId, apiKey, applicationId, conversationId, conversationName, serializationConstructorMarker, $this) {
		    if (!(32767 === (32767 & seen1))) {
		      throwMissingFieldException(seen1, 32767, $serializer_getInstance_57().i1y_1);
		    }
		    $this.k1y_1 = audioRecvPackets;
		    $this.l1y_1 = audioRecvPacketsLost;
		    $this.m1y_1 = audioRecvBytes;
		    $this.n1y_1 = audioRecvJitter;
		    $this.o1y_1 = audioSentPackets;
		    $this.p1y_1 = audioSentBytes;
		    $this.q1y_1 = audioSentPacketsLost;
		    $this.r1y_1 = audioRtt;
		    $this.s1y_1 = audioSentJitter;
		    $this.t1y_1 = networkMos;
		    $this.u1y_1 = legId;
		    $this.v1y_1 = apiKey;
		    $this.w1y_1 = applicationId;
		    $this.x1y_1 = conversationId;
		    $this.y1y_1 = conversationName;
		    return $this;
		  }
		  function RTCUpdateStatsReport_init_$Create$(seen1, audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter, networkMos, legId, apiKey, applicationId, conversationId, conversationName, serializationConstructorMarker) {
		    return RTCUpdateStatsReport_init_$Init$(seen1, audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter, networkMos, legId, apiKey, applicationId, conversationId, conversationName, serializationConstructorMarker, objectCreate(protoOf(RTCUpdateStatsReport)));
		  }
		  function RTCUpdateStatsReport(audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter, networkMos, legId, apiKey, applicationId, conversationId, conversationName) {
		    this.k1y_1 = audioRecvPackets;
		    this.l1y_1 = audioRecvPacketsLost;
		    this.m1y_1 = audioRecvBytes;
		    this.n1y_1 = audioRecvJitter;
		    this.o1y_1 = audioSentPackets;
		    this.p1y_1 = audioSentBytes;
		    this.q1y_1 = audioSentPacketsLost;
		    this.r1y_1 = audioRtt;
		    this.s1y_1 = audioSentJitter;
		    this.t1y_1 = networkMos;
		    this.u1y_1 = legId;
		    this.v1y_1 = apiKey;
		    this.w1y_1 = applicationId;
		    this.x1y_1 = conversationId;
		    this.y1y_1 = conversationName;
		  }
		  protoOf(RTCUpdateStatsReport).toString = function () {
		    return 'RTCUpdateStatsReport(audioRecvPackets=' + this.k1y_1.toString() + ', audioRecvPacketsLost=' + this.l1y_1 + ', audioRecvBytes=' + this.m1y_1.toString() + ', audioRecvJitter=' + this.n1y_1 + ', audioSentPackets=' + this.o1y_1.toString() + ', audioSentBytes=' + this.p1y_1.toString() + ', audioSentPacketsLost=' + this.q1y_1 + ', audioRtt=' + this.r1y_1 + ', audioSentJitter=' + this.s1y_1 + ', networkMos=' + this.t1y_1 + ', legId=' + this.u1y_1 + ', apiKey=' + this.v1y_1 + ', applicationId=' + this.w1y_1 + ', conversationId=' + this.x1y_1 + ', conversationName=' + this.y1y_1 + ')';
		  };
		  protoOf(RTCUpdateStatsReport).hashCode = function () {
		    var result = this.k1y_1.hashCode();
		    result = imul(result, 31) + this.l1y_1 | 0;
		    result = imul(result, 31) + this.m1y_1.hashCode() | 0;
		    result = imul(result, 31) + getNumberHashCode(this.n1y_1) | 0;
		    result = imul(result, 31) + this.o1y_1.hashCode() | 0;
		    result = imul(result, 31) + this.p1y_1.hashCode() | 0;
		    result = imul(result, 31) + this.q1y_1 | 0;
		    result = imul(result, 31) + getNumberHashCode(this.r1y_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.s1y_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.t1y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u1y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.v1y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w1y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x1y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.y1y_1) | 0;
		    return result;
		  };
		  protoOf(RTCUpdateStatsReport).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCUpdateStatsReport))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCUpdateStatsReport ? other : THROW_CCE();
		    if (!this.k1y_1.equals(tmp0_other_with_cast.k1y_1))
		      return false;
		    if (!(this.l1y_1 === tmp0_other_with_cast.l1y_1))
		      return false;
		    if (!this.m1y_1.equals(tmp0_other_with_cast.m1y_1))
		      return false;
		    if (!equals(this.n1y_1, tmp0_other_with_cast.n1y_1))
		      return false;
		    if (!this.o1y_1.equals(tmp0_other_with_cast.o1y_1))
		      return false;
		    if (!this.p1y_1.equals(tmp0_other_with_cast.p1y_1))
		      return false;
		    if (!(this.q1y_1 === tmp0_other_with_cast.q1y_1))
		      return false;
		    if (!equals(this.r1y_1, tmp0_other_with_cast.r1y_1))
		      return false;
		    if (!equals(this.s1y_1, tmp0_other_with_cast.s1y_1))
		      return false;
		    if (!equals(this.t1y_1, tmp0_other_with_cast.t1y_1))
		      return false;
		    if (!(this.u1y_1 === tmp0_other_with_cast.u1y_1))
		      return false;
		    if (!(this.v1y_1 === tmp0_other_with_cast.v1y_1))
		      return false;
		    if (!(this.w1y_1 === tmp0_other_with_cast.w1y_1))
		      return false;
		    if (!(this.x1y_1 === tmp0_other_with_cast.x1y_1))
		      return false;
		    if (!(this.y1y_1 === tmp0_other_with_cast.y1y_1))
		      return false;
		    return true;
		  };
		  function RTCStatsReportRequest(statsReport) {
		    this.z1y_1 = statsReport;
		    this.a1z_1 = RTCStats_getInstance();
		    this.b1z_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(RTCStatsReportRequest).o1g = function () {
		    return this.a1z_1;
		  };
		  protoOf(RTCStatsReportRequest).p1g = function () {
		    return this.b1z_1;
		  };
		  protoOf(RTCStatsReportRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = this.z1y_1;
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(RTCUpdateStatsReport), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(RTCStatsReportRequest).r1g = function (data, decoder) {
		    return new RTCStatsReportResponse();
		  };
		  function ApiResponse() {
		  }
		  function Companion_52() {
		  }
		  function $serializer_58() {
		    $serializer_instance_58 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostLegRequest.PostLegBody', this, 1);
		    tmp0_serialDesc.rq('offer', false);
		    this.c1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_58).xf = function () {
		    return this.c1z_1;
		  };
		  protoOf($serializer_58).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_59()];
		  };
		  protoOf($serializer_58).zf = function (decoder) {
		    var tmp0_desc = this.c1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_59(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_59(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return PostLegBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_58).d1z = function (encoder, value) {
		    var tmp0_desc = this.c1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_59(), value.e1z_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_58).yf = function (encoder, value) {
		    return this.d1z(encoder, value instanceof PostLegBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_58;
		  function $serializer_getInstance_58() {
		    if ($serializer_instance_58 == null)
		      new $serializer_58();
		    return $serializer_instance_58;
		  }
		  function PostLegBody_init_$Init$(seen1, offer, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_58().c1z_1);
		    }
		    $this.e1z_1 = offer;
		    return $this;
		  }
		  function PostLegBody_init_$Create$(seen1, offer, serializationConstructorMarker) {
		    return PostLegBody_init_$Init$(seen1, offer, serializationConstructorMarker, objectCreate(protoOf(PostLegBody)));
		  }
		  function Companion_53() {
		  }
		  function $serializer_59() {
		    $serializer_instance_59 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostLegRequest.PostLegOffer', this, 2);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('sdp', false);
		    this.f1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_59).xf = function () {
		    return this.f1z_1;
		  };
		  protoOf($serializer_59).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_59).zf = function (decoder) {
		    var tmp0_desc = this.f1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return PostLegOffer_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_59).g1z = function (encoder, value) {
		    var tmp0_desc = this.f1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.h1z_1);
		    tmp1_output.wk(tmp0_desc, 1, value.i1z_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_59).yf = function (encoder, value) {
		    return this.g1z(encoder, value instanceof PostLegOffer ? value : THROW_CCE());
		  };
		  var $serializer_instance_59;
		  function $serializer_getInstance_59() {
		    if ($serializer_instance_59 == null)
		      new $serializer_59();
		    return $serializer_instance_59;
		  }
		  function PostLegOffer_init_$Init$(seen1, type, sdp, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_59().f1z_1);
		    }
		    $this.h1z_1 = type;
		    $this.i1z_1 = sdp;
		    return $this;
		  }
		  function PostLegOffer_init_$Create$(seen1, type, sdp, serializationConstructorMarker) {
		    return PostLegOffer_init_$Init$(seen1, type, sdp, serializationConstructorMarker, objectCreate(protoOf(PostLegOffer)));
		  }
		  function Companion_54() {
		  }
		  function $serializer_60() {
		    $serializer_instance_60 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostLegRequest.Body', this, 2);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('body', false);
		    this.j1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_60).xf = function () {
		    return this.j1z_1;
		  };
		  protoOf($serializer_60).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_58()];
		  };
		  protoOf($serializer_60).zf = function (decoder) {
		    var tmp0_desc = this.j1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_58(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_58(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return Body_init_$Create$_11(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_60).k1z = function (encoder, value) {
		    var tmp0_desc = this.j1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.l1z_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_58(), value.m1z_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_60).yf = function (encoder, value) {
		    return this.k1z(encoder, value instanceof Body_11 ? value : THROW_CCE());
		  };
		  var $serializer_instance_60;
		  function $serializer_getInstance_60() {
		    if ($serializer_instance_60 == null)
		      new $serializer_60();
		    return $serializer_instance_60;
		  }
		  function Body_init_$Init$_11(seen1, originating_session, body, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_60().j1z_1);
		    }
		    $this.l1z_1 = originating_session;
		    $this.m1z_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_11(seen1, originating_session, body, serializationConstructorMarker) {
		    return Body_init_$Init$_11(seen1, originating_session, body, serializationConstructorMarker, objectCreate(protoOf(Body_11)));
		  }
		  function PostLegBody(offer) {
		    this.e1z_1 = offer;
		  }
		  protoOf(PostLegBody).toString = function () {
		    return 'PostLegBody(offer=' + this.e1z_1.toString() + ')';
		  };
		  protoOf(PostLegBody).hashCode = function () {
		    return this.e1z_1.hashCode();
		  };
		  protoOf(PostLegBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostLegBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostLegBody ? other : THROW_CCE();
		    if (!this.e1z_1.equals(tmp0_other_with_cast.e1z_1))
		      return false;
		    return true;
		  };
		  function PostLegOffer(type, sdp) {
		    this.h1z_1 = type;
		    this.i1z_1 = sdp;
		  }
		  protoOf(PostLegOffer).toString = function () {
		    return 'PostLegOffer(type=' + this.h1z_1 + ', sdp=' + this.i1z_1 + ')';
		  };
		  protoOf(PostLegOffer).hashCode = function () {
		    var result = getStringHashCode(this.h1z_1);
		    result = imul(result, 31) + getStringHashCode(this.i1z_1) | 0;
		    return result;
		  };
		  protoOf(PostLegOffer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostLegOffer))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostLegOffer ? other : THROW_CCE();
		    if (!(this.h1z_1 === tmp0_other_with_cast.h1z_1))
		      return false;
		    if (!(this.i1z_1 === tmp0_other_with_cast.i1z_1))
		      return false;
		    return true;
		  };
		  function Body_11(originating_session, body) {
		    this.l1z_1 = originating_session;
		    this.m1z_1 = body;
		  }
		  function PostLegRequest(sdp) {
		    this.n1z_1 = sdp;
		    this.o1z_1 = new Legs();
		    this.p1z_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(PostLegRequest).o1g = function () {
		    return this.o1z_1;
		  };
		  protoOf(PostLegRequest).p1g = function () {
		    return this.p1z_1;
		  };
		  protoOf(PostLegRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_11(originatingSessionId, new PostLegBody(new PostLegOffer('offer', this.n1z_1)));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_11), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(PostLegRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(PostLeg), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(PostLegRequest).toString = function () {
		    return 'PostLegRequest(sdp=' + this.n1z_1 + ')';
		  };
		  protoOf(PostLegRequest).hashCode = function () {
		    return getStringHashCode(this.n1z_1);
		  };
		  protoOf(PostLegRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostLegRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostLegRequest ? other : THROW_CCE();
		    if (!(this.n1z_1 === tmp0_other_with_cast.n1z_1))
		      return false;
		    return true;
		  };
		  function Companion_55() {
		  }
		  function $serializer_61() {
		    $serializer_instance_61 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PostLeg', this, 2);
		    tmp0_serialDesc.rq('rtc_id', false);
		    tmp0_serialDesc.rq('sdp', false);
		    this.q1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_61).xf = function () {
		    return this.q1z_1;
		  };
		  protoOf($serializer_61).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_61).zf = function (decoder) {
		    var tmp0_desc = this.q1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return PostLeg_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_61).r1z = function (encoder, value) {
		    var tmp0_desc = this.q1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.s1z_1);
		    tmp1_output.wk(tmp0_desc, 1, value.t1z_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_61).yf = function (encoder, value) {
		    return this.r1z(encoder, value instanceof PostLeg ? value : THROW_CCE());
		  };
		  var $serializer_instance_61;
		  function $serializer_getInstance_61() {
		    if ($serializer_instance_61 == null)
		      new $serializer_61();
		    return $serializer_instance_61;
		  }
		  function PostLeg_init_$Init$(seen1, rtc_id, sdp, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_61().q1z_1);
		    }
		    $this.s1z_1 = rtc_id;
		    $this.t1z_1 = sdp;
		    return $this;
		  }
		  function PostLeg_init_$Create$(seen1, rtc_id, sdp, serializationConstructorMarker) {
		    return PostLeg_init_$Init$(seen1, rtc_id, sdp, serializationConstructorMarker, objectCreate(protoOf(PostLeg)));
		  }
		  function PostLeg(rtc_id, sdp) {
		    this.s1z_1 = rtc_id;
		    this.t1z_1 = sdp;
		  }
		  protoOf(PostLeg).toString = function () {
		    return 'PostLeg(rtc_id=' + this.s1z_1 + ', sdp=' + this.t1z_1 + ')';
		  };
		  protoOf(PostLeg).hashCode = function () {
		    var result = getStringHashCode(this.s1z_1);
		    result = imul(result, 31) + getStringHashCode(this.t1z_1) | 0;
		    return result;
		  };
		  protoOf(PostLeg).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PostLeg))
		      return false;
		    var tmp0_other_with_cast = other instanceof PostLeg ? other : THROW_CCE();
		    if (!(this.s1z_1 === tmp0_other_with_cast.s1z_1))
		      return false;
		    if (!(this.t1z_1 === tmp0_other_with_cast.t1z_1))
		      return false;
		    return true;
		  };
		  function Companion_56() {
		  }
		  function $serializer_62() {
		    $serializer_instance_62 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCAnswerRequest.RtcAnswerBody', this, 1);
		    tmp0_serialDesc.rq('answer', false);
		    this.u1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_62).xf = function () {
		    return this.u1z_1;
		  };
		  protoOf($serializer_62).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_62).zf = function (decoder) {
		    var tmp0_desc = this.u1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return RtcAnswerBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_62).v1z = function (encoder, value) {
		    var tmp0_desc = this.u1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.w1z_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_62).yf = function (encoder, value) {
		    return this.v1z(encoder, value instanceof RtcAnswerBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_62;
		  function $serializer_getInstance_62() {
		    if ($serializer_instance_62 == null)
		      new $serializer_62();
		    return $serializer_instance_62;
		  }
		  function RtcAnswerBody_init_$Init$(seen1, answer, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_62().u1z_1);
		    }
		    $this.w1z_1 = answer;
		    return $this;
		  }
		  function RtcAnswerBody_init_$Create$(seen1, answer, serializationConstructorMarker) {
		    return RtcAnswerBody_init_$Init$(seen1, answer, serializationConstructorMarker, objectCreate(protoOf(RtcAnswerBody)));
		  }
		  function Companion_57() {
		  }
		  function $serializer_63() {
		    $serializer_instance_63 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCAnswerRequest.Body', this, 3);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('body', false);
		    this.x1z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_63).xf = function () {
		    return this.x1z_1;
		  };
		  protoOf($serializer_63).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_62()];
		  };
		  protoOf($serializer_63).zf = function (decoder) {
		    var tmp0_desc = this.x1z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_62(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_62(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return Body_init_$Create$_12(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_63).y1z = function (encoder, value) {
		    var tmp0_desc = this.x1z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.z1z_1);
		    tmp1_output.wk(tmp0_desc, 1, value.a20_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_62(), value.b20_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_63).yf = function (encoder, value) {
		    return this.y1z(encoder, value instanceof Body_12 ? value : THROW_CCE());
		  };
		  var $serializer_instance_63;
		  function $serializer_getInstance_63() {
		    if ($serializer_instance_63 == null)
		      new $serializer_63();
		    return $serializer_instance_63;
		  }
		  function Body_init_$Init$_12(seen1, originating_session, from, body, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_63().x1z_1);
		    }
		    $this.z1z_1 = originating_session;
		    $this.a20_1 = from;
		    $this.b20_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_12(seen1, originating_session, from, body, serializationConstructorMarker) {
		    return Body_init_$Init$_12(seen1, originating_session, from, body, serializationConstructorMarker, objectCreate(protoOf(Body_12)));
		  }
		  function RtcAnswerBody(answer) {
		    this.w1z_1 = answer;
		  }
		  protoOf(RtcAnswerBody).toString = function () {
		    return 'RtcAnswerBody(answer=' + this.w1z_1 + ')';
		  };
		  protoOf(RtcAnswerBody).hashCode = function () {
		    return getStringHashCode(this.w1z_1);
		  };
		  protoOf(RtcAnswerBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RtcAnswerBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof RtcAnswerBody ? other : THROW_CCE();
		    if (!(this.w1z_1 === tmp0_other_with_cast.w1z_1))
		      return false;
		    return true;
		  };
		  function Body_12(originating_session, from, body) {
		    this.z1z_1 = originating_session;
		    this.a20_1 = from;
		    this.b20_1 = body;
		  }
		  function RTCAnswerRequest(cid, mid, rtc_id, sdp) {
		    this.c20_1 = cid;
		    this.d20_1 = mid;
		    this.e20_1 = rtc_id;
		    this.f20_1 = sdp;
		    this.g20_1 = new RTCAnswer_0(this.c20_1, this.e20_1);
		    this.h20_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(RTCAnswerRequest).o1g = function () {
		    return this.g20_1;
		  };
		  protoOf(RTCAnswerRequest).p1g = function () {
		    return this.h20_1;
		  };
		  protoOf(RTCAnswerRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_12(originatingSessionId, this.d20_1, new RtcAnswerBody(this.f20_1));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_12), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(RTCAnswerRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(RTCAnswerResponse), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(RTCAnswerRequest).toString = function () {
		    return 'RTCAnswerRequest(cid=' + this.c20_1 + ', mid=' + this.d20_1 + ', rtc_id=' + this.e20_1 + ', sdp=' + this.f20_1 + ')';
		  };
		  protoOf(RTCAnswerRequest).hashCode = function () {
		    var result = getStringHashCode(this.c20_1);
		    result = imul(result, 31) + getStringHashCode(this.d20_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e20_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f20_1) | 0;
		    return result;
		  };
		  protoOf(RTCAnswerRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCAnswerRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCAnswerRequest ? other : THROW_CCE();
		    if (!(this.c20_1 === tmp0_other_with_cast.c20_1))
		      return false;
		    if (!(this.d20_1 === tmp0_other_with_cast.d20_1))
		      return false;
		    if (!(this.e20_1 === tmp0_other_with_cast.e20_1))
		      return false;
		    if (!(this.f20_1 === tmp0_other_with_cast.f20_1))
		      return false;
		    return true;
		  };
		  function Companion_58() {
		  }
		  function $serializer_64() {
		    $serializer_instance_64 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCReconnectRequest.RtcReconnectBody', this, 1);
		    tmp0_serialDesc.rq('offer', false);
		    this.i20_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_64).xf = function () {
		    return this.i20_1;
		  };
		  protoOf($serializer_64).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_65()];
		  };
		  protoOf($serializer_64).zf = function (decoder) {
		    var tmp0_desc = this.i20_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_65(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_65(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return RtcReconnectBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_64).j20 = function (encoder, value) {
		    var tmp0_desc = this.i20_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_65(), value.k20_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_64).yf = function (encoder, value) {
		    return this.j20(encoder, value instanceof RtcReconnectBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_64;
		  function $serializer_getInstance_64() {
		    if ($serializer_instance_64 == null)
		      new $serializer_64();
		    return $serializer_instance_64;
		  }
		  function RtcReconnectBody_init_$Init$(seen1, offer, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_64().i20_1);
		    }
		    $this.k20_1 = offer;
		    return $this;
		  }
		  function RtcReconnectBody_init_$Create$(seen1, offer, serializationConstructorMarker) {
		    return RtcReconnectBody_init_$Init$(seen1, offer, serializationConstructorMarker, objectCreate(protoOf(RtcReconnectBody)));
		  }
		  function Companion_59() {
		  }
		  function $serializer_65() {
		    $serializer_instance_65 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCReconnectRequest.RtcReconnectOffer', this, 1);
		    tmp0_serialDesc.rq('sdp', false);
		    this.l20_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_65).xf = function () {
		    return this.l20_1;
		  };
		  protoOf($serializer_65).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_65).zf = function (decoder) {
		    var tmp0_desc = this.l20_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return RtcReconnectOffer_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_65).m20 = function (encoder, value) {
		    var tmp0_desc = this.l20_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.n20_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_65).yf = function (encoder, value) {
		    return this.m20(encoder, value instanceof RtcReconnectOffer ? value : THROW_CCE());
		  };
		  var $serializer_instance_65;
		  function $serializer_getInstance_65() {
		    if ($serializer_instance_65 == null)
		      new $serializer_65();
		    return $serializer_instance_65;
		  }
		  function RtcReconnectOffer_init_$Init$(seen1, sdp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_65().l20_1);
		    }
		    $this.n20_1 = sdp;
		    return $this;
		  }
		  function RtcReconnectOffer_init_$Create$(seen1, sdp, serializationConstructorMarker) {
		    return RtcReconnectOffer_init_$Init$(seen1, sdp, serializationConstructorMarker, objectCreate(protoOf(RtcReconnectOffer)));
		  }
		  function Companion_60() {
		  }
		  function $serializer_66() {
		    $serializer_instance_66 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCReconnectRequest.Body', this, 3);
		    tmp0_serialDesc.rq('originating_session', false);
		    tmp0_serialDesc.rq('from', false);
		    tmp0_serialDesc.rq('body', false);
		    this.o20_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_66).xf = function () {
		    return this.o20_1;
		  };
		  protoOf($serializer_66).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_64()];
		  };
		  protoOf($serializer_66).zf = function (decoder) {
		    var tmp0_desc = this.o20_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_64(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_64(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return Body_init_$Create$_13(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_66).p20 = function (encoder, value) {
		    var tmp0_desc = this.o20_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.q20_1);
		    tmp1_output.wk(tmp0_desc, 1, value.r20_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_64(), value.s20_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_66).yf = function (encoder, value) {
		    return this.p20(encoder, value instanceof Body_13 ? value : THROW_CCE());
		  };
		  var $serializer_instance_66;
		  function $serializer_getInstance_66() {
		    if ($serializer_instance_66 == null)
		      new $serializer_66();
		    return $serializer_instance_66;
		  }
		  function Body_init_$Init$_13(seen1, originating_session, from, body, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_66().o20_1);
		    }
		    $this.q20_1 = originating_session;
		    $this.r20_1 = from;
		    $this.s20_1 = body;
		    return $this;
		  }
		  function Body_init_$Create$_13(seen1, originating_session, from, body, serializationConstructorMarker) {
		    return Body_init_$Init$_13(seen1, originating_session, from, body, serializationConstructorMarker, objectCreate(protoOf(Body_13)));
		  }
		  function RtcReconnectBody(offer) {
		    this.k20_1 = offer;
		  }
		  protoOf(RtcReconnectBody).toString = function () {
		    return 'RtcReconnectBody(offer=' + this.k20_1.toString() + ')';
		  };
		  protoOf(RtcReconnectBody).hashCode = function () {
		    return this.k20_1.hashCode();
		  };
		  protoOf(RtcReconnectBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RtcReconnectBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof RtcReconnectBody ? other : THROW_CCE();
		    if (!this.k20_1.equals(tmp0_other_with_cast.k20_1))
		      return false;
		    return true;
		  };
		  function RtcReconnectOffer(sdp) {
		    this.n20_1 = sdp;
		  }
		  protoOf(RtcReconnectOffer).toString = function () {
		    return 'RtcReconnectOffer(sdp=' + this.n20_1 + ')';
		  };
		  protoOf(RtcReconnectOffer).hashCode = function () {
		    return getStringHashCode(this.n20_1);
		  };
		  protoOf(RtcReconnectOffer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RtcReconnectOffer))
		      return false;
		    var tmp0_other_with_cast = other instanceof RtcReconnectOffer ? other : THROW_CCE();
		    if (!(this.n20_1 === tmp0_other_with_cast.n20_1))
		      return false;
		    return true;
		  };
		  function Body_13(originating_session, from, body) {
		    this.q20_1 = originating_session;
		    this.r20_1 = from;
		    this.s20_1 = body;
		  }
		  function RTCReconnectRequest(cid, mid, sdp, reconnectRtcId) {
		    this.t20_1 = cid;
		    this.u20_1 = mid;
		    this.v20_1 = sdp;
		    this.w20_1 = reconnectRtcId;
		    this.x20_1 = new RtcReconnect(this.t20_1, this.w20_1);
		    this.y20_1 = HTTPMethod_POST_getInstance();
		  }
		  protoOf(RTCReconnectRequest).o1g = function () {
		    return this.x20_1;
		  };
		  protoOf(RTCReconnectRequest).p1g = function () {
		    return this.y20_1;
		  };
		  protoOf(RTCReconnectRequest).q1g = function (encoder, originatingSessionId) {
		    // Inline function 'kotlinx.serialization.encodeToString' call
		    var value = new Body_13(originatingSessionId, this.u20_1, new RtcReconnectBody(new RtcReconnectOffer(this.v20_1)));
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = encoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(Body_13), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return encoder.c11(tmp$ret$1, value);
		  };
		  protoOf(RTCReconnectRequest).r1g = function (data, decoder) {
		    // Inline function 'kotlinx.serialization.decodeFromString' call
		    // Inline function 'kotlinx.serialization.serializer' call
		    var this_0 = decoder.wj();
		    // Inline function 'kotlinx.serialization.internal.cast' call
		    var this_1 = serializer(this_0, createKType(getKClass(RTCReconnect), arrayOf([]), false));
		    var tmp$ret$1 = isInterface(this_1, KSerializer) ? this_1 : THROW_CCE();
		    return decoder.d11(tmp$ret$1, data);
		  };
		  protoOf(RTCReconnectRequest).toString = function () {
		    return 'RTCReconnectRequest(cid=' + this.t20_1 + ', mid=' + this.u20_1 + ', sdp=' + this.v20_1 + ', reconnectRtcId=' + this.w20_1 + ')';
		  };
		  protoOf(RTCReconnectRequest).hashCode = function () {
		    var result = getStringHashCode(this.t20_1);
		    result = imul(result, 31) + getStringHashCode(this.u20_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.v20_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w20_1) | 0;
		    return result;
		  };
		  protoOf(RTCReconnectRequest).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCReconnectRequest))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCReconnectRequest ? other : THROW_CCE();
		    if (!(this.t20_1 === tmp0_other_with_cast.t20_1))
		      return false;
		    if (!(this.u20_1 === tmp0_other_with_cast.u20_1))
		      return false;
		    if (!(this.v20_1 === tmp0_other_with_cast.v20_1))
		      return false;
		    if (!(this.w20_1 === tmp0_other_with_cast.w20_1))
		      return false;
		    return true;
		  };
		  function Companion_61() {
		  }
		  function $serializer_67() {
		    $serializer_instance_67 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AppKnocking', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.z20_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_67).xf = function () {
		    return this.z20_1;
		  };
		  protoOf($serializer_67).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_67).zf = function (decoder) {
		    var tmp0_desc = this.z20_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return AppKnocking_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_67).a21 = function (encoder, value) {
		    var tmp0_desc = this.z20_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.b21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_67).yf = function (encoder, value) {
		    return this.a21(encoder, value instanceof AppKnocking ? value : THROW_CCE());
		  };
		  var $serializer_instance_67;
		  function $serializer_getInstance_67() {
		    if ($serializer_instance_67 == null)
		      new $serializer_67();
		    return $serializer_instance_67;
		  }
		  function AppKnocking_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_67().z20_1);
		    }
		    $this.b21_1 = id;
		    return $this;
		  }
		  function AppKnocking_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return AppKnocking_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(AppKnocking)));
		  }
		  function AppKnocking(id) {
		    this.b21_1 = id;
		  }
		  function Companion_62() {
		  }
		  function $serializer_68() {
		    $serializer_instance_68 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCReconnect', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.c21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_68).xf = function () {
		    return this.c21_1;
		  };
		  protoOf($serializer_68).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_68).zf = function (decoder) {
		    var tmp0_desc = this.c21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return RTCReconnect_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_68).d21 = function (encoder, value) {
		    var tmp0_desc = this.c21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.e21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_68).yf = function (encoder, value) {
		    return this.d21(encoder, value instanceof RTCReconnect ? value : THROW_CCE());
		  };
		  var $serializer_instance_68;
		  function $serializer_getInstance_68() {
		    if ($serializer_instance_68 == null)
		      new $serializer_68();
		    return $serializer_instance_68;
		  }
		  function RTCReconnect_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_68().c21_1);
		    }
		    $this.e21_1 = id;
		    return $this;
		  }
		  function RTCReconnect_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return RTCReconnect_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(RTCReconnect)));
		  }
		  function RTCReconnect(id) {
		    this.e21_1 = id;
		  }
		  protoOf(RTCReconnect).toString = function () {
		    return 'RTCReconnect(id=' + this.e21_1 + ')';
		  };
		  protoOf(RTCReconnect).hashCode = function () {
		    return getStringHashCode(this.e21_1);
		  };
		  protoOf(RTCReconnect).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCReconnect))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCReconnect ? other : THROW_CCE();
		    if (!(this.e21_1 === tmp0_other_with_cast.e21_1))
		      return false;
		    return true;
		  };
		  function DeletedKnocker(id) {
		    this.f21_1 = id;
		  }
		  function Companion_63() {
		  }
		  function $serializer_69() {
		    $serializer_instance_69 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.UpdateSession', this, 1);
		    tmp0_serialDesc.rq('session_id', false);
		    this.g21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_69).xf = function () {
		    return this.g21_1;
		  };
		  protoOf($serializer_69).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_69).zf = function (decoder) {
		    var tmp0_desc = this.g21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return UpdateSession_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_69).h21 = function (encoder, value) {
		    var tmp0_desc = this.g21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.i21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_69).yf = function (encoder, value) {
		    return this.h21(encoder, value instanceof UpdateSession ? value : THROW_CCE());
		  };
		  var $serializer_instance_69;
		  function $serializer_getInstance_69() {
		    if ($serializer_instance_69 == null)
		      new $serializer_69();
		    return $serializer_instance_69;
		  }
		  function UpdateSession_init_$Init$(seen1, session_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_69().g21_1);
		    }
		    $this.i21_1 = session_id;
		    return $this;
		  }
		  function UpdateSession_init_$Create$(seen1, session_id, serializationConstructorMarker) {
		    return UpdateSession_init_$Init$(seen1, session_id, serializationConstructorMarker, objectCreate(protoOf(UpdateSession)));
		  }
		  function UpdateSession(session_id) {
		    this.i21_1 = session_id;
		  }
		  protoOf(UpdateSession).toString = function () {
		    return 'UpdateSession(session_id=' + this.i21_1 + ')';
		  };
		  protoOf(UpdateSession).hashCode = function () {
		    return getStringHashCode(this.i21_1);
		  };
		  protoOf(UpdateSession).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UpdateSession))
		      return false;
		    var tmp0_other_with_cast = other instanceof UpdateSession ? other : THROW_CCE();
		    if (!(this.i21_1 === tmp0_other_with_cast.i21_1))
		      return false;
		    return true;
		  };
		  function Companion_64() {
		  }
		  function $serializer_70() {
		    $serializer_instance_70 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberJoin', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.j21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_70).xf = function () {
		    return this.j21_1;
		  };
		  protoOf($serializer_70).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_70).zf = function (decoder) {
		    var tmp0_desc = this.j21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return MemberJoin_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_70).k21 = function (encoder, value) {
		    var tmp0_desc = this.j21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.l21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_70).yf = function (encoder, value) {
		    return this.k21(encoder, value instanceof MemberJoin ? value : THROW_CCE());
		  };
		  var $serializer_instance_70;
		  function $serializer_getInstance_70() {
		    if ($serializer_instance_70 == null)
		      new $serializer_70();
		    return $serializer_instance_70;
		  }
		  function MemberJoin_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_70().j21_1);
		    }
		    $this.l21_1 = id;
		    return $this;
		  }
		  function MemberJoin_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return MemberJoin_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(MemberJoin)));
		  }
		  function MemberJoin(id) {
		    this.l21_1 = id;
		  }
		  protoOf(MemberJoin).toString = function () {
		    return 'MemberJoin(id=' + this.l21_1 + ')';
		  };
		  protoOf(MemberJoin).hashCode = function () {
		    return getStringHashCode(this.l21_1);
		  };
		  protoOf(MemberJoin).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoin))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoin ? other : THROW_CCE();
		    if (!(this.l21_1 === tmp0_other_with_cast.l21_1))
		      return false;
		    return true;
		  };
		  function Companion_65() {
		  }
		  function $serializer_71() {
		    $serializer_instance_71 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegMute', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.m21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_71).xf = function () {
		    return this.m21_1;
		  };
		  protoOf($serializer_71).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_71).zf = function (decoder) {
		    var tmp0_desc = this.m21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegMute_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_71).n21 = function (encoder, value) {
		    var tmp0_desc = this.m21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.o21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_71).yf = function (encoder, value) {
		    return this.n21(encoder, value instanceof LegMute ? value : THROW_CCE());
		  };
		  var $serializer_instance_71;
		  function $serializer_getInstance_71() {
		    if ($serializer_instance_71 == null)
		      new $serializer_71();
		    return $serializer_instance_71;
		  }
		  function LegMute_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_71().m21_1);
		    }
		    $this.o21_1 = id;
		    return $this;
		  }
		  function LegMute_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return LegMute_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(LegMute)));
		  }
		  function LegMute(id) {
		    this.o21_1 = id;
		  }
		  protoOf(LegMute).toString = function () {
		    return 'LegMute(id=' + this.o21_1 + ')';
		  };
		  protoOf(LegMute).hashCode = function () {
		    return this.o21_1;
		  };
		  protoOf(LegMute).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegMute))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegMute ? other : THROW_CCE();
		    if (!(this.o21_1 === tmp0_other_with_cast.o21_1))
		      return false;
		    return true;
		  };
		  function Companion_66() {
		  }
		  function $serializer_72() {
		    $serializer_instance_72 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegUnmute', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.p21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_72).xf = function () {
		    return this.p21_1;
		  };
		  protoOf($serializer_72).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_72).zf = function (decoder) {
		    var tmp0_desc = this.p21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegUnmute_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_72).q21 = function (encoder, value) {
		    var tmp0_desc = this.p21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.r21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_72).yf = function (encoder, value) {
		    return this.q21(encoder, value instanceof LegUnmute ? value : THROW_CCE());
		  };
		  var $serializer_instance_72;
		  function $serializer_getInstance_72() {
		    if ($serializer_instance_72 == null)
		      new $serializer_72();
		    return $serializer_instance_72;
		  }
		  function LegUnmute_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_72().p21_1);
		    }
		    $this.r21_1 = id;
		    return $this;
		  }
		  function LegUnmute_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return LegUnmute_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(LegUnmute)));
		  }
		  function LegUnmute(id) {
		    this.r21_1 = id;
		  }
		  protoOf(LegUnmute).toString = function () {
		    return 'LegUnmute(id=' + this.r21_1 + ')';
		  };
		  protoOf(LegUnmute).hashCode = function () {
		    return this.r21_1;
		  };
		  protoOf(LegUnmute).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegUnmute))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegUnmute ? other : THROW_CCE();
		    if (!(this.r21_1 === tmp0_other_with_cast.r21_1))
		      return false;
		    return true;
		  };
		  function Companion_67() {
		  }
		  function $serializer_73() {
		    $serializer_instance_73 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffEnable', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.s21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_73).xf = function () {
		    return this.s21_1;
		  };
		  protoOf($serializer_73).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_73).zf = function (decoder) {
		    var tmp0_desc = this.s21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegEarmuffEnable_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_73).t21 = function (encoder, value) {
		    var tmp0_desc = this.s21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.u21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_73).yf = function (encoder, value) {
		    return this.t21(encoder, value instanceof LegEarmuffEnable ? value : THROW_CCE());
		  };
		  var $serializer_instance_73;
		  function $serializer_getInstance_73() {
		    if ($serializer_instance_73 == null)
		      new $serializer_73();
		    return $serializer_instance_73;
		  }
		  function LegEarmuffEnable_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_73().s21_1);
		    }
		    $this.u21_1 = id;
		    return $this;
		  }
		  function LegEarmuffEnable_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return LegEarmuffEnable_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(LegEarmuffEnable)));
		  }
		  function LegEarmuffEnable(id) {
		    this.u21_1 = id;
		  }
		  protoOf(LegEarmuffEnable).toString = function () {
		    return 'LegEarmuffEnable(id=' + this.u21_1 + ')';
		  };
		  protoOf(LegEarmuffEnable).hashCode = function () {
		    return this.u21_1;
		  };
		  protoOf(LegEarmuffEnable).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffEnable))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffEnable ? other : THROW_CCE();
		    if (!(this.u21_1 === tmp0_other_with_cast.u21_1))
		      return false;
		    return true;
		  };
		  function Companion_68() {
		  }
		  function $serializer_74() {
		    $serializer_instance_74 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegEarmuffDisable', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.v21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_74).xf = function () {
		    return this.v21_1;
		  };
		  protoOf($serializer_74).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_74).zf = function (decoder) {
		    var tmp0_desc = this.v21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegEarmuffDisable_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_74).w21 = function (encoder, value) {
		    var tmp0_desc = this.v21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.x21_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_74).yf = function (encoder, value) {
		    return this.w21(encoder, value instanceof LegEarmuffDisable ? value : THROW_CCE());
		  };
		  var $serializer_instance_74;
		  function $serializer_getInstance_74() {
		    if ($serializer_instance_74 == null)
		      new $serializer_74();
		    return $serializer_instance_74;
		  }
		  function LegEarmuffDisable_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_74().v21_1);
		    }
		    $this.x21_1 = id;
		    return $this;
		  }
		  function LegEarmuffDisable_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return LegEarmuffDisable_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(LegEarmuffDisable)));
		  }
		  function LegEarmuffDisable(id) {
		    this.x21_1 = id;
		  }
		  protoOf(LegEarmuffDisable).toString = function () {
		    return 'LegEarmuffDisable(id=' + this.x21_1 + ')';
		  };
		  protoOf(LegEarmuffDisable).hashCode = function () {
		    return this.x21_1;
		  };
		  protoOf(LegEarmuffDisable).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegEarmuffDisable))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegEarmuffDisable ? other : THROW_CCE();
		    if (!(this.x21_1 === tmp0_other_with_cast.x21_1))
		      return false;
		    return true;
		  };
		  function Companion_69() {
		  }
		  function $serializer_75() {
		    $serializer_instance_75 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegDTMF', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.y21_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_75).xf = function () {
		    return this.y21_1;
		  };
		  protoOf($serializer_75).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_75).zf = function (decoder) {
		    var tmp0_desc = this.y21_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return LegDTMF_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_75).z21 = function (encoder, value) {
		    var tmp0_desc = this.y21_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.a22_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_75).yf = function (encoder, value) {
		    return this.z21(encoder, value instanceof LegDTMF ? value : THROW_CCE());
		  };
		  var $serializer_instance_75;
		  function $serializer_getInstance_75() {
		    if ($serializer_instance_75 == null)
		      new $serializer_75();
		    return $serializer_instance_75;
		  }
		  function LegDTMF_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_75().y21_1);
		    }
		    $this.a22_1 = id;
		    return $this;
		  }
		  function LegDTMF_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return LegDTMF_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(LegDTMF)));
		  }
		  function LegDTMF(id) {
		    this.a22_1 = id;
		  }
		  protoOf(LegDTMF).toString = function () {
		    return 'LegDTMF(id=' + this.a22_1 + ')';
		  };
		  protoOf(LegDTMF).hashCode = function () {
		    return this.a22_1;
		  };
		  protoOf(LegDTMF).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegDTMF))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegDTMF ? other : THROW_CCE();
		    if (!(this.a22_1 === tmp0_other_with_cast.a22_1))
		      return false;
		    return true;
		  };
		  function Companion_70() {
		  }
		  function $serializer_76() {
		    $serializer_instance_76 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSay', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('_links', true);
		    this.b22_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_76).xf = function () {
		    return this.b22_1;
		  };
		  protoOf($serializer_76).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_117(), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), get_nullable($serializer_getInstance_79())];
		  };
		  protoOf($serializer_76).zf = function (decoder) {
		    var tmp0_desc = this.b22_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.tj(tmp0_desc, 3, $serializer_getInstance_117(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, $serializer_getInstance_79(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.tj(tmp0_desc, 3, $serializer_getInstance_117(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, $serializer_getInstance_79(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return AudioSay_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_76).c22 = function (encoder, value) {
		    var tmp0_desc = this.b22_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.d22_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e22_1);
		    tmp1_output.wk(tmp0_desc, 2, value.f22_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_117(), value.g22_1);
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.h22_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.h22_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.i22_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.i22_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.j22_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, $serializer_getInstance_79(), value.j22_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_76).yf = function (encoder, value) {
		    return this.c22(encoder, value instanceof AudioSay ? value : THROW_CCE());
		  };
		  var $serializer_instance_76;
		  function $serializer_getInstance_76() {
		    if ($serializer_instance_76 == null)
		      new $serializer_76();
		    return $serializer_instance_76;
		  }
		  function AudioSay_init_$Init$(seen1, id, type, timestamp, body, from, _embedded, _links, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_76().b22_1);
		    }
		    $this.d22_1 = id;
		    $this.e22_1 = type;
		    $this.f22_1 = timestamp;
		    $this.g22_1 = body;
		    if (0 === (seen1 & 16))
		      $this.h22_1 = null;
		    else
		      $this.h22_1 = from;
		    if (0 === (seen1 & 32))
		      $this.i22_1 = null;
		    else
		      $this.i22_1 = _embedded;
		    if (0 === (seen1 & 64))
		      $this.j22_1 = null;
		    else
		      $this.j22_1 = _links;
		    return $this;
		  }
		  function AudioSay_init_$Create$(seen1, id, type, timestamp, body, from, _embedded, _links, serializationConstructorMarker) {
		    return AudioSay_init_$Init$(seen1, id, type, timestamp, body, from, _embedded, _links, serializationConstructorMarker, objectCreate(protoOf(AudioSay)));
		  }
		  function AudioSay(id, type, timestamp, body, from, _embedded, _links) {
		    from = from === VOID ? null : from;
		    _embedded = _embedded === VOID ? null : _embedded;
		    _links = _links === VOID ? null : _links;
		    this.d22_1 = id;
		    this.e22_1 = type;
		    this.f22_1 = timestamp;
		    this.g22_1 = body;
		    this.h22_1 = from;
		    this.i22_1 = _embedded;
		    this.j22_1 = _links;
		  }
		  protoOf(AudioSay).toString = function () {
		    return 'AudioSay(id=' + this.d22_1 + ', type=' + this.e22_1 + ', timestamp=' + this.f22_1 + ', body=' + this.g22_1.toString() + ', from=' + this.h22_1 + ', _embedded=' + toString_0(this.i22_1) + ', _links=' + toString_0(this.j22_1) + ')';
		  };
		  protoOf(AudioSay).hashCode = function () {
		    var result = this.d22_1;
		    result = imul(result, 31) + getStringHashCode(this.e22_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f22_1) | 0;
		    result = imul(result, 31) + this.g22_1.hashCode() | 0;
		    result = imul(result, 31) + (this.h22_1 == null ? 0 : getStringHashCode(this.h22_1)) | 0;
		    result = imul(result, 31) + (this.i22_1 == null ? 0 : this.i22_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.j22_1 == null ? 0 : this.j22_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(AudioSay).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSay))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSay ? other : THROW_CCE();
		    if (!(this.d22_1 === tmp0_other_with_cast.d22_1))
		      return false;
		    if (!(this.e22_1 === tmp0_other_with_cast.e22_1))
		      return false;
		    if (!(this.f22_1 === tmp0_other_with_cast.f22_1))
		      return false;
		    if (!this.g22_1.equals(tmp0_other_with_cast.g22_1))
		      return false;
		    if (!(this.h22_1 == tmp0_other_with_cast.h22_1))
		      return false;
		    if (!equals(this.i22_1, tmp0_other_with_cast.i22_1))
		      return false;
		    if (!equals(this.j22_1, tmp0_other_with_cast.j22_1))
		      return false;
		    return true;
		  };
		  function EmptySerializer() {
		    EmptySerializer_instance = this;
		    JsonContentPolymorphicSerializer.call(this, getKClass(PostConversationEventRequestBody));
		  }
		  protoOf(EmptySerializer).z12 = function (element) {
		    throw new NotImplementedError('This polymorphic interface is not serializable.');
		  };
		  var EmptySerializer_instance;
		  function EmptySerializer_getInstance() {
		    if (EmptySerializer_instance == null)
		      new EmptySerializer();
		    return EmptySerializer_instance;
		  }
		  function Companion_71() {
		  }
		  function $serializer_77() {
		    $serializer_instance_77 = this;
		    this.m22_1 = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCStatsReportResponse', this, 0);
		  }
		  protoOf($serializer_77).xf = function () {
		    return this.m22_1;
		  };
		  protoOf($serializer_77).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_77).zf = function (decoder) {
		    var tmp0_desc = this.m22_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp4_input = decoder.hj(tmp0_desc);
		    if (!tmp4_input.xj())
		      while (tmp1_flag) {
		        tmp2_index = tmp4_input.yj(tmp0_desc);
		        if (tmp2_index === -1)
		          tmp1_flag = false;
		        else
		          throw UnknownFieldException_init_$Create$(tmp2_index);
		      }
		    tmp4_input.ij(tmp0_desc);
		    return RTCStatsReportResponse_init_$Create$(0, null);
		  };
		  protoOf($serializer_77).n22 = function (encoder, value) {
		    var tmp0_desc = this.m22_1;
		    encoder.hj(tmp0_desc).ij(tmp0_desc);
		  };
		  protoOf($serializer_77).yf = function (encoder, value) {
		    return this.n22(encoder, value instanceof RTCStatsReportResponse ? value : THROW_CCE());
		  };
		  var $serializer_instance_77;
		  function $serializer_getInstance_77() {
		    if ($serializer_instance_77 == null)
		      new $serializer_77();
		    return $serializer_instance_77;
		  }
		  function RTCStatsReportResponse_init_$Init$(seen1, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_77().m22_1);
		    }
		    return $this;
		  }
		  function RTCStatsReportResponse_init_$Create$(seen1, serializationConstructorMarker) {
		    return RTCStatsReportResponse_init_$Init$(seen1, serializationConstructorMarker, objectCreate(protoOf(RTCStatsReportResponse)));
		  }
		  function RTCStatsReportResponse() {
		  }
		  function Companion_72() {
		  }
		  function $serializer_78() {
		    $serializer_instance_78 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCAnswerResponse', this, 1);
		    tmp0_serialDesc.rq('id', false);
		    this.o22_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_78).xf = function () {
		    return this.o22_1;
		  };
		  protoOf($serializer_78).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_78).zf = function (decoder) {
		    var tmp0_desc = this.o22_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return RTCAnswerResponse_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_78).p22 = function (encoder, value) {
		    var tmp0_desc = this.o22_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.q22_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_78).yf = function (encoder, value) {
		    return this.p22(encoder, value instanceof RTCAnswerResponse ? value : THROW_CCE());
		  };
		  var $serializer_instance_78;
		  function $serializer_getInstance_78() {
		    if ($serializer_instance_78 == null)
		      new $serializer_78();
		    return $serializer_instance_78;
		  }
		  function RTCAnswerResponse_init_$Init$(seen1, id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_78().o22_1);
		    }
		    $this.q22_1 = id;
		    return $this;
		  }
		  function RTCAnswerResponse_init_$Create$(seen1, id, serializationConstructorMarker) {
		    return RTCAnswerResponse_init_$Init$(seen1, id, serializationConstructorMarker, objectCreate(protoOf(RTCAnswerResponse)));
		  }
		  function RTCAnswerResponse(id) {
		    this.q22_1 = id;
		  }
		  protoOf(RTCAnswerResponse).toString = function () {
		    return 'RTCAnswerResponse(id=' + this.q22_1 + ')';
		  };
		  protoOf(RTCAnswerResponse).hashCode = function () {
		    return getStringHashCode(this.q22_1);
		  };
		  protoOf(RTCAnswerResponse).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCAnswerResponse))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCAnswerResponse ? other : THROW_CCE();
		    if (!(this.q22_1 === tmp0_other_with_cast.q22_1))
		      return false;
		    return true;
		  };
		  function Companion_73() {
		    Companion_instance_74 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.r22_1 = [new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance())];
		  }
		  var Companion_instance_74;
		  function Companion_getInstance_75() {
		    if (Companion_instance_74 == null)
		      new Companion_73();
		    return Companion_instance_74;
		  }
		  function $serializer_79() {
		    $serializer_instance_79 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.Links', this, 1);
		    tmp0_serialDesc.rq('self', false);
		    this.s22_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_79).xf = function () {
		    return this.s22_1;
		  };
		  protoOf($serializer_79).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [Companion_getInstance_75().r22_1[0]];
		  };
		  protoOf($serializer_79).zf = function (decoder) {
		    var tmp0_desc = this.s22_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    var tmp6_cached = Companion_getInstance_75().r22_1;
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, tmp6_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return Links_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_79).t22 = function (encoder, value) {
		    var tmp0_desc = this.s22_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_75().r22_1;
		    tmp1_output.yk(tmp0_desc, 0, tmp2_cached[0], value.u22_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_79).yf = function (encoder, value) {
		    return this.t22(encoder, value instanceof Links ? value : THROW_CCE());
		  };
		  var $serializer_instance_79;
		  function $serializer_getInstance_79() {
		    if ($serializer_instance_79 == null)
		      new $serializer_79();
		    return $serializer_instance_79;
		  }
		  function Links_init_$Init$(seen1, self_0, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_79().s22_1);
		    }
		    $this.u22_1 = self_0;
		    return $this;
		  }
		  function Links_init_$Create$(seen1, self_0, serializationConstructorMarker) {
		    return Links_init_$Init$(seen1, self_0, serializationConstructorMarker, objectCreate(protoOf(Links)));
		  }
		  function Links() {
		  }
		  protoOf(Links).toString = function () {
		    return 'Links(self=' + toString(this.u22_1) + ')';
		  };
		  protoOf(Links).hashCode = function () {
		    return hashCode(this.u22_1);
		  };
		  protoOf(Links).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Links))
		      return false;
		    var tmp0_other_with_cast = other instanceof Links ? other : THROW_CCE();
		    if (!equals(this.u22_1, tmp0_other_with_cast.u22_1))
		      return false;
		    return true;
		  };
		  var CSConversationEventType_MEMBER_INVITED_instance;
		  var CSConversationEventType_MEMBER_JOINED_instance;
		  var CSConversationEventType_MEMBER_LEFT_instance;
		  var CSConversationEventType_MESSAGE_instance;
		  var CSConversationEventType_EPHEMERAL_instance;
		  var CSConversationEventType_CUSTOM_instance;
		  var CSConversationEventType_EVENT_DELETE_instance;
		  var CSConversationEventType_MESSAGE_DELIVERED_instance;
		  var CSConversationEventType_MESSAGE_REJECTED_instance;
		  var CSConversationEventType_MESSAGE_UNDELIVERABLE_instance;
		  var CSConversationEventType_MESSAGE_SUBMITTED_instance;
		  var CSConversationEventType_MESSAGE_SEEN_instance;
		  var CSConversationEventType_entriesInitialized;
		  function CSConversationEventType_initEntries() {
		    if (CSConversationEventType_entriesInitialized)
		      return Unit_instance;
		    CSConversationEventType_entriesInitialized = true;
		    CSConversationEventType_MEMBER_INVITED_instance = new CSConversationEventType('MEMBER_INVITED', 0, 'member:invited');
		    CSConversationEventType_MEMBER_JOINED_instance = new CSConversationEventType('MEMBER_JOINED', 1, 'member:joined');
		    CSConversationEventType_MEMBER_LEFT_instance = new CSConversationEventType('MEMBER_LEFT', 2, 'member:left');
		    CSConversationEventType_MESSAGE_instance = new CSConversationEventType('MESSAGE', 3, 'message');
		    CSConversationEventType_EPHEMERAL_instance = new CSConversationEventType('EPHEMERAL', 4, 'ephemeral');
		    CSConversationEventType_CUSTOM_instance = new CSConversationEventType('CUSTOM', 5, 'custom:');
		    CSConversationEventType_EVENT_DELETE_instance = new CSConversationEventType('EVENT_DELETE', 6, 'event:delete');
		    CSConversationEventType_MESSAGE_DELIVERED_instance = new CSConversationEventType('MESSAGE_DELIVERED', 7, 'message:delivered');
		    CSConversationEventType_MESSAGE_REJECTED_instance = new CSConversationEventType('MESSAGE_REJECTED', 8, 'message:rejected');
		    CSConversationEventType_MESSAGE_UNDELIVERABLE_instance = new CSConversationEventType('MESSAGE_UNDELIVERABLE', 9, 'message:undeliverable');
		    CSConversationEventType_MESSAGE_SUBMITTED_instance = new CSConversationEventType('MESSAGE_SUBMITTED', 10, 'message:submitted');
		    CSConversationEventType_MESSAGE_SEEN_instance = new CSConversationEventType('MESSAGE_SEEN', 11, 'message:seen');
		  }
		  function CSConversationEventType(name, ordinal, jsonType) {
		    Enum.call(this, name, ordinal);
		    this.x1q_1 = jsonType;
		  }
		  function Companion_74() {
		  }
		  protoOf(Companion_74).b13 = function () {
		    return CSConversationEventsSerializer_getInstance();
		  };
		  protoOf(Companion_74).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_75;
		  function CSConversationEvent() {
		  }
		  function Companion_75() {
		  }
		  function CSConversationEventJsonBody(jsonObject) {
		    this.w22_1 = jsonObject;
		  }
		  protoOf(CSConversationEventJsonBody).toString = function () {
		    return 'CSConversationEventJsonBody(jsonObject=' + this.w22_1.toString() + ')';
		  };
		  protoOf(CSConversationEventJsonBody).hashCode = function () {
		    return this.w22_1.hashCode();
		  };
		  protoOf(CSConversationEventJsonBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSConversationEventJsonBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSConversationEventJsonBody ? other : THROW_CCE();
		    if (!this.w22_1.equals(tmp0_other_with_cast.w22_1))
		      return false;
		    return true;
		  };
		  function CSConversationEventsSerializer() {
		    CSConversationEventsSerializer_instance = this;
		    JsonContentPolymorphicSerializer.call(this, getKClass(CSConversationEvent));
		  }
		  protoOf(CSConversationEventsSerializer).z12 = function (element) {
		    var tmp0_safe_receiver = get_jsonObject(element).e13('type');
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
		    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h13();
		    var type = tmp2_elvis_lhs == null ? '' : tmp2_elvis_lhs;
		    return startsWith(type, CSConversationEventType_CUSTOM_getInstance().x1q_1) ? Companion_instance_77.b13() : type === CSConversationEventType_MEMBER_INVITED_getInstance().x1q_1 ? Companion_instance_78.b13() : type === CSConversationEventType_MEMBER_JOINED_getInstance().x1q_1 ? Companion_instance_79.b13() : type === CSConversationEventType_MEMBER_LEFT_getInstance().x1q_1 ? Companion_instance_80.b13() : type === CSConversationEventType_MESSAGE_getInstance().x1q_1 ? Companion_instance_120.b13() : type === CSConversationEventType_EVENT_DELETE_getInstance().x1q_1 ? Companion_instance_81.b13() : Companion_instance_75.b13();
		  };
		  var CSConversationEventsSerializer_instance;
		  function CSConversationEventsSerializer_getInstance() {
		    if (CSConversationEventsSerializer_instance == null)
		      new CSConversationEventsSerializer();
		    return CSConversationEventsSerializer_instance;
		  }
		  function CSConversationEventJsonBodySerializer() {
		    CSConversationEventJsonBodySerializer_instance = this;
		    this.z22_1 = Companion_instance.b13().xf();
		  }
		  protoOf(CSConversationEventJsonBodySerializer).xf = function () {
		    return this.z22_1;
		  };
		  protoOf(CSConversationEventJsonBodySerializer).a23 = function (encoder, value) {
		    encoder.zk(Companion_instance.b13(), value.w22_1);
		  };
		  protoOf(CSConversationEventJsonBodySerializer).yf = function (encoder, value) {
		    return this.a23(encoder, value instanceof CSConversationEventJsonBody ? value : THROW_CCE());
		  };
		  protoOf(CSConversationEventJsonBodySerializer).zf = function (decoder) {
		    var jsonObject = decoder.gj(Companion_instance.b13());
		    return new CSConversationEventJsonBody(jsonObject);
		  };
		  var CSConversationEventJsonBodySerializer_instance;
		  function CSConversationEventJsonBodySerializer_getInstance() {
		    if (CSConversationEventJsonBodySerializer_instance == null)
		      new CSConversationEventJsonBodySerializer();
		    return CSConversationEventJsonBodySerializer_instance;
		  }
		  function Companion_76() {
		  }
		  protoOf(Companion_76).b13 = function () {
		    return $serializer_getInstance_80();
		  };
		  var Companion_instance_77;
		  function $serializer_80() {
		    $serializer_instance_80 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSCustomEvent', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    this.b23_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_80).xf = function () {
		    return this.b23_1;
		  };
		  protoOf($serializer_80).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), JsonObjectSerializer_getInstance()];
		  };
		  protoOf($serializer_80).zf = function (decoder) {
		    var tmp0_desc = this.b23_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, JsonObjectSerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, JsonObjectSerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSCustomEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_80).c23 = function (encoder, value) {
		    var tmp0_desc = this.b23_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.d23_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e23_1);
		    tmp1_output.wk(tmp0_desc, 2, value.f23_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.g23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.g23_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.h23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.h23_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.i23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.i23_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, JsonObjectSerializer_getInstance(), value.j23_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_80).yf = function (encoder, value) {
		    return this.c23(encoder, value instanceof CSCustomEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_80;
		  function $serializer_getInstance_80() {
		    if ($serializer_instance_80 == null)
		      new $serializer_80();
		    return $serializer_instance_80;
		  }
		  function CSCustomEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_80().b23_1);
		    }
		    $this.d23_1 = id;
		    $this.e23_1 = type;
		    $this.f23_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.g23_1 = null;
		    else
		      $this.g23_1 = from;
		    if (0 === (seen1 & 16))
		      $this.h23_1 = null;
		    else
		      $this.h23_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.i23_1 = null;
		    else
		      $this.i23_1 = _embedded;
		    $this.j23_1 = body;
		    return $this;
		  }
		  function CSCustomEvent_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker) {
		    return CSCustomEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, objectCreate(protoOf(CSCustomEvent)));
		  }
		  function CSCustomEvent() {
		  }
		  protoOf(CSCustomEvent).v22 = function (conversationId) {
		    var tmp0_id = this.d23_1;
		    var tmp1_timestamp = this.f23_1;
		    var tmp2_from = Companion_instance_140.k23(this.i23_1);
		    var tmp3_eventType = this.e23_1;
		    var tmp4_body = this.j23_1.toString();
		    return new CustomConversationEvent(tmp0_id, tmp1_timestamp, conversationId, tmp2_from, tmp4_body, tmp3_eventType);
		  };
		  protoOf(CSCustomEvent).toString = function () {
		    return 'CSCustomEvent(id=' + this.d23_1 + ', type=' + this.e23_1 + ', timestamp=' + this.f23_1 + ', from=' + this.g23_1 + ', conversation_id=' + this.h23_1 + ', _embedded=' + toString_0(this.i23_1) + ', body=' + this.j23_1.toString() + ')';
		  };
		  protoOf(CSCustomEvent).hashCode = function () {
		    var result = this.d23_1;
		    result = imul(result, 31) + getStringHashCode(this.e23_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f23_1) | 0;
		    result = imul(result, 31) + (this.g23_1 == null ? 0 : getStringHashCode(this.g23_1)) | 0;
		    result = imul(result, 31) + (this.h23_1 == null ? 0 : getStringHashCode(this.h23_1)) | 0;
		    result = imul(result, 31) + (this.i23_1 == null ? 0 : this.i23_1.hashCode()) | 0;
		    result = imul(result, 31) + this.j23_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSCustomEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSCustomEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSCustomEvent ? other : THROW_CCE();
		    if (!(this.d23_1 === tmp0_other_with_cast.d23_1))
		      return false;
		    if (!(this.e23_1 === tmp0_other_with_cast.e23_1))
		      return false;
		    if (!(this.f23_1 === tmp0_other_with_cast.f23_1))
		      return false;
		    if (!(this.g23_1 == tmp0_other_with_cast.g23_1))
		      return false;
		    if (!(this.h23_1 == tmp0_other_with_cast.h23_1))
		      return false;
		    if (!equals(this.i23_1, tmp0_other_with_cast.i23_1))
		      return false;
		    if (!this.j23_1.equals(tmp0_other_with_cast.j23_1))
		      return false;
		    return true;
		  };
		  function Companion_77() {
		  }
		  protoOf(Companion_77).b13 = function () {
		    return $serializer_getInstance_81();
		  };
		  var Companion_instance_78;
		  function $serializer_81() {
		    $serializer_instance_81 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMemberInvitedEvent', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    this.l23_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_81).xf = function () {
		    return this.l23_1;
		  };
		  protoOf($serializer_81).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), $serializer_getInstance_85()];
		  };
		  protoOf($serializer_81).zf = function (decoder) {
		    var tmp0_desc = this.l23_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSMemberInvitedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_81).m23 = function (encoder, value) {
		    var tmp0_desc = this.l23_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.n23_1);
		    tmp1_output.wk(tmp0_desc, 1, value.o23_1);
		    tmp1_output.wk(tmp0_desc, 2, value.p23_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.q23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.q23_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.r23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.r23_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.s23_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.s23_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, $serializer_getInstance_85(), value.t23_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_81).yf = function (encoder, value) {
		    return this.m23(encoder, value instanceof CSMemberInvitedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_81;
		  function $serializer_getInstance_81() {
		    if ($serializer_instance_81 == null)
		      new $serializer_81();
		    return $serializer_instance_81;
		  }
		  function CSMemberInvitedEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_81().l23_1);
		    }
		    $this.n23_1 = id;
		    $this.o23_1 = type;
		    $this.p23_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.q23_1 = null;
		    else
		      $this.q23_1 = from;
		    if (0 === (seen1 & 16))
		      $this.r23_1 = null;
		    else
		      $this.r23_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.s23_1 = null;
		    else
		      $this.s23_1 = _embedded;
		    $this.t23_1 = body;
		    return $this;
		  }
		  function CSMemberInvitedEvent_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker) {
		    return CSMemberInvitedEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, objectCreate(protoOf(CSMemberInvitedEvent)));
		  }
		  function CSMemberInvitedEvent() {
		  }
		  protoOf(CSMemberInvitedEvent).v22 = function (conversationId) {
		    return new MemberInvitedConversationEvent(this.n23_1, this.p23_1, conversationId, Companion_instance_140.k23(this.s23_1), this.t23_1.x23());
		  };
		  protoOf(CSMemberInvitedEvent).toString = function () {
		    return 'CSMemberInvitedEvent(id=' + this.n23_1 + ', type=' + this.o23_1 + ', timestamp=' + this.p23_1 + ', from=' + this.q23_1 + ', conversation_id=' + this.r23_1 + ', _embedded=' + toString_0(this.s23_1) + ', body=' + this.t23_1.toString() + ')';
		  };
		  protoOf(CSMemberInvitedEvent).hashCode = function () {
		    var result = this.n23_1;
		    result = imul(result, 31) + getStringHashCode(this.o23_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.p23_1) | 0;
		    result = imul(result, 31) + (this.q23_1 == null ? 0 : getStringHashCode(this.q23_1)) | 0;
		    result = imul(result, 31) + (this.r23_1 == null ? 0 : getStringHashCode(this.r23_1)) | 0;
		    result = imul(result, 31) + (this.s23_1 == null ? 0 : this.s23_1.hashCode()) | 0;
		    result = imul(result, 31) + this.t23_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSMemberInvitedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSMemberInvitedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSMemberInvitedEvent ? other : THROW_CCE();
		    if (!(this.n23_1 === tmp0_other_with_cast.n23_1))
		      return false;
		    if (!(this.o23_1 === tmp0_other_with_cast.o23_1))
		      return false;
		    if (!(this.p23_1 === tmp0_other_with_cast.p23_1))
		      return false;
		    if (!(this.q23_1 == tmp0_other_with_cast.q23_1))
		      return false;
		    if (!(this.r23_1 == tmp0_other_with_cast.r23_1))
		      return false;
		    if (!equals(this.s23_1, tmp0_other_with_cast.s23_1))
		      return false;
		    if (!this.t23_1.equals(tmp0_other_with_cast.t23_1))
		      return false;
		    return true;
		  };
		  function Companion_78() {
		  }
		  protoOf(Companion_78).b13 = function () {
		    return $serializer_getInstance_82();
		  };
		  var Companion_instance_79;
		  function $serializer_82() {
		    $serializer_instance_82 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMemberJoinedEvent', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    this.y23_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_82).xf = function () {
		    return this.y23_1;
		  };
		  protoOf($serializer_82).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), $serializer_getInstance_85()];
		  };
		  protoOf($serializer_82).zf = function (decoder) {
		    var tmp0_desc = this.y23_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSMemberJoinedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_82).z23 = function (encoder, value) {
		    var tmp0_desc = this.y23_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.a24_1);
		    tmp1_output.wk(tmp0_desc, 1, value.b24_1);
		    tmp1_output.wk(tmp0_desc, 2, value.c24_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.d24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.d24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.e24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.e24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.f24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.f24_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, $serializer_getInstance_85(), value.g24_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_82).yf = function (encoder, value) {
		    return this.z23(encoder, value instanceof CSMemberJoinedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_82;
		  function $serializer_getInstance_82() {
		    if ($serializer_instance_82 == null)
		      new $serializer_82();
		    return $serializer_instance_82;
		  }
		  function CSMemberJoinedEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_82().y23_1);
		    }
		    $this.a24_1 = id;
		    $this.b24_1 = type;
		    $this.c24_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.d24_1 = null;
		    else
		      $this.d24_1 = from;
		    if (0 === (seen1 & 16))
		      $this.e24_1 = null;
		    else
		      $this.e24_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.f24_1 = null;
		    else
		      $this.f24_1 = _embedded;
		    $this.g24_1 = body;
		    return $this;
		  }
		  function CSMemberJoinedEvent_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker) {
		    return CSMemberJoinedEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, objectCreate(protoOf(CSMemberJoinedEvent)));
		  }
		  function CSMemberJoinedEvent() {
		  }
		  protoOf(CSMemberJoinedEvent).v22 = function (conversationId) {
		    return new MemberJoinedConversationEvent(this.a24_1, this.c24_1, conversationId, Companion_instance_140.k23(this.f24_1), this.g24_1.x23());
		  };
		  protoOf(CSMemberJoinedEvent).toString = function () {
		    return 'CSMemberJoinedEvent(id=' + this.a24_1 + ', type=' + this.b24_1 + ', timestamp=' + this.c24_1 + ', from=' + this.d24_1 + ', conversation_id=' + this.e24_1 + ', _embedded=' + toString_0(this.f24_1) + ', body=' + this.g24_1.toString() + ')';
		  };
		  protoOf(CSMemberJoinedEvent).hashCode = function () {
		    var result = this.a24_1;
		    result = imul(result, 31) + getStringHashCode(this.b24_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.c24_1) | 0;
		    result = imul(result, 31) + (this.d24_1 == null ? 0 : getStringHashCode(this.d24_1)) | 0;
		    result = imul(result, 31) + (this.e24_1 == null ? 0 : getStringHashCode(this.e24_1)) | 0;
		    result = imul(result, 31) + (this.f24_1 == null ? 0 : this.f24_1.hashCode()) | 0;
		    result = imul(result, 31) + this.g24_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSMemberJoinedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSMemberJoinedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSMemberJoinedEvent ? other : THROW_CCE();
		    if (!(this.a24_1 === tmp0_other_with_cast.a24_1))
		      return false;
		    if (!(this.b24_1 === tmp0_other_with_cast.b24_1))
		      return false;
		    if (!(this.c24_1 === tmp0_other_with_cast.c24_1))
		      return false;
		    if (!(this.d24_1 == tmp0_other_with_cast.d24_1))
		      return false;
		    if (!(this.e24_1 == tmp0_other_with_cast.e24_1))
		      return false;
		    if (!equals(this.f24_1, tmp0_other_with_cast.f24_1))
		      return false;
		    if (!this.g24_1.equals(tmp0_other_with_cast.g24_1))
		      return false;
		    return true;
		  };
		  function Companion_79() {
		  }
		  protoOf(Companion_79).b13 = function () {
		    return $serializer_getInstance_83();
		  };
		  var Companion_instance_80;
		  function $serializer_83() {
		    $serializer_instance_83 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMemberLeftEvent', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    this.h24_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_83).xf = function () {
		    return this.h24_1;
		  };
		  protoOf($serializer_83).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), $serializer_getInstance_85()];
		  };
		  protoOf($serializer_83).zf = function (decoder) {
		    var tmp0_desc = this.h24_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_85(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSMemberLeftEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_83).i24 = function (encoder, value) {
		    var tmp0_desc = this.h24_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.j24_1);
		    tmp1_output.wk(tmp0_desc, 1, value.k24_1);
		    tmp1_output.wk(tmp0_desc, 2, value.l24_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.m24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.m24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.n24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.n24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.o24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.o24_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, $serializer_getInstance_85(), value.p24_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_83).yf = function (encoder, value) {
		    return this.i24(encoder, value instanceof CSMemberLeftEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_83;
		  function $serializer_getInstance_83() {
		    if ($serializer_instance_83 == null)
		      new $serializer_83();
		    return $serializer_instance_83;
		  }
		  function CSMemberLeftEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_83().h24_1);
		    }
		    $this.j24_1 = id;
		    $this.k24_1 = type;
		    $this.l24_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.m24_1 = null;
		    else
		      $this.m24_1 = from;
		    if (0 === (seen1 & 16))
		      $this.n24_1 = null;
		    else
		      $this.n24_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.o24_1 = null;
		    else
		      $this.o24_1 = _embedded;
		    $this.p24_1 = body;
		    return $this;
		  }
		  function CSMemberLeftEvent_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker) {
		    return CSMemberLeftEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, objectCreate(protoOf(CSMemberLeftEvent)));
		  }
		  function CSMemberLeftEvent() {
		  }
		  protoOf(CSMemberLeftEvent).v22 = function (conversationId) {
		    return new MemberLeftConversationEvent(this.j24_1, this.l24_1, conversationId, Companion_instance_140.k23(this.o24_1), this.p24_1.x23());
		  };
		  protoOf(CSMemberLeftEvent).toString = function () {
		    return 'CSMemberLeftEvent(id=' + this.j24_1 + ', type=' + this.k24_1 + ', timestamp=' + this.l24_1 + ', from=' + this.m24_1 + ', conversation_id=' + this.n24_1 + ', _embedded=' + toString_0(this.o24_1) + ', body=' + this.p24_1.toString() + ')';
		  };
		  protoOf(CSMemberLeftEvent).hashCode = function () {
		    var result = this.j24_1;
		    result = imul(result, 31) + getStringHashCode(this.k24_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.l24_1) | 0;
		    result = imul(result, 31) + (this.m24_1 == null ? 0 : getStringHashCode(this.m24_1)) | 0;
		    result = imul(result, 31) + (this.n24_1 == null ? 0 : getStringHashCode(this.n24_1)) | 0;
		    result = imul(result, 31) + (this.o24_1 == null ? 0 : this.o24_1.hashCode()) | 0;
		    result = imul(result, 31) + this.p24_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSMemberLeftEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSMemberLeftEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSMemberLeftEvent ? other : THROW_CCE();
		    if (!(this.j24_1 === tmp0_other_with_cast.j24_1))
		      return false;
		    if (!(this.k24_1 === tmp0_other_with_cast.k24_1))
		      return false;
		    if (!(this.l24_1 === tmp0_other_with_cast.l24_1))
		      return false;
		    if (!(this.m24_1 == tmp0_other_with_cast.m24_1))
		      return false;
		    if (!(this.n24_1 == tmp0_other_with_cast.n24_1))
		      return false;
		    if (!equals(this.o24_1, tmp0_other_with_cast.o24_1))
		      return false;
		    if (!this.p24_1.equals(tmp0_other_with_cast.p24_1))
		      return false;
		    return true;
		  };
		  function Companion_80() {
		  }
		  protoOf(Companion_80).b13 = function () {
		    return $serializer_getInstance_84();
		  };
		  var Companion_instance_81;
		  function $serializer_84() {
		    $serializer_instance_84 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSEventDelete', this, 7);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    this.q24_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_84).xf = function () {
		    return this.q24_1;
		  };
		  protoOf($serializer_84).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), $serializer_getInstance_119()];
		  };
		  protoOf($serializer_84).zf = function (decoder) {
		    var tmp0_desc = this.q24_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_119(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.tj(tmp0_desc, 6, $serializer_getInstance_119(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CSEventDelete_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_84).r24 = function (encoder, value) {
		    var tmp0_desc = this.q24_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.s24_1);
		    tmp1_output.wk(tmp0_desc, 1, value.t24_1);
		    tmp1_output.wk(tmp0_desc, 2, value.u24_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.v24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.v24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.w24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.w24_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.x24_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.x24_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, $serializer_getInstance_119(), value.y24_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_84).yf = function (encoder, value) {
		    return this.r24(encoder, value instanceof CSEventDelete ? value : THROW_CCE());
		  };
		  var $serializer_instance_84;
		  function $serializer_getInstance_84() {
		    if ($serializer_instance_84 == null)
		      new $serializer_84();
		    return $serializer_instance_84;
		  }
		  function CSEventDelete_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_84().q24_1);
		    }
		    $this.s24_1 = id;
		    $this.t24_1 = type;
		    $this.u24_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.v24_1 = null;
		    else
		      $this.v24_1 = from;
		    if (0 === (seen1 & 16))
		      $this.w24_1 = null;
		    else
		      $this.w24_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.x24_1 = null;
		    else
		      $this.x24_1 = _embedded;
		    $this.y24_1 = body;
		    return $this;
		  }
		  function CSEventDelete_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker) {
		    return CSEventDelete_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, serializationConstructorMarker, objectCreate(protoOf(CSEventDelete)));
		  }
		  function CSEventDelete() {
		  }
		  protoOf(CSEventDelete).v22 = function (conversationId) {
		    return new EventDeleteConversationEvent(this.s24_1, this.u24_1, conversationId, Companion_instance_140.k23(this.x24_1), new EventStateBody(this.y24_1.z24_1));
		  };
		  protoOf(CSEventDelete).toString = function () {
		    return 'CSEventDelete(id=' + this.s24_1 + ', type=' + this.t24_1 + ', timestamp=' + this.u24_1 + ', from=' + this.v24_1 + ', conversation_id=' + this.w24_1 + ', _embedded=' + toString_0(this.x24_1) + ', body=' + this.y24_1.toString() + ')';
		  };
		  protoOf(CSEventDelete).hashCode = function () {
		    var result = this.s24_1;
		    result = imul(result, 31) + getStringHashCode(this.t24_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u24_1) | 0;
		    result = imul(result, 31) + (this.v24_1 == null ? 0 : getStringHashCode(this.v24_1)) | 0;
		    result = imul(result, 31) + (this.w24_1 == null ? 0 : getStringHashCode(this.w24_1)) | 0;
		    result = imul(result, 31) + (this.x24_1 == null ? 0 : this.x24_1.hashCode()) | 0;
		    result = imul(result, 31) + this.y24_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSEventDelete).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSEventDelete))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSEventDelete ? other : THROW_CCE();
		    if (!(this.s24_1 === tmp0_other_with_cast.s24_1))
		      return false;
		    if (!(this.t24_1 === tmp0_other_with_cast.t24_1))
		      return false;
		    if (!(this.u24_1 === tmp0_other_with_cast.u24_1))
		      return false;
		    if (!(this.v24_1 == tmp0_other_with_cast.v24_1))
		      return false;
		    if (!(this.w24_1 == tmp0_other_with_cast.w24_1))
		      return false;
		    if (!equals(this.x24_1, tmp0_other_with_cast.x24_1))
		      return false;
		    if (!this.y24_1.equals(tmp0_other_with_cast.y24_1))
		      return false;
		    return true;
		  };
		  function $serializer_85() {
		    $serializer_instance_85 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMemberEventBody', this, 3);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('member_id', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.a25_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_85).xf = function () {
		    return this.a25_1;
		  };
		  protoOf($serializer_85).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_51(), StringSerializer_getInstance(), $serializer_getInstance_168()];
		  };
		  protoOf($serializer_85).zf = function (decoder) {
		    var tmp0_desc = this.a25_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_51(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_51(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return CSMemberEventBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_85).b25 = function (encoder, value) {
		    var tmp0_desc = this.a25_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_51(), value.u23_1);
		    tmp1_output.wk(tmp0_desc, 1, value.v23_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_168(), value.w23_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_85).yf = function (encoder, value) {
		    return this.b25(encoder, value instanceof CSMemberEventBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_85;
		  function $serializer_getInstance_85() {
		    if ($serializer_instance_85 == null)
		      new $serializer_85();
		    return $serializer_instance_85;
		  }
		  function CSMemberEventBody_init_$Init$(seen1, user, member_id, channel, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_85().a25_1);
		    }
		    $this.u23_1 = user;
		    $this.v23_1 = member_id;
		    $this.w23_1 = channel;
		    return $this;
		  }
		  function CSMemberEventBody_init_$Create$(seen1, user, member_id, channel, serializationConstructorMarker) {
		    return CSMemberEventBody_init_$Init$(seen1, user, member_id, channel, serializationConstructorMarker, objectCreate(protoOf(CSMemberEventBody)));
		  }
		  function CSMemberEventBody() {
		  }
		  protoOf(CSMemberEventBody).x23 = function () {
		    return new Body_15(this.u23_1.a1x(), this.v23_1, this.w23_1.i25());
		  };
		  protoOf(CSMemberEventBody).toString = function () {
		    return 'CSMemberEventBody(user=' + toString(this.u23_1) + ', member_id=' + this.v23_1 + ', channel=' + this.w23_1.toString() + ')';
		  };
		  protoOf(CSMemberEventBody).hashCode = function () {
		    var result = hashCode(this.u23_1);
		    result = imul(result, 31) + getStringHashCode(this.v23_1) | 0;
		    result = imul(result, 31) + this.w23_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(CSMemberEventBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSMemberEventBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSMemberEventBody ? other : THROW_CCE();
		    if (!equals(this.u23_1, tmp0_other_with_cast.u23_1))
		      return false;
		    if (!(this.v23_1 === tmp0_other_with_cast.v23_1))
		      return false;
		    if (!this.w23_1.equals(tmp0_other_with_cast.w23_1))
		      return false;
		    return true;
		  };
		  function Companion_81() {
		    Companion_instance_82 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.j25_1 = [new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance())];
		  }
		  var Companion_instance_82;
		  function Companion_getInstance_83() {
		    if (Companion_instance_82 == null)
		      new Companion_81();
		    return Companion_instance_82;
		  }
		  function $serializer_86() {
		    $serializer_instance_86 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSEventState', this, 5);
		    tmp0_serialDesc.rq('seen_by', true);
		    tmp0_serialDesc.rq('delivered_to', true);
		    tmp0_serialDesc.rq('submitted_to', true);
		    tmp0_serialDesc.rq('rejected_by', true);
		    tmp0_serialDesc.rq('undeliverable_to', true);
		    this.k25_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_86).xf = function () {
		    return this.k25_1;
		  };
		  protoOf($serializer_86).gr = function () {
		    var tmp0_cached = Companion_getInstance_83().j25_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(tmp0_cached[0]), get_nullable(tmp0_cached[1]), get_nullable(tmp0_cached[2]), get_nullable(tmp0_cached[3]), get_nullable(tmp0_cached[4])];
		  };
		  protoOf($serializer_86).zf = function (decoder) {
		    var tmp0_desc = this.k25_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    var tmp10_cached = Companion_getInstance_83().j25_1;
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.vj(tmp0_desc, 0, tmp10_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, tmp10_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, tmp10_cached[2], tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, tmp10_cached[3], tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.vj(tmp0_desc, 0, tmp10_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, tmp10_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, tmp10_cached[2], tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, tmp10_cached[3], tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return CSEventState_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_86).l25 = function (encoder, value) {
		    var tmp0_desc = this.k25_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_83().j25_1;
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.m25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, tmp2_cached[0], value.m25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.n25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, tmp2_cached[1], value.n25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.o25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, tmp2_cached[2], value.o25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.p25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, tmp2_cached[3], value.p25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.q25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, tmp2_cached[4], value.q25_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_86).yf = function (encoder, value) {
		    return this.l25(encoder, value instanceof CSEventState ? value : THROW_CCE());
		  };
		  var $serializer_instance_86;
		  function $serializer_getInstance_86() {
		    if ($serializer_instance_86 == null)
		      new $serializer_86();
		    return $serializer_instance_86;
		  }
		  function CSEventState_init_$Init$(seen1, seenBy, deliveredTo, submittedTo, rejectedBy, undeliverableTo, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_86().k25_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.m25_1 = null;
		    else
		      $this.m25_1 = seenBy;
		    if (0 === (seen1 & 2))
		      $this.n25_1 = null;
		    else
		      $this.n25_1 = deliveredTo;
		    if (0 === (seen1 & 4))
		      $this.o25_1 = null;
		    else
		      $this.o25_1 = submittedTo;
		    if (0 === (seen1 & 8))
		      $this.p25_1 = null;
		    else
		      $this.p25_1 = rejectedBy;
		    if (0 === (seen1 & 16))
		      $this.q25_1 = null;
		    else
		      $this.q25_1 = undeliverableTo;
		    return $this;
		  }
		  function CSEventState_init_$Create$(seen1, seenBy, deliveredTo, submittedTo, rejectedBy, undeliverableTo, serializationConstructorMarker) {
		    return CSEventState_init_$Init$(seen1, seenBy, deliveredTo, submittedTo, rejectedBy, undeliverableTo, serializationConstructorMarker, objectCreate(protoOf(CSEventState)));
		  }
		  function CSEventState() {
		    Companion_getInstance_83();
		    this.m25_1 = null;
		    this.n25_1 = null;
		    this.o25_1 = null;
		    this.p25_1 = null;
		    this.q25_1 = null;
		  }
		  protoOf(CSEventState).r25 = function () {
		    var tmp8_safe_receiver = this.m25_1;
		    var tmp9_elvis_lhs = tmp8_safe_receiver == null ? null : tmp8_safe_receiver.v1();
		    var tmp;
		    if (tmp9_elvis_lhs == null) {
		      // Inline function 'kotlin.collections.setOf' call
		      tmp = emptySet();
		    } else {
		      tmp = tmp9_elvis_lhs;
		    }
		    var tmp_0 = tmp;
		    var tmp6_safe_receiver = this.n25_1;
		    var tmp7_elvis_lhs = tmp6_safe_receiver == null ? null : tmp6_safe_receiver.v1();
		    var tmp_1;
		    if (tmp7_elvis_lhs == null) {
		      // Inline function 'kotlin.collections.setOf' call
		      tmp_1 = emptySet();
		    } else {
		      tmp_1 = tmp7_elvis_lhs;
		    }
		    var tmp_2 = plus(tmp_0, tmp_1);
		    var tmp4_safe_receiver = this.o25_1;
		    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.v1();
		    var tmp_3;
		    if (tmp5_elvis_lhs == null) {
		      // Inline function 'kotlin.collections.setOf' call
		      tmp_3 = emptySet();
		    } else {
		      tmp_3 = tmp5_elvis_lhs;
		    }
		    var tmp_4 = plus(tmp_2, tmp_3);
		    var tmp2_safe_receiver = this.p25_1;
		    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.v1();
		    var tmp_5;
		    if (tmp3_elvis_lhs == null) {
		      // Inline function 'kotlin.collections.setOf' call
		      tmp_5 = emptySet();
		    } else {
		      tmp_5 = tmp3_elvis_lhs;
		    }
		    var tmp_6 = plus(tmp_4, tmp_5);
		    var tmp0_safe_receiver = this.q25_1;
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v1();
		    var tmp_7;
		    if (tmp1_elvis_lhs == null) {
		      // Inline function 'kotlin.collections.setOf' call
		      tmp_7 = emptySet();
		    } else {
		      tmp_7 = tmp1_elvis_lhs;
		    }
		    var memberIds = plus(tmp_6, tmp_7);
		    // Inline function 'kotlin.collections.mutableMapOf' call
		    var map = LinkedHashMap_init_$Create$();
		    // Inline function 'kotlin.collections.forEach' call
		    var tmp0_iterator = memberIds.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.actions.CSEventState.getMemberStatus.<anonymous>' call
		      // Inline function 'kotlin.collections.set' call
		      var tmp0_safe_receiver_0 = this.m25_1;
		      var tmp_8 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.u1(element);
		      var tmp1_safe_receiver = this.n25_1;
		      var tmp_9 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u1(element);
		      var tmp2_safe_receiver_0 = this.o25_1;
		      var tmp_10 = tmp2_safe_receiver_0 == null ? null : tmp2_safe_receiver_0.u1(element);
		      var tmp3_safe_receiver = this.p25_1;
		      var tmp_11 = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.u1(element);
		      var tmp4_safe_receiver_0 = this.q25_1;
		      var value = new EventState(tmp_8, tmp_9, tmp_10, tmp_11, tmp4_safe_receiver_0 == null ? null : tmp4_safe_receiver_0.u1(element));
		      map.b2(element, value);
		    }
		    return map;
		  };
		  function $serializer_87() {
		    $serializer_instance_87 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSEventTimestamp', this, 3);
		    tmp0_serialDesc.rq('created', true);
		    tmp0_serialDesc.rq('updated', true);
		    tmp0_serialDesc.rq('deleted', true);
		    this.s25_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_87).xf = function () {
		    return this.s25_1;
		  };
		  protoOf($serializer_87).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_87).zf = function (decoder) {
		    var tmp0_desc = this.s25_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return CSEventTimestamp_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_87).t25 = function (encoder, value) {
		    var tmp0_desc = this.s25_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.u25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.u25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.v25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.v25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.w25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.w25_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_87).yf = function (encoder, value) {
		    return this.t25(encoder, value instanceof CSEventTimestamp ? value : THROW_CCE());
		  };
		  var $serializer_instance_87;
		  function $serializer_getInstance_87() {
		    if ($serializer_instance_87 == null)
		      new $serializer_87();
		    return $serializer_instance_87;
		  }
		  function CSEventTimestamp_init_$Init$(seen1, created, updated, deleted, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_87().s25_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.u25_1 = null;
		    else
		      $this.u25_1 = created;
		    if (0 === (seen1 & 2))
		      $this.v25_1 = null;
		    else
		      $this.v25_1 = updated;
		    if (0 === (seen1 & 4))
		      $this.w25_1 = null;
		    else
		      $this.w25_1 = deleted;
		    return $this;
		  }
		  function CSEventTimestamp_init_$Create$(seen1, created, updated, deleted, serializationConstructorMarker) {
		    return CSEventTimestamp_init_$Init$(seen1, created, updated, deleted, serializationConstructorMarker, objectCreate(protoOf(CSEventTimestamp)));
		  }
		  function CSEventTimestamp() {
		  }
		  protoOf(CSEventTimestamp).toString = function () {
		    return 'CSEventTimestamp(created=' + this.u25_1 + ', updated=' + this.v25_1 + ', deleted=' + this.w25_1 + ')';
		  };
		  protoOf(CSEventTimestamp).hashCode = function () {
		    var result = this.u25_1 == null ? 0 : getStringHashCode(this.u25_1);
		    result = imul(result, 31) + (this.v25_1 == null ? 0 : getStringHashCode(this.v25_1)) | 0;
		    result = imul(result, 31) + (this.w25_1 == null ? 0 : getStringHashCode(this.w25_1)) | 0;
		    return result;
		  };
		  protoOf(CSEventTimestamp).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSEventTimestamp))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSEventTimestamp ? other : THROW_CCE();
		    if (!(this.u25_1 == tmp0_other_with_cast.u25_1))
		      return false;
		    if (!(this.v25_1 == tmp0_other_with_cast.v25_1))
		      return false;
		    if (!(this.w25_1 == tmp0_other_with_cast.w25_1))
		      return false;
		    return true;
		  };
		  function CSConversationEventType_MEMBER_INVITED_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MEMBER_INVITED_instance;
		  }
		  function CSConversationEventType_MEMBER_JOINED_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MEMBER_JOINED_instance;
		  }
		  function CSConversationEventType_MEMBER_LEFT_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MEMBER_LEFT_instance;
		  }
		  function CSConversationEventType_MESSAGE_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_instance;
		  }
		  function CSConversationEventType_EPHEMERAL_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_EPHEMERAL_instance;
		  }
		  function CSConversationEventType_CUSTOM_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_CUSTOM_instance;
		  }
		  function CSConversationEventType_EVENT_DELETE_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_EVENT_DELETE_instance;
		  }
		  function CSConversationEventType_MESSAGE_DELIVERED_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_DELIVERED_instance;
		  }
		  function CSConversationEventType_MESSAGE_REJECTED_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_REJECTED_instance;
		  }
		  function CSConversationEventType_MESSAGE_UNDELIVERABLE_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_UNDELIVERABLE_instance;
		  }
		  function CSConversationEventType_MESSAGE_SUBMITTED_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_SUBMITTED_instance;
		  }
		  function CSConversationEventType_MESSAGE_SEEN_getInstance() {
		    CSConversationEventType_initEntries();
		    return CSConversationEventType_MESSAGE_SEEN_instance;
		  }
		  function $serializer_88() {
		    $serializer_instance_88 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCHangup', this, 5);
		    tmp0_serialDesc.rq('channel', false);
		    tmp0_serialDesc.rq('bandwidth', false);
		    tmp0_serialDesc.rq('reason', false);
		    tmp0_serialDesc.rq('quality', false);
		    tmp0_serialDesc.rq('direction', false);
		    this.x25_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_88).xf = function () {
		    return this.x25_1;
		  };
		  protoOf($serializer_88).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_168(), $serializer_getInstance_175(), $serializer_getInstance_174(), $serializer_getInstance_172(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_88).zf = function (decoder) {
		    var tmp0_desc = this.x25_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_168(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.tj(tmp0_desc, 1, $serializer_getInstance_175(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.tj(tmp0_desc, 2, $serializer_getInstance_174(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.tj(tmp0_desc, 3, $serializer_getInstance_172(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_168(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.tj(tmp0_desc, 1, $serializer_getInstance_175(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.tj(tmp0_desc, 2, $serializer_getInstance_174(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.tj(tmp0_desc, 3, $serializer_getInstance_172(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return RTCHangup_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_88).y25 = function (encoder, value) {
		    var tmp0_desc = this.x25_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_168(), value.z25_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_175(), value.a26_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_174(), value.b26_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_172(), value.c26_1);
		    tmp1_output.wk(tmp0_desc, 4, value.d26_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_88).yf = function (encoder, value) {
		    return this.y25(encoder, value instanceof RTCHangup ? value : THROW_CCE());
		  };
		  var $serializer_instance_88;
		  function $serializer_getInstance_88() {
		    if ($serializer_instance_88 == null)
		      new $serializer_88();
		    return $serializer_instance_88;
		  }
		  function RTCHangup_init_$Init$(seen1, channel, bandwidth, reason, quality, direction, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_88().x25_1);
		    }
		    $this.z25_1 = channel;
		    $this.a26_1 = bandwidth;
		    $this.b26_1 = reason;
		    $this.c26_1 = quality;
		    $this.d26_1 = direction;
		    return $this;
		  }
		  function RTCHangup_init_$Create$(seen1, channel, bandwidth, reason, quality, direction, serializationConstructorMarker) {
		    return RTCHangup_init_$Init$(seen1, channel, bandwidth, reason, quality, direction, serializationConstructorMarker, objectCreate(protoOf(RTCHangup)));
		  }
		  function RTCHangup() {
		  }
		  protoOf(RTCHangup).toString = function () {
		    return 'RTCHangup(channel=' + this.z25_1.toString() + ', bandwidth=' + this.a26_1.toString() + ', reason=' + this.b26_1.toString() + ', quality=' + this.c26_1.toString() + ', direction=' + this.d26_1 + ')';
		  };
		  protoOf(RTCHangup).hashCode = function () {
		    var result = this.z25_1.hashCode();
		    result = imul(result, 31) + this.a26_1.hashCode() | 0;
		    result = imul(result, 31) + this.b26_1.hashCode() | 0;
		    result = imul(result, 31) + this.c26_1.hashCode() | 0;
		    result = imul(result, 31) + getStringHashCode(this.d26_1) | 0;
		    return result;
		  };
		  protoOf(RTCHangup).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCHangup))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCHangup ? other : THROW_CCE();
		    if (!this.z25_1.equals(tmp0_other_with_cast.z25_1))
		      return false;
		    if (!this.a26_1.equals(tmp0_other_with_cast.a26_1))
		      return false;
		    if (!this.b26_1.equals(tmp0_other_with_cast.b26_1))
		      return false;
		    if (!this.c26_1.equals(tmp0_other_with_cast.c26_1))
		      return false;
		    if (!(this.d26_1 === tmp0_other_with_cast.d26_1))
		      return false;
		    return true;
		  };
		  function Companion_82() {
		  }
		  protoOf(Companion_82).b13 = function () {
		    return $serializer_getInstance_89();
		  };
		  var Companion_instance_83;
		  function $serializer_89() {
		    $serializer_instance_89 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.e26_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_89).xf = function () {
		    return this.e26_1;
		  };
		  protoOf($serializer_89).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_117(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_89).zf = function (decoder) {
		    var tmp0_desc = this.e26_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_117(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_117(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioSayEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_89).f26 = function (encoder, value) {
		    var tmp0_desc = this.e26_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_117(), value.g26_1);
		    tmp1_output.rk(tmp0_desc, 1, value.h26_1);
		    tmp1_output.wk(tmp0_desc, 2, value.i26_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.j26_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.j26_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.k26_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_89).yf = function (encoder, value) {
		    return this.f26(encoder, value instanceof AudioSayEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_89;
		  function $serializer_getInstance_89() {
		    if ($serializer_instance_89 == null)
		      new $serializer_89();
		    return $serializer_instance_89;
		  }
		  function AudioSayEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_89().e26_1);
		    }
		    $this.g26_1 = body;
		    $this.h26_1 = id;
		    $this.i26_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.j26_1 = null;
		    else
		      $this.j26_1 = from;
		    $this.k26_1 = type;
		    return $this;
		  }
		  function AudioSayEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioSayEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioSayEvent)));
		  }
		  function AudioSayEvent() {
		  }
		  protoOf(AudioSayEvent).l26 = function () {
		    return this.h26_1;
		  };
		  protoOf(AudioSayEvent).m26 = function () {
		    return this.i26_1;
		  };
		  protoOf(AudioSayEvent).toString = function () {
		    return 'AudioSayEvent(body=' + this.g26_1.toString() + ', id=' + this.h26_1 + ', cid=' + this.i26_1 + ', from=' + this.j26_1 + ', type=' + this.k26_1 + ')';
		  };
		  protoOf(AudioSayEvent).hashCode = function () {
		    var result = this.g26_1.hashCode();
		    result = imul(result, 31) + this.h26_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.i26_1) | 0;
		    result = imul(result, 31) + (this.j26_1 == null ? 0 : getStringHashCode(this.j26_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k26_1) | 0;
		    return result;
		  };
		  protoOf(AudioSayEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayEvent ? other : THROW_CCE();
		    if (!this.g26_1.equals(tmp0_other_with_cast.g26_1))
		      return false;
		    if (!(this.h26_1 === tmp0_other_with_cast.h26_1))
		      return false;
		    if (!(this.i26_1 === tmp0_other_with_cast.i26_1))
		      return false;
		    if (!(this.j26_1 == tmp0_other_with_cast.j26_1))
		      return false;
		    if (!(this.k26_1 === tmp0_other_with_cast.k26_1))
		      return false;
		    return true;
		  };
		  function Companion_83() {
		  }
		  protoOf(Companion_83).b13 = function () {
		    return $serializer_getInstance_90();
		  };
		  var Companion_instance_84;
		  function $serializer_90() {
		    $serializer_instance_90 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegStatusUpdateEvent', this, 6);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.n26_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_90).xf = function () {
		    return this.n26_1;
		  };
		  protoOf($serializer_90).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_91(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_90).zf = function (decoder) {
		    var tmp0_desc = this.n26_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.tj(tmp0_desc, 0, $serializer_getInstance_91(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, $serializer_getInstance_54(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.tj(tmp0_desc, 0, $serializer_getInstance_91(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, $serializer_getInstance_54(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return LegStatusUpdateEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_90).o26 = function (encoder, value) {
		    var tmp0_desc = this.n26_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_91(), value.p26_1);
		    tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.q26_1);
		    tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.r26_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.s26_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.s26_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.t26_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, $serializer_getInstance_54(), value.t26_1);
		    }
		    tmp1_output.wk(tmp0_desc, 5, value.u26_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_90).yf = function (encoder, value) {
		    return this.o26(encoder, value instanceof LegStatusUpdateEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_90;
		  function $serializer_getInstance_90() {
		    if ($serializer_instance_90 == null)
		      new $serializer_90();
		    return $serializer_instance_90;
		  }
		  function LegStatusUpdateEvent_init_$Init$(seen1, body, id, cid, from, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(39 === (39 & seen1))) {
		      throwMissingFieldException(seen1, 39, $serializer_getInstance_90().n26_1);
		    }
		    $this.p26_1 = body;
		    $this.q26_1 = id;
		    $this.r26_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.s26_1 = null;
		    else
		      $this.s26_1 = from;
		    if (0 === (seen1 & 16))
		      $this.t26_1 = null;
		    else
		      $this.t26_1 = _embedded;
		    $this.u26_1 = type;
		    return $this;
		  }
		  function LegStatusUpdateEvent_init_$Create$(seen1, body, id, cid, from, _embedded, type, serializationConstructorMarker) {
		    return LegStatusUpdateEvent_init_$Init$(seen1, body, id, cid, from, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(LegStatusUpdateEvent)));
		  }
		  function LegStatusUpdateEvent() {
		  }
		  protoOf(LegStatusUpdateEvent).l26 = function () {
		    return this.q26_1;
		  };
		  protoOf(LegStatusUpdateEvent).m26 = function () {
		    return this.r26_1;
		  };
		  function Companion_84() {
		    Companion_instance_85 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.v26_1 = [null, null, null, null, new ArrayListSerializer($serializer_getInstance_118())];
		  }
		  var Companion_instance_85;
		  function Companion_getInstance_86() {
		    if (Companion_instance_85 == null)
		      new Companion_84();
		    return Companion_instance_85;
		  }
		  function $serializer_91() {
		    $serializer_instance_91 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegStatusUpdate', this, 5);
		    tmp0_serialDesc.rq('direction', false);
		    tmp0_serialDesc.rq('leg_id', false);
		    tmp0_serialDesc.rq('status', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('statusHistory', false);
		    this.w26_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_91).xf = function () {
		    return this.w26_1;
		  };
		  protoOf($serializer_91).gr = function () {
		    var tmp0_cached = Companion_getInstance_86().v26_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4]];
		  };
		  protoOf($serializer_91).zf = function (decoder) {
		    var tmp0_desc = this.w26_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    var tmp10_cached = Companion_getInstance_86().v26_1;
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.tj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return LegStatusUpdate_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_91).x26 = function (encoder, value) {
		    var tmp0_desc = this.w26_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_86().v26_1;
		    tmp1_output.wk(tmp0_desc, 0, value.y26_1);
		    tmp1_output.wk(tmp0_desc, 1, value.z26_1);
		    tmp1_output.wk(tmp0_desc, 2, value.a27_1);
		    tmp1_output.wk(tmp0_desc, 3, value.b27_1);
		    tmp1_output.yk(tmp0_desc, 4, tmp2_cached[4], value.c27_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_91).yf = function (encoder, value) {
		    return this.x26(encoder, value instanceof LegStatusUpdate ? value : THROW_CCE());
		  };
		  var $serializer_instance_91;
		  function $serializer_getInstance_91() {
		    if ($serializer_instance_91 == null)
		      new $serializer_91();
		    return $serializer_instance_91;
		  }
		  function LegStatusUpdate_init_$Init$(seen1, direction, leg_id, status, type, statusHistory, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_91().w26_1);
		    }
		    $this.y26_1 = direction;
		    $this.z26_1 = leg_id;
		    $this.a27_1 = status;
		    $this.b27_1 = type;
		    $this.c27_1 = statusHistory;
		    return $this;
		  }
		  function LegStatusUpdate_init_$Create$(seen1, direction, leg_id, status, type, statusHistory, serializationConstructorMarker) {
		    return LegStatusUpdate_init_$Init$(seen1, direction, leg_id, status, type, statusHistory, serializationConstructorMarker, objectCreate(protoOf(LegStatusUpdate)));
		  }
		  function LegStatusUpdate() {
		  }
		  protoOf(LegStatusUpdate).toString = function () {
		    return 'LegStatusUpdate(direction=' + this.y26_1 + ', leg_id=' + this.z26_1 + ', status=' + this.a27_1 + ', type=' + this.b27_1 + ', statusHistory=' + toString(this.c27_1) + ')';
		  };
		  protoOf(LegStatusUpdate).hashCode = function () {
		    var result = getStringHashCode(this.y26_1);
		    result = imul(result, 31) + getStringHashCode(this.z26_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.a27_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.b27_1) | 0;
		    result = imul(result, 31) + hashCode(this.c27_1) | 0;
		    return result;
		  };
		  protoOf(LegStatusUpdate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegStatusUpdate))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegStatusUpdate ? other : THROW_CCE();
		    if (!(this.y26_1 === tmp0_other_with_cast.y26_1))
		      return false;
		    if (!(this.z26_1 === tmp0_other_with_cast.z26_1))
		      return false;
		    if (!(this.a27_1 === tmp0_other_with_cast.a27_1))
		      return false;
		    if (!(this.b27_1 === tmp0_other_with_cast.b27_1))
		      return false;
		    if (!equals(this.c27_1, tmp0_other_with_cast.c27_1))
		      return false;
		    return true;
		  };
		  function Companion_85() {
		  }
		  protoOf(Companion_85).b13 = function () {
		    return $serializer_getInstance_92();
		  };
		  var Companion_instance_86;
		  function $serializer_92() {
		    $serializer_instance_92 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioMuteOnEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.d27_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_92).xf = function () {
		    return this.d27_1;
		  };
		  protoOf($serializer_92).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_93(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_92).zf = function (decoder) {
		    var tmp0_desc = this.d27_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_93(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_93(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioMuteOnEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_92).e27 = function (encoder, value) {
		    var tmp0_desc = this.d27_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_93(), value.f27_1);
		    tmp1_output.rk(tmp0_desc, 1, value.g27_1);
		    tmp1_output.wk(tmp0_desc, 2, value.h27_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.i27_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.i27_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.j27_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_92).yf = function (encoder, value) {
		    return this.e27(encoder, value instanceof AudioMuteOnEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_92;
		  function $serializer_getInstance_92() {
		    if ($serializer_instance_92 == null)
		      new $serializer_92();
		    return $serializer_instance_92;
		  }
		  function AudioMuteOnEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_92().d27_1);
		    }
		    $this.f27_1 = body;
		    $this.g27_1 = id;
		    $this.h27_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.i27_1 = null;
		    else
		      $this.i27_1 = from;
		    $this.j27_1 = type;
		    return $this;
		  }
		  function AudioMuteOnEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioMuteOnEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioMuteOnEvent)));
		  }
		  function AudioMuteOnEvent() {
		  }
		  protoOf(AudioMuteOnEvent).l26 = function () {
		    return this.g27_1;
		  };
		  protoOf(AudioMuteOnEvent).m26 = function () {
		    return this.h27_1;
		  };
		  protoOf(AudioMuteOnEvent).toString = function () {
		    return 'AudioMuteOnEvent(body=' + this.f27_1.toString() + ', id=' + this.g27_1 + ', cid=' + this.h27_1 + ', from=' + this.i27_1 + ', type=' + this.j27_1 + ')';
		  };
		  protoOf(AudioMuteOnEvent).hashCode = function () {
		    var result = this.f27_1.hashCode();
		    result = imul(result, 31) + this.g27_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.h27_1) | 0;
		    result = imul(result, 31) + (this.i27_1 == null ? 0 : getStringHashCode(this.i27_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j27_1) | 0;
		    return result;
		  };
		  protoOf(AudioMuteOnEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioMuteOnEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioMuteOnEvent ? other : THROW_CCE();
		    if (!this.f27_1.equals(tmp0_other_with_cast.f27_1))
		      return false;
		    if (!(this.g27_1 === tmp0_other_with_cast.g27_1))
		      return false;
		    if (!(this.h27_1 === tmp0_other_with_cast.h27_1))
		      return false;
		    if (!(this.i27_1 == tmp0_other_with_cast.i27_1))
		      return false;
		    if (!(this.j27_1 === tmp0_other_with_cast.j27_1))
		      return false;
		    return true;
		  };
		  function $serializer_93() {
		    $serializer_instance_93 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioMuteBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.k27_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_93).xf = function () {
		    return this.k27_1;
		  };
		  protoOf($serializer_93).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_93).zf = function (decoder) {
		    var tmp0_desc = this.k27_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return AudioMuteBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_93).l27 = function (encoder, value) {
		    var tmp0_desc = this.k27_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.m27_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_93).yf = function (encoder, value) {
		    return this.l27(encoder, value instanceof AudioMuteBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_93;
		  function $serializer_getInstance_93() {
		    if ($serializer_instance_93 == null)
		      new $serializer_93();
		    return $serializer_instance_93;
		  }
		  function AudioMuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_93().k27_1);
		    }
		    $this.m27_1 = rtc_id;
		    return $this;
		  }
		  function AudioMuteBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return AudioMuteBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(AudioMuteBody)));
		  }
		  function AudioMuteBody() {
		  }
		  protoOf(AudioMuteBody).toString = function () {
		    return 'AudioMuteBody(rtc_id=' + this.m27_1 + ')';
		  };
		  protoOf(AudioMuteBody).hashCode = function () {
		    return getStringHashCode(this.m27_1);
		  };
		  protoOf(AudioMuteBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioMuteBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioMuteBody ? other : THROW_CCE();
		    if (!(this.m27_1 === tmp0_other_with_cast.m27_1))
		      return false;
		    return true;
		  };
		  function Companion_86() {
		  }
		  protoOf(Companion_86).b13 = function () {
		    return $serializer_getInstance_94();
		  };
		  var Companion_instance_87;
		  function $serializer_94() {
		    $serializer_instance_94 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioMuteOffEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.n27_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_94).xf = function () {
		    return this.n27_1;
		  };
		  protoOf($serializer_94).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_93(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_94).zf = function (decoder) {
		    var tmp0_desc = this.n27_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_93(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_93(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioMuteOffEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_94).o27 = function (encoder, value) {
		    var tmp0_desc = this.n27_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_93(), value.p27_1);
		    tmp1_output.rk(tmp0_desc, 1, value.q27_1);
		    tmp1_output.wk(tmp0_desc, 2, value.r27_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.s27_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.s27_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.t27_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_94).yf = function (encoder, value) {
		    return this.o27(encoder, value instanceof AudioMuteOffEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_94;
		  function $serializer_getInstance_94() {
		    if ($serializer_instance_94 == null)
		      new $serializer_94();
		    return $serializer_instance_94;
		  }
		  function AudioMuteOffEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_94().n27_1);
		    }
		    $this.p27_1 = body;
		    $this.q27_1 = id;
		    $this.r27_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.s27_1 = null;
		    else
		      $this.s27_1 = from;
		    $this.t27_1 = type;
		    return $this;
		  }
		  function AudioMuteOffEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioMuteOffEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioMuteOffEvent)));
		  }
		  function AudioMuteOffEvent() {
		  }
		  protoOf(AudioMuteOffEvent).l26 = function () {
		    return this.q27_1;
		  };
		  protoOf(AudioMuteOffEvent).m26 = function () {
		    return this.r27_1;
		  };
		  protoOf(AudioMuteOffEvent).toString = function () {
		    return 'AudioMuteOffEvent(body=' + this.p27_1.toString() + ', id=' + this.q27_1 + ', cid=' + this.r27_1 + ', from=' + this.s27_1 + ', type=' + this.t27_1 + ')';
		  };
		  protoOf(AudioMuteOffEvent).hashCode = function () {
		    var result = this.p27_1.hashCode();
		    result = imul(result, 31) + this.q27_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.r27_1) | 0;
		    result = imul(result, 31) + (this.s27_1 == null ? 0 : getStringHashCode(this.s27_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.t27_1) | 0;
		    return result;
		  };
		  protoOf(AudioMuteOffEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioMuteOffEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioMuteOffEvent ? other : THROW_CCE();
		    if (!this.p27_1.equals(tmp0_other_with_cast.p27_1))
		      return false;
		    if (!(this.q27_1 === tmp0_other_with_cast.q27_1))
		      return false;
		    if (!(this.r27_1 === tmp0_other_with_cast.r27_1))
		      return false;
		    if (!(this.s27_1 == tmp0_other_with_cast.s27_1))
		      return false;
		    if (!(this.t27_1 === tmp0_other_with_cast.t27_1))
		      return false;
		    return true;
		  };
		  function Companion_87() {
		  }
		  protoOf(Companion_87).b13 = function () {
		    return $serializer_getInstance_95();
		  };
		  var Companion_instance_88;
		  function $serializer_95() {
		    $serializer_instance_95 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioEarmuffOnEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.u27_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_95).xf = function () {
		    return this.u27_1;
		  };
		  protoOf($serializer_95).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_96(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_95).zf = function (decoder) {
		    var tmp0_desc = this.u27_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_96(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_96(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioEarmuffOnEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_95).v27 = function (encoder, value) {
		    var tmp0_desc = this.u27_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_96(), value.w27_1);
		    tmp1_output.rk(tmp0_desc, 1, value.x27_1);
		    tmp1_output.wk(tmp0_desc, 2, value.y27_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.z27_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.z27_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.a28_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_95).yf = function (encoder, value) {
		    return this.v27(encoder, value instanceof AudioEarmuffOnEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_95;
		  function $serializer_getInstance_95() {
		    if ($serializer_instance_95 == null)
		      new $serializer_95();
		    return $serializer_instance_95;
		  }
		  function AudioEarmuffOnEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_95().u27_1);
		    }
		    $this.w27_1 = body;
		    $this.x27_1 = id;
		    $this.y27_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.z27_1 = null;
		    else
		      $this.z27_1 = from;
		    $this.a28_1 = type;
		    return $this;
		  }
		  function AudioEarmuffOnEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioEarmuffOnEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioEarmuffOnEvent)));
		  }
		  function AudioEarmuffOnEvent() {
		  }
		  protoOf(AudioEarmuffOnEvent).l26 = function () {
		    return this.x27_1;
		  };
		  protoOf(AudioEarmuffOnEvent).m26 = function () {
		    return this.y27_1;
		  };
		  protoOf(AudioEarmuffOnEvent).toString = function () {
		    return 'AudioEarmuffOnEvent(body=' + this.w27_1.toString() + ', id=' + this.x27_1 + ', cid=' + this.y27_1 + ', from=' + this.z27_1 + ', type=' + this.a28_1 + ')';
		  };
		  protoOf(AudioEarmuffOnEvent).hashCode = function () {
		    var result = this.w27_1.hashCode();
		    result = imul(result, 31) + this.x27_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.y27_1) | 0;
		    result = imul(result, 31) + (this.z27_1 == null ? 0 : getStringHashCode(this.z27_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.a28_1) | 0;
		    return result;
		  };
		  protoOf(AudioEarmuffOnEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioEarmuffOnEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioEarmuffOnEvent ? other : THROW_CCE();
		    if (!this.w27_1.equals(tmp0_other_with_cast.w27_1))
		      return false;
		    if (!(this.x27_1 === tmp0_other_with_cast.x27_1))
		      return false;
		    if (!(this.y27_1 === tmp0_other_with_cast.y27_1))
		      return false;
		    if (!(this.z27_1 == tmp0_other_with_cast.z27_1))
		      return false;
		    if (!(this.a28_1 === tmp0_other_with_cast.a28_1))
		      return false;
		    return true;
		  };
		  function $serializer_96() {
		    $serializer_instance_96 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioEarmuffBody', this, 1);
		    tmp0_serialDesc.rq('rtc_id', false);
		    this.b28_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_96).xf = function () {
		    return this.b28_1;
		  };
		  protoOf($serializer_96).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_96).zf = function (decoder) {
		    var tmp0_desc = this.b28_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return AudioEarmuffBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_96).c28 = function (encoder, value) {
		    var tmp0_desc = this.b28_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.d28_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_96).yf = function (encoder, value) {
		    return this.c28(encoder, value instanceof AudioEarmuffBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_96;
		  function $serializer_getInstance_96() {
		    if ($serializer_instance_96 == null)
		      new $serializer_96();
		    return $serializer_instance_96;
		  }
		  function AudioEarmuffBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_96().b28_1);
		    }
		    $this.d28_1 = rtc_id;
		    return $this;
		  }
		  function AudioEarmuffBody_init_$Create$(seen1, rtc_id, serializationConstructorMarker) {
		    return AudioEarmuffBody_init_$Init$(seen1, rtc_id, serializationConstructorMarker, objectCreate(protoOf(AudioEarmuffBody)));
		  }
		  function AudioEarmuffBody() {
		  }
		  protoOf(AudioEarmuffBody).toString = function () {
		    return 'AudioEarmuffBody(rtc_id=' + this.d28_1 + ')';
		  };
		  protoOf(AudioEarmuffBody).hashCode = function () {
		    return getStringHashCode(this.d28_1);
		  };
		  protoOf(AudioEarmuffBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioEarmuffBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioEarmuffBody ? other : THROW_CCE();
		    if (!(this.d28_1 === tmp0_other_with_cast.d28_1))
		      return false;
		    return true;
		  };
		  function Companion_88() {
		  }
		  protoOf(Companion_88).b13 = function () {
		    return $serializer_getInstance_97();
		  };
		  var Companion_instance_89;
		  function $serializer_97() {
		    $serializer_instance_97 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioEarmuffOffEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.e28_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_97).xf = function () {
		    return this.e28_1;
		  };
		  protoOf($serializer_97).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_96(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_97).zf = function (decoder) {
		    var tmp0_desc = this.e28_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_96(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_96(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioEarmuffOffEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_97).f28 = function (encoder, value) {
		    var tmp0_desc = this.e28_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_96(), value.g28_1);
		    tmp1_output.rk(tmp0_desc, 1, value.h28_1);
		    tmp1_output.wk(tmp0_desc, 2, value.i28_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.j28_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.j28_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.k28_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_97).yf = function (encoder, value) {
		    return this.f28(encoder, value instanceof AudioEarmuffOffEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_97;
		  function $serializer_getInstance_97() {
		    if ($serializer_instance_97 == null)
		      new $serializer_97();
		    return $serializer_instance_97;
		  }
		  function AudioEarmuffOffEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_97().e28_1);
		    }
		    $this.g28_1 = body;
		    $this.h28_1 = id;
		    $this.i28_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.j28_1 = null;
		    else
		      $this.j28_1 = from;
		    $this.k28_1 = type;
		    return $this;
		  }
		  function AudioEarmuffOffEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioEarmuffOffEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioEarmuffOffEvent)));
		  }
		  function AudioEarmuffOffEvent() {
		  }
		  protoOf(AudioEarmuffOffEvent).l26 = function () {
		    return this.h28_1;
		  };
		  protoOf(AudioEarmuffOffEvent).m26 = function () {
		    return this.i28_1;
		  };
		  protoOf(AudioEarmuffOffEvent).toString = function () {
		    return 'AudioEarmuffOffEvent(body=' + this.g28_1.toString() + ', id=' + this.h28_1 + ', cid=' + this.i28_1 + ', from=' + this.j28_1 + ', type=' + this.k28_1 + ')';
		  };
		  protoOf(AudioEarmuffOffEvent).hashCode = function () {
		    var result = this.g28_1.hashCode();
		    result = imul(result, 31) + this.h28_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.i28_1) | 0;
		    result = imul(result, 31) + (this.j28_1 == null ? 0 : getStringHashCode(this.j28_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k28_1) | 0;
		    return result;
		  };
		  protoOf(AudioEarmuffOffEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioEarmuffOffEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioEarmuffOffEvent ? other : THROW_CCE();
		    if (!this.g28_1.equals(tmp0_other_with_cast.g28_1))
		      return false;
		    if (!(this.h28_1 === tmp0_other_with_cast.h28_1))
		      return false;
		    if (!(this.i28_1 === tmp0_other_with_cast.i28_1))
		      return false;
		    if (!(this.j28_1 == tmp0_other_with_cast.j28_1))
		      return false;
		    if (!(this.k28_1 === tmp0_other_with_cast.k28_1))
		      return false;
		    return true;
		  };
		  function Companion_89() {
		  }
		  protoOf(Companion_89).b13 = function () {
		    return $serializer_getInstance_98();
		  };
		  var Companion_instance_90;
		  function $serializer_98() {
		    $serializer_instance_98 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioDTMFEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.l28_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_98).xf = function () {
		    return this.l28_1;
		  };
		  protoOf($serializer_98).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_99(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_98).zf = function (decoder) {
		    var tmp0_desc = this.l28_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_99(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_99(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioDTMFEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_98).m28 = function (encoder, value) {
		    var tmp0_desc = this.l28_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_99(), value.n28_1);
		    tmp1_output.rk(tmp0_desc, 1, value.o28_1);
		    tmp1_output.wk(tmp0_desc, 2, value.p28_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.q28_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.q28_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.r28_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_98).yf = function (encoder, value) {
		    return this.m28(encoder, value instanceof AudioDTMFEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_98;
		  function $serializer_getInstance_98() {
		    if ($serializer_instance_98 == null)
		      new $serializer_98();
		    return $serializer_instance_98;
		  }
		  function AudioDTMFEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_98().l28_1);
		    }
		    $this.n28_1 = body;
		    $this.o28_1 = id;
		    $this.p28_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.q28_1 = null;
		    else
		      $this.q28_1 = from;
		    $this.r28_1 = type;
		    return $this;
		  }
		  function AudioDTMFEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioDTMFEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioDTMFEvent)));
		  }
		  function AudioDTMFEvent() {
		  }
		  protoOf(AudioDTMFEvent).l26 = function () {
		    return this.o28_1;
		  };
		  protoOf(AudioDTMFEvent).m26 = function () {
		    return this.p28_1;
		  };
		  protoOf(AudioDTMFEvent).toString = function () {
		    return 'AudioDTMFEvent(body=' + this.n28_1.toString() + ', id=' + this.o28_1 + ', cid=' + this.p28_1 + ', from=' + this.q28_1 + ', type=' + this.r28_1 + ')';
		  };
		  protoOf(AudioDTMFEvent).hashCode = function () {
		    var result = this.n28_1.hashCode();
		    result = imul(result, 31) + this.o28_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.p28_1) | 0;
		    result = imul(result, 31) + (this.q28_1 == null ? 0 : getStringHashCode(this.q28_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.r28_1) | 0;
		    return result;
		  };
		  protoOf(AudioDTMFEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioDTMFEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioDTMFEvent ? other : THROW_CCE();
		    if (!this.n28_1.equals(tmp0_other_with_cast.n28_1))
		      return false;
		    if (!(this.o28_1 === tmp0_other_with_cast.o28_1))
		      return false;
		    if (!(this.p28_1 === tmp0_other_with_cast.p28_1))
		      return false;
		    if (!(this.q28_1 == tmp0_other_with_cast.q28_1))
		      return false;
		    if (!(this.r28_1 === tmp0_other_with_cast.r28_1))
		      return false;
		    return true;
		  };
		  function $serializer_99() {
		    $serializer_instance_99 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioDTMFBody', this, 2);
		    tmp0_serialDesc.rq('digit', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.s28_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_99).xf = function () {
		    return this.s28_1;
		  };
		  protoOf($serializer_99).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_167()];
		  };
		  protoOf($serializer_99).zf = function (decoder) {
		    var tmp0_desc = this.s28_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_167(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, $serializer_getInstance_167(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return AudioDTMFBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_99).t28 = function (encoder, value) {
		    var tmp0_desc = this.s28_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.u28_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_167(), value.v28_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_99).yf = function (encoder, value) {
		    return this.t28(encoder, value instanceof AudioDTMFBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_99;
		  function $serializer_getInstance_99() {
		    if ($serializer_instance_99 == null)
		      new $serializer_99();
		    return $serializer_instance_99;
		  }
		  function AudioDTMFBody_init_$Init$(seen1, digit, channel, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_99().s28_1);
		    }
		    $this.u28_1 = digit;
		    $this.v28_1 = channel;
		    return $this;
		  }
		  function AudioDTMFBody_init_$Create$(seen1, digit, channel, serializationConstructorMarker) {
		    return AudioDTMFBody_init_$Init$(seen1, digit, channel, serializationConstructorMarker, objectCreate(protoOf(AudioDTMFBody)));
		  }
		  function AudioDTMFBody() {
		  }
		  protoOf(AudioDTMFBody).toString = function () {
		    return 'AudioDTMFBody(digit=' + this.u28_1 + ', channel=' + this.v28_1.toString() + ')';
		  };
		  protoOf(AudioDTMFBody).hashCode = function () {
		    var result = getStringHashCode(this.u28_1);
		    result = imul(result, 31) + this.v28_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(AudioDTMFBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioDTMFBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioDTMFBody ? other : THROW_CCE();
		    if (!(this.u28_1 === tmp0_other_with_cast.u28_1))
		      return false;
		    if (!this.v28_1.equals(tmp0_other_with_cast.v28_1))
		      return false;
		    return true;
		  };
		  function Companion_90() {
		  }
		  protoOf(Companion_90).b13 = function () {
		    return $serializer_getInstance_100();
		  };
		  var Companion_instance_91;
		  function $serializer_100() {
		    $serializer_instance_100 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCHangupEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.w28_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_100).xf = function () {
		    return this.w28_1;
		  };
		  protoOf($serializer_100).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_88(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_100).zf = function (decoder) {
		    var tmp0_desc = this.w28_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_88(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_88(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return RTCHangupEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_100).x28 = function (encoder, value) {
		    var tmp0_desc = this.w28_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_88(), value.y28_1);
		    tmp1_output.rk(tmp0_desc, 1, value.z28_1);
		    tmp1_output.wk(tmp0_desc, 2, value.a29_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.b29_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.b29_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.c29_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_100).yf = function (encoder, value) {
		    return this.x28(encoder, value instanceof RTCHangupEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_100;
		  function $serializer_getInstance_100() {
		    if ($serializer_instance_100 == null)
		      new $serializer_100();
		    return $serializer_instance_100;
		  }
		  function RTCHangupEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_100().w28_1);
		    }
		    $this.y28_1 = body;
		    $this.z28_1 = id;
		    $this.a29_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.b29_1 = null;
		    else
		      $this.b29_1 = from;
		    $this.c29_1 = type;
		    return $this;
		  }
		  function RTCHangupEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return RTCHangupEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(RTCHangupEvent)));
		  }
		  function RTCHangupEvent() {
		  }
		  protoOf(RTCHangupEvent).l26 = function () {
		    return this.z28_1;
		  };
		  protoOf(RTCHangupEvent).m26 = function () {
		    return this.a29_1;
		  };
		  protoOf(RTCHangupEvent).toString = function () {
		    return 'RTCHangupEvent(body=' + this.y28_1.toString() + ', id=' + this.z28_1 + ', cid=' + this.a29_1 + ', from=' + this.b29_1 + ', type=' + this.c29_1 + ')';
		  };
		  protoOf(RTCHangupEvent).hashCode = function () {
		    var result = this.y28_1.hashCode();
		    result = imul(result, 31) + this.z28_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.a29_1) | 0;
		    result = imul(result, 31) + (this.b29_1 == null ? 0 : getStringHashCode(this.b29_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.c29_1) | 0;
		    return result;
		  };
		  protoOf(RTCHangupEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCHangupEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCHangupEvent ? other : THROW_CCE();
		    if (!this.y28_1.equals(tmp0_other_with_cast.y28_1))
		      return false;
		    if (!(this.z28_1 === tmp0_other_with_cast.z28_1))
		      return false;
		    if (!(this.a29_1 === tmp0_other_with_cast.a29_1))
		      return false;
		    if (!(this.b29_1 == tmp0_other_with_cast.b29_1))
		      return false;
		    if (!(this.c29_1 === tmp0_other_with_cast.c29_1))
		      return false;
		    return true;
		  };
		  function Companion_91() {
		  }
		  protoOf(Companion_91).b13 = function () {
		    return $serializer_getInstance_101();
		  };
		  var Companion_instance_92;
		  function $serializer_101() {
		    $serializer_instance_101 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCTransferEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.d29_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_101).xf = function () {
		    return this.d29_1;
		  };
		  protoOf($serializer_101).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_102(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_101).zf = function (decoder) {
		    var tmp0_desc = this.d29_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_102(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_102(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return RTCTransferEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_101).e29 = function (encoder, value) {
		    var tmp0_desc = this.d29_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_102(), value.f29_1);
		    tmp1_output.rk(tmp0_desc, 1, value.g29_1);
		    tmp1_output.wk(tmp0_desc, 2, value.h29_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.i29_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.i29_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.j29_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_101).yf = function (encoder, value) {
		    return this.e29(encoder, value instanceof RTCTransferEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_101;
		  function $serializer_getInstance_101() {
		    if ($serializer_instance_101 == null)
		      new $serializer_101();
		    return $serializer_instance_101;
		  }
		  function RTCTransferEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_101().d29_1);
		    }
		    $this.f29_1 = body;
		    $this.g29_1 = id;
		    $this.h29_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.i29_1 = null;
		    else
		      $this.i29_1 = from;
		    $this.j29_1 = type;
		    return $this;
		  }
		  function RTCTransferEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return RTCTransferEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(RTCTransferEvent)));
		  }
		  function RTCTransferEvent() {
		  }
		  protoOf(RTCTransferEvent).l26 = function () {
		    return this.g29_1;
		  };
		  protoOf(RTCTransferEvent).m26 = function () {
		    return this.h29_1;
		  };
		  protoOf(RTCTransferEvent).toString = function () {
		    return 'RTCTransferEvent(body=' + this.f29_1.toString() + ', id=' + this.g29_1 + ', cid=' + this.h29_1 + ', from=' + this.i29_1 + ', type=' + this.j29_1 + ')';
		  };
		  protoOf(RTCTransferEvent).hashCode = function () {
		    var result = this.f29_1.hashCode();
		    result = imul(result, 31) + this.g29_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.h29_1) | 0;
		    result = imul(result, 31) + (this.i29_1 == null ? 0 : getStringHashCode(this.i29_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j29_1) | 0;
		    return result;
		  };
		  protoOf(RTCTransferEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCTransferEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCTransferEvent ? other : THROW_CCE();
		    if (!this.f29_1.equals(tmp0_other_with_cast.f29_1))
		      return false;
		    if (!(this.g29_1 === tmp0_other_with_cast.g29_1))
		      return false;
		    if (!(this.h29_1 === tmp0_other_with_cast.h29_1))
		      return false;
		    if (!(this.i29_1 == tmp0_other_with_cast.i29_1))
		      return false;
		    if (!(this.j29_1 === tmp0_other_with_cast.j29_1))
		      return false;
		    return true;
		  };
		  function $serializer_102() {
		    $serializer_instance_102 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCTransfer', this, 4);
		    tmp0_serialDesc.rq('was_member', false);
		    tmp0_serialDesc.rq('user_id', false);
		    tmp0_serialDesc.rq('transferred_from', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.k29_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_102).xf = function () {
		    return this.k29_1;
		  };
		  protoOf($serializer_102).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), $serializer_getInstance_168()];
		  };
		  protoOf($serializer_102).zf = function (decoder) {
		    var tmp0_desc = this.k29_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_168(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_168(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return RTCTransfer_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_102).l29 = function (encoder, value) {
		    var tmp0_desc = this.k29_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.m29_1);
		    tmp1_output.wk(tmp0_desc, 1, value.n29_1);
		    tmp1_output.wk(tmp0_desc, 2, value.o29_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_168(), value.p29_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_102).yf = function (encoder, value) {
		    return this.l29(encoder, value instanceof RTCTransfer ? value : THROW_CCE());
		  };
		  var $serializer_instance_102;
		  function $serializer_getInstance_102() {
		    if ($serializer_instance_102 == null)
		      new $serializer_102();
		    return $serializer_instance_102;
		  }
		  function RTCTransfer_init_$Init$(seen1, was_member, user_id, transferred_from, channel, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_102().k29_1);
		    }
		    $this.m29_1 = was_member;
		    $this.n29_1 = user_id;
		    $this.o29_1 = transferred_from;
		    $this.p29_1 = channel;
		    return $this;
		  }
		  function RTCTransfer_init_$Create$(seen1, was_member, user_id, transferred_from, channel, serializationConstructorMarker) {
		    return RTCTransfer_init_$Init$(seen1, was_member, user_id, transferred_from, channel, serializationConstructorMarker, objectCreate(protoOf(RTCTransfer)));
		  }
		  function RTCTransfer() {
		  }
		  protoOf(RTCTransfer).toString = function () {
		    return 'RTCTransfer(was_member=' + this.m29_1 + ', user_id=' + this.n29_1 + ', transferred_from=' + this.o29_1 + ', channel=' + this.p29_1.toString() + ')';
		  };
		  protoOf(RTCTransfer).hashCode = function () {
		    var result = getStringHashCode(this.m29_1);
		    result = imul(result, 31) + getStringHashCode(this.n29_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.o29_1) | 0;
		    result = imul(result, 31) + this.p29_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(RTCTransfer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCTransfer))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCTransfer ? other : THROW_CCE();
		    if (!(this.m29_1 === tmp0_other_with_cast.m29_1))
		      return false;
		    if (!(this.n29_1 === tmp0_other_with_cast.n29_1))
		      return false;
		    if (!(this.o29_1 === tmp0_other_with_cast.o29_1))
		      return false;
		    if (!this.p29_1.equals(tmp0_other_with_cast.p29_1))
		      return false;
		    return true;
		  };
		  function $serializer_103() {
		    $serializer_instance_103 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberInvited', this, 7);
		    tmp0_serialDesc.rq('conversation', false);
		    tmp0_serialDesc.rq('member_id', false);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('media', false);
		    tmp0_serialDesc.rq('channel', false);
		    tmp0_serialDesc.rq('invited_by', true);
		    tmp0_serialDesc.rq('sdp', true);
		    this.q29_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_103).xf = function () {
		    return this.q29_1;
		  };
		  protoOf($serializer_103).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_169(), StringSerializer_getInstance(), $serializer_getInstance_51(), $serializer_getInstance_171(), $serializer_getInstance_168(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_103).zf = function (decoder) {
		    var tmp0_desc = this.q29_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_169(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.tj(tmp0_desc, 2, $serializer_getInstance_51(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.tj(tmp0_desc, 3, $serializer_getInstance_171(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.tj(tmp0_desc, 4, $serializer_getInstance_168(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_169(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.tj(tmp0_desc, 2, $serializer_getInstance_51(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.tj(tmp0_desc, 3, $serializer_getInstance_171(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.tj(tmp0_desc, 4, $serializer_getInstance_168(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MemberInvited_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_103).r29 = function (encoder, value) {
		    var tmp0_desc = this.q29_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_169(), value.s29_1);
		    tmp1_output.wk(tmp0_desc, 1, value.t29_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_51(), value.u29_1);
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_171(), value.v29_1);
		    tmp1_output.yk(tmp0_desc, 4, $serializer_getInstance_168(), value.w29_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.x29_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, StringSerializer_getInstance(), value.x29_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.y29_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, StringSerializer_getInstance(), value.y29_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_103).yf = function (encoder, value) {
		    return this.r29(encoder, value instanceof MemberInvited ? value : THROW_CCE());
		  };
		  var $serializer_instance_103;
		  function $serializer_getInstance_103() {
		    if ($serializer_instance_103 == null)
		      new $serializer_103();
		    return $serializer_instance_103;
		  }
		  function MemberInvited_init_$Init$(seen1, conversation, member_id, user, media, channel, invited_by, sdp, serializationConstructorMarker, $this) {
		    if (!(31 === (31 & seen1))) {
		      throwMissingFieldException(seen1, 31, $serializer_getInstance_103().q29_1);
		    }
		    $this.s29_1 = conversation;
		    $this.t29_1 = member_id;
		    $this.u29_1 = user;
		    $this.v29_1 = media;
		    $this.w29_1 = channel;
		    if (0 === (seen1 & 32))
		      $this.x29_1 = null;
		    else
		      $this.x29_1 = invited_by;
		    if (0 === (seen1 & 64))
		      $this.y29_1 = null;
		    else
		      $this.y29_1 = sdp;
		    return $this;
		  }
		  function MemberInvited_init_$Create$(seen1, conversation, member_id, user, media, channel, invited_by, sdp, serializationConstructorMarker) {
		    return MemberInvited_init_$Init$(seen1, conversation, member_id, user, media, channel, invited_by, sdp, serializationConstructorMarker, objectCreate(protoOf(MemberInvited)));
		  }
		  function MemberInvited() {
		  }
		  protoOf(MemberInvited).toString = function () {
		    return 'MemberInvited(conversation=' + this.s29_1.toString() + ', member_id=' + this.t29_1 + ', user=' + toString(this.u29_1) + ', media=' + this.v29_1.toString() + ', channel=' + this.w29_1.toString() + ', invited_by=' + this.x29_1 + ', sdp=' + this.y29_1 + ')';
		  };
		  protoOf(MemberInvited).hashCode = function () {
		    var result = this.s29_1.hashCode();
		    result = imul(result, 31) + getStringHashCode(this.t29_1) | 0;
		    result = imul(result, 31) + hashCode(this.u29_1) | 0;
		    result = imul(result, 31) + this.v29_1.hashCode() | 0;
		    result = imul(result, 31) + this.w29_1.hashCode() | 0;
		    result = imul(result, 31) + (this.x29_1 == null ? 0 : getStringHashCode(this.x29_1)) | 0;
		    result = imul(result, 31) + (this.y29_1 == null ? 0 : getStringHashCode(this.y29_1)) | 0;
		    return result;
		  };
		  protoOf(MemberInvited).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberInvited))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberInvited ? other : THROW_CCE();
		    if (!this.s29_1.equals(tmp0_other_with_cast.s29_1))
		      return false;
		    if (!(this.t29_1 === tmp0_other_with_cast.t29_1))
		      return false;
		    if (!equals(this.u29_1, tmp0_other_with_cast.u29_1))
		      return false;
		    if (!this.v29_1.equals(tmp0_other_with_cast.v29_1))
		      return false;
		    if (!this.w29_1.equals(tmp0_other_with_cast.w29_1))
		      return false;
		    if (!(this.x29_1 == tmp0_other_with_cast.x29_1))
		      return false;
		    if (!(this.y29_1 == tmp0_other_with_cast.y29_1))
		      return false;
		    return true;
		  };
		  function $serializer_104() {
		    $serializer_instance_104 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.PushMemberInvitedEvent', this, 6);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', false);
		    tmp0_serialDesc.rq('type', false);
		    this.z29_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_104).xf = function () {
		    return this.z29_1;
		  };
		  protoOf($serializer_104).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_103(), IntSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_104).zf = function (decoder) {
		    var tmp0_desc = this.z29_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.tj(tmp0_desc, 0, $serializer_getInstance_103(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.tj(tmp0_desc, 0, $serializer_getInstance_103(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return PushMemberInvitedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_104).a2a = function (encoder, value) {
		    var tmp0_desc = this.z29_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_103(), value.b2a_1);
		    tmp1_output.rk(tmp0_desc, 1, value.c2a_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.d2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.d2a_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.e2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.e2a_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.f2a_1);
		    tmp1_output.wk(tmp0_desc, 5, value.g2a_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_104).yf = function (encoder, value) {
		    return this.a2a(encoder, value instanceof PushMemberInvitedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_104;
		  function $serializer_getInstance_104() {
		    if ($serializer_instance_104 == null)
		      new $serializer_104();
		    return $serializer_instance_104;
		  }
		  function PushMemberInvitedEvent_init_$Init$(seen1, body, id, cid, from, conversation_id, type, serializationConstructorMarker, $this) {
		    if (!(51 === (51 & seen1))) {
		      throwMissingFieldException(seen1, 51, $serializer_getInstance_104().z29_1);
		    }
		    $this.b2a_1 = body;
		    $this.c2a_1 = id;
		    if (0 === (seen1 & 4))
		      $this.d2a_1 = null;
		    else
		      $this.d2a_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.e2a_1 = null;
		    else
		      $this.e2a_1 = from;
		    $this.f2a_1 = conversation_id;
		    $this.g2a_1 = type;
		    return $this;
		  }
		  function PushMemberInvitedEvent_init_$Create$(seen1, body, id, cid, from, conversation_id, type, serializationConstructorMarker) {
		    return PushMemberInvitedEvent_init_$Init$(seen1, body, id, cid, from, conversation_id, type, serializationConstructorMarker, objectCreate(protoOf(PushMemberInvitedEvent)));
		  }
		  function PushMemberInvitedEvent() {
		  }
		  protoOf(PushMemberInvitedEvent).l26 = function () {
		    return this.c2a_1;
		  };
		  protoOf(PushMemberInvitedEvent).m26 = function () {
		    return this.d2a_1;
		  };
		  protoOf(PushMemberInvitedEvent).toString = function () {
		    return 'PushMemberInvitedEvent(body=' + this.b2a_1.toString() + ', id=' + this.c2a_1 + ', cid=' + this.d2a_1 + ', from=' + this.e2a_1 + ', conversation_id=' + this.f2a_1 + ', type=' + this.g2a_1 + ')';
		  };
		  protoOf(PushMemberInvitedEvent).hashCode = function () {
		    var result = this.b2a_1.hashCode();
		    result = imul(result, 31) + this.c2a_1 | 0;
		    result = imul(result, 31) + (this.d2a_1 == null ? 0 : getStringHashCode(this.d2a_1)) | 0;
		    result = imul(result, 31) + (this.e2a_1 == null ? 0 : getStringHashCode(this.e2a_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f2a_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g2a_1) | 0;
		    return result;
		  };
		  protoOf(PushMemberInvitedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PushMemberInvitedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof PushMemberInvitedEvent ? other : THROW_CCE();
		    if (!this.b2a_1.equals(tmp0_other_with_cast.b2a_1))
		      return false;
		    if (!(this.c2a_1 === tmp0_other_with_cast.c2a_1))
		      return false;
		    if (!(this.d2a_1 == tmp0_other_with_cast.d2a_1))
		      return false;
		    if (!(this.e2a_1 == tmp0_other_with_cast.e2a_1))
		      return false;
		    if (!(this.f2a_1 === tmp0_other_with_cast.f2a_1))
		      return false;
		    if (!(this.g2a_1 === tmp0_other_with_cast.g2a_1))
		      return false;
		    return true;
		  };
		  function Companion_92() {
		  }
		  protoOf(Companion_92).b13 = function () {
		    return $serializer_getInstance_105();
		  };
		  var Companion_instance_93;
		  function $serializer_105() {
		    $serializer_instance_105 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionSuccessEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.h2a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_105).xf = function () {
		    return this.h2a_1;
		  };
		  protoOf($serializer_105).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_106(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_105).zf = function (decoder) {
		    var tmp0_desc = this.h2a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_106(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_106(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionSuccessEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_105).i2a = function (encoder, value) {
		    var tmp0_desc = this.h2a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_106(), value.j2a_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.k2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.k2a_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.l2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.l2a_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.m2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.m2a_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.n2a_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_105).yf = function (encoder, value) {
		    return this.i2a(encoder, value instanceof SessionSuccessEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_105;
		  function $serializer_getInstance_105() {
		    if ($serializer_instance_105 == null)
		      new $serializer_105();
		    return $serializer_instance_105;
		  }
		  function SessionSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(17 === (17 & seen1))) {
		      throwMissingFieldException(seen1, 17, $serializer_getInstance_105().h2a_1);
		    }
		    $this.j2a_1 = body;
		    if (0 === (seen1 & 2))
		      $this.k2a_1 = null;
		    else
		      $this.k2a_1 = id;
		    if (0 === (seen1 & 4))
		      $this.l2a_1 = null;
		    else
		      $this.l2a_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.m2a_1 = null;
		    else
		      $this.m2a_1 = from;
		    $this.n2a_1 = type;
		    return $this;
		  }
		  function SessionSuccessEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionSuccessEvent)));
		  }
		  function SessionSuccessEvent() {
		  }
		  protoOf(SessionSuccessEvent).l26 = function () {
		    return this.k2a_1;
		  };
		  protoOf(SessionSuccessEvent).m26 = function () {
		    return this.l2a_1;
		  };
		  protoOf(SessionSuccessEvent).toString = function () {
		    return 'SessionSuccessEvent(body=' + this.j2a_1.toString() + ', id=' + this.k2a_1 + ', cid=' + this.l2a_1 + ', from=' + this.m2a_1 + ', type=' + this.n2a_1 + ')';
		  };
		  protoOf(SessionSuccessEvent).hashCode = function () {
		    var result = this.j2a_1.hashCode();
		    result = imul(result, 31) + (this.k2a_1 == null ? 0 : this.k2a_1) | 0;
		    result = imul(result, 31) + (this.l2a_1 == null ? 0 : getStringHashCode(this.l2a_1)) | 0;
		    result = imul(result, 31) + (this.m2a_1 == null ? 0 : getStringHashCode(this.m2a_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.n2a_1) | 0;
		    return result;
		  };
		  protoOf(SessionSuccessEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionSuccessEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionSuccessEvent ? other : THROW_CCE();
		    if (!this.j2a_1.equals(tmp0_other_with_cast.j2a_1))
		      return false;
		    if (!(this.k2a_1 == tmp0_other_with_cast.k2a_1))
		      return false;
		    if (!(this.l2a_1 == tmp0_other_with_cast.l2a_1))
		      return false;
		    if (!(this.m2a_1 == tmp0_other_with_cast.m2a_1))
		      return false;
		    if (!(this.n2a_1 === tmp0_other_with_cast.n2a_1))
		      return false;
		    return true;
		  };
		  function Companion_93() {
		    Companion_instance_94 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.o2a_1 = [null, null, null, null, new ArrayListSerializer(SocketEventSerializer_getInstance())];
		  }
		  var Companion_instance_94;
		  function Companion_getInstance_95() {
		    if (Companion_instance_94 == null)
		      new Companion_93();
		    return Companion_instance_94;
		  }
		  function $serializer_106() {
		    $serializer_instance_106 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionSuccess', this, 5);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('user_id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('api_key', false);
		    tmp0_serialDesc.rq('pending_events', true);
		    this.p2a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_106).xf = function () {
		    return this.p2a_1;
		  };
		  protoOf($serializer_106).gr = function () {
		    var tmp0_cached = Companion_getInstance_95().o2a_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(tmp0_cached[4])];
		  };
		  protoOf($serializer_106).zf = function (decoder) {
		    var tmp0_desc = this.p2a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    var tmp10_cached = Companion_getInstance_95().o2a_1;
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.vj(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionSuccess_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_106).q2a = function (encoder, value) {
		    var tmp0_desc = this.p2a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_95().o2a_1;
		    tmp1_output.wk(tmp0_desc, 0, value.r2a_1);
		    tmp1_output.wk(tmp0_desc, 1, value.s2a_1);
		    tmp1_output.wk(tmp0_desc, 2, value.t2a_1);
		    tmp1_output.wk(tmp0_desc, 3, value.u2a_1);
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.v2a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, tmp2_cached[4], value.v2a_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_106).yf = function (encoder, value) {
		    return this.q2a(encoder, value instanceof SessionSuccess ? value : THROW_CCE());
		  };
		  var $serializer_instance_106;
		  function $serializer_getInstance_106() {
		    if ($serializer_instance_106 == null)
		      new $serializer_106();
		    return $serializer_instance_106;
		  }
		  function SessionSuccess_init_$Init$(seen1, id, user_id, name, api_key, pending_events, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_106().p2a_1);
		    }
		    $this.r2a_1 = id;
		    $this.s2a_1 = user_id;
		    $this.t2a_1 = name;
		    $this.u2a_1 = api_key;
		    if (0 === (seen1 & 16))
		      $this.v2a_1 = null;
		    else
		      $this.v2a_1 = pending_events;
		    return $this;
		  }
		  function SessionSuccess_init_$Create$(seen1, id, user_id, name, api_key, pending_events, serializationConstructorMarker) {
		    return SessionSuccess_init_$Init$(seen1, id, user_id, name, api_key, pending_events, serializationConstructorMarker, objectCreate(protoOf(SessionSuccess)));
		  }
		  function SessionSuccess() {
		  }
		  protoOf(SessionSuccess).toString = function () {
		    return 'SessionSuccess(id=' + this.r2a_1 + ', user_id=' + this.s2a_1 + ', name=' + this.t2a_1 + ', api_key=' + this.u2a_1 + ', pending_events=' + toString_0(this.v2a_1) + ')';
		  };
		  protoOf(SessionSuccess).hashCode = function () {
		    var result = getStringHashCode(this.r2a_1);
		    result = imul(result, 31) + getStringHashCode(this.s2a_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.t2a_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u2a_1) | 0;
		    result = imul(result, 31) + (this.v2a_1 == null ? 0 : hashCode(this.v2a_1)) | 0;
		    return result;
		  };
		  protoOf(SessionSuccess).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionSuccess))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionSuccess ? other : THROW_CCE();
		    if (!(this.r2a_1 === tmp0_other_with_cast.r2a_1))
		      return false;
		    if (!(this.s2a_1 === tmp0_other_with_cast.s2a_1))
		      return false;
		    if (!(this.t2a_1 === tmp0_other_with_cast.t2a_1))
		      return false;
		    if (!(this.u2a_1 === tmp0_other_with_cast.u2a_1))
		      return false;
		    if (!equals(this.v2a_1, tmp0_other_with_cast.v2a_1))
		      return false;
		    return true;
		  };
		  function Companion_94() {
		  }
		  protoOf(Companion_94).b13 = function () {
		    return $serializer_getInstance_107();
		  };
		  var Companion_instance_95;
		  function $serializer_107() {
		    $serializer_instance_107 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberJoinedEvent', this, 8);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('application_id', true);
		    tmp0_serialDesc.rq('type', false);
		    this.w2a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_107).xf = function () {
		    return this.w2a_1;
		  };
		  protoOf($serializer_107).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_108(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_107).zf = function (decoder) {
		    var tmp0_desc = this.w2a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_input = decoder.hj(tmp0_desc);
		    if (tmp12_input.xj()) {
		      tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_108(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, $serializer_getInstance_54(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp12_input.rj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp12_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_108(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, $serializer_getInstance_54(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp12_input.rj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp12_input.ij(tmp0_desc);
		    return MemberJoinedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
		  };
		  protoOf($serializer_107).x2a = function (encoder, value) {
		    var tmp0_desc = this.w2a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_108(), value.y2a_1);
		    tmp1_output.rk(tmp0_desc, 1, value.z2a_1);
		    tmp1_output.wk(tmp0_desc, 2, value.a2b_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.b2b_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.b2b_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.c2b_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, $serializer_getInstance_54(), value.c2b_1);
		    }
		    tmp1_output.wk(tmp0_desc, 5, value.d2b_1);
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.e2b_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, StringSerializer_getInstance(), value.e2b_1);
		    }
		    tmp1_output.wk(tmp0_desc, 7, value.f2b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_107).yf = function (encoder, value) {
		    return this.x2a(encoder, value instanceof MemberJoinedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_107;
		  function $serializer_getInstance_107() {
		    if ($serializer_instance_107 == null)
		      new $serializer_107();
		    return $serializer_instance_107;
		  }
		  function MemberJoinedEvent_init_$Init$(seen1, body, id, cid, from, _embedded, timestamp, application_id, type, serializationConstructorMarker, $this) {
		    if (!(167 === (167 & seen1))) {
		      throwMissingFieldException(seen1, 167, $serializer_getInstance_107().w2a_1);
		    }
		    $this.y2a_1 = body;
		    $this.z2a_1 = id;
		    $this.a2b_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.b2b_1 = null;
		    else
		      $this.b2b_1 = from;
		    if (0 === (seen1 & 16))
		      $this.c2b_1 = null;
		    else
		      $this.c2b_1 = _embedded;
		    $this.d2b_1 = timestamp;
		    if (0 === (seen1 & 64))
		      $this.e2b_1 = null;
		    else
		      $this.e2b_1 = application_id;
		    $this.f2b_1 = type;
		    return $this;
		  }
		  function MemberJoinedEvent_init_$Create$(seen1, body, id, cid, from, _embedded, timestamp, application_id, type, serializationConstructorMarker) {
		    return MemberJoinedEvent_init_$Init$(seen1, body, id, cid, from, _embedded, timestamp, application_id, type, serializationConstructorMarker, objectCreate(protoOf(MemberJoinedEvent)));
		  }
		  function MemberJoinedEvent() {
		  }
		  protoOf(MemberJoinedEvent).l26 = function () {
		    return this.z2a_1;
		  };
		  protoOf(MemberJoinedEvent).m26 = function () {
		    return this.a2b_1;
		  };
		  protoOf(MemberJoinedEvent).g2b = function () {
		    return new MemberJoinedConversationEvent(this.z2a_1, this.d2b_1, this.a2b_1, Companion_instance_140.k23(this.c2b_1), new Body_15(this.y2a_1.i2b_1.a1x(), this.y2a_1.h2b_1, this.y2a_1.j2b_1.i25()));
		  };
		  protoOf(MemberJoinedEvent).toString = function () {
		    return 'MemberJoinedEvent(body=' + this.y2a_1.toString() + ', id=' + this.z2a_1 + ', cid=' + this.a2b_1 + ', from=' + this.b2b_1 + ', _embedded=' + toString_0(this.c2b_1) + ', timestamp=' + this.d2b_1 + ', application_id=' + this.e2b_1 + ', type=' + this.f2b_1 + ')';
		  };
		  protoOf(MemberJoinedEvent).hashCode = function () {
		    var result = this.y2a_1.hashCode();
		    result = imul(result, 31) + this.z2a_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.a2b_1) | 0;
		    result = imul(result, 31) + (this.b2b_1 == null ? 0 : getStringHashCode(this.b2b_1)) | 0;
		    result = imul(result, 31) + (this.c2b_1 == null ? 0 : this.c2b_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.d2b_1) | 0;
		    result = imul(result, 31) + (this.e2b_1 == null ? 0 : getStringHashCode(this.e2b_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f2b_1) | 0;
		    return result;
		  };
		  protoOf(MemberJoinedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinedEvent ? other : THROW_CCE();
		    if (!this.y2a_1.equals(tmp0_other_with_cast.y2a_1))
		      return false;
		    if (!(this.z2a_1 === tmp0_other_with_cast.z2a_1))
		      return false;
		    if (!(this.a2b_1 === tmp0_other_with_cast.a2b_1))
		      return false;
		    if (!(this.b2b_1 == tmp0_other_with_cast.b2b_1))
		      return false;
		    if (!equals(this.c2b_1, tmp0_other_with_cast.c2b_1))
		      return false;
		    if (!(this.d2b_1 === tmp0_other_with_cast.d2b_1))
		      return false;
		    if (!(this.e2b_1 == tmp0_other_with_cast.e2b_1))
		      return false;
		    if (!(this.f2b_1 === tmp0_other_with_cast.f2b_1))
		      return false;
		    return true;
		  };
		  function $serializer_108() {
		    $serializer_instance_108 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberJoined', this, 3);
		    tmp0_serialDesc.rq('member_id', false);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('channel', false);
		    this.k2b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_108).xf = function () {
		    return this.k2b_1;
		  };
		  protoOf($serializer_108).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_51(), $serializer_getInstance_168()];
		  };
		  protoOf($serializer_108).zf = function (decoder) {
		    var tmp0_desc = this.k2b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_51(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_51(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return MemberJoined_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_108).l2b = function (encoder, value) {
		    var tmp0_desc = this.k2b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.h2b_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_51(), value.i2b_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_168(), value.j2b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_108).yf = function (encoder, value) {
		    return this.l2b(encoder, value instanceof MemberJoined ? value : THROW_CCE());
		  };
		  var $serializer_instance_108;
		  function $serializer_getInstance_108() {
		    if ($serializer_instance_108 == null)
		      new $serializer_108();
		    return $serializer_instance_108;
		  }
		  function MemberJoined_init_$Init$(seen1, member_id, user, channel, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_108().k2b_1);
		    }
		    $this.h2b_1 = member_id;
		    $this.i2b_1 = user;
		    $this.j2b_1 = channel;
		    return $this;
		  }
		  function MemberJoined_init_$Create$(seen1, member_id, user, channel, serializationConstructorMarker) {
		    return MemberJoined_init_$Init$(seen1, member_id, user, channel, serializationConstructorMarker, objectCreate(protoOf(MemberJoined)));
		  }
		  function MemberJoined() {
		  }
		  protoOf(MemberJoined).toString = function () {
		    return 'MemberJoined(member_id=' + this.h2b_1 + ', user=' + toString(this.i2b_1) + ', channel=' + this.j2b_1.toString() + ')';
		  };
		  protoOf(MemberJoined).hashCode = function () {
		    var result = getStringHashCode(this.h2b_1);
		    result = imul(result, 31) + hashCode(this.i2b_1) | 0;
		    result = imul(result, 31) + this.j2b_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MemberJoined).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoined))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoined ? other : THROW_CCE();
		    if (!(this.h2b_1 === tmp0_other_with_cast.h2b_1))
		      return false;
		    if (!equals(this.i2b_1, tmp0_other_with_cast.i2b_1))
		      return false;
		    if (!this.j2b_1.equals(tmp0_other_with_cast.j2b_1))
		      return false;
		    return true;
		  };
		  function Companion_95() {
		  }
		  protoOf(Companion_95).b13 = function () {
		    return $serializer_getInstance_109();
		  };
		  var Companion_instance_96;
		  function $serializer_109() {
		    $serializer_instance_109 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCAnswerEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.m2b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_109).xf = function () {
		    return this.m2b_1;
		  };
		  protoOf($serializer_109).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_110(), get_nullable(IntSerializer_getInstance()), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_109).zf = function (decoder) {
		    var tmp0_desc = this.m2b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_110(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_110(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return RTCAnswerEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_109).n2b = function (encoder, value) {
		    var tmp0_desc = this.m2b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_110(), value.o2b_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.p2b_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.p2b_1);
		    }
		    tmp1_output.wk(tmp0_desc, 2, value.q2b_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.r2b_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.r2b_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.s2b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_109).yf = function (encoder, value) {
		    return this.n2b(encoder, value instanceof RTCAnswerEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_109;
		  function $serializer_getInstance_109() {
		    if ($serializer_instance_109 == null)
		      new $serializer_109();
		    return $serializer_instance_109;
		  }
		  function RTCAnswerEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(21 === (21 & seen1))) {
		      throwMissingFieldException(seen1, 21, $serializer_getInstance_109().m2b_1);
		    }
		    $this.o2b_1 = body;
		    if (0 === (seen1 & 2))
		      $this.p2b_1 = null;
		    else
		      $this.p2b_1 = id;
		    $this.q2b_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.r2b_1 = null;
		    else
		      $this.r2b_1 = from;
		    $this.s2b_1 = type;
		    return $this;
		  }
		  function RTCAnswerEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return RTCAnswerEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(RTCAnswerEvent)));
		  }
		  function RTCAnswerEvent() {
		  }
		  protoOf(RTCAnswerEvent).l26 = function () {
		    return this.p2b_1;
		  };
		  protoOf(RTCAnswerEvent).m26 = function () {
		    return this.q2b_1;
		  };
		  protoOf(RTCAnswerEvent).toString = function () {
		    return 'RTCAnswerEvent(body=' + this.o2b_1.toString() + ', id=' + this.p2b_1 + ', cid=' + this.q2b_1 + ', from=' + this.r2b_1 + ', type=' + this.s2b_1 + ')';
		  };
		  protoOf(RTCAnswerEvent).hashCode = function () {
		    var result = this.o2b_1.hashCode();
		    result = imul(result, 31) + (this.p2b_1 == null ? 0 : this.p2b_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.q2b_1) | 0;
		    result = imul(result, 31) + (this.r2b_1 == null ? 0 : getStringHashCode(this.r2b_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.s2b_1) | 0;
		    return result;
		  };
		  protoOf(RTCAnswerEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCAnswerEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCAnswerEvent ? other : THROW_CCE();
		    if (!this.o2b_1.equals(tmp0_other_with_cast.o2b_1))
		      return false;
		    if (!(this.p2b_1 == tmp0_other_with_cast.p2b_1))
		      return false;
		    if (!(this.q2b_1 === tmp0_other_with_cast.q2b_1))
		      return false;
		    if (!(this.r2b_1 == tmp0_other_with_cast.r2b_1))
		      return false;
		    if (!(this.s2b_1 === tmp0_other_with_cast.s2b_1))
		      return false;
		    return true;
		  };
		  function $serializer_110() {
		    $serializer_instance_110 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.RTCAnswer', this, 2);
		    tmp0_serialDesc.rq('rtc_id', false);
		    tmp0_serialDesc.rq('answer', false);
		    this.t2b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_110).xf = function () {
		    return this.t2b_1;
		  };
		  protoOf($serializer_110).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_110).zf = function (decoder) {
		    var tmp0_desc = this.t2b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return RTCAnswer_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_110).u2b = function (encoder, value) {
		    var tmp0_desc = this.t2b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.v2b_1);
		    tmp1_output.wk(tmp0_desc, 1, value.w2b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_110).yf = function (encoder, value) {
		    return this.u2b(encoder, value instanceof RTCAnswer ? value : THROW_CCE());
		  };
		  var $serializer_instance_110;
		  function $serializer_getInstance_110() {
		    if ($serializer_instance_110 == null)
		      new $serializer_110();
		    return $serializer_instance_110;
		  }
		  function RTCAnswer_init_$Init$(seen1, rtc_id, answer, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_110().t2b_1);
		    }
		    $this.v2b_1 = rtc_id;
		    $this.w2b_1 = answer;
		    return $this;
		  }
		  function RTCAnswer_init_$Create$(seen1, rtc_id, answer, serializationConstructorMarker) {
		    return RTCAnswer_init_$Init$(seen1, rtc_id, answer, serializationConstructorMarker, objectCreate(protoOf(RTCAnswer)));
		  }
		  function RTCAnswer() {
		  }
		  protoOf(RTCAnswer).toString = function () {
		    return 'RTCAnswer(rtc_id=' + this.v2b_1 + ', answer=' + this.w2b_1 + ')';
		  };
		  protoOf(RTCAnswer).hashCode = function () {
		    var result = getStringHashCode(this.v2b_1);
		    result = imul(result, 31) + getStringHashCode(this.w2b_1) | 0;
		    return result;
		  };
		  protoOf(RTCAnswer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCAnswer))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCAnswer ? other : THROW_CCE();
		    if (!(this.v2b_1 === tmp0_other_with_cast.v2b_1))
		      return false;
		    if (!(this.w2b_1 === tmp0_other_with_cast.w2b_1))
		      return false;
		    return true;
		  };
		  function Companion_96() {
		  }
		  protoOf(Companion_96).b13 = function () {
		    return $serializer_getInstance_111();
		  };
		  var Companion_instance_97;
		  function $serializer_111() {
		    $serializer_instance_111 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberInvitedEvent', this, 8);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('application_id', true);
		    tmp0_serialDesc.rq('type', false);
		    this.x2b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_111).xf = function () {
		    return this.x2b_1;
		  };
		  protoOf($serializer_111).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_103(), IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_111).zf = function (decoder) {
		    var tmp0_desc = this.x2b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_input = decoder.hj(tmp0_desc);
		    if (tmp12_input.xj()) {
		      tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_103(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp12_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp12_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_103(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp12_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, StringSerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp12_input.ij(tmp0_desc);
		    return MemberInvitedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
		  };
		  protoOf($serializer_111).y2b = function (encoder, value) {
		    var tmp0_desc = this.x2b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_103(), value.z2b_1);
		    tmp1_output.rk(tmp0_desc, 1, value.a2c_1);
		    tmp1_output.wk(tmp0_desc, 2, value.b2c_1);
		    tmp1_output.wk(tmp0_desc, 3, value.c2c_1);
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.d2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.d2c_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.e2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.e2c_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.f2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, StringSerializer_getInstance(), value.f2c_1);
		    }
		    tmp1_output.wk(tmp0_desc, 7, value.g2c_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_111).yf = function (encoder, value) {
		    return this.y2b(encoder, value instanceof MemberInvitedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_111;
		  function $serializer_getInstance_111() {
		    if ($serializer_instance_111 == null)
		      new $serializer_111();
		    return $serializer_instance_111;
		  }
		  function MemberInvitedEvent_init_$Init$(seen1, body, id, cid, timestamp, from, _embedded, application_id, type, serializationConstructorMarker, $this) {
		    if (!(143 === (143 & seen1))) {
		      throwMissingFieldException(seen1, 143, $serializer_getInstance_111().x2b_1);
		    }
		    $this.z2b_1 = body;
		    $this.a2c_1 = id;
		    $this.b2c_1 = cid;
		    $this.c2c_1 = timestamp;
		    if (0 === (seen1 & 16))
		      $this.d2c_1 = null;
		    else
		      $this.d2c_1 = from;
		    if (0 === (seen1 & 32))
		      $this.e2c_1 = null;
		    else
		      $this.e2c_1 = _embedded;
		    if (0 === (seen1 & 64))
		      $this.f2c_1 = null;
		    else
		      $this.f2c_1 = application_id;
		    $this.g2c_1 = type;
		    return $this;
		  }
		  function MemberInvitedEvent_init_$Create$(seen1, body, id, cid, timestamp, from, _embedded, application_id, type, serializationConstructorMarker) {
		    return MemberInvitedEvent_init_$Init$(seen1, body, id, cid, timestamp, from, _embedded, application_id, type, serializationConstructorMarker, objectCreate(protoOf(MemberInvitedEvent)));
		  }
		  function MemberInvitedEvent() {
		  }
		  protoOf(MemberInvitedEvent).l26 = function () {
		    return this.a2c_1;
		  };
		  protoOf(MemberInvitedEvent).m26 = function () {
		    return this.b2c_1;
		  };
		  protoOf(MemberInvitedEvent).g2b = function () {
		    return new MemberInvitedConversationEvent(this.a2c_1, this.c2c_1, this.b2c_1, Companion_instance_140.k23(this.e2c_1), new Body_15(this.z2b_1.u29_1.a1x(), this.z2b_1.t29_1, this.z2b_1.w29_1.i25()));
		  };
		  protoOf(MemberInvitedEvent).toString = function () {
		    return 'MemberInvitedEvent(body=' + this.z2b_1.toString() + ', id=' + this.a2c_1 + ', cid=' + this.b2c_1 + ', timestamp=' + this.c2c_1 + ', from=' + this.d2c_1 + ', _embedded=' + toString_0(this.e2c_1) + ', application_id=' + this.f2c_1 + ', type=' + this.g2c_1 + ')';
		  };
		  protoOf(MemberInvitedEvent).hashCode = function () {
		    var result = this.z2b_1.hashCode();
		    result = imul(result, 31) + this.a2c_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.b2c_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.c2c_1) | 0;
		    result = imul(result, 31) + (this.d2c_1 == null ? 0 : getStringHashCode(this.d2c_1)) | 0;
		    result = imul(result, 31) + (this.e2c_1 == null ? 0 : this.e2c_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.f2c_1 == null ? 0 : getStringHashCode(this.f2c_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g2c_1) | 0;
		    return result;
		  };
		  protoOf(MemberInvitedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberInvitedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberInvitedEvent ? other : THROW_CCE();
		    if (!this.z2b_1.equals(tmp0_other_with_cast.z2b_1))
		      return false;
		    if (!(this.a2c_1 === tmp0_other_with_cast.a2c_1))
		      return false;
		    if (!(this.b2c_1 === tmp0_other_with_cast.b2c_1))
		      return false;
		    if (!(this.c2c_1 === tmp0_other_with_cast.c2c_1))
		      return false;
		    if (!(this.d2c_1 == tmp0_other_with_cast.d2c_1))
		      return false;
		    if (!equals(this.e2c_1, tmp0_other_with_cast.e2c_1))
		      return false;
		    if (!(this.f2c_1 == tmp0_other_with_cast.f2c_1))
		      return false;
		    if (!(this.g2c_1 === tmp0_other_with_cast.g2c_1))
		      return false;
		    return true;
		  };
		  function Companion_97() {
		  }
		  protoOf(Companion_97).b13 = function () {
		    return $serializer_getInstance_112();
		  };
		  var Companion_instance_98;
		  function $serializer_112() {
		    $serializer_instance_112 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberMediaEvent', this, 6);
		    tmp0_serialDesc.rq('_embedded', false);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.h2c_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_112).xf = function () {
		    return this.h2c_1;
		  };
		  protoOf($serializer_112).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable($serializer_getInstance_54()), $serializer_getInstance_113(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_112).zf = function (decoder) {
		    var tmp0_desc = this.h2c_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = 0;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.vj(tmp0_desc, 0, $serializer_getInstance_54(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.tj(tmp0_desc, 1, $serializer_getInstance_113(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.mj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.rj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.vj(tmp0_desc, 0, $serializer_getInstance_54(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.tj(tmp0_desc, 1, $serializer_getInstance_113(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.mj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.rj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.rj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return MemberMediaEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_112).i2c = function (encoder, value) {
		    var tmp0_desc = this.h2c_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.al(tmp0_desc, 0, $serializer_getInstance_54(), value.j2c_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_113(), value.k2c_1);
		    tmp1_output.rk(tmp0_desc, 2, value.l2c_1);
		    tmp1_output.wk(tmp0_desc, 3, value.m2c_1);
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.n2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.n2c_1);
		    }
		    tmp1_output.wk(tmp0_desc, 5, value.o2c_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_112).yf = function (encoder, value) {
		    return this.i2c(encoder, value instanceof MemberMediaEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_112;
		  function $serializer_getInstance_112() {
		    if ($serializer_instance_112 == null)
		      new $serializer_112();
		    return $serializer_instance_112;
		  }
		  function MemberMediaEvent_init_$Init$(seen1, _embedded, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(47 === (47 & seen1))) {
		      throwMissingFieldException(seen1, 47, $serializer_getInstance_112().h2c_1);
		    }
		    $this.j2c_1 = _embedded;
		    $this.k2c_1 = body;
		    $this.l2c_1 = id;
		    $this.m2c_1 = cid;
		    if (0 === (seen1 & 16))
		      $this.n2c_1 = null;
		    else
		      $this.n2c_1 = from;
		    $this.o2c_1 = type;
		    return $this;
		  }
		  function MemberMediaEvent_init_$Create$(seen1, _embedded, body, id, cid, from, type, serializationConstructorMarker) {
		    return MemberMediaEvent_init_$Init$(seen1, _embedded, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(MemberMediaEvent)));
		  }
		  function MemberMediaEvent() {
		  }
		  protoOf(MemberMediaEvent).l26 = function () {
		    return this.l2c_1;
		  };
		  protoOf(MemberMediaEvent).m26 = function () {
		    return this.m2c_1;
		  };
		  protoOf(MemberMediaEvent).toString = function () {
		    return 'MemberMediaEvent(_embedded=' + toString_0(this.j2c_1) + ', body=' + this.k2c_1.toString() + ', id=' + this.l2c_1 + ', cid=' + this.m2c_1 + ', from=' + this.n2c_1 + ', type=' + this.o2c_1 + ')';
		  };
		  protoOf(MemberMediaEvent).hashCode = function () {
		    var result = this.j2c_1 == null ? 0 : this.j2c_1.hashCode();
		    result = imul(result, 31) + this.k2c_1.hashCode() | 0;
		    result = imul(result, 31) + this.l2c_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.m2c_1) | 0;
		    result = imul(result, 31) + (this.n2c_1 == null ? 0 : getStringHashCode(this.n2c_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.o2c_1) | 0;
		    return result;
		  };
		  protoOf(MemberMediaEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberMediaEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberMediaEvent ? other : THROW_CCE();
		    if (!equals(this.j2c_1, tmp0_other_with_cast.j2c_1))
		      return false;
		    if (!this.k2c_1.equals(tmp0_other_with_cast.k2c_1))
		      return false;
		    if (!(this.l2c_1 === tmp0_other_with_cast.l2c_1))
		      return false;
		    if (!(this.m2c_1 === tmp0_other_with_cast.m2c_1))
		      return false;
		    if (!(this.n2c_1 == tmp0_other_with_cast.n2c_1))
		      return false;
		    if (!(this.o2c_1 === tmp0_other_with_cast.o2c_1))
		      return false;
		    return true;
		  };
		  function $serializer_113() {
		    $serializer_instance_113 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberMedia', this, 1);
		    tmp0_serialDesc.rq('channel', false);
		    this.p2c_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_113).xf = function () {
		    return this.p2c_1;
		  };
		  protoOf($serializer_113).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_168()];
		  };
		  protoOf($serializer_113).zf = function (decoder) {
		    var tmp0_desc = this.p2c_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_168(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.tj(tmp0_desc, 0, $serializer_getInstance_168(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return MemberMedia_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_113).q2c = function (encoder, value) {
		    var tmp0_desc = this.p2c_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_168(), value.r2c_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_113).yf = function (encoder, value) {
		    return this.q2c(encoder, value instanceof MemberMedia ? value : THROW_CCE());
		  };
		  var $serializer_instance_113;
		  function $serializer_getInstance_113() {
		    if ($serializer_instance_113 == null)
		      new $serializer_113();
		    return $serializer_instance_113;
		  }
		  function MemberMedia_init_$Init$(seen1, channel, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_113().p2c_1);
		    }
		    $this.r2c_1 = channel;
		    return $this;
		  }
		  function MemberMedia_init_$Create$(seen1, channel, serializationConstructorMarker) {
		    return MemberMedia_init_$Init$(seen1, channel, serializationConstructorMarker, objectCreate(protoOf(MemberMedia)));
		  }
		  function MemberMedia() {
		  }
		  protoOf(MemberMedia).toString = function () {
		    return 'MemberMedia(channel=' + this.r2c_1.toString() + ')';
		  };
		  protoOf(MemberMedia).hashCode = function () {
		    return this.r2c_1.hashCode();
		  };
		  protoOf(MemberMedia).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberMedia))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberMedia ? other : THROW_CCE();
		    if (!this.r2c_1.equals(tmp0_other_with_cast.r2c_1))
		      return false;
		    return true;
		  };
		  function Companion_98() {
		  }
		  protoOf(Companion_98).b13 = function () {
		    return $serializer_getInstance_114();
		  };
		  var Companion_instance_99;
		  function $serializer_114() {
		    $serializer_instance_114 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberLeftEvent', this, 8);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('application_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.s2c_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_114).xf = function () {
		    return this.s2c_1;
		  };
		  protoOf($serializer_114).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_115(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_114).zf = function (decoder) {
		    var tmp0_desc = this.s2c_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_input = decoder.hj(tmp0_desc);
		    if (tmp12_input.xj()) {
		      tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_115(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp12_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, $serializer_getInstance_54(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp12_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp12_input.tj(tmp0_desc, 0, $serializer_getInstance_115(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp12_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp12_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, StringSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp12_input.vj(tmp0_desc, 6, $serializer_getInstance_54(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp12_input.rj(tmp0_desc, 7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp12_input.ij(tmp0_desc);
		    return MemberLeftEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
		  };
		  protoOf($serializer_114).t2c = function (encoder, value) {
		    var tmp0_desc = this.s2c_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_115(), value.u2c_1);
		    tmp1_output.rk(tmp0_desc, 1, value.v2c_1);
		    tmp1_output.wk(tmp0_desc, 2, value.w2c_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.x2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.x2c_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.y2c_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.z2c_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, StringSerializer_getInstance(), value.z2c_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.a2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, $serializer_getInstance_54(), value.a2d_1);
		    }
		    tmp1_output.wk(tmp0_desc, 7, value.b2d_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_114).yf = function (encoder, value) {
		    return this.t2c(encoder, value instanceof MemberLeftEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_114;
		  function $serializer_getInstance_114() {
		    if ($serializer_instance_114 == null)
		      new $serializer_114();
		    return $serializer_instance_114;
		  }
		  function MemberLeftEvent_init_$Init$(seen1, body, id, cid, from, timestamp, application_id, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(151 === (151 & seen1))) {
		      throwMissingFieldException(seen1, 151, $serializer_getInstance_114().s2c_1);
		    }
		    $this.u2c_1 = body;
		    $this.v2c_1 = id;
		    $this.w2c_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.x2c_1 = null;
		    else
		      $this.x2c_1 = from;
		    $this.y2c_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.z2c_1 = null;
		    else
		      $this.z2c_1 = application_id;
		    if (0 === (seen1 & 64))
		      $this.a2d_1 = null;
		    else
		      $this.a2d_1 = _embedded;
		    $this.b2d_1 = type;
		    return $this;
		  }
		  function MemberLeftEvent_init_$Create$(seen1, body, id, cid, from, timestamp, application_id, _embedded, type, serializationConstructorMarker) {
		    return MemberLeftEvent_init_$Init$(seen1, body, id, cid, from, timestamp, application_id, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MemberLeftEvent)));
		  }
		  function MemberLeftEvent() {
		  }
		  protoOf(MemberLeftEvent).l26 = function () {
		    return this.v2c_1;
		  };
		  protoOf(MemberLeftEvent).m26 = function () {
		    return this.w2c_1;
		  };
		  protoOf(MemberLeftEvent).g2b = function () {
		    return new MemberLeftConversationEvent(this.v2c_1, this.y2c_1, this.w2c_1, Companion_instance_140.k23(this.a2d_1), new Body_15(this.u2c_1.d2d_1.a1x(), this.u2c_1.c2d_1, this.u2c_1.e2d_1.i25()));
		  };
		  protoOf(MemberLeftEvent).toString = function () {
		    return 'MemberLeftEvent(body=' + this.u2c_1.toString() + ', id=' + this.v2c_1 + ', cid=' + this.w2c_1 + ', from=' + this.x2c_1 + ', timestamp=' + this.y2c_1 + ', application_id=' + this.z2c_1 + ', _embedded=' + toString_0(this.a2d_1) + ', type=' + this.b2d_1 + ')';
		  };
		  protoOf(MemberLeftEvent).hashCode = function () {
		    var result = this.u2c_1.hashCode();
		    result = imul(result, 31) + this.v2c_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.w2c_1) | 0;
		    result = imul(result, 31) + (this.x2c_1 == null ? 0 : getStringHashCode(this.x2c_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.y2c_1) | 0;
		    result = imul(result, 31) + (this.z2c_1 == null ? 0 : getStringHashCode(this.z2c_1)) | 0;
		    result = imul(result, 31) + (this.a2d_1 == null ? 0 : this.a2d_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.b2d_1) | 0;
		    return result;
		  };
		  protoOf(MemberLeftEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberLeftEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberLeftEvent ? other : THROW_CCE();
		    if (!this.u2c_1.equals(tmp0_other_with_cast.u2c_1))
		      return false;
		    if (!(this.v2c_1 === tmp0_other_with_cast.v2c_1))
		      return false;
		    if (!(this.w2c_1 === tmp0_other_with_cast.w2c_1))
		      return false;
		    if (!(this.x2c_1 == tmp0_other_with_cast.x2c_1))
		      return false;
		    if (!(this.y2c_1 === tmp0_other_with_cast.y2c_1))
		      return false;
		    if (!(this.z2c_1 == tmp0_other_with_cast.z2c_1))
		      return false;
		    if (!equals(this.a2d_1, tmp0_other_with_cast.a2d_1))
		      return false;
		    if (!(this.b2d_1 === tmp0_other_with_cast.b2d_1))
		      return false;
		    return true;
		  };
		  function $serializer_115() {
		    $serializer_instance_115 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberLeftBody', this, 4);
		    tmp0_serialDesc.rq('member_id', false);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('channel', false);
		    tmp0_serialDesc.rq('reason', true);
		    this.g2d_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_115).xf = function () {
		    return this.g2d_1;
		  };
		  protoOf($serializer_115).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_51(), $serializer_getInstance_168(), get_nullable($serializer_getInstance_116())];
		  };
		  protoOf($serializer_115).zf = function (decoder) {
		    var tmp0_desc = this.g2d_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_51(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, $serializer_getInstance_116(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_51(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.tj(tmp0_desc, 2, $serializer_getInstance_168(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, $serializer_getInstance_116(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return MemberLeftBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_115).h2d = function (encoder, value) {
		    var tmp0_desc = this.g2d_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.c2d_1);
		    tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_51(), value.d2d_1);
		    tmp1_output.yk(tmp0_desc, 2, $serializer_getInstance_168(), value.e2d_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.f2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, $serializer_getInstance_116(), value.f2d_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_115).yf = function (encoder, value) {
		    return this.h2d(encoder, value instanceof MemberLeftBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_115;
		  function $serializer_getInstance_115() {
		    if ($serializer_instance_115 == null)
		      new $serializer_115();
		    return $serializer_instance_115;
		  }
		  function MemberLeftBody_init_$Init$(seen1, member_id, user, channel, reason, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_115().g2d_1);
		    }
		    $this.c2d_1 = member_id;
		    $this.d2d_1 = user;
		    $this.e2d_1 = channel;
		    if (0 === (seen1 & 8))
		      $this.f2d_1 = null;
		    else
		      $this.f2d_1 = reason;
		    return $this;
		  }
		  function MemberLeftBody_init_$Create$(seen1, member_id, user, channel, reason, serializationConstructorMarker) {
		    return MemberLeftBody_init_$Init$(seen1, member_id, user, channel, reason, serializationConstructorMarker, objectCreate(protoOf(MemberLeftBody)));
		  }
		  function MemberLeftBody() {
		  }
		  protoOf(MemberLeftBody).toString = function () {
		    return 'MemberLeftBody(member_id=' + this.c2d_1 + ', user=' + toString(this.d2d_1) + ', channel=' + this.e2d_1.toString() + ', reason=' + toString_0(this.f2d_1) + ')';
		  };
		  protoOf(MemberLeftBody).hashCode = function () {
		    var result = getStringHashCode(this.c2d_1);
		    result = imul(result, 31) + hashCode(this.d2d_1) | 0;
		    result = imul(result, 31) + this.e2d_1.hashCode() | 0;
		    result = imul(result, 31) + (this.f2d_1 == null ? 0 : this.f2d_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(MemberLeftBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberLeftBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberLeftBody ? other : THROW_CCE();
		    if (!(this.c2d_1 === tmp0_other_with_cast.c2d_1))
		      return false;
		    if (!equals(this.d2d_1, tmp0_other_with_cast.d2d_1))
		      return false;
		    if (!this.e2d_1.equals(tmp0_other_with_cast.e2d_1))
		      return false;
		    if (!equals(this.f2d_1, tmp0_other_with_cast.f2d_1))
		      return false;
		    return true;
		  };
		  function Companion_99() {
		  }
		  function $serializer_116() {
		    $serializer_instance_116 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MemberLeftReason', this, 2);
		    tmp0_serialDesc.rq('code', true);
		    tmp0_serialDesc.rq('text', true);
		    this.i2d_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_116).xf = function () {
		    return this.i2d_1;
		  };
		  protoOf($serializer_116).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_116).zf = function (decoder) {
		    var tmp0_desc = this.i2d_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return MemberLeftReason_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_116).j2d = function (encoder, value) {
		    var tmp0_desc = this.i2d_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.k2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.k2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.l2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.l2d_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_116).yf = function (encoder, value) {
		    return this.j2d(encoder, value instanceof MemberLeftReason ? value : THROW_CCE());
		  };
		  var $serializer_instance_116;
		  function $serializer_getInstance_116() {
		    if ($serializer_instance_116 == null)
		      new $serializer_116();
		    return $serializer_instance_116;
		  }
		  function MemberLeftReason_init_$Init$(seen1, code, text, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_116().i2d_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.k2d_1 = null;
		    else
		      $this.k2d_1 = code;
		    if (0 === (seen1 & 2))
		      $this.l2d_1 = null;
		    else
		      $this.l2d_1 = text;
		    return $this;
		  }
		  function MemberLeftReason_init_$Create$(seen1, code, text, serializationConstructorMarker) {
		    return MemberLeftReason_init_$Init$(seen1, code, text, serializationConstructorMarker, objectCreate(protoOf(MemberLeftReason)));
		  }
		  function MemberLeftReason(code, text) {
		    code = code === VOID ? null : code;
		    text = text === VOID ? null : text;
		    this.k2d_1 = code;
		    this.l2d_1 = text;
		  }
		  protoOf(MemberLeftReason).toString = function () {
		    return 'MemberLeftReason(code=' + this.k2d_1 + ', text=' + this.l2d_1 + ')';
		  };
		  protoOf(MemberLeftReason).hashCode = function () {
		    var result = this.k2d_1 == null ? 0 : getStringHashCode(this.k2d_1);
		    result = imul(result, 31) + (this.l2d_1 == null ? 0 : getStringHashCode(this.l2d_1)) | 0;
		    return result;
		  };
		  protoOf(MemberLeftReason).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberLeftReason))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberLeftReason ? other : THROW_CCE();
		    if (!(this.k2d_1 == tmp0_other_with_cast.k2d_1))
		      return false;
		    if (!(this.l2d_1 == tmp0_other_with_cast.l2d_1))
		      return false;
		    return true;
		  };
		  function $serializer_117() {
		    $serializer_instance_117 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayBody', this, 11);
		    tmp0_serialDesc.rq('say_id', false);
		    tmp0_serialDesc.rq('text', false);
		    tmp0_serialDesc.rq('level', false);
		    tmp0_serialDesc.rq('loop', false);
		    tmp0_serialDesc.rq('language', true);
		    tmp0_serialDesc.rq('premium', true);
		    tmp0_serialDesc.rq('queue', true);
		    tmp0_serialDesc.rq('ssml', true);
		    tmp0_serialDesc.rq('voice_name', true);
		    tmp0_serialDesc.rq('style', true);
		    tmp0_serialDesc.rq('type', true);
		    this.m2d_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_117).xf = function () {
		    return this.m2d_1;
		  };
		  protoOf($serializer_117).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(BooleanSerializer_getInstance()), get_nullable(BooleanSerializer_getInstance()), get_nullable(BooleanSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_117).zf = function (decoder) {
		    var tmp0_desc = this.m2d_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = 0;
		    var tmp7_local3 = 0;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_local8 = null;
		    var tmp13_local9 = null;
		    var tmp14_local10 = null;
		    var tmp15_input = decoder.hj(tmp0_desc);
		    if (tmp15_input.xj()) {
		      tmp4_local0 = tmp15_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp15_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp15_input.mj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp15_input.mj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp15_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp15_input.vj(tmp0_desc, 5, BooleanSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp15_input.vj(tmp0_desc, 6, BooleanSerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp15_input.vj(tmp0_desc, 7, BooleanSerializer_getInstance(), tmp11_local7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp15_input.vj(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		      tmp13_local9 = tmp15_input.vj(tmp0_desc, 9, IntSerializer_getInstance(), tmp13_local9);
		      tmp3_bitMask0 = tmp3_bitMask0 | 512;
		      tmp14_local10 = tmp15_input.vj(tmp0_desc, 10, StringSerializer_getInstance(), tmp14_local10);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp15_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp15_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp15_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp15_input.mj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp15_input.mj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp15_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp15_input.vj(tmp0_desc, 5, BooleanSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp15_input.vj(tmp0_desc, 6, BooleanSerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp15_input.vj(tmp0_desc, 7, BooleanSerializer_getInstance(), tmp11_local7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp15_input.vj(tmp0_desc, 8, StringSerializer_getInstance(), tmp12_local8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          case 9:
		            tmp13_local9 = tmp15_input.vj(tmp0_desc, 9, IntSerializer_getInstance(), tmp13_local9);
		            tmp3_bitMask0 = tmp3_bitMask0 | 512;
		            break;
		          case 10:
		            tmp14_local10 = tmp15_input.vj(tmp0_desc, 10, StringSerializer_getInstance(), tmp14_local10);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp15_input.ij(tmp0_desc);
		    return AudioSayBody_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, null);
		  };
		  protoOf($serializer_117).n2d = function (encoder, value) {
		    var tmp0_desc = this.m2d_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.o2d_1);
		    tmp1_output.wk(tmp0_desc, 1, value.p2d_1);
		    tmp1_output.rk(tmp0_desc, 2, value.q2d_1);
		    tmp1_output.rk(tmp0_desc, 3, value.r2d_1);
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.s2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.s2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.t2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, BooleanSerializer_getInstance(), value.t2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.u2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, BooleanSerializer_getInstance(), value.u2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 7) ? true : !(value.v2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 7, BooleanSerializer_getInstance(), value.v2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 8) ? true : !(value.w2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 8, StringSerializer_getInstance(), value.w2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 9) ? true : !(value.x2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 9, IntSerializer_getInstance(), value.x2d_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 10) ? true : !(value.y2d_1 == null)) {
		      tmp1_output.al(tmp0_desc, 10, StringSerializer_getInstance(), value.y2d_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_117).yf = function (encoder, value) {
		    return this.n2d(encoder, value instanceof AudioSayBody_0 ? value : THROW_CCE());
		  };
		  var $serializer_instance_117;
		  function $serializer_getInstance_117() {
		    if ($serializer_instance_117 == null)
		      new $serializer_117();
		    return $serializer_instance_117;
		  }
		  function AudioSayBody_init_$Init$_0(seen1, say_id, text, level, loop, language, premium, queue, ssml, voice_name, style, type, serializationConstructorMarker, $this) {
		    if (!(15 === (15 & seen1))) {
		      throwMissingFieldException(seen1, 15, $serializer_getInstance_117().m2d_1);
		    }
		    $this.o2d_1 = say_id;
		    $this.p2d_1 = text;
		    $this.q2d_1 = level;
		    $this.r2d_1 = loop;
		    if (0 === (seen1 & 16))
		      $this.s2d_1 = null;
		    else
		      $this.s2d_1 = language;
		    if (0 === (seen1 & 32))
		      $this.t2d_1 = null;
		    else
		      $this.t2d_1 = premium;
		    if (0 === (seen1 & 64))
		      $this.u2d_1 = null;
		    else
		      $this.u2d_1 = queue;
		    if (0 === (seen1 & 128))
		      $this.v2d_1 = null;
		    else
		      $this.v2d_1 = ssml;
		    if (0 === (seen1 & 256))
		      $this.w2d_1 = null;
		    else
		      $this.w2d_1 = voice_name;
		    if (0 === (seen1 & 512))
		      $this.x2d_1 = null;
		    else
		      $this.x2d_1 = style;
		    if (0 === (seen1 & 1024))
		      $this.y2d_1 = null;
		    else
		      $this.y2d_1 = type;
		    return $this;
		  }
		  function AudioSayBody_init_$Create$_0(seen1, say_id, text, level, loop, language, premium, queue, ssml, voice_name, style, type, serializationConstructorMarker) {
		    return AudioSayBody_init_$Init$_0(seen1, say_id, text, level, loop, language, premium, queue, ssml, voice_name, style, type, serializationConstructorMarker, objectCreate(protoOf(AudioSayBody_0)));
		  }
		  function AudioSayBody_0() {
		  }
		  protoOf(AudioSayBody_0).toString = function () {
		    return 'AudioSayBody(say_id=' + this.o2d_1 + ', text=' + this.p2d_1 + ', level=' + this.q2d_1 + ', loop=' + this.r2d_1 + ', language=' + this.s2d_1 + ', premium=' + this.t2d_1 + ', queue=' + this.u2d_1 + ', ssml=' + this.v2d_1 + ', voice_name=' + this.w2d_1 + ', style=' + this.x2d_1 + ', type=' + this.y2d_1 + ')';
		  };
		  protoOf(AudioSayBody_0).hashCode = function () {
		    var result = getStringHashCode(this.o2d_1);
		    result = imul(result, 31) + getStringHashCode(this.p2d_1) | 0;
		    result = imul(result, 31) + this.q2d_1 | 0;
		    result = imul(result, 31) + this.r2d_1 | 0;
		    result = imul(result, 31) + (this.s2d_1 == null ? 0 : getStringHashCode(this.s2d_1)) | 0;
		    result = imul(result, 31) + (this.t2d_1 == null ? 0 : getBooleanHashCode(this.t2d_1)) | 0;
		    result = imul(result, 31) + (this.u2d_1 == null ? 0 : getBooleanHashCode(this.u2d_1)) | 0;
		    result = imul(result, 31) + (this.v2d_1 == null ? 0 : getBooleanHashCode(this.v2d_1)) | 0;
		    result = imul(result, 31) + (this.w2d_1 == null ? 0 : getStringHashCode(this.w2d_1)) | 0;
		    result = imul(result, 31) + (this.x2d_1 == null ? 0 : this.x2d_1) | 0;
		    result = imul(result, 31) + (this.y2d_1 == null ? 0 : getStringHashCode(this.y2d_1)) | 0;
		    return result;
		  };
		  protoOf(AudioSayBody_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayBody_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayBody_0 ? other : THROW_CCE();
		    if (!(this.o2d_1 === tmp0_other_with_cast.o2d_1))
		      return false;
		    if (!(this.p2d_1 === tmp0_other_with_cast.p2d_1))
		      return false;
		    if (!(this.q2d_1 === tmp0_other_with_cast.q2d_1))
		      return false;
		    if (!(this.r2d_1 === tmp0_other_with_cast.r2d_1))
		      return false;
		    if (!(this.s2d_1 == tmp0_other_with_cast.s2d_1))
		      return false;
		    if (!(this.t2d_1 == tmp0_other_with_cast.t2d_1))
		      return false;
		    if (!(this.u2d_1 == tmp0_other_with_cast.u2d_1))
		      return false;
		    if (!(this.v2d_1 == tmp0_other_with_cast.v2d_1))
		      return false;
		    if (!(this.w2d_1 == tmp0_other_with_cast.w2d_1))
		      return false;
		    if (!(this.x2d_1 == tmp0_other_with_cast.x2d_1))
		      return false;
		    if (!(this.y2d_1 == tmp0_other_with_cast.y2d_1))
		      return false;
		    return true;
		  };
		  function $serializer_118() {
		    $serializer_instance_118 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LegStatusHistory', this, 2);
		    tmp0_serialDesc.rq('status', false);
		    tmp0_serialDesc.rq('date', false);
		    this.z2d_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_118).xf = function () {
		    return this.z2d_1;
		  };
		  protoOf($serializer_118).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_118).zf = function (decoder) {
		    var tmp0_desc = this.z2d_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return LegStatusHistory_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_118).a2e = function (encoder, value) {
		    var tmp0_desc = this.z2d_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.b2e_1);
		    tmp1_output.wk(tmp0_desc, 1, value.c2e_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_118).yf = function (encoder, value) {
		    return this.a2e(encoder, value instanceof LegStatusHistory ? value : THROW_CCE());
		  };
		  var $serializer_instance_118;
		  function $serializer_getInstance_118() {
		    if ($serializer_instance_118 == null)
		      new $serializer_118();
		    return $serializer_instance_118;
		  }
		  function LegStatusHistory_init_$Init$(seen1, status, date, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_118().z2d_1);
		    }
		    $this.b2e_1 = status;
		    $this.c2e_1 = date;
		    return $this;
		  }
		  function LegStatusHistory_init_$Create$(seen1, status, date, serializationConstructorMarker) {
		    return LegStatusHistory_init_$Init$(seen1, status, date, serializationConstructorMarker, objectCreate(protoOf(LegStatusHistory)));
		  }
		  function LegStatusHistory() {
		  }
		  protoOf(LegStatusHistory).toString = function () {
		    return 'LegStatusHistory(status=' + this.b2e_1 + ', date=' + this.c2e_1 + ')';
		  };
		  protoOf(LegStatusHistory).hashCode = function () {
		    var result = getStringHashCode(this.b2e_1);
		    result = imul(result, 31) + getStringHashCode(this.c2e_1) | 0;
		    return result;
		  };
		  protoOf(LegStatusHistory).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegStatusHistory))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegStatusHistory ? other : THROW_CCE();
		    if (!(this.b2e_1 === tmp0_other_with_cast.b2e_1))
		      return false;
		    if (!(this.c2e_1 === tmp0_other_with_cast.c2e_1))
		      return false;
		    return true;
		  };
		  function $serializer_119() {
		    $serializer_instance_119 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSEventStateBody', this, 1);
		    tmp0_serialDesc.rq('event_id', false);
		    this.d2e_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_119).xf = function () {
		    return this.d2e_1;
		  };
		  protoOf($serializer_119).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance()];
		  };
		  protoOf($serializer_119).zf = function (decoder) {
		    var tmp0_desc = this.d2e_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return CSEventStateBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_119).e2e = function (encoder, value) {
		    var tmp0_desc = this.d2e_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.z24_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_119).yf = function (encoder, value) {
		    return this.e2e(encoder, value instanceof CSEventStateBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_119;
		  function $serializer_getInstance_119() {
		    if ($serializer_instance_119 == null)
		      new $serializer_119();
		    return $serializer_instance_119;
		  }
		  function CSEventStateBody_init_$Init$(seen1, eventId, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_119().d2e_1);
		    }
		    $this.z24_1 = eventId;
		    return $this;
		  }
		  function CSEventStateBody_init_$Create$(seen1, eventId, serializationConstructorMarker) {
		    return CSEventStateBody_init_$Init$(seen1, eventId, serializationConstructorMarker, objectCreate(protoOf(CSEventStateBody)));
		  }
		  function CSEventStateBody() {
		  }
		  protoOf(CSEventStateBody).toString = function () {
		    return 'CSEventStateBody(eventId=' + this.z24_1 + ')';
		  };
		  protoOf(CSEventStateBody).hashCode = function () {
		    return this.z24_1;
		  };
		  protoOf(CSEventStateBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSEventStateBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSEventStateBody ? other : THROW_CCE();
		    if (!(this.z24_1 === tmp0_other_with_cast.z24_1))
		      return false;
		    return true;
		  };
		  function Companion_100() {
		  }
		  protoOf(Companion_100).b13 = function () {
		    return $serializer_getInstance_120();
		  };
		  var Companion_instance_101;
		  function $serializer_120() {
		    $serializer_instance_120 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.f2e_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_120).xf = function () {
		    return this.f2e_1;
		  };
		  protoOf($serializer_120).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [CSMessageEventBodySerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_120).zf = function (decoder) {
		    var tmp0_desc = this.f2e_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, CSMessageEventBodySerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, CSMessageEventBodySerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_120).g2e = function (encoder, value) {
		    var tmp0_desc = this.f2e_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, CSMessageEventBodySerializer_getInstance(), value.h2e_1);
		    tmp1_output.rk(tmp0_desc, 1, value.i2e_1);
		    tmp1_output.wk(tmp0_desc, 2, value.j2e_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.k2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.k2e_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.l2e_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.m2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.m2e_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.n2e_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_120).yf = function (encoder, value) {
		    return this.g2e(encoder, value instanceof MessageEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_120;
		  function $serializer_getInstance_120() {
		    if ($serializer_instance_120 == null)
		      new $serializer_120();
		    return $serializer_instance_120;
		  }
		  function MessageEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_120().f2e_1);
		    }
		    $this.h2e_1 = body;
		    $this.i2e_1 = id;
		    $this.j2e_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.k2e_1 = null;
		    else
		      $this.k2e_1 = from;
		    $this.l2e_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.m2e_1 = null;
		    else
		      $this.m2e_1 = _embedded;
		    $this.n2e_1 = type;
		    return $this;
		  }
		  function MessageEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageEvent)));
		  }
		  function MessageEvent() {
		  }
		  protoOf(MessageEvent).l26 = function () {
		    return this.i2e_1;
		  };
		  protoOf(MessageEvent).m26 = function () {
		    return this.j2e_1;
		  };
		  protoOf(MessageEvent).g2b = function () {
		    var from = Companion_instance_140.k23(this.m2e_1);
		    var tmp0_subject = this.h2e_1;
		    var tmp;
		    if (tmp0_subject instanceof TextBody) {
		      tmp = new MessageTextEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_16(this.h2e_1.w2f_1));
		    } else {
		      if (tmp0_subject instanceof CustomBody) {
		        tmp = new MessageCustomEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_17(this.h2e_1.t2f_1.toString()));
		      } else {
		        if (tmp0_subject instanceof AudioBody) {
		          tmp = new MessageAudioEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_20(this.h2e_1.q2f_1.o2e_1));
		        } else {
		          if (tmp0_subject instanceof FileBody) {
		            tmp = new MessageFileEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_21(this.h2e_1.n2f_1.o2e_1));
		          } else {
		            if (tmp0_subject instanceof ImageBody) {
		              tmp = new MessageImageEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_18(this.h2e_1.k2f_1.o2e_1));
		            } else {
		              if (tmp0_subject instanceof LocationBody) {
		                tmp = new MessageLocationEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_24(new Location(this.h2e_1.h2f_1.d2f_1, this.h2e_1.h2f_1.e2f_1, this.h2e_1.h2f_1.f2f_1, this.h2e_1.h2f_1.g2f_1)));
		              } else {
		                if (tmp0_subject instanceof TemplateBody) {
		                  tmp = new MessageTemplateEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_23(new TemplateObject_0(this.h2e_1.x2e_1.v2e_1, this.h2e_1.x2e_1.w2e_1), new WhatsappObject_0(this.h2e_1.a2f_1.b2f_1, this.h2e_1.a2f_1.c2f_1)));
		                } else {
		                  if (tmp0_subject instanceof VCardBody) {
		                    tmp = new MessageVCardEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_22(this.h2e_1.s2e_1.o2e_1));
		                  } else {
		                    if (tmp0_subject instanceof VideoBody) {
		                      tmp = new MessageVideoEvent(this.l2e_1, this.j2e_1, this.i2e_1, from, new Body_19(this.h2e_1.p2e_1.o2e_1));
		                    } else {
		                      noWhenBranchMatchedException();
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(MessageEvent).toString = function () {
		    return 'MessageEvent(body=' + toString(this.h2e_1) + ', id=' + this.i2e_1 + ', cid=' + this.j2e_1 + ', from=' + this.k2e_1 + ', timestamp=' + this.l2e_1 + ', _embedded=' + toString_0(this.m2e_1) + ', type=' + this.n2e_1 + ')';
		  };
		  protoOf(MessageEvent).hashCode = function () {
		    var result = hashCode(this.h2e_1);
		    result = imul(result, 31) + this.i2e_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2e_1) | 0;
		    result = imul(result, 31) + (this.k2e_1 == null ? 0 : getStringHashCode(this.k2e_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.l2e_1) | 0;
		    result = imul(result, 31) + (this.m2e_1 == null ? 0 : this.m2e_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.n2e_1) | 0;
		    return result;
		  };
		  protoOf(MessageEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageEvent ? other : THROW_CCE();
		    if (!equals(this.h2e_1, tmp0_other_with_cast.h2e_1))
		      return false;
		    if (!(this.i2e_1 === tmp0_other_with_cast.i2e_1))
		      return false;
		    if (!(this.j2e_1 === tmp0_other_with_cast.j2e_1))
		      return false;
		    if (!(this.k2e_1 == tmp0_other_with_cast.k2e_1))
		      return false;
		    if (!(this.l2e_1 === tmp0_other_with_cast.l2e_1))
		      return false;
		    if (!equals(this.m2e_1, tmp0_other_with_cast.m2e_1))
		      return false;
		    if (!(this.n2e_1 === tmp0_other_with_cast.n2e_1))
		      return false;
		    return true;
		  };
		  function Companion_101() {
		  }
		  protoOf(Companion_101).b13 = function () {
		    return $serializer_getInstance_121();
		  };
		  var Companion_instance_102;
		  function $serializer_121() {
		    $serializer_instance_121 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.EphemeralEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.z2f_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_121).xf = function () {
		    return this.z2f_1;
		  };
		  protoOf($serializer_121).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [JsonObjectSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_121).zf = function (decoder) {
		    var tmp0_desc = this.z2f_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return EphemeralEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_121).a2g = function (encoder, value) {
		    var tmp0_desc = this.z2f_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, JsonObjectSerializer_getInstance(), value.b2g_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.c2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.c2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 2, value.d2g_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.e2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.e2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.f2g_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.g2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.g2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.h2g_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_121).yf = function (encoder, value) {
		    return this.a2g(encoder, value instanceof EphemeralEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_121;
		  function $serializer_getInstance_121() {
		    if ($serializer_instance_121 == null)
		      new $serializer_121();
		    return $serializer_instance_121;
		  }
		  function EphemeralEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(85 === (85 & seen1))) {
		      throwMissingFieldException(seen1, 85, $serializer_getInstance_121().z2f_1);
		    }
		    $this.b2g_1 = body;
		    if (0 === (seen1 & 2))
		      $this.c2g_1 = null;
		    else
		      $this.c2g_1 = id;
		    $this.d2g_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.e2g_1 = null;
		    else
		      $this.e2g_1 = from;
		    $this.f2g_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.g2g_1 = null;
		    else
		      $this.g2g_1 = _embedded;
		    $this.h2g_1 = type;
		    return $this;
		  }
		  function EphemeralEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return EphemeralEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(EphemeralEvent)));
		  }
		  function EphemeralEvent() {
		  }
		  protoOf(EphemeralEvent).l26 = function () {
		    return this.c2g_1;
		  };
		  protoOf(EphemeralEvent).m26 = function () {
		    return this.d2g_1;
		  };
		  protoOf(EphemeralEvent).g2b = function () {
		    return new EphemeralConversationEvent(this.f2g_1, this.d2g_1, Companion_instance_140.k23(this.g2g_1), this.b2g_1.toString());
		  };
		  protoOf(EphemeralEvent).toString = function () {
		    return 'EphemeralEvent(body=' + this.b2g_1.toString() + ', id=' + this.c2g_1 + ', cid=' + this.d2g_1 + ', from=' + this.e2g_1 + ', timestamp=' + this.f2g_1 + ', _embedded=' + toString_0(this.g2g_1) + ', type=' + this.h2g_1 + ')';
		  };
		  protoOf(EphemeralEvent).hashCode = function () {
		    var result = this.b2g_1.hashCode();
		    result = imul(result, 31) + (this.c2g_1 == null ? 0 : this.c2g_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.d2g_1) | 0;
		    result = imul(result, 31) + (this.e2g_1 == null ? 0 : getStringHashCode(this.e2g_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f2g_1) | 0;
		    result = imul(result, 31) + (this.g2g_1 == null ? 0 : this.g2g_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.h2g_1) | 0;
		    return result;
		  };
		  protoOf(EphemeralEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EphemeralEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof EphemeralEvent ? other : THROW_CCE();
		    if (!this.b2g_1.equals(tmp0_other_with_cast.b2g_1))
		      return false;
		    if (!(this.c2g_1 == tmp0_other_with_cast.c2g_1))
		      return false;
		    if (!(this.d2g_1 === tmp0_other_with_cast.d2g_1))
		      return false;
		    if (!(this.e2g_1 == tmp0_other_with_cast.e2g_1))
		      return false;
		    if (!(this.f2g_1 === tmp0_other_with_cast.f2g_1))
		      return false;
		    if (!equals(this.g2g_1, tmp0_other_with_cast.g2g_1))
		      return false;
		    if (!(this.h2g_1 === tmp0_other_with_cast.h2g_1))
		      return false;
		    return true;
		  };
		  function Companion_102() {
		  }
		  protoOf(Companion_102).b13 = function () {
		    return $serializer_getInstance_122();
		  };
		  var Companion_instance_103;
		  function $serializer_122() {
		    $serializer_instance_122 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.DeleteEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.i2g_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_122).xf = function () {
		    return this.i2g_1;
		  };
		  protoOf($serializer_122).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_122).zf = function (decoder) {
		    var tmp0_desc = this.i2g_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return DeleteEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_122).j2g = function (encoder, value) {
		    var tmp0_desc = this.i2g_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.k2g_1);
		    tmp1_output.rk(tmp0_desc, 1, value.l2g_1);
		    tmp1_output.wk(tmp0_desc, 2, value.m2g_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.n2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.n2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.o2g_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.p2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.p2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.q2g_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_122).yf = function (encoder, value) {
		    return this.j2g(encoder, value instanceof DeleteEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_122;
		  function $serializer_getInstance_122() {
		    if ($serializer_instance_122 == null)
		      new $serializer_122();
		    return $serializer_instance_122;
		  }
		  function DeleteEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_122().i2g_1);
		    }
		    $this.k2g_1 = body;
		    $this.l2g_1 = id;
		    $this.m2g_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.n2g_1 = null;
		    else
		      $this.n2g_1 = from;
		    $this.o2g_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.p2g_1 = null;
		    else
		      $this.p2g_1 = _embedded;
		    $this.q2g_1 = type;
		    return $this;
		  }
		  function DeleteEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return DeleteEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(DeleteEvent)));
		  }
		  function DeleteEvent() {
		  }
		  protoOf(DeleteEvent).l26 = function () {
		    return this.l2g_1;
		  };
		  protoOf(DeleteEvent).m26 = function () {
		    return this.m2g_1;
		  };
		  protoOf(DeleteEvent).g2b = function () {
		    return new EventDeleteConversationEvent(this.l2g_1, this.o2g_1, this.m2g_1, Companion_instance_140.k23(this.p2g_1), new EventStateBody(this.k2g_1.z24_1));
		  };
		  protoOf(DeleteEvent).toString = function () {
		    return 'DeleteEvent(body=' + this.k2g_1.toString() + ', id=' + this.l2g_1 + ', cid=' + this.m2g_1 + ', from=' + this.n2g_1 + ', timestamp=' + this.o2g_1 + ', _embedded=' + toString_0(this.p2g_1) + ', type=' + this.q2g_1 + ')';
		  };
		  protoOf(DeleteEvent).hashCode = function () {
		    var result = this.k2g_1.hashCode();
		    result = imul(result, 31) + this.l2g_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.m2g_1) | 0;
		    result = imul(result, 31) + (this.n2g_1 == null ? 0 : getStringHashCode(this.n2g_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.o2g_1) | 0;
		    result = imul(result, 31) + (this.p2g_1 == null ? 0 : this.p2g_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.q2g_1) | 0;
		    return result;
		  };
		  protoOf(DeleteEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof DeleteEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof DeleteEvent ? other : THROW_CCE();
		    if (!this.k2g_1.equals(tmp0_other_with_cast.k2g_1))
		      return false;
		    if (!(this.l2g_1 === tmp0_other_with_cast.l2g_1))
		      return false;
		    if (!(this.m2g_1 === tmp0_other_with_cast.m2g_1))
		      return false;
		    if (!(this.n2g_1 == tmp0_other_with_cast.n2g_1))
		      return false;
		    if (!(this.o2g_1 === tmp0_other_with_cast.o2g_1))
		      return false;
		    if (!equals(this.p2g_1, tmp0_other_with_cast.p2g_1))
		      return false;
		    if (!(this.q2g_1 === tmp0_other_with_cast.q2g_1))
		      return false;
		    return true;
		  };
		  function Companion_103() {
		  }
		  protoOf(Companion_103).b13 = function () {
		    return $serializer_getInstance_123();
		  };
		  var Companion_instance_104;
		  function $serializer_123() {
		    $serializer_instance_123 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageDeliveredSocketEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.r2g_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_123).xf = function () {
		    return this.r2g_1;
		  };
		  protoOf($serializer_123).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_123).zf = function (decoder) {
		    var tmp0_desc = this.r2g_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageDeliveredSocketEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_123).s2g = function (encoder, value) {
		    var tmp0_desc = this.r2g_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.t2g_1);
		    tmp1_output.rk(tmp0_desc, 1, value.u2g_1);
		    tmp1_output.wk(tmp0_desc, 2, value.v2g_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.w2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.w2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.x2g_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.y2g_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.y2g_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.z2g_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_123).yf = function (encoder, value) {
		    return this.s2g(encoder, value instanceof MessageDeliveredSocketEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_123;
		  function $serializer_getInstance_123() {
		    if ($serializer_instance_123 == null)
		      new $serializer_123();
		    return $serializer_instance_123;
		  }
		  function MessageDeliveredSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_123().r2g_1);
		    }
		    $this.t2g_1 = body;
		    $this.u2g_1 = id;
		    $this.v2g_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.w2g_1 = null;
		    else
		      $this.w2g_1 = from;
		    $this.x2g_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.y2g_1 = null;
		    else
		      $this.y2g_1 = _embedded;
		    $this.z2g_1 = type;
		    return $this;
		  }
		  function MessageDeliveredSocketEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageDeliveredSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageDeliveredSocketEvent)));
		  }
		  function MessageDeliveredSocketEvent() {
		  }
		  protoOf(MessageDeliveredSocketEvent).l26 = function () {
		    return this.u2g_1;
		  };
		  protoOf(MessageDeliveredSocketEvent).m26 = function () {
		    return this.v2g_1;
		  };
		  protoOf(MessageDeliveredSocketEvent).g2b = function () {
		    return new MessageDeliveredEvent(this.u2g_1, this.x2g_1, this.v2g_1, Companion_instance_140.k23(this.y2g_1), new EventStateBody(this.t2g_1.z24_1));
		  };
		  protoOf(MessageDeliveredSocketEvent).toString = function () {
		    return 'MessageDeliveredSocketEvent(body=' + this.t2g_1.toString() + ', id=' + this.u2g_1 + ', cid=' + this.v2g_1 + ', from=' + this.w2g_1 + ', timestamp=' + this.x2g_1 + ', _embedded=' + toString_0(this.y2g_1) + ', type=' + this.z2g_1 + ')';
		  };
		  protoOf(MessageDeliveredSocketEvent).hashCode = function () {
		    var result = this.t2g_1.hashCode();
		    result = imul(result, 31) + this.u2g_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.v2g_1) | 0;
		    result = imul(result, 31) + (this.w2g_1 == null ? 0 : getStringHashCode(this.w2g_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x2g_1) | 0;
		    result = imul(result, 31) + (this.y2g_1 == null ? 0 : this.y2g_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z2g_1) | 0;
		    return result;
		  };
		  protoOf(MessageDeliveredSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageDeliveredSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageDeliveredSocketEvent ? other : THROW_CCE();
		    if (!this.t2g_1.equals(tmp0_other_with_cast.t2g_1))
		      return false;
		    if (!(this.u2g_1 === tmp0_other_with_cast.u2g_1))
		      return false;
		    if (!(this.v2g_1 === tmp0_other_with_cast.v2g_1))
		      return false;
		    if (!(this.w2g_1 == tmp0_other_with_cast.w2g_1))
		      return false;
		    if (!(this.x2g_1 === tmp0_other_with_cast.x2g_1))
		      return false;
		    if (!equals(this.y2g_1, tmp0_other_with_cast.y2g_1))
		      return false;
		    if (!(this.z2g_1 === tmp0_other_with_cast.z2g_1))
		      return false;
		    return true;
		  };
		  function Companion_104() {
		  }
		  protoOf(Companion_104).b13 = function () {
		    return $serializer_getInstance_124();
		  };
		  var Companion_instance_105;
		  function $serializer_124() {
		    $serializer_instance_124 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageRejectedSocketEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.a2h_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_124).xf = function () {
		    return this.a2h_1;
		  };
		  protoOf($serializer_124).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_124).zf = function (decoder) {
		    var tmp0_desc = this.a2h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageRejectedSocketEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_124).b2h = function (encoder, value) {
		    var tmp0_desc = this.a2h_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.c2h_1);
		    tmp1_output.rk(tmp0_desc, 1, value.d2h_1);
		    tmp1_output.wk(tmp0_desc, 2, value.e2h_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.f2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.f2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.g2h_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.h2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.h2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.i2h_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_124).yf = function (encoder, value) {
		    return this.b2h(encoder, value instanceof MessageRejectedSocketEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_124;
		  function $serializer_getInstance_124() {
		    if ($serializer_instance_124 == null)
		      new $serializer_124();
		    return $serializer_instance_124;
		  }
		  function MessageRejectedSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_124().a2h_1);
		    }
		    $this.c2h_1 = body;
		    $this.d2h_1 = id;
		    $this.e2h_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.f2h_1 = null;
		    else
		      $this.f2h_1 = from;
		    $this.g2h_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.h2h_1 = null;
		    else
		      $this.h2h_1 = _embedded;
		    $this.i2h_1 = type;
		    return $this;
		  }
		  function MessageRejectedSocketEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageRejectedSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageRejectedSocketEvent)));
		  }
		  function MessageRejectedSocketEvent() {
		  }
		  protoOf(MessageRejectedSocketEvent).l26 = function () {
		    return this.d2h_1;
		  };
		  protoOf(MessageRejectedSocketEvent).m26 = function () {
		    return this.e2h_1;
		  };
		  protoOf(MessageRejectedSocketEvent).g2b = function () {
		    return new MessageRejectedEvent(this.d2h_1, this.g2h_1, this.e2h_1, Companion_instance_140.k23(this.h2h_1), new EventStateBody(this.c2h_1.z24_1));
		  };
		  protoOf(MessageRejectedSocketEvent).toString = function () {
		    return 'MessageRejectedSocketEvent(body=' + this.c2h_1.toString() + ', id=' + this.d2h_1 + ', cid=' + this.e2h_1 + ', from=' + this.f2h_1 + ', timestamp=' + this.g2h_1 + ', _embedded=' + toString_0(this.h2h_1) + ', type=' + this.i2h_1 + ')';
		  };
		  protoOf(MessageRejectedSocketEvent).hashCode = function () {
		    var result = this.c2h_1.hashCode();
		    result = imul(result, 31) + this.d2h_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.e2h_1) | 0;
		    result = imul(result, 31) + (this.f2h_1 == null ? 0 : getStringHashCode(this.f2h_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g2h_1) | 0;
		    result = imul(result, 31) + (this.h2h_1 == null ? 0 : this.h2h_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.i2h_1) | 0;
		    return result;
		  };
		  protoOf(MessageRejectedSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageRejectedSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageRejectedSocketEvent ? other : THROW_CCE();
		    if (!this.c2h_1.equals(tmp0_other_with_cast.c2h_1))
		      return false;
		    if (!(this.d2h_1 === tmp0_other_with_cast.d2h_1))
		      return false;
		    if (!(this.e2h_1 === tmp0_other_with_cast.e2h_1))
		      return false;
		    if (!(this.f2h_1 == tmp0_other_with_cast.f2h_1))
		      return false;
		    if (!(this.g2h_1 === tmp0_other_with_cast.g2h_1))
		      return false;
		    if (!equals(this.h2h_1, tmp0_other_with_cast.h2h_1))
		      return false;
		    if (!(this.i2h_1 === tmp0_other_with_cast.i2h_1))
		      return false;
		    return true;
		  };
		  function Companion_105() {
		  }
		  protoOf(Companion_105).b13 = function () {
		    return $serializer_getInstance_125();
		  };
		  var Companion_instance_106;
		  function $serializer_125() {
		    $serializer_instance_125 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageSubmittedSocketEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.j2h_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_125).xf = function () {
		    return this.j2h_1;
		  };
		  protoOf($serializer_125).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_125).zf = function (decoder) {
		    var tmp0_desc = this.j2h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageSubmittedSocketEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_125).k2h = function (encoder, value) {
		    var tmp0_desc = this.j2h_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.l2h_1);
		    tmp1_output.rk(tmp0_desc, 1, value.m2h_1);
		    tmp1_output.wk(tmp0_desc, 2, value.n2h_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.o2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.o2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.p2h_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.q2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.q2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.r2h_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_125).yf = function (encoder, value) {
		    return this.k2h(encoder, value instanceof MessageSubmittedSocketEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_125;
		  function $serializer_getInstance_125() {
		    if ($serializer_instance_125 == null)
		      new $serializer_125();
		    return $serializer_instance_125;
		  }
		  function MessageSubmittedSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_125().j2h_1);
		    }
		    $this.l2h_1 = body;
		    $this.m2h_1 = id;
		    $this.n2h_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.o2h_1 = null;
		    else
		      $this.o2h_1 = from;
		    $this.p2h_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.q2h_1 = null;
		    else
		      $this.q2h_1 = _embedded;
		    $this.r2h_1 = type;
		    return $this;
		  }
		  function MessageSubmittedSocketEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageSubmittedSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageSubmittedSocketEvent)));
		  }
		  function MessageSubmittedSocketEvent() {
		  }
		  protoOf(MessageSubmittedSocketEvent).l26 = function () {
		    return this.m2h_1;
		  };
		  protoOf(MessageSubmittedSocketEvent).m26 = function () {
		    return this.n2h_1;
		  };
		  protoOf(MessageSubmittedSocketEvent).g2b = function () {
		    return new MessageSubmittedEvent(this.m2h_1, this.p2h_1, this.n2h_1, Companion_instance_140.k23(this.q2h_1), new EventStateBody(this.l2h_1.z24_1));
		  };
		  protoOf(MessageSubmittedSocketEvent).toString = function () {
		    return 'MessageSubmittedSocketEvent(body=' + this.l2h_1.toString() + ', id=' + this.m2h_1 + ', cid=' + this.n2h_1 + ', from=' + this.o2h_1 + ', timestamp=' + this.p2h_1 + ', _embedded=' + toString_0(this.q2h_1) + ', type=' + this.r2h_1 + ')';
		  };
		  protoOf(MessageSubmittedSocketEvent).hashCode = function () {
		    var result = this.l2h_1.hashCode();
		    result = imul(result, 31) + this.m2h_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.n2h_1) | 0;
		    result = imul(result, 31) + (this.o2h_1 == null ? 0 : getStringHashCode(this.o2h_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.p2h_1) | 0;
		    result = imul(result, 31) + (this.q2h_1 == null ? 0 : this.q2h_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.r2h_1) | 0;
		    return result;
		  };
		  protoOf(MessageSubmittedSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageSubmittedSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageSubmittedSocketEvent ? other : THROW_CCE();
		    if (!this.l2h_1.equals(tmp0_other_with_cast.l2h_1))
		      return false;
		    if (!(this.m2h_1 === tmp0_other_with_cast.m2h_1))
		      return false;
		    if (!(this.n2h_1 === tmp0_other_with_cast.n2h_1))
		      return false;
		    if (!(this.o2h_1 == tmp0_other_with_cast.o2h_1))
		      return false;
		    if (!(this.p2h_1 === tmp0_other_with_cast.p2h_1))
		      return false;
		    if (!equals(this.q2h_1, tmp0_other_with_cast.q2h_1))
		      return false;
		    if (!(this.r2h_1 === tmp0_other_with_cast.r2h_1))
		      return false;
		    return true;
		  };
		  function Companion_106() {
		  }
		  protoOf(Companion_106).b13 = function () {
		    return $serializer_getInstance_126();
		  };
		  var Companion_instance_107;
		  function $serializer_126() {
		    $serializer_instance_126 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageUndeliverableSocketEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.s2h_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_126).xf = function () {
		    return this.s2h_1;
		  };
		  protoOf($serializer_126).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_126).zf = function (decoder) {
		    var tmp0_desc = this.s2h_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageUndeliverableSocketEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_126).t2h = function (encoder, value) {
		    var tmp0_desc = this.s2h_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.u2h_1);
		    tmp1_output.rk(tmp0_desc, 1, value.v2h_1);
		    tmp1_output.wk(tmp0_desc, 2, value.w2h_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.x2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.x2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.y2h_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.z2h_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.z2h_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.a2i_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_126).yf = function (encoder, value) {
		    return this.t2h(encoder, value instanceof MessageUndeliverableSocketEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_126;
		  function $serializer_getInstance_126() {
		    if ($serializer_instance_126 == null)
		      new $serializer_126();
		    return $serializer_instance_126;
		  }
		  function MessageUndeliverableSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_126().s2h_1);
		    }
		    $this.u2h_1 = body;
		    $this.v2h_1 = id;
		    $this.w2h_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.x2h_1 = null;
		    else
		      $this.x2h_1 = from;
		    $this.y2h_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.z2h_1 = null;
		    else
		      $this.z2h_1 = _embedded;
		    $this.a2i_1 = type;
		    return $this;
		  }
		  function MessageUndeliverableSocketEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageUndeliverableSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageUndeliverableSocketEvent)));
		  }
		  function MessageUndeliverableSocketEvent() {
		  }
		  protoOf(MessageUndeliverableSocketEvent).l26 = function () {
		    return this.v2h_1;
		  };
		  protoOf(MessageUndeliverableSocketEvent).m26 = function () {
		    return this.w2h_1;
		  };
		  protoOf(MessageUndeliverableSocketEvent).g2b = function () {
		    return new MessageUndeliverableEvent(this.v2h_1, this.y2h_1, this.w2h_1, Companion_instance_140.k23(this.z2h_1), new EventStateBody(this.u2h_1.z24_1));
		  };
		  protoOf(MessageUndeliverableSocketEvent).toString = function () {
		    return 'MessageUndeliverableSocketEvent(body=' + this.u2h_1.toString() + ', id=' + this.v2h_1 + ', cid=' + this.w2h_1 + ', from=' + this.x2h_1 + ', timestamp=' + this.y2h_1 + ', _embedded=' + toString_0(this.z2h_1) + ', type=' + this.a2i_1 + ')';
		  };
		  protoOf(MessageUndeliverableSocketEvent).hashCode = function () {
		    var result = this.u2h_1.hashCode();
		    result = imul(result, 31) + this.v2h_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.w2h_1) | 0;
		    result = imul(result, 31) + (this.x2h_1 == null ? 0 : getStringHashCode(this.x2h_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.y2h_1) | 0;
		    result = imul(result, 31) + (this.z2h_1 == null ? 0 : this.z2h_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.a2i_1) | 0;
		    return result;
		  };
		  protoOf(MessageUndeliverableSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageUndeliverableSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageUndeliverableSocketEvent ? other : THROW_CCE();
		    if (!this.u2h_1.equals(tmp0_other_with_cast.u2h_1))
		      return false;
		    if (!(this.v2h_1 === tmp0_other_with_cast.v2h_1))
		      return false;
		    if (!(this.w2h_1 === tmp0_other_with_cast.w2h_1))
		      return false;
		    if (!(this.x2h_1 == tmp0_other_with_cast.x2h_1))
		      return false;
		    if (!(this.y2h_1 === tmp0_other_with_cast.y2h_1))
		      return false;
		    if (!equals(this.z2h_1, tmp0_other_with_cast.z2h_1))
		      return false;
		    if (!(this.a2i_1 === tmp0_other_with_cast.a2i_1))
		      return false;
		    return true;
		  };
		  function Companion_107() {
		  }
		  protoOf(Companion_107).b13 = function () {
		    return $serializer_getInstance_127();
		  };
		  var Companion_instance_108;
		  function $serializer_127() {
		    $serializer_instance_127 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.MessageSeenSocketEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.b2i_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_127).xf = function () {
		    return this.b2i_1;
		  };
		  protoOf($serializer_127).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_119(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_127).zf = function (decoder) {
		    var tmp0_desc = this.b2i_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, $serializer_getInstance_119(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return MessageSeenSocketEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_127).c2i = function (encoder, value) {
		    var tmp0_desc = this.b2i_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_119(), value.d2i_1);
		    tmp1_output.rk(tmp0_desc, 1, value.e2i_1);
		    tmp1_output.wk(tmp0_desc, 2, value.f2i_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.g2i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.g2i_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.h2i_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.i2i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.i2i_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.j2i_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_127).yf = function (encoder, value) {
		    return this.c2i(encoder, value instanceof MessageSeenSocketEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_127;
		  function $serializer_getInstance_127() {
		    if ($serializer_instance_127 == null)
		      new $serializer_127();
		    return $serializer_instance_127;
		  }
		  function MessageSeenSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_127().b2i_1);
		    }
		    $this.d2i_1 = body;
		    $this.e2i_1 = id;
		    $this.f2i_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.g2i_1 = null;
		    else
		      $this.g2i_1 = from;
		    $this.h2i_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.i2i_1 = null;
		    else
		      $this.i2i_1 = _embedded;
		    $this.j2i_1 = type;
		    return $this;
		  }
		  function MessageSeenSocketEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return MessageSeenSocketEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(MessageSeenSocketEvent)));
		  }
		  function MessageSeenSocketEvent() {
		  }
		  protoOf(MessageSeenSocketEvent).l26 = function () {
		    return this.e2i_1;
		  };
		  protoOf(MessageSeenSocketEvent).m26 = function () {
		    return this.f2i_1;
		  };
		  protoOf(MessageSeenSocketEvent).g2b = function () {
		    return new MessageSeenEvent(this.e2i_1, this.h2i_1, this.f2i_1, Companion_instance_140.k23(this.i2i_1), new EventStateBody(this.d2i_1.z24_1));
		  };
		  protoOf(MessageSeenSocketEvent).toString = function () {
		    return 'MessageSeenSocketEvent(body=' + this.d2i_1.toString() + ', id=' + this.e2i_1 + ', cid=' + this.f2i_1 + ', from=' + this.g2i_1 + ', timestamp=' + this.h2i_1 + ', _embedded=' + toString_0(this.i2i_1) + ', type=' + this.j2i_1 + ')';
		  };
		  protoOf(MessageSeenSocketEvent).hashCode = function () {
		    var result = this.d2i_1.hashCode();
		    result = imul(result, 31) + this.e2i_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.f2i_1) | 0;
		    result = imul(result, 31) + (this.g2i_1 == null ? 0 : getStringHashCode(this.g2i_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.h2i_1) | 0;
		    result = imul(result, 31) + (this.i2i_1 == null ? 0 : this.i2i_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2i_1) | 0;
		    return result;
		  };
		  protoOf(MessageSeenSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageSeenSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageSeenSocketEvent ? other : THROW_CCE();
		    if (!this.d2i_1.equals(tmp0_other_with_cast.d2i_1))
		      return false;
		    if (!(this.e2i_1 === tmp0_other_with_cast.e2i_1))
		      return false;
		    if (!(this.f2i_1 === tmp0_other_with_cast.f2i_1))
		      return false;
		    if (!(this.g2i_1 == tmp0_other_with_cast.g2i_1))
		      return false;
		    if (!(this.h2i_1 === tmp0_other_with_cast.h2i_1))
		      return false;
		    if (!equals(this.i2i_1, tmp0_other_with_cast.i2i_1))
		      return false;
		    if (!(this.j2i_1 === tmp0_other_with_cast.j2i_1))
		      return false;
		    return true;
		  };
		  function Companion_108() {
		  }
		  protoOf(Companion_108).b13 = function () {
		    return $serializer_getInstance_128();
		  };
		  var Companion_instance_109;
		  function $serializer_128() {
		    $serializer_instance_128 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayDoneEvent', this, 5);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.k2i_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_128).xf = function () {
		    return this.k2i_1;
		  };
		  protoOf($serializer_128).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_130(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_128).zf = function (decoder) {
		    var tmp0_desc = this.k2i_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_130(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, $serializer_getInstance_130(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AudioSayDoneEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_128).l2i = function (encoder, value) {
		    var tmp0_desc = this.k2i_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_130(), value.m2i_1);
		    tmp1_output.rk(tmp0_desc, 1, value.n2i_1);
		    tmp1_output.wk(tmp0_desc, 2, value.o2i_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.p2i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.p2i_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.q2i_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_128).yf = function (encoder, value) {
		    return this.l2i(encoder, value instanceof AudioSayDoneEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_128;
		  function $serializer_getInstance_128() {
		    if ($serializer_instance_128 == null)
		      new $serializer_128();
		    return $serializer_instance_128;
		  }
		  function AudioSayDoneEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(23 === (23 & seen1))) {
		      throwMissingFieldException(seen1, 23, $serializer_getInstance_128().k2i_1);
		    }
		    $this.m2i_1 = body;
		    $this.n2i_1 = id;
		    $this.o2i_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.p2i_1 = null;
		    else
		      $this.p2i_1 = from;
		    $this.q2i_1 = type;
		    return $this;
		  }
		  function AudioSayDoneEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AudioSayDoneEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AudioSayDoneEvent)));
		  }
		  function AudioSayDoneEvent() {
		  }
		  protoOf(AudioSayDoneEvent).l26 = function () {
		    return this.n2i_1;
		  };
		  protoOf(AudioSayDoneEvent).m26 = function () {
		    return this.o2i_1;
		  };
		  protoOf(AudioSayDoneEvent).toString = function () {
		    return 'AudioSayDoneEvent(body=' + this.m2i_1.toString() + ', id=' + this.n2i_1 + ', cid=' + this.o2i_1 + ', from=' + this.p2i_1 + ', type=' + this.q2i_1 + ')';
		  };
		  protoOf(AudioSayDoneEvent).hashCode = function () {
		    var result = this.m2i_1.hashCode();
		    result = imul(result, 31) + this.n2i_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.o2i_1) | 0;
		    result = imul(result, 31) + (this.p2i_1 == null ? 0 : getStringHashCode(this.p2i_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.q2i_1) | 0;
		    return result;
		  };
		  protoOf(AudioSayDoneEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayDoneEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayDoneEvent ? other : THROW_CCE();
		    if (!this.m2i_1.equals(tmp0_other_with_cast.m2i_1))
		      return false;
		    if (!(this.n2i_1 === tmp0_other_with_cast.n2i_1))
		      return false;
		    if (!(this.o2i_1 === tmp0_other_with_cast.o2i_1))
		      return false;
		    if (!(this.p2i_1 == tmp0_other_with_cast.p2i_1))
		      return false;
		    if (!(this.q2i_1 === tmp0_other_with_cast.q2i_1))
		      return false;
		    return true;
		  };
		  function Companion_109() {
		  }
		  protoOf(Companion_109).b13 = function () {
		    return $serializer_getInstance_129();
		  };
		  var Companion_instance_110;
		  function $serializer_129() {
		    $serializer_instance_129 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CustomEvent', this, 7);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('cid', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('type', false);
		    this.r2i_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_129).xf = function () {
		    return this.r2i_1;
		  };
		  protoOf($serializer_129).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [JsonObjectSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable($serializer_getInstance_54()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_129).zf = function (decoder) {
		    var tmp0_desc = this.r2i_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = 0;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_input = decoder.hj(tmp0_desc);
		    if (tmp11_input.xj()) {
		      tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp11_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp11_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp11_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp11_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp11_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp11_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp11_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp11_input.rj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp11_input.ij(tmp0_desc);
		    return CustomEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, null);
		  };
		  protoOf($serializer_129).s2i = function (encoder, value) {
		    var tmp0_desc = this.r2i_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, JsonObjectSerializer_getInstance(), value.t2i_1);
		    tmp1_output.rk(tmp0_desc, 1, value.u2i_1);
		    tmp1_output.wk(tmp0_desc, 2, value.v2i_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.w2i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.w2i_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.x2i_1);
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.y2i_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.y2i_1);
		    }
		    tmp1_output.wk(tmp0_desc, 6, value.z2i_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_129).yf = function (encoder, value) {
		    return this.s2i(encoder, value instanceof CustomEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_129;
		  function $serializer_getInstance_129() {
		    if ($serializer_instance_129 == null)
		      new $serializer_129();
		    return $serializer_instance_129;
		  }
		  function CustomEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, $this) {
		    if (!(87 === (87 & seen1))) {
		      throwMissingFieldException(seen1, 87, $serializer_getInstance_129().r2i_1);
		    }
		    $this.t2i_1 = body;
		    $this.u2i_1 = id;
		    $this.v2i_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.w2i_1 = null;
		    else
		      $this.w2i_1 = from;
		    $this.x2i_1 = timestamp;
		    if (0 === (seen1 & 32))
		      $this.y2i_1 = null;
		    else
		      $this.y2i_1 = _embedded;
		    $this.z2i_1 = type;
		    return $this;
		  }
		  function CustomEvent_init_$Create$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker) {
		    return CustomEvent_init_$Init$(seen1, body, id, cid, from, timestamp, _embedded, type, serializationConstructorMarker, objectCreate(protoOf(CustomEvent)));
		  }
		  function CustomEvent() {
		  }
		  protoOf(CustomEvent).l26 = function () {
		    return this.u2i_1;
		  };
		  protoOf(CustomEvent).m26 = function () {
		    return this.v2i_1;
		  };
		  protoOf(CustomEvent).g2b = function () {
		    return new CustomConversationEvent(this.u2i_1, this.x2i_1, this.v2i_1, Companion_instance_140.k23(this.y2i_1), this.t2i_1.toString(), this.z2i_1);
		  };
		  protoOf(CustomEvent).toString = function () {
		    return 'CustomEvent(body=' + this.t2i_1.toString() + ', id=' + this.u2i_1 + ', cid=' + this.v2i_1 + ', from=' + this.w2i_1 + ', timestamp=' + this.x2i_1 + ', _embedded=' + toString_0(this.y2i_1) + ', type=' + this.z2i_1 + ')';
		  };
		  protoOf(CustomEvent).hashCode = function () {
		    var result = this.t2i_1.hashCode();
		    result = imul(result, 31) + this.u2i_1 | 0;
		    result = imul(result, 31) + getStringHashCode(this.v2i_1) | 0;
		    result = imul(result, 31) + (this.w2i_1 == null ? 0 : getStringHashCode(this.w2i_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x2i_1) | 0;
		    result = imul(result, 31) + (this.y2i_1 == null ? 0 : this.y2i_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z2i_1) | 0;
		    return result;
		  };
		  protoOf(CustomEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CustomEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CustomEvent ? other : THROW_CCE();
		    if (!this.t2i_1.equals(tmp0_other_with_cast.t2i_1))
		      return false;
		    if (!(this.u2i_1 === tmp0_other_with_cast.u2i_1))
		      return false;
		    if (!(this.v2i_1 === tmp0_other_with_cast.v2i_1))
		      return false;
		    if (!(this.w2i_1 == tmp0_other_with_cast.w2i_1))
		      return false;
		    if (!(this.x2i_1 === tmp0_other_with_cast.x2i_1))
		      return false;
		    if (!equals(this.y2i_1, tmp0_other_with_cast.y2i_1))
		      return false;
		    if (!(this.z2i_1 === tmp0_other_with_cast.z2i_1))
		      return false;
		    return true;
		  };
		  function $serializer_130() {
		    $serializer_instance_130 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AudioSayDone', this, 1);
		    tmp0_serialDesc.rq('say_id', false);
		    this.a2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_130).xf = function () {
		    return this.a2j_1;
		  };
		  protoOf($serializer_130).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_130).zf = function (decoder) {
		    var tmp0_desc = this.a2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return AudioSayDone_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_130).b2j = function (encoder, value) {
		    var tmp0_desc = this.a2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.c2j_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_130).yf = function (encoder, value) {
		    return this.b2j(encoder, value instanceof AudioSayDone ? value : THROW_CCE());
		  };
		  var $serializer_instance_130;
		  function $serializer_getInstance_130() {
		    if ($serializer_instance_130 == null)
		      new $serializer_130();
		    return $serializer_instance_130;
		  }
		  function AudioSayDone_init_$Init$(seen1, say_id, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_130().a2j_1);
		    }
		    $this.c2j_1 = say_id;
		    return $this;
		  }
		  function AudioSayDone_init_$Create$(seen1, say_id, serializationConstructorMarker) {
		    return AudioSayDone_init_$Init$(seen1, say_id, serializationConstructorMarker, objectCreate(protoOf(AudioSayDone)));
		  }
		  function AudioSayDone() {
		  }
		  protoOf(AudioSayDone).toString = function () {
		    return 'AudioSayDone(say_id=' + this.c2j_1 + ')';
		  };
		  protoOf(AudioSayDone).hashCode = function () {
		    return getStringHashCode(this.c2j_1);
		  };
		  protoOf(AudioSayDone).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioSayDone))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioSayDone ? other : THROW_CCE();
		    if (!(this.c2j_1 === tmp0_other_with_cast.c2j_1))
		      return false;
		    return true;
		  };
		  function Companion_110() {
		  }
		  protoOf(Companion_110).b13 = function () {
		    return $serializer_getInstance_131();
		  };
		  var Companion_instance_111;
		  function $serializer_131() {
		    $serializer_instance_131 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.TextBody', this, 3);
		    tmp0_serialDesc.rq('text', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.d2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_131).xf = function () {
		    return this.d2j_1;
		  };
		  protoOf($serializer_131).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_131).zf = function (decoder) {
		    var tmp0_desc = this.d2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return TextBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_131).e2j = function (encoder, value) {
		    var tmp0_desc = this.d2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.w2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.x2f_1.equals(CSMessageType_TEXT_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.x2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.y2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.y2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_131).yf = function (encoder, value) {
		    return this.e2j(encoder, value instanceof TextBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_131;
		  function $serializer_getInstance_131() {
		    if ($serializer_instance_131 == null)
		      new $serializer_131();
		    return $serializer_instance_131;
		  }
		  function TextBody_init_$Init$(seen1, text, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_131().d2j_1);
		    }
		    $this.w2f_1 = text;
		    if (0 === (seen1 & 2))
		      $this.x2f_1 = CSMessageType_TEXT_getInstance();
		    else
		      $this.x2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.y2f_1 = null;
		    else
		      $this.y2f_1 = timestamp;
		    return $this;
		  }
		  function TextBody_init_$Create$(seen1, text, message_type, timestamp, serializationConstructorMarker) {
		    return TextBody_init_$Init$(seen1, text, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(TextBody)));
		  }
		  function Companion_111() {
		  }
		  protoOf(Companion_111).b13 = function () {
		    return $serializer_getInstance_132();
		  };
		  var Companion_instance_112;
		  function $serializer_132() {
		    $serializer_instance_132 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.ImageBody', this, 3);
		    tmp0_serialDesc.rq('image', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.f2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_132).xf = function () {
		    return this.f2j_1;
		  };
		  protoOf($serializer_132).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_141(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_132).zf = function (decoder) {
		    var tmp0_desc = this.f2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return ImageBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_132).g2j = function (encoder, value) {
		    var tmp0_desc = this.f2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_141(), value.k2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.l2f_1.equals(CSMessageType_IMAGE_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.l2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.m2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.m2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_132).yf = function (encoder, value) {
		    return this.g2j(encoder, value instanceof ImageBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_132;
		  function $serializer_getInstance_132() {
		    if ($serializer_instance_132 == null)
		      new $serializer_132();
		    return $serializer_instance_132;
		  }
		  function ImageBody_init_$Init$(seen1, image, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_132().f2j_1);
		    }
		    $this.k2f_1 = image;
		    if (0 === (seen1 & 2))
		      $this.l2f_1 = CSMessageType_IMAGE_getInstance();
		    else
		      $this.l2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.m2f_1 = null;
		    else
		      $this.m2f_1 = timestamp;
		    return $this;
		  }
		  function ImageBody_init_$Create$(seen1, image, message_type, timestamp, serializationConstructorMarker) {
		    return ImageBody_init_$Init$(seen1, image, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(ImageBody)));
		  }
		  function Companion_112() {
		  }
		  protoOf(Companion_112).b13 = function () {
		    return $serializer_getInstance_133();
		  };
		  var Companion_instance_113;
		  function $serializer_133() {
		    $serializer_instance_133 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.VideoBody', this, 3);
		    tmp0_serialDesc.rq('video', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.h2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_133).xf = function () {
		    return this.h2j_1;
		  };
		  protoOf($serializer_133).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_141(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_133).zf = function (decoder) {
		    var tmp0_desc = this.h2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return VideoBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_133).i2j = function (encoder, value) {
		    var tmp0_desc = this.h2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_141(), value.p2e_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.q2e_1.equals(CSMessageType_VIDEO_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.q2e_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.r2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.r2e_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_133).yf = function (encoder, value) {
		    return this.i2j(encoder, value instanceof VideoBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_133;
		  function $serializer_getInstance_133() {
		    if ($serializer_instance_133 == null)
		      new $serializer_133();
		    return $serializer_instance_133;
		  }
		  function VideoBody_init_$Init$(seen1, video, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_133().h2j_1);
		    }
		    $this.p2e_1 = video;
		    if (0 === (seen1 & 2))
		      $this.q2e_1 = CSMessageType_VIDEO_getInstance();
		    else
		      $this.q2e_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.r2e_1 = null;
		    else
		      $this.r2e_1 = timestamp;
		    return $this;
		  }
		  function VideoBody_init_$Create$(seen1, video, message_type, timestamp, serializationConstructorMarker) {
		    return VideoBody_init_$Init$(seen1, video, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(VideoBody)));
		  }
		  function Companion_113() {
		  }
		  protoOf(Companion_113).b13 = function () {
		    return $serializer_getInstance_134();
		  };
		  var Companion_instance_114;
		  function $serializer_134() {
		    $serializer_instance_134 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.AudioBody', this, 3);
		    tmp0_serialDesc.rq('audio', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.j2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_134).xf = function () {
		    return this.j2j_1;
		  };
		  protoOf($serializer_134).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_141(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_134).zf = function (decoder) {
		    var tmp0_desc = this.j2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return AudioBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_134).k2j = function (encoder, value) {
		    var tmp0_desc = this.j2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_141(), value.q2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.r2f_1.equals(CSMessageType_AUDIO_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.r2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.s2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.s2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_134).yf = function (encoder, value) {
		    return this.k2j(encoder, value instanceof AudioBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_134;
		  function $serializer_getInstance_134() {
		    if ($serializer_instance_134 == null)
		      new $serializer_134();
		    return $serializer_instance_134;
		  }
		  function AudioBody_init_$Init$(seen1, audio, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_134().j2j_1);
		    }
		    $this.q2f_1 = audio;
		    if (0 === (seen1 & 2))
		      $this.r2f_1 = CSMessageType_AUDIO_getInstance();
		    else
		      $this.r2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.s2f_1 = null;
		    else
		      $this.s2f_1 = timestamp;
		    return $this;
		  }
		  function AudioBody_init_$Create$(seen1, audio, message_type, timestamp, serializationConstructorMarker) {
		    return AudioBody_init_$Init$(seen1, audio, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(AudioBody)));
		  }
		  function Companion_114() {
		  }
		  protoOf(Companion_114).b13 = function () {
		    return $serializer_getInstance_135();
		  };
		  var Companion_instance_115;
		  function $serializer_135() {
		    $serializer_instance_135 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.FileBody', this, 3);
		    tmp0_serialDesc.rq('file', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.l2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_135).xf = function () {
		    return this.l2j_1;
		  };
		  protoOf($serializer_135).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_141(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_135).zf = function (decoder) {
		    var tmp0_desc = this.l2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return FileBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_135).m2j = function (encoder, value) {
		    var tmp0_desc = this.l2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_141(), value.n2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.o2f_1.equals(CSMessageType_FILE_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.o2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.p2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.p2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_135).yf = function (encoder, value) {
		    return this.m2j(encoder, value instanceof FileBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_135;
		  function $serializer_getInstance_135() {
		    if ($serializer_instance_135 == null)
		      new $serializer_135();
		    return $serializer_instance_135;
		  }
		  function FileBody_init_$Init$(seen1, file, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_135().l2j_1);
		    }
		    $this.n2f_1 = file;
		    if (0 === (seen1 & 2))
		      $this.o2f_1 = CSMessageType_FILE_getInstance();
		    else
		      $this.o2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.p2f_1 = null;
		    else
		      $this.p2f_1 = timestamp;
		    return $this;
		  }
		  function FileBody_init_$Create$(seen1, file, message_type, timestamp, serializationConstructorMarker) {
		    return FileBody_init_$Init$(seen1, file, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(FileBody)));
		  }
		  function Companion_115() {
		  }
		  protoOf(Companion_115).b13 = function () {
		    return $serializer_getInstance_136();
		  };
		  var Companion_instance_116;
		  function $serializer_136() {
		    $serializer_instance_136 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.VCardBody', this, 3);
		    tmp0_serialDesc.rq('vcard', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.n2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_136).xf = function () {
		    return this.n2j_1;
		  };
		  protoOf($serializer_136).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_141(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_136).zf = function (decoder) {
		    var tmp0_desc = this.n2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_141(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return VCardBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_136).o2j = function (encoder, value) {
		    var tmp0_desc = this.n2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_141(), value.s2e_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.t2e_1.equals(CSMessageType_VCARD_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.t2e_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.u2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.u2e_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_136).yf = function (encoder, value) {
		    return this.o2j(encoder, value instanceof VCardBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_136;
		  function $serializer_getInstance_136() {
		    if ($serializer_instance_136 == null)
		      new $serializer_136();
		    return $serializer_instance_136;
		  }
		  function VCardBody_init_$Init$(seen1, vcard, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_136().n2j_1);
		    }
		    $this.s2e_1 = vcard;
		    if (0 === (seen1 & 2))
		      $this.t2e_1 = CSMessageType_VCARD_getInstance();
		    else
		      $this.t2e_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.u2e_1 = null;
		    else
		      $this.u2e_1 = timestamp;
		    return $this;
		  }
		  function VCardBody_init_$Create$(seen1, vcard, message_type, timestamp, serializationConstructorMarker) {
		    return VCardBody_init_$Init$(seen1, vcard, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(VCardBody)));
		  }
		  function Companion_116() {
		  }
		  protoOf(Companion_116).b13 = function () {
		    return $serializer_getInstance_137();
		  };
		  var Companion_instance_117;
		  function $serializer_137() {
		    $serializer_instance_137 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.CustomBody', this, 3);
		    tmp0_serialDesc.rq('custom', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.p2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_137).xf = function () {
		    return this.p2j_1;
		  };
		  protoOf($serializer_137).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [JsonObjectSerializer_getInstance(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_137).zf = function (decoder) {
		    var tmp0_desc = this.p2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, JsonObjectSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return CustomBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_137).q2j = function (encoder, value) {
		    var tmp0_desc = this.p2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, JsonObjectSerializer_getInstance(), value.t2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.u2f_1.equals(CSMessageType_CUSTOM_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.u2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.v2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.v2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_137).yf = function (encoder, value) {
		    return this.q2j(encoder, value instanceof CustomBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_137;
		  function $serializer_getInstance_137() {
		    if ($serializer_instance_137 == null)
		      new $serializer_137();
		    return $serializer_instance_137;
		  }
		  function CustomBody_init_$Init$(seen1, custom, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_137().p2j_1);
		    }
		    $this.t2f_1 = custom;
		    if (0 === (seen1 & 2))
		      $this.u2f_1 = CSMessageType_CUSTOM_getInstance();
		    else
		      $this.u2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.v2f_1 = null;
		    else
		      $this.v2f_1 = timestamp;
		    return $this;
		  }
		  function CustomBody_init_$Create$(seen1, custom, message_type, timestamp, serializationConstructorMarker) {
		    return CustomBody_init_$Init$(seen1, custom, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(CustomBody)));
		  }
		  function Companion_117() {
		  }
		  protoOf(Companion_117).r2j = function (pair) {
		    return new TemplateBody(Companion_getInstance_124().t2j(pair.m8_1), VOID, VOID, Companion_instance_124.u2j(pair.n8_1));
		  };
		  protoOf(Companion_117).b13 = function () {
		    return $serializer_getInstance_138();
		  };
		  var Companion_instance_118;
		  function $serializer_138() {
		    $serializer_instance_138 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.TemplateBody', this, 4);
		    tmp0_serialDesc.rq('template', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    tmp0_serialDesc.rq('whatsapp', false);
		    this.v2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_138).xf = function () {
		    return this.v2j_1;
		  };
		  protoOf($serializer_138).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_143(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87()), $serializer_getInstance_144()];
		  };
		  protoOf($serializer_138).zf = function (decoder) {
		    var tmp0_desc = this.v2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.tj(tmp0_desc, 0, $serializer_getInstance_143(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_144(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.tj(tmp0_desc, 0, $serializer_getInstance_143(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, $serializer_getInstance_144(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return TemplateBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_138).w2j = function (encoder, value) {
		    var tmp0_desc = this.v2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_143(), value.x2e_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.y2e_1.equals(CSMessageType_TEMPLATE_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.y2e_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.z2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.z2e_1);
		    }
		    tmp1_output.yk(tmp0_desc, 3, $serializer_getInstance_144(), value.a2f_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_138).yf = function (encoder, value) {
		    return this.w2j(encoder, value instanceof TemplateBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_138;
		  function $serializer_getInstance_138() {
		    if ($serializer_instance_138 == null)
		      new $serializer_138();
		    return $serializer_instance_138;
		  }
		  function TemplateBody_init_$Init$(seen1, template, message_type, timestamp, whatsapp, serializationConstructorMarker, $this) {
		    if (!(9 === (9 & seen1))) {
		      throwMissingFieldException(seen1, 9, $serializer_getInstance_138().v2j_1);
		    }
		    $this.x2e_1 = template;
		    if (0 === (seen1 & 2))
		      $this.y2e_1 = CSMessageType_TEMPLATE_getInstance();
		    else
		      $this.y2e_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.z2e_1 = null;
		    else
		      $this.z2e_1 = timestamp;
		    $this.a2f_1 = whatsapp;
		    return $this;
		  }
		  function TemplateBody_init_$Create$(seen1, template, message_type, timestamp, whatsapp, serializationConstructorMarker) {
		    return TemplateBody_init_$Init$(seen1, template, message_type, timestamp, whatsapp, serializationConstructorMarker, objectCreate(protoOf(TemplateBody)));
		  }
		  function Companion_118() {
		  }
		  protoOf(Companion_118).x2j = function (location) {
		    return new LocationBody(Companion_instance_125.x2j(location));
		  };
		  protoOf(Companion_118).b13 = function () {
		    return $serializer_getInstance_139();
		  };
		  var Companion_instance_119;
		  function $serializer_139() {
		    $serializer_instance_139 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent.LocationBody', this, 3);
		    tmp0_serialDesc.rq('location', false);
		    tmp0_serialDesc.rq('message_type', true);
		    tmp0_serialDesc.rq('timestamp', true);
		    this.y2j_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_139).xf = function () {
		    return this.y2j_1;
		  };
		  protoOf($serializer_139).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_145(), $serializer_getInstance_142(), get_nullable($serializer_getInstance_87())];
		  };
		  protoOf($serializer_139).zf = function (decoder) {
		    var tmp0_desc = this.y2j_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_145(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_145(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, $serializer_getInstance_142(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_87(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return LocationBody_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_139).z2j = function (encoder, value) {
		    var tmp0_desc = this.y2j_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_145(), value.h2f_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.i2f_1.equals(CSMessageType_LOCATION_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, $serializer_getInstance_142(), value.i2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.j2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_87(), value.j2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_139).yf = function (encoder, value) {
		    return this.z2j(encoder, value instanceof LocationBody ? value : THROW_CCE());
		  };
		  var $serializer_instance_139;
		  function $serializer_getInstance_139() {
		    if ($serializer_instance_139 == null)
		      new $serializer_139();
		    return $serializer_instance_139;
		  }
		  function LocationBody_init_$Init$(seen1, location, message_type, timestamp, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_139().y2j_1);
		    }
		    $this.h2f_1 = location;
		    if (0 === (seen1 & 2))
		      $this.i2f_1 = CSMessageType_LOCATION_getInstance();
		    else
		      $this.i2f_1 = message_type;
		    if (0 === (seen1 & 4))
		      $this.j2f_1 = null;
		    else
		      $this.j2f_1 = timestamp;
		    return $this;
		  }
		  function LocationBody_init_$Create$(seen1, location, message_type, timestamp, serializationConstructorMarker) {
		    return LocationBody_init_$Init$(seen1, location, message_type, timestamp, serializationConstructorMarker, objectCreate(protoOf(LocationBody)));
		  }
		  function Body_14() {
		  }
		  function TextBody(text, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_TEXT_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.w2f_1 = text;
		    this.x2f_1 = message_type;
		    this.y2f_1 = timestamp;
		  }
		  protoOf(TextBody).a2k = function () {
		    return this.y2f_1;
		  };
		  protoOf(TextBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.w2f_1;
		    return !Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(this_0);
		  };
		  protoOf(TextBody).toString = function () {
		    return 'TextBody(text=' + this.w2f_1 + ', message_type=' + this.x2f_1.toString() + ', timestamp=' + toString_0(this.y2f_1) + ')';
		  };
		  protoOf(TextBody).hashCode = function () {
		    var result = getStringHashCode(this.w2f_1);
		    result = imul(result, 31) + this.x2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.y2f_1 == null ? 0 : this.y2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(TextBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof TextBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof TextBody ? other : THROW_CCE();
		    if (!(this.w2f_1 === tmp0_other_with_cast.w2f_1))
		      return false;
		    if (!this.x2f_1.equals(tmp0_other_with_cast.x2f_1))
		      return false;
		    if (!equals(this.y2f_1, tmp0_other_with_cast.y2f_1))
		      return false;
		    return true;
		  };
		  function ImageBody(image, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_IMAGE_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.k2f_1 = image;
		    this.l2f_1 = message_type;
		    this.m2f_1 = timestamp;
		  }
		  protoOf(ImageBody).a2k = function () {
		    return this.m2f_1;
		  };
		  protoOf(ImageBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.k2f_1.o2e_1;
		    return !Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(this_0);
		  };
		  protoOf(ImageBody).toString = function () {
		    return 'ImageBody(image=' + this.k2f_1.toString() + ', message_type=' + this.l2f_1.toString() + ', timestamp=' + toString_0(this.m2f_1) + ')';
		  };
		  protoOf(ImageBody).hashCode = function () {
		    var result = this.k2f_1.hashCode();
		    result = imul(result, 31) + this.l2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.m2f_1 == null ? 0 : this.m2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(ImageBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ImageBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof ImageBody ? other : THROW_CCE();
		    if (!this.k2f_1.equals(tmp0_other_with_cast.k2f_1))
		      return false;
		    if (!this.l2f_1.equals(tmp0_other_with_cast.l2f_1))
		      return false;
		    if (!equals(this.m2f_1, tmp0_other_with_cast.m2f_1))
		      return false;
		    return true;
		  };
		  function VideoBody(video, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_VIDEO_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.p2e_1 = video;
		    this.q2e_1 = message_type;
		    this.r2e_1 = timestamp;
		  }
		  protoOf(VideoBody).a2k = function () {
		    return this.r2e_1;
		  };
		  protoOf(VideoBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.p2e_1.o2e_1;
		    return !Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(this_0);
		  };
		  protoOf(VideoBody).toString = function () {
		    return 'VideoBody(video=' + this.p2e_1.toString() + ', message_type=' + this.q2e_1.toString() + ', timestamp=' + toString_0(this.r2e_1) + ')';
		  };
		  protoOf(VideoBody).hashCode = function () {
		    var result = this.p2e_1.hashCode();
		    result = imul(result, 31) + this.q2e_1.hashCode() | 0;
		    result = imul(result, 31) + (this.r2e_1 == null ? 0 : this.r2e_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(VideoBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof VideoBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof VideoBody ? other : THROW_CCE();
		    if (!this.p2e_1.equals(tmp0_other_with_cast.p2e_1))
		      return false;
		    if (!this.q2e_1.equals(tmp0_other_with_cast.q2e_1))
		      return false;
		    if (!equals(this.r2e_1, tmp0_other_with_cast.r2e_1))
		      return false;
		    return true;
		  };
		  function AudioBody(audio, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_AUDIO_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.q2f_1 = audio;
		    this.r2f_1 = message_type;
		    this.s2f_1 = timestamp;
		  }
		  protoOf(AudioBody).a2k = function () {
		    return this.s2f_1;
		  };
		  protoOf(AudioBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.q2f_1.o2e_1;
		    return !Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(this_0);
		  };
		  protoOf(AudioBody).toString = function () {
		    return 'AudioBody(audio=' + this.q2f_1.toString() + ', message_type=' + this.r2f_1.toString() + ', timestamp=' + toString_0(this.s2f_1) + ')';
		  };
		  protoOf(AudioBody).hashCode = function () {
		    var result = this.q2f_1.hashCode();
		    result = imul(result, 31) + this.r2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.s2f_1 == null ? 0 : this.s2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(AudioBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AudioBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof AudioBody ? other : THROW_CCE();
		    if (!this.q2f_1.equals(tmp0_other_with_cast.q2f_1))
		      return false;
		    if (!this.r2f_1.equals(tmp0_other_with_cast.r2f_1))
		      return false;
		    if (!equals(this.s2f_1, tmp0_other_with_cast.s2f_1))
		      return false;
		    return true;
		  };
		  function FileBody(file, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_FILE_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.n2f_1 = file;
		    this.o2f_1 = message_type;
		    this.p2f_1 = timestamp;
		  }
		  protoOf(FileBody).a2k = function () {
		    return this.p2f_1;
		  };
		  protoOf(FileBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.n2f_1.o2e_1;
		    return !Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(this_0);
		  };
		  protoOf(FileBody).toString = function () {
		    return 'FileBody(file=' + this.n2f_1.toString() + ', message_type=' + this.o2f_1.toString() + ', timestamp=' + toString_0(this.p2f_1) + ')';
		  };
		  protoOf(FileBody).hashCode = function () {
		    var result = this.n2f_1.hashCode();
		    result = imul(result, 31) + this.o2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.p2f_1 == null ? 0 : this.p2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(FileBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof FileBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof FileBody ? other : THROW_CCE();
		    if (!this.n2f_1.equals(tmp0_other_with_cast.n2f_1))
		      return false;
		    if (!this.o2f_1.equals(tmp0_other_with_cast.o2f_1))
		      return false;
		    if (!equals(this.p2f_1, tmp0_other_with_cast.p2f_1))
		      return false;
		    return true;
		  };
		  function VCardBody(vcard, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_VCARD_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.s2e_1 = vcard;
		    this.t2e_1 = message_type;
		    this.u2e_1 = timestamp;
		  }
		  protoOf(VCardBody).a2k = function () {
		    return this.u2e_1;
		  };
		  protoOf(VCardBody).t1g = function () {
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.s2e_1.o2e_1;
		    return !Regex_init_$Create$('"|\'|<|>|\\|javascript:').ta(this_0);
		  };
		  protoOf(VCardBody).toString = function () {
		    return 'VCardBody(vcard=' + this.s2e_1.toString() + ', message_type=' + this.t2e_1.toString() + ', timestamp=' + toString_0(this.u2e_1) + ')';
		  };
		  protoOf(VCardBody).hashCode = function () {
		    var result = this.s2e_1.hashCode();
		    result = imul(result, 31) + this.t2e_1.hashCode() | 0;
		    result = imul(result, 31) + (this.u2e_1 == null ? 0 : this.u2e_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(VCardBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof VCardBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof VCardBody ? other : THROW_CCE();
		    if (!this.s2e_1.equals(tmp0_other_with_cast.s2e_1))
		      return false;
		    if (!this.t2e_1.equals(tmp0_other_with_cast.t2e_1))
		      return false;
		    if (!equals(this.u2e_1, tmp0_other_with_cast.u2e_1))
		      return false;
		    return true;
		  };
		  function CustomBody(custom, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_CUSTOM_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.t2f_1 = custom;
		    this.u2f_1 = message_type;
		    this.v2f_1 = timestamp;
		  }
		  protoOf(CustomBody).a2k = function () {
		    return this.v2f_1;
		  };
		  protoOf(CustomBody).toString = function () {
		    return 'CustomBody(custom=' + this.t2f_1.toString() + ', message_type=' + this.u2f_1.toString() + ', timestamp=' + toString_0(this.v2f_1) + ')';
		  };
		  protoOf(CustomBody).hashCode = function () {
		    var result = this.t2f_1.hashCode();
		    result = imul(result, 31) + this.u2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.v2f_1 == null ? 0 : this.v2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(CustomBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CustomBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof CustomBody ? other : THROW_CCE();
		    if (!this.t2f_1.equals(tmp0_other_with_cast.t2f_1))
		      return false;
		    if (!this.u2f_1.equals(tmp0_other_with_cast.u2f_1))
		      return false;
		    if (!equals(this.v2f_1, tmp0_other_with_cast.v2f_1))
		      return false;
		    return true;
		  };
		  function TemplateBody(template, message_type, timestamp, whatsapp) {
		    message_type = message_type === VOID ? CSMessageType_TEMPLATE_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.x2e_1 = template;
		    this.y2e_1 = message_type;
		    this.z2e_1 = timestamp;
		    this.a2f_1 = whatsapp;
		  }
		  protoOf(TemplateBody).a2k = function () {
		    return this.z2e_1;
		  };
		  protoOf(TemplateBody).toString = function () {
		    return 'TemplateBody(template=' + this.x2e_1.toString() + ', message_type=' + this.y2e_1.toString() + ', timestamp=' + toString_0(this.z2e_1) + ', whatsapp=' + this.a2f_1.toString() + ')';
		  };
		  protoOf(TemplateBody).hashCode = function () {
		    var result = this.x2e_1.hashCode();
		    result = imul(result, 31) + this.y2e_1.hashCode() | 0;
		    result = imul(result, 31) + (this.z2e_1 == null ? 0 : this.z2e_1.hashCode()) | 0;
		    result = imul(result, 31) + this.a2f_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(TemplateBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof TemplateBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof TemplateBody ? other : THROW_CCE();
		    if (!this.x2e_1.equals(tmp0_other_with_cast.x2e_1))
		      return false;
		    if (!this.y2e_1.equals(tmp0_other_with_cast.y2e_1))
		      return false;
		    if (!equals(this.z2e_1, tmp0_other_with_cast.z2e_1))
		      return false;
		    if (!this.a2f_1.equals(tmp0_other_with_cast.a2f_1))
		      return false;
		    return true;
		  };
		  function LocationBody(location, message_type, timestamp) {
		    message_type = message_type === VOID ? CSMessageType_LOCATION_getInstance() : message_type;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.h2f_1 = location;
		    this.i2f_1 = message_type;
		    this.j2f_1 = timestamp;
		  }
		  protoOf(LocationBody).a2k = function () {
		    return this.j2f_1;
		  };
		  protoOf(LocationBody).t1g = function () {
		    var tmp;
		    var tmp_0;
		    var tmp_1;
		    // Inline function 'kotlin.text.contains' call
		    var this_0 = this.h2f_1.d2f_1;
		    if (!Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(this_0)) {
		      // Inline function 'kotlin.text.contains' call
		      var this_1 = this.h2f_1.e2f_1;
		      tmp_1 = !Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(this_1);
		    } else {
		      tmp_1 = false;
		    }
		    if (tmp_1) {
		      var tmp0_safe_receiver = this.h2f_1.f2f_1;
		      var tmp_2;
		      if (tmp0_safe_receiver == null) {
		        tmp_2 = null;
		      } else {
		        // Inline function 'kotlin.text.contains' call
		        tmp_2 = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp0_safe_receiver);
		      }
		      tmp_0 = tmp_2 === false;
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      var tmp1_safe_receiver = this.h2f_1.g2f_1;
		      var tmp_3;
		      if (tmp1_safe_receiver == null) {
		        tmp_3 = null;
		      } else {
		        // Inline function 'kotlin.text.contains' call
		        tmp_3 = Regex_init_$Create$('"|\'|<|>|&|\\|/').ta(tmp1_safe_receiver);
		      }
		      tmp = tmp_3 === false;
		    } else {
		      tmp = false;
		    }
		    return tmp;
		  };
		  protoOf(LocationBody).toString = function () {
		    return 'LocationBody(location=' + this.h2f_1.toString() + ', message_type=' + this.i2f_1.toString() + ', timestamp=' + toString_0(this.j2f_1) + ')';
		  };
		  protoOf(LocationBody).hashCode = function () {
		    var result = this.h2f_1.hashCode();
		    result = imul(result, 31) + this.i2f_1.hashCode() | 0;
		    result = imul(result, 31) + (this.j2f_1 == null ? 0 : this.j2f_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(LocationBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LocationBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof LocationBody ? other : THROW_CCE();
		    if (!this.h2f_1.equals(tmp0_other_with_cast.h2f_1))
		      return false;
		    if (!this.i2f_1.equals(tmp0_other_with_cast.i2f_1))
		      return false;
		    if (!equals(this.j2f_1, tmp0_other_with_cast.j2f_1))
		      return false;
		    return true;
		  };
		  function Companion_119() {
		  }
		  protoOf(Companion_119).b13 = function () {
		    return $serializer_getInstance_140();
		  };
		  var Companion_instance_120;
		  function $serializer_140() {
		    $serializer_instance_140 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.CSMessageEvent', this, 8);
		    tmp0_serialDesc.rq('id', false);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('timestamp', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('conversation_id', true);
		    tmp0_serialDesc.rq('_embedded', true);
		    tmp0_serialDesc.rq('body', false);
		    tmp0_serialDesc.rq('state', true);
		    this.b2k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_140).xf = function () {
		    return this.b2k_1;
		  };
		  protoOf($serializer_140).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable($serializer_getInstance_54()), CSMessageEventBodySerializer_getInstance(), get_nullable($serializer_getInstance_86())];
		  };
		  protoOf($serializer_140).zf = function (decoder) {
		    var tmp0_desc = this.b2k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_input = decoder.hj(tmp0_desc);
		    if (tmp12_input.xj()) {
		      tmp4_local0 = tmp12_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp12_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp12_input.tj(tmp0_desc, 6, CSMessageEventBodySerializer_getInstance(), tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp12_input.vj(tmp0_desc, 7, $serializer_getInstance_86(), tmp11_local7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp12_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp12_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp12_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp12_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp12_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp12_input.vj(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp12_input.vj(tmp0_desc, 5, $serializer_getInstance_54(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp12_input.tj(tmp0_desc, 6, CSMessageEventBodySerializer_getInstance(), tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp12_input.vj(tmp0_desc, 7, $serializer_getInstance_86(), tmp11_local7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp12_input.ij(tmp0_desc);
		    return CSMessageEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
		  };
		  protoOf($serializer_140).c2k = function (encoder, value) {
		    var tmp0_desc = this.b2k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.d2k_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e2k_1);
		    tmp1_output.wk(tmp0_desc, 2, value.f2k_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.g2k_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.g2k_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.h2k_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, StringSerializer_getInstance(), value.h2k_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.i2k_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, $serializer_getInstance_54(), value.i2k_1);
		    }
		    tmp1_output.yk(tmp0_desc, 6, CSMessageEventBodySerializer_getInstance(), value.j2k_1);
		    if (tmp1_output.el(tmp0_desc, 7) ? true : !(value.k2k_1 == null)) {
		      tmp1_output.al(tmp0_desc, 7, $serializer_getInstance_86(), value.k2k_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_140).yf = function (encoder, value) {
		    return this.c2k(encoder, value instanceof CSMessageEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_140;
		  function $serializer_getInstance_140() {
		    if ($serializer_instance_140 == null)
		      new $serializer_140();
		    return $serializer_instance_140;
		  }
		  function CSMessageEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, state, serializationConstructorMarker, $this) {
		    if (!(71 === (71 & seen1))) {
		      throwMissingFieldException(seen1, 71, $serializer_getInstance_140().b2k_1);
		    }
		    $this.d2k_1 = id;
		    $this.e2k_1 = type;
		    $this.f2k_1 = timestamp;
		    if (0 === (seen1 & 8))
		      $this.g2k_1 = null;
		    else
		      $this.g2k_1 = from;
		    if (0 === (seen1 & 16))
		      $this.h2k_1 = null;
		    else
		      $this.h2k_1 = conversation_id;
		    if (0 === (seen1 & 32))
		      $this.i2k_1 = null;
		    else
		      $this.i2k_1 = _embedded;
		    $this.j2k_1 = body;
		    if (0 === (seen1 & 128))
		      $this.k2k_1 = null;
		    else
		      $this.k2k_1 = state;
		    return $this;
		  }
		  function CSMessageEvent_init_$Create$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, state, serializationConstructorMarker) {
		    return CSMessageEvent_init_$Init$(seen1, id, type, timestamp, from, conversation_id, _embedded, body, state, serializationConstructorMarker, objectCreate(protoOf(CSMessageEvent)));
		  }
		  function CSMessageEvent() {
		  }
		  protoOf(CSMessageEvent).v22 = function (conversationId) {
		    var from = Companion_instance_140.k23(this.i2k_1);
		    var tmp0_subject = this.j2k_1;
		    var tmp;
		    if (tmp0_subject instanceof TextBody) {
		      var tmp1_safe_receiver = this.j2k_1.a2k();
		      var tmp_0 = new Body_16(this.j2k_1.w2f_1, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.w25_1);
		      var tmp2_safe_receiver = this.k2k_1;
		      tmp = new MessageTextEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_0, tmp2_safe_receiver == null ? null : tmp2_safe_receiver.r25());
		    } else {
		      if (tmp0_subject instanceof AudioBody) {
		        var tmp3_safe_receiver = this.j2k_1.a2k();
		        var tmp_1 = new Body_20(this.j2k_1.q2f_1.o2e_1, tmp3_safe_receiver == null ? null : tmp3_safe_receiver.w25_1);
		        var tmp4_safe_receiver = this.k2k_1;
		        tmp = new MessageAudioEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_1, tmp4_safe_receiver == null ? null : tmp4_safe_receiver.r25());
		      } else {
		        if (tmp0_subject instanceof FileBody) {
		          var tmp5_safe_receiver = this.j2k_1.a2k();
		          var tmp_2 = new Body_21(this.j2k_1.n2f_1.o2e_1, tmp5_safe_receiver == null ? null : tmp5_safe_receiver.w25_1);
		          var tmp6_safe_receiver = this.k2k_1;
		          tmp = new MessageFileEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_2, tmp6_safe_receiver == null ? null : tmp6_safe_receiver.r25());
		        } else {
		          if (tmp0_subject instanceof ImageBody) {
		            var tmp7_safe_receiver = this.j2k_1.a2k();
		            var tmp_3 = new Body_18(this.j2k_1.k2f_1.o2e_1, tmp7_safe_receiver == null ? null : tmp7_safe_receiver.w25_1);
		            var tmp8_safe_receiver = this.k2k_1;
		            tmp = new MessageImageEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_3, tmp8_safe_receiver == null ? null : tmp8_safe_receiver.r25());
		          } else {
		            if (tmp0_subject instanceof LocationBody) {
		              var tmp_4 = new Location(this.j2k_1.h2f_1.d2f_1, this.j2k_1.h2f_1.e2f_1, this.j2k_1.h2f_1.f2f_1, this.j2k_1.h2f_1.g2f_1);
		              var tmp9_safe_receiver = this.j2k_1.a2k();
		              var tmp_5 = new Body_24(tmp_4, tmp9_safe_receiver == null ? null : tmp9_safe_receiver.w25_1);
		              var tmp10_safe_receiver = this.k2k_1;
		              tmp = new MessageLocationEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_5, tmp10_safe_receiver == null ? null : tmp10_safe_receiver.r25());
		            } else {
		              if (tmp0_subject instanceof TemplateBody) {
		                var tmp_6 = new TemplateObject_0(this.j2k_1.x2e_1.v2e_1, this.j2k_1.x2e_1.w2e_1);
		                var tmp_7 = new WhatsappObject_0(this.j2k_1.a2f_1.b2f_1, this.j2k_1.a2f_1.c2f_1);
		                var tmp11_safe_receiver = this.j2k_1.a2k();
		                var tmp_8 = new Body_23(tmp_6, tmp_7, tmp11_safe_receiver == null ? null : tmp11_safe_receiver.w25_1);
		                var tmp12_safe_receiver = this.k2k_1;
		                tmp = new MessageTemplateEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_8, tmp12_safe_receiver == null ? null : tmp12_safe_receiver.r25());
		              } else {
		                if (tmp0_subject instanceof VCardBody) {
		                  var tmp13_safe_receiver = this.j2k_1.a2k();
		                  var tmp_9 = new Body_22(this.j2k_1.s2e_1.o2e_1, tmp13_safe_receiver == null ? null : tmp13_safe_receiver.w25_1);
		                  var tmp14_safe_receiver = this.k2k_1;
		                  tmp = new MessageVCardEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_9, tmp14_safe_receiver == null ? null : tmp14_safe_receiver.r25());
		                } else {
		                  if (tmp0_subject instanceof VideoBody) {
		                    var tmp15_safe_receiver = this.j2k_1.a2k();
		                    var tmp_10 = new Body_19(this.j2k_1.p2e_1.o2e_1, tmp15_safe_receiver == null ? null : tmp15_safe_receiver.w25_1);
		                    var tmp16_safe_receiver = this.k2k_1;
		                    tmp = new MessageVideoEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_10, tmp16_safe_receiver == null ? null : tmp16_safe_receiver.r25());
		                  } else {
		                    if (tmp0_subject instanceof CustomBody) {
		                      var tmp_11 = this.j2k_1.t2f_1.toString();
		                      var tmp17_safe_receiver = this.j2k_1.a2k();
		                      var tmp_12 = new Body_17(tmp_11, tmp17_safe_receiver == null ? null : tmp17_safe_receiver.w25_1);
		                      var tmp18_safe_receiver = this.k2k_1;
		                      tmp = new MessageCustomEvent(this.f2k_1, conversationId, this.d2k_1, from, tmp_12, tmp18_safe_receiver == null ? null : tmp18_safe_receiver.r25());
		                    } else {
		                      noWhenBranchMatchedException();
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(CSMessageEvent).toString = function () {
		    return 'CSMessageEvent(id=' + this.d2k_1 + ', type=' + this.e2k_1 + ', timestamp=' + this.f2k_1 + ', from=' + this.g2k_1 + ', conversation_id=' + this.h2k_1 + ', _embedded=' + toString_0(this.i2k_1) + ', body=' + toString(this.j2k_1) + ', state=' + toString_0(this.k2k_1) + ')';
		  };
		  protoOf(CSMessageEvent).hashCode = function () {
		    var result = this.d2k_1;
		    result = imul(result, 31) + getStringHashCode(this.e2k_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f2k_1) | 0;
		    result = imul(result, 31) + (this.g2k_1 == null ? 0 : getStringHashCode(this.g2k_1)) | 0;
		    result = imul(result, 31) + (this.h2k_1 == null ? 0 : getStringHashCode(this.h2k_1)) | 0;
		    result = imul(result, 31) + (this.i2k_1 == null ? 0 : this.i2k_1.hashCode()) | 0;
		    result = imul(result, 31) + hashCode(this.j2k_1) | 0;
		    result = imul(result, 31) + (this.k2k_1 == null ? 0 : hashCode(this.k2k_1)) | 0;
		    return result;
		  };
		  protoOf(CSMessageEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CSMessageEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CSMessageEvent ? other : THROW_CCE();
		    if (!(this.d2k_1 === tmp0_other_with_cast.d2k_1))
		      return false;
		    if (!(this.e2k_1 === tmp0_other_with_cast.e2k_1))
		      return false;
		    if (!(this.f2k_1 === tmp0_other_with_cast.f2k_1))
		      return false;
		    if (!(this.g2k_1 == tmp0_other_with_cast.g2k_1))
		      return false;
		    if (!(this.h2k_1 == tmp0_other_with_cast.h2k_1))
		      return false;
		    if (!equals(this.i2k_1, tmp0_other_with_cast.i2k_1))
		      return false;
		    if (!equals(this.j2k_1, tmp0_other_with_cast.j2k_1))
		      return false;
		    if (!equals(this.k2k_1, tmp0_other_with_cast.k2k_1))
		      return false;
		    return true;
		  };
		  function Companion_120() {
		  }
		  function $serializer_141() {
		    $serializer_instance_141 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.UrlObject', this, 1);
		    tmp0_serialDesc.rq('url', false);
		    this.l2k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_141).xf = function () {
		    return this.l2k_1;
		  };
		  protoOf($serializer_141).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance()];
		  };
		  protoOf($serializer_141).zf = function (decoder) {
		    var tmp0_desc = this.l2k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return UrlObject_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_141).m2k = function (encoder, value) {
		    var tmp0_desc = this.l2k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.o2e_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_141).yf = function (encoder, value) {
		    return this.m2k(encoder, value instanceof UrlObject ? value : THROW_CCE());
		  };
		  var $serializer_instance_141;
		  function $serializer_getInstance_141() {
		    if ($serializer_instance_141 == null)
		      new $serializer_141();
		    return $serializer_instance_141;
		  }
		  function UrlObject_init_$Init$(seen1, url, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_141().l2k_1);
		    }
		    $this.o2e_1 = url;
		    return $this;
		  }
		  function UrlObject_init_$Create$(seen1, url, serializationConstructorMarker) {
		    return UrlObject_init_$Init$(seen1, url, serializationConstructorMarker, objectCreate(protoOf(UrlObject)));
		  }
		  function UrlObject(url) {
		    this.o2e_1 = url;
		  }
		  protoOf(UrlObject).toString = function () {
		    return 'UrlObject(url=' + this.o2e_1 + ')';
		  };
		  protoOf(UrlObject).hashCode = function () {
		    return getStringHashCode(this.o2e_1);
		  };
		  protoOf(UrlObject).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UrlObject))
		      return false;
		    var tmp0_other_with_cast = other instanceof UrlObject ? other : THROW_CCE();
		    if (!(this.o2e_1 === tmp0_other_with_cast.o2e_1))
		      return false;
		    return true;
		  };
		  function _get_$cachedSerializer__te6jhj($this) {
		    return $this.n2k_1.r1();
		  }
		  function CSMessageType$Companion$_anonymous__rj5gke() {
		    return $serializer_getInstance_142();
		  }
		  var CSMessageType_TEXT_instance;
		  var CSMessageType_IMAGE_instance;
		  var CSMessageType_VIDEO_instance;
		  var CSMessageType_AUDIO_instance;
		  var CSMessageType_FILE_instance;
		  var CSMessageType_VCARD_instance;
		  var CSMessageType_CUSTOM_instance;
		  var CSMessageType_TEMPLATE_instance;
		  var CSMessageType_LOCATION_instance;
		  function Companion_121() {
		    Companion_instance_122 = this;
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.n2k_1 = lazy(tmp_0, CSMessageType$Companion$_anonymous__rj5gke);
		  }
		  protoOf(Companion_121).b13 = function () {
		    return _get_$cachedSerializer__te6jhj(this);
		  };
		  protoOf(Companion_121).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_122;
		  function Companion_getInstance_123() {
		    CSMessageType_initEntries();
		    if (Companion_instance_122 == null)
		      new Companion_121();
		    return Companion_instance_122;
		  }
		  function $serializer_142() {
		    $serializer_instance_142 = this;
		    var tmp0_serialDesc = new EnumDescriptor('com.vonage.clientcore.core.actions.CSMessageType', 9);
		    tmp0_serialDesc.rq('text', false);
		    tmp0_serialDesc.rq('image', false);
		    tmp0_serialDesc.rq('video', false);
		    tmp0_serialDesc.rq('audio', false);
		    tmp0_serialDesc.rq('file', false);
		    tmp0_serialDesc.rq('vcard', false);
		    tmp0_serialDesc.rq('custom', false);
		    tmp0_serialDesc.rq('template', false);
		    tmp0_serialDesc.rq('location', false);
		    this.o2k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_142).xf = function () {
		    return this.o2k_1;
		  };
		  protoOf($serializer_142).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_142).zf = function (decoder) {
		    return values()[decoder.dj(this.o2k_1)];
		  };
		  protoOf($serializer_142).p2k = function (encoder, value) {
		    encoder.mk(this.o2k_1, value.e2_1);
		  };
		  protoOf($serializer_142).yf = function (encoder, value) {
		    return this.p2k(encoder, value instanceof CSMessageType ? value : THROW_CCE());
		  };
		  var $serializer_instance_142;
		  function $serializer_getInstance_142() {
		    CSMessageType_initEntries();
		    if ($serializer_instance_142 == null)
		      new $serializer_142();
		    return $serializer_instance_142;
		  }
		  function values() {
		    return [CSMessageType_TEXT_getInstance(), CSMessageType_IMAGE_getInstance(), CSMessageType_VIDEO_getInstance(), CSMessageType_AUDIO_getInstance(), CSMessageType_FILE_getInstance(), CSMessageType_VCARD_getInstance(), CSMessageType_CUSTOM_getInstance(), CSMessageType_TEMPLATE_getInstance(), CSMessageType_LOCATION_getInstance()];
		  }
		  function valueOf_0(value) {
		    switch (value) {
		      case 'TEXT':
		        return CSMessageType_TEXT_getInstance();
		      case 'IMAGE':
		        return CSMessageType_IMAGE_getInstance();
		      case 'VIDEO':
		        return CSMessageType_VIDEO_getInstance();
		      case 'AUDIO':
		        return CSMessageType_AUDIO_getInstance();
		      case 'FILE':
		        return CSMessageType_FILE_getInstance();
		      case 'VCARD':
		        return CSMessageType_VCARD_getInstance();
		      case 'CUSTOM':
		        return CSMessageType_CUSTOM_getInstance();
		      case 'TEMPLATE':
		        return CSMessageType_TEMPLATE_getInstance();
		      case 'LOCATION':
		        return CSMessageType_LOCATION_getInstance();
		      default:
		        CSMessageType_initEntries();
		        THROW_IAE('No enum constant value.');
		        break;
		    }
		  }
		  var CSMessageType_entriesInitialized;
		  function CSMessageType_initEntries() {
		    if (CSMessageType_entriesInitialized)
		      return Unit_instance;
		    CSMessageType_entriesInitialized = true;
		    CSMessageType_TEXT_instance = new CSMessageType('TEXT', 0);
		    CSMessageType_IMAGE_instance = new CSMessageType('IMAGE', 1);
		    CSMessageType_VIDEO_instance = new CSMessageType('VIDEO', 2);
		    CSMessageType_AUDIO_instance = new CSMessageType('AUDIO', 3);
		    CSMessageType_FILE_instance = new CSMessageType('FILE', 4);
		    CSMessageType_VCARD_instance = new CSMessageType('VCARD', 5);
		    CSMessageType_CUSTOM_instance = new CSMessageType('CUSTOM', 6);
		    CSMessageType_TEMPLATE_instance = new CSMessageType('TEMPLATE', 7);
		    CSMessageType_LOCATION_instance = new CSMessageType('LOCATION', 8);
		    Companion_getInstance_123();
		  }
		  function CSMessageType(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function CSMessageEventBodySerializer() {
		    CSMessageEventBodySerializer_instance = this;
		    JsonContentPolymorphicSerializer.call(this, getKClass(Body_14));
		  }
		  protoOf(CSMessageEventBodySerializer).z12 = function (element) {
		    var tmp0_safe_receiver = get_jsonObject(element).e13('message_type');
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
		    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h13();
		    var tmp;
		    if (tmp2_elvis_lhs == null) {
		      throw toVonageError(new UnexpectedNullValue());
		    } else {
		      tmp = tmp2_elvis_lhs;
		    }
		    var messageType = tmp;
		    // Inline function 'kotlin.text.uppercase' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp$ret$1 = messageType.toUpperCase();
		    var tmp_0;
		    switch (valueOf_0(tmp$ret$1).e2_1) {
		      case 0:
		        tmp_0 = Companion_instance_111.b13();
		        break;
		      case 1:
		        tmp_0 = Companion_instance_112.b13();
		        break;
		      case 2:
		        tmp_0 = Companion_instance_113.b13();
		        break;
		      case 3:
		        tmp_0 = Companion_instance_114.b13();
		        break;
		      case 4:
		        tmp_0 = Companion_instance_115.b13();
		        break;
		      case 5:
		        tmp_0 = Companion_instance_116.b13();
		        break;
		      case 6:
		        tmp_0 = Companion_instance_117.b13();
		        break;
		      case 7:
		        tmp_0 = Companion_instance_118.b13();
		        break;
		      case 8:
		        tmp_0 = Companion_instance_119.b13();
		        break;
		      default:
		        noWhenBranchMatchedException();
		        break;
		    }
		    return tmp_0;
		  };
		  var CSMessageEventBodySerializer_instance;
		  function CSMessageEventBodySerializer_getInstance() {
		    if (CSMessageEventBodySerializer_instance == null)
		      new CSMessageEventBodySerializer();
		    return CSMessageEventBodySerializer_instance;
		  }
		  function Companion_122() {
		    Companion_instance_123 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.s2j_1 = [null, new ArrayListSerializer(StringSerializer_getInstance())];
		  }
		  protoOf(Companion_122).t2j = function (template) {
		    return new TemplateObject(template.s2k_1, template.t2k_1);
		  };
		  var Companion_instance_123;
		  function Companion_getInstance_124() {
		    if (Companion_instance_123 == null)
		      new Companion_122();
		    return Companion_instance_123;
		  }
		  function $serializer_143() {
		    $serializer_instance_143 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.TemplateObject', this, 2);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('parameters', true);
		    this.u2k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_143).xf = function () {
		    return this.u2k_1;
		  };
		  protoOf($serializer_143).gr = function () {
		    var tmp0_cached = Companion_getInstance_124().s2j_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), get_nullable(tmp0_cached[1])];
		  };
		  protoOf($serializer_143).zf = function (decoder) {
		    var tmp0_desc = this.u2k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    var tmp7_cached = Companion_getInstance_124().s2j_1;
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return TemplateObject_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_143).v2k = function (encoder, value) {
		    var tmp0_desc = this.u2k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_124().s2j_1;
		    tmp1_output.wk(tmp0_desc, 0, value.v2e_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.w2e_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, tmp2_cached[1], value.w2e_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_143).yf = function (encoder, value) {
		    return this.v2k(encoder, value instanceof TemplateObject ? value : THROW_CCE());
		  };
		  var $serializer_instance_143;
		  function $serializer_getInstance_143() {
		    if ($serializer_instance_143 == null)
		      new $serializer_143();
		    return $serializer_instance_143;
		  }
		  function TemplateObject_init_$Init$(seen1, name, parameters, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_143().u2k_1);
		    }
		    $this.v2e_1 = name;
		    if (0 === (seen1 & 2))
		      $this.w2e_1 = null;
		    else
		      $this.w2e_1 = parameters;
		    return $this;
		  }
		  function TemplateObject_init_$Create$(seen1, name, parameters, serializationConstructorMarker) {
		    return TemplateObject_init_$Init$(seen1, name, parameters, serializationConstructorMarker, objectCreate(protoOf(TemplateObject)));
		  }
		  function TemplateObject(name, parameters) {
		    Companion_getInstance_124();
		    parameters = parameters === VOID ? null : parameters;
		    this.v2e_1 = name;
		    this.w2e_1 = parameters;
		  }
		  protoOf(TemplateObject).toString = function () {
		    return 'TemplateObject(name=' + this.v2e_1 + ', parameters=' + toString_0(this.w2e_1) + ')';
		  };
		  protoOf(TemplateObject).hashCode = function () {
		    var result = getStringHashCode(this.v2e_1);
		    result = imul(result, 31) + (this.w2e_1 == null ? 0 : hashCode(this.w2e_1)) | 0;
		    return result;
		  };
		  protoOf(TemplateObject).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof TemplateObject))
		      return false;
		    var tmp0_other_with_cast = other instanceof TemplateObject ? other : THROW_CCE();
		    if (!(this.v2e_1 === tmp0_other_with_cast.v2e_1))
		      return false;
		    if (!equals(this.w2e_1, tmp0_other_with_cast.w2e_1))
		      return false;
		    return true;
		  };
		  function Companion_123() {
		  }
		  protoOf(Companion_123).u2j = function (whatsapp) {
		    return new WhatsappObject(whatsapp.w2k_1, whatsapp.x2k_1);
		  };
		  var Companion_instance_124;
		  function $serializer_144() {
		    $serializer_instance_144 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.WhatsappObject', this, 2);
		    tmp0_serialDesc.rq('policy', false);
		    tmp0_serialDesc.rq('locale', false);
		    this.y2k_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_144).xf = function () {
		    return this.y2k_1;
		  };
		  protoOf($serializer_144).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_144).zf = function (decoder) {
		    var tmp0_desc = this.y2k_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return WhatsappObject_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_144).z2k = function (encoder, value) {
		    var tmp0_desc = this.y2k_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.b2f_1);
		    tmp1_output.wk(tmp0_desc, 1, value.c2f_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_144).yf = function (encoder, value) {
		    return this.z2k(encoder, value instanceof WhatsappObject ? value : THROW_CCE());
		  };
		  var $serializer_instance_144;
		  function $serializer_getInstance_144() {
		    if ($serializer_instance_144 == null)
		      new $serializer_144();
		    return $serializer_instance_144;
		  }
		  function WhatsappObject_init_$Init$(seen1, policy, locale, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_144().y2k_1);
		    }
		    $this.b2f_1 = policy;
		    $this.c2f_1 = locale;
		    return $this;
		  }
		  function WhatsappObject_init_$Create$(seen1, policy, locale, serializationConstructorMarker) {
		    return WhatsappObject_init_$Init$(seen1, policy, locale, serializationConstructorMarker, objectCreate(protoOf(WhatsappObject)));
		  }
		  function WhatsappObject(policy, locale) {
		    this.b2f_1 = policy;
		    this.c2f_1 = locale;
		  }
		  protoOf(WhatsappObject).toString = function () {
		    return 'WhatsappObject(policy=' + this.b2f_1 + ', locale=' + this.c2f_1 + ')';
		  };
		  protoOf(WhatsappObject).hashCode = function () {
		    var result = getStringHashCode(this.b2f_1);
		    result = imul(result, 31) + getStringHashCode(this.c2f_1) | 0;
		    return result;
		  };
		  protoOf(WhatsappObject).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof WhatsappObject))
		      return false;
		    var tmp0_other_with_cast = other instanceof WhatsappObject ? other : THROW_CCE();
		    if (!(this.b2f_1 === tmp0_other_with_cast.b2f_1))
		      return false;
		    if (!(this.c2f_1 === tmp0_other_with_cast.c2f_1))
		      return false;
		    return true;
		  };
		  function Companion_124() {
		  }
		  protoOf(Companion_124).x2j = function (location) {
		    return new LocationObject(location.a2l_1, location.b2l_1, location.c2l_1, location.d2l_1);
		  };
		  var Companion_instance_125;
		  function $serializer_145() {
		    $serializer_instance_145 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.LocationObject', this, 4);
		    tmp0_serialDesc.rq('longitude', false);
		    tmp0_serialDesc.rq('latitude', false);
		    tmp0_serialDesc.rq('name', true);
		    tmp0_serialDesc.rq('address', true);
		    this.e2l_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_145).xf = function () {
		    return this.e2l_1;
		  };
		  protoOf($serializer_145).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_145).zf = function (decoder) {
		    var tmp0_desc = this.e2l_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return LocationObject_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_145).f2l = function (encoder, value) {
		    var tmp0_desc = this.e2l_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.d2f_1);
		    tmp1_output.wk(tmp0_desc, 1, value.e2f_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.f2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.f2f_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.g2f_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.g2f_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_145).yf = function (encoder, value) {
		    return this.f2l(encoder, value instanceof LocationObject ? value : THROW_CCE());
		  };
		  var $serializer_instance_145;
		  function $serializer_getInstance_145() {
		    if ($serializer_instance_145 == null)
		      new $serializer_145();
		    return $serializer_instance_145;
		  }
		  function LocationObject_init_$Init$(seen1, longitude, latitude, name, address, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_145().e2l_1);
		    }
		    $this.d2f_1 = longitude;
		    $this.e2f_1 = latitude;
		    if (0 === (seen1 & 4))
		      $this.f2f_1 = null;
		    else
		      $this.f2f_1 = name;
		    if (0 === (seen1 & 8))
		      $this.g2f_1 = null;
		    else
		      $this.g2f_1 = address;
		    return $this;
		  }
		  function LocationObject_init_$Create$(seen1, longitude, latitude, name, address, serializationConstructorMarker) {
		    return LocationObject_init_$Init$(seen1, longitude, latitude, name, address, serializationConstructorMarker, objectCreate(protoOf(LocationObject)));
		  }
		  function LocationObject(longitude, latitude, name, address) {
		    name = name === VOID ? null : name;
		    address = address === VOID ? null : address;
		    this.d2f_1 = longitude;
		    this.e2f_1 = latitude;
		    this.f2f_1 = name;
		    this.g2f_1 = address;
		  }
		  protoOf(LocationObject).toString = function () {
		    return 'LocationObject(longitude=' + this.d2f_1 + ', latitude=' + this.e2f_1 + ', name=' + this.f2f_1 + ', address=' + this.g2f_1 + ')';
		  };
		  protoOf(LocationObject).hashCode = function () {
		    var result = getStringHashCode(this.d2f_1);
		    result = imul(result, 31) + getStringHashCode(this.e2f_1) | 0;
		    result = imul(result, 31) + (this.f2f_1 == null ? 0 : getStringHashCode(this.f2f_1)) | 0;
		    result = imul(result, 31) + (this.g2f_1 == null ? 0 : getStringHashCode(this.g2f_1)) | 0;
		    return result;
		  };
		  protoOf(LocationObject).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LocationObject))
		      return false;
		    var tmp0_other_with_cast = other instanceof LocationObject ? other : THROW_CCE();
		    if (!(this.d2f_1 === tmp0_other_with_cast.d2f_1))
		      return false;
		    if (!(this.e2f_1 === tmp0_other_with_cast.e2f_1))
		      return false;
		    if (!(this.f2f_1 == tmp0_other_with_cast.f2f_1))
		      return false;
		    if (!(this.g2f_1 == tmp0_other_with_cast.g2f_1))
		      return false;
		    return true;
		  };
		  function CSMessageType_TEXT_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_TEXT_instance;
		  }
		  function CSMessageType_IMAGE_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_IMAGE_instance;
		  }
		  function CSMessageType_VIDEO_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_VIDEO_instance;
		  }
		  function CSMessageType_AUDIO_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_AUDIO_instance;
		  }
		  function CSMessageType_FILE_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_FILE_instance;
		  }
		  function CSMessageType_VCARD_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_VCARD_instance;
		  }
		  function CSMessageType_CUSTOM_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_CUSTOM_instance;
		  }
		  function CSMessageType_TEMPLATE_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_TEMPLATE_instance;
		  }
		  function CSMessageType_LOCATION_getInstance() {
		    CSMessageType_initEntries();
		    return CSMessageType_LOCATION_instance;
		  }
		  function TimeoutAction(callbackAction, delay) {
		    this.g2l_1 = callbackAction;
		    this.h2l_1 = delay;
		  }
		  protoOf(TimeoutAction).toString = function () {
		    return 'TimeoutAction(callbackAction=' + toString(this.g2l_1) + ', delay=' + this.h2l_1 + ')';
		  };
		  protoOf(TimeoutAction).hashCode = function () {
		    var result = hashCode(this.g2l_1);
		    result = imul(result, 31) + this.h2l_1 | 0;
		    return result;
		  };
		  protoOf(TimeoutAction).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof TimeoutAction))
		      return false;
		    var tmp0_other_with_cast = other instanceof TimeoutAction ? other : THROW_CCE();
		    if (!equals(this.g2l_1, tmp0_other_with_cast.g2l_1))
		      return false;
		    if (!(this.h2l_1 === tmp0_other_with_cast.h2l_1))
		      return false;
		    return true;
		  };
		  function MediaDisable(id) {
		    this.i2l_1 = id;
		  }
		  protoOf(MediaDisable).l26 = function () {
		    return this.i2l_1;
		  };
		  protoOf(MediaDisable).toString = function () {
		    return 'MediaDisable(id=' + this.i2l_1 + ')';
		  };
		  protoOf(MediaDisable).hashCode = function () {
		    return getStringHashCode(this.i2l_1);
		  };
		  protoOf(MediaDisable).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaDisable))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaDisable ? other : THROW_CCE();
		    if (!(this.i2l_1 === tmp0_other_with_cast.i2l_1))
		      return false;
		    return true;
		  };
		  function Mute(id) {
		    this.j2l_1 = id;
		  }
		  protoOf(Mute).l26 = function () {
		    return this.j2l_1;
		  };
		  protoOf(Mute).toString = function () {
		    return 'Mute(id=' + this.j2l_1 + ')';
		  };
		  protoOf(Mute).hashCode = function () {
		    return getStringHashCode(this.j2l_1);
		  };
		  protoOf(Mute).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Mute))
		      return false;
		    var tmp0_other_with_cast = other instanceof Mute ? other : THROW_CCE();
		    if (!(this.j2l_1 === tmp0_other_with_cast.j2l_1))
		      return false;
		    return true;
		  };
		  function Unmute(id) {
		    this.k2l_1 = id;
		  }
		  protoOf(Unmute).l26 = function () {
		    return this.k2l_1;
		  };
		  protoOf(Unmute).toString = function () {
		    return 'Unmute(id=' + this.k2l_1 + ')';
		  };
		  protoOf(Unmute).hashCode = function () {
		    return getStringHashCode(this.k2l_1);
		  };
		  protoOf(Unmute).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Unmute))
		      return false;
		    var tmp0_other_with_cast = other instanceof Unmute ? other : THROW_CCE();
		    if (!(this.k2l_1 === tmp0_other_with_cast.k2l_1))
		      return false;
		    return true;
		  };
		  function EnableEarmuff(id) {
		    this.l2l_1 = id;
		  }
		  protoOf(EnableEarmuff).l26 = function () {
		    return this.l2l_1;
		  };
		  protoOf(EnableEarmuff).toString = function () {
		    return 'EnableEarmuff(id=' + this.l2l_1 + ')';
		  };
		  protoOf(EnableEarmuff).hashCode = function () {
		    return getStringHashCode(this.l2l_1);
		  };
		  protoOf(EnableEarmuff).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EnableEarmuff))
		      return false;
		    var tmp0_other_with_cast = other instanceof EnableEarmuff ? other : THROW_CCE();
		    if (!(this.l2l_1 === tmp0_other_with_cast.l2l_1))
		      return false;
		    return true;
		  };
		  function DisableEarmuff(id) {
		    this.m2l_1 = id;
		  }
		  protoOf(DisableEarmuff).l26 = function () {
		    return this.m2l_1;
		  };
		  protoOf(DisableEarmuff).toString = function () {
		    return 'DisableEarmuff(id=' + this.m2l_1 + ')';
		  };
		  protoOf(DisableEarmuff).hashCode = function () {
		    return getStringHashCode(this.m2l_1);
		  };
		  protoOf(DisableEarmuff).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof DisableEarmuff))
		      return false;
		    var tmp0_other_with_cast = other instanceof DisableEarmuff ? other : THROW_CCE();
		    if (!(this.m2l_1 === tmp0_other_with_cast.m2l_1))
		      return false;
		    return true;
		  };
		  function EnableNoiseSuppression() {
		  }
		  function DisableNoiseSuppression() {
		  }
		  function CallReconnectionRetry(id) {
		    this.n2l_1 = id;
		  }
		  protoOf(CallReconnectionRetry).l26 = function () {
		    return this.n2l_1;
		  };
		  protoOf(CallReconnectionRetry).toString = function () {
		    return 'CallReconnectionRetry(id=' + this.n2l_1 + ')';
		  };
		  protoOf(CallReconnectionRetry).hashCode = function () {
		    return getStringHashCode(this.n2l_1);
		  };
		  protoOf(CallReconnectionRetry).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallReconnectionRetry))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallReconnectionRetry ? other : THROW_CCE();
		    if (!(this.n2l_1 === tmp0_other_with_cast.n2l_1))
		      return false;
		    return true;
		  };
		  function MediaEvent() {
		  }
		  function MediaErrorEvent(id, error) {
		    this.o2l_1 = id;
		    this.p2l_1 = error;
		  }
		  protoOf(MediaErrorEvent).l26 = function () {
		    return this.o2l_1;
		  };
		  protoOf(MediaErrorEvent).toString = function () {
		    return 'MediaErrorEvent(id=' + this.o2l_1 + ', error=' + this.p2l_1.toString() + ')';
		  };
		  protoOf(MediaErrorEvent).hashCode = function () {
		    var result = getStringHashCode(this.o2l_1);
		    result = imul(result, 31) + hashCode(this.p2l_1) | 0;
		    return result;
		  };
		  protoOf(MediaErrorEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaErrorEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaErrorEvent ? other : THROW_CCE();
		    if (!(this.o2l_1 === tmp0_other_with_cast.o2l_1))
		      return false;
		    if (!equals(this.p2l_1, tmp0_other_with_cast.p2l_1))
		      return false;
		    return true;
		  };
		  function RTCStatsUpdate(id, rtcStats) {
		    this.q2l_1 = id;
		    this.r2l_1 = rtcStats;
		  }
		  protoOf(RTCStatsUpdate).l26 = function () {
		    return this.q2l_1;
		  };
		  protoOf(RTCStatsUpdate).toString = function () {
		    return 'RTCStatsUpdate(id=' + this.q2l_1 + ', rtcStats=' + this.r2l_1.toString() + ')';
		  };
		  protoOf(RTCStatsUpdate).hashCode = function () {
		    var result = getStringHashCode(this.q2l_1);
		    result = imul(result, 31) + this.r2l_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(RTCStatsUpdate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCStatsUpdate))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCStatsUpdate ? other : THROW_CCE();
		    if (!(this.q2l_1 === tmp0_other_with_cast.q2l_1))
		      return false;
		    if (!this.r2l_1.equals(tmp0_other_with_cast.r2l_1))
		      return false;
		    return true;
		  };
		  function MediaConnectionStateUpdate(id, state) {
		    this.s2l_1 = id;
		    this.t2l_1 = state;
		  }
		  protoOf(MediaConnectionStateUpdate).l26 = function () {
		    return this.s2l_1;
		  };
		  protoOf(MediaConnectionStateUpdate).toString = function () {
		    return 'MediaConnectionStateUpdate(id=' + this.s2l_1 + ', state=' + this.t2l_1.toString() + ')';
		  };
		  protoOf(MediaConnectionStateUpdate).hashCode = function () {
		    var result = getStringHashCode(this.s2l_1);
		    result = imul(result, 31) + this.t2l_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MediaConnectionStateUpdate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaConnectionStateUpdate))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaConnectionStateUpdate ? other : THROW_CCE();
		    if (!(this.s2l_1 === tmp0_other_with_cast.s2l_1))
		      return false;
		    if (!this.t2l_1.equals(tmp0_other_with_cast.t2l_1))
		      return false;
		    return true;
		  };
		  function MediaOffer(id, sdp) {
		    this.u2l_1 = id;
		    this.v2l_1 = sdp;
		  }
		  protoOf(MediaOffer).l26 = function () {
		    return this.u2l_1;
		  };
		  protoOf(MediaOffer).toString = function () {
		    return 'MediaOffer(id=' + this.u2l_1 + ', sdp=' + this.v2l_1 + ')';
		  };
		  protoOf(MediaOffer).hashCode = function () {
		    var result = getStringHashCode(this.u2l_1);
		    result = imul(result, 31) + getStringHashCode(this.v2l_1) | 0;
		    return result;
		  };
		  protoOf(MediaOffer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaOffer))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaOffer ? other : THROW_CCE();
		    if (!(this.u2l_1 === tmp0_other_with_cast.u2l_1))
		      return false;
		    if (!(this.v2l_1 === tmp0_other_with_cast.v2l_1))
		      return false;
		    return true;
		  };
		  function MediaAnswer(id, sdp) {
		    this.w2l_1 = id;
		    this.x2l_1 = sdp;
		  }
		  protoOf(MediaAnswer).l26 = function () {
		    return this.w2l_1;
		  };
		  protoOf(MediaAnswer).toString = function () {
		    return 'MediaAnswer(id=' + this.w2l_1 + ', sdp=' + this.x2l_1 + ')';
		  };
		  protoOf(MediaAnswer).hashCode = function () {
		    var result = getStringHashCode(this.w2l_1);
		    result = imul(result, 31) + getStringHashCode(this.x2l_1) | 0;
		    return result;
		  };
		  protoOf(MediaAnswer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaAnswer))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaAnswer ? other : THROW_CCE();
		    if (!(this.w2l_1 === tmp0_other_with_cast.w2l_1))
		      return false;
		    if (!(this.x2l_1 === tmp0_other_with_cast.x2l_1))
		      return false;
		    return true;
		  };
		  function UnknownSocketEvent(event) {
		    this.y2l_1 = event;
		  }
		  protoOf(UnknownSocketEvent).toString = function () {
		    return 'UnknownSocketEvent(event=' + this.y2l_1 + ')';
		  };
		  protoOf(UnknownSocketEvent).hashCode = function () {
		    return getStringHashCode(this.y2l_1);
		  };
		  protoOf(UnknownSocketEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UnknownSocketEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof UnknownSocketEvent ? other : THROW_CCE();
		    if (!(this.y2l_1 === tmp0_other_with_cast.y2l_1))
		      return false;
		    return true;
		  };
		  var SocketConnectionStatus_Disconnected_instance;
		  var SocketConnectionStatus_Reconnecting_instance;
		  var SocketConnectionStatus_Connected_instance;
		  var SocketConnectionStatus_entriesInitialized;
		  function SocketConnectionStatus_initEntries() {
		    if (SocketConnectionStatus_entriesInitialized)
		      return Unit_instance;
		    SocketConnectionStatus_entriesInitialized = true;
		    SocketConnectionStatus_Disconnected_instance = new SocketConnectionStatus('Disconnected', 0);
		    SocketConnectionStatus_Reconnecting_instance = new SocketConnectionStatus('Reconnecting', 1);
		    SocketConnectionStatus_Connected_instance = new SocketConnectionStatus('Connected', 2);
		  }
		  function SocketConnectionStatus(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  var SocketConnectionFailedReason_ServerDisconnected_instance;
		  var SocketConnectionFailedReason_ClientDisconnected_instance;
		  var SocketConnectionFailedReason_ClientNetworkError_instance;
		  var SocketConnectionFailedReason_PingTimeout_instance;
		  var SocketConnectionFailedReason_entriesInitialized;
		  function SocketConnectionFailedReason_initEntries() {
		    if (SocketConnectionFailedReason_entriesInitialized)
		      return Unit_instance;
		    SocketConnectionFailedReason_entriesInitialized = true;
		    SocketConnectionFailedReason_ServerDisconnected_instance = new SocketConnectionFailedReason('ServerDisconnected', 0);
		    SocketConnectionFailedReason_ClientDisconnected_instance = new SocketConnectionFailedReason('ClientDisconnected', 1);
		    SocketConnectionFailedReason_ClientNetworkError_instance = new SocketConnectionFailedReason('ClientNetworkError', 2);
		    SocketConnectionFailedReason_PingTimeout_instance = new SocketConnectionFailedReason('PingTimeout', 3);
		  }
		  function SocketConnectionFailedReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function None() {
		    None_instance = this;
		    SessionStatus.call(this);
		    this.z2l_1 = null;
		    this.a2m_1 = null;
		    this.b2m_1 = null;
		    this.c2m_1 = null;
		  }
		  protoOf(None).l26 = function () {
		    return this.z2l_1;
		  };
		  protoOf(None).d2m = function () {
		    return this.a2m_1;
		  };
		  protoOf(None).e2m = function () {
		    return this.b2m_1;
		  };
		  protoOf(None).f2m = function () {
		    return this.c2m_1;
		  };
		  var None_instance;
		  function None_getInstance() {
		    if (None_instance == null)
		      new None();
		    return None_instance;
		  }
		  function Active(id, user, reason, apiKey) {
		    reason = reason === VOID ? null : reason;
		    SessionStatus.call(this);
		    this.g2m_1 = id;
		    this.h2m_1 = user;
		    this.i2m_1 = reason;
		    this.j2m_1 = apiKey;
		  }
		  protoOf(Active).l26 = function () {
		    return this.g2m_1;
		  };
		  protoOf(Active).d2m = function () {
		    return this.h2m_1;
		  };
		  protoOf(Active).e2m = function () {
		    return this.i2m_1;
		  };
		  protoOf(Active).f2m = function () {
		    return this.j2m_1;
		  };
		  protoOf(Active).toString = function () {
		    return 'Active(id=' + this.g2m_1 + ', user=' + this.h2m_1.toString() + ', reason=' + toString_0(this.i2m_1) + ', apiKey=' + this.j2m_1 + ')';
		  };
		  protoOf(Active).hashCode = function () {
		    var result = getStringHashCode(this.g2m_1);
		    result = imul(result, 31) + this.h2m_1.hashCode() | 0;
		    result = imul(result, 31) + (this.i2m_1 == null ? 0 : this.i2m_1.hashCode()) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2m_1) | 0;
		    return result;
		  };
		  protoOf(Active).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Active))
		      return false;
		    var tmp0_other_with_cast = other instanceof Active ? other : THROW_CCE();
		    if (!(this.g2m_1 === tmp0_other_with_cast.g2m_1))
		      return false;
		    if (!this.h2m_1.equals(tmp0_other_with_cast.h2m_1))
		      return false;
		    if (!equals(this.i2m_1, tmp0_other_with_cast.i2m_1))
		      return false;
		    if (!(this.j2m_1 === tmp0_other_with_cast.j2m_1))
		      return false;
		    return true;
		  };
		  function Inactive(id, user, reason, apiKey) {
		    id = id === VOID ? null : id;
		    user = user === VOID ? null : user;
		    reason = reason === VOID ? null : reason;
		    apiKey = apiKey === VOID ? null : apiKey;
		    SessionStatus.call(this);
		    this.k2m_1 = id;
		    this.l2m_1 = user;
		    this.m2m_1 = reason;
		    this.n2m_1 = apiKey;
		  }
		  protoOf(Inactive).l26 = function () {
		    return this.k2m_1;
		  };
		  protoOf(Inactive).d2m = function () {
		    return this.l2m_1;
		  };
		  protoOf(Inactive).e2m = function () {
		    return this.m2m_1;
		  };
		  protoOf(Inactive).f2m = function () {
		    return this.n2m_1;
		  };
		  protoOf(Inactive).toString = function () {
		    return 'Inactive(id=' + this.k2m_1 + ', user=' + toString_0(this.l2m_1) + ', reason=' + toString_0(this.m2m_1) + ', apiKey=' + this.n2m_1 + ')';
		  };
		  protoOf(Inactive).hashCode = function () {
		    var result = this.k2m_1 == null ? 0 : getStringHashCode(this.k2m_1);
		    result = imul(result, 31) + (this.l2m_1 == null ? 0 : this.l2m_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.m2m_1 == null ? 0 : this.m2m_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.n2m_1 == null ? 0 : getStringHashCode(this.n2m_1)) | 0;
		    return result;
		  };
		  protoOf(Inactive).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Inactive))
		      return false;
		    var tmp0_other_with_cast = other instanceof Inactive ? other : THROW_CCE();
		    if (!(this.k2m_1 == tmp0_other_with_cast.k2m_1))
		      return false;
		    if (!equals(this.l2m_1, tmp0_other_with_cast.l2m_1))
		      return false;
		    if (!equals(this.m2m_1, tmp0_other_with_cast.m2m_1))
		      return false;
		    if (!(this.n2m_1 == tmp0_other_with_cast.n2m_1))
		      return false;
		    return true;
		  };
		  function SessionStatus() {
		  }
		  function SessionNoActiveSessionError(code, message) {
		    code = code === VOID ? 'session:error:no-active-session' : code;
		    message = message === VOID ? 'You do not have an active session. Please establish a valid session and try again.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionNoActiveSessionError);
		    this.t2m_1 = code;
		    this.u2m_1 = message;
		  }
		  protoOf(SessionNoActiveSessionError).v2m = function () {
		    return this.t2m_1;
		  };
		  protoOf(SessionNoActiveSessionError).k8 = function () {
		    return this.u2m_1;
		  };
		  protoOf(SessionNoActiveSessionError).toString = function () {
		    return 'SessionNoActiveSessionError(code=' + this.t2m_1 + ', message=' + this.u2m_1 + ')';
		  };
		  protoOf(SessionNoActiveSessionError).hashCode = function () {
		    var result = getStringHashCode(this.t2m_1);
		    result = imul(result, 31) + getStringHashCode(this.u2m_1) | 0;
		    return result;
		  };
		  protoOf(SessionNoActiveSessionError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionNoActiveSessionError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionNoActiveSessionError ? other : THROW_CCE();
		    if (!(this.t2m_1 === tmp0_other_with_cast.t2m_1))
		      return false;
		    if (!(this.u2m_1 === tmp0_other_with_cast.u2m_1))
		      return false;
		    return true;
		  };
		  function SocketConnect(token, sessionId) {
		    this.z2m_1 = token;
		    this.a2n_1 = sessionId;
		  }
		  protoOf(SocketConnect).toString = function () {
		    return toMaskedString(this, mapOf([to('token', this.z2m_1), to('sessionId', toString_0(this.a2n_1))]));
		  };
		  protoOf(SocketConnect).hashCode = function () {
		    var result = getStringHashCode(this.z2m_1);
		    result = imul(result, 31) + (this.a2n_1 == null ? 0 : getStringHashCode(this.a2n_1)) | 0;
		    return result;
		  };
		  protoOf(SocketConnect).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketConnect))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketConnect ? other : THROW_CCE();
		    if (!(this.z2m_1 === tmp0_other_with_cast.z2m_1))
		      return false;
		    if (!(this.a2n_1 == tmp0_other_with_cast.a2n_1))
		      return false;
		    return true;
		  };
		  function DeleteSession() {
		  }
		  protoOf(DeleteSession).b2n = function () {
		    return (new Logout()).d2n();
		  };
		  var DeleteSession_instance;
		  function SocketDisconnect() {
		  }
		  var SocketDisconnect_instance;
		  function SocketSetSession(sessionId, token) {
		    this.f2n_1 = sessionId;
		    this.g2n_1 = token;
		  }
		  protoOf(SocketSetSession).toString = function () {
		    return toMaskedString(this, mapOf([to('token', this.g2n_1), to('sessionId', this.f2n_1)]));
		  };
		  protoOf(SocketSetSession).hashCode = function () {
		    var result = getStringHashCode(this.f2n_1);
		    result = imul(result, 31) + getStringHashCode(this.g2n_1) | 0;
		    return result;
		  };
		  protoOf(SocketSetSession).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketSetSession))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketSetSession ? other : THROW_CCE();
		    if (!(this.f2n_1 === tmp0_other_with_cast.f2n_1))
		      return false;
		    if (!(this.g2n_1 === tmp0_other_with_cast.g2n_1))
		      return false;
		    return true;
		  };
		  function SocketConnectionStatusWrapper(state, timestamp) {
		    this.h2n_1 = state;
		    this.i2n_1 = timestamp;
		  }
		  protoOf(SocketConnectionStatusWrapper).toString = function () {
		    return 'SocketConnectionStatusWrapper(state=' + this.h2n_1.toString() + ', timestamp=' + toString_0(this.i2n_1) + ')';
		  };
		  protoOf(SocketConnectionStatusWrapper).hashCode = function () {
		    var result = this.h2n_1.hashCode();
		    result = imul(result, 31) + (this.i2n_1 == null ? 0 : hashCode(this.i2n_1)) | 0;
		    return result;
		  };
		  protoOf(SocketConnectionStatusWrapper).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketConnectionStatusWrapper))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketConnectionStatusWrapper ? other : THROW_CCE();
		    if (!this.h2n_1.equals(tmp0_other_with_cast.h2n_1))
		      return false;
		    if (!equals(this.i2n_1, tmp0_other_with_cast.i2n_1))
		      return false;
		    return true;
		  };
		  function MetricsSuccessfullySent(retryNumber, timeOfFirstRetry) {
		    this.j2n_1 = retryNumber;
		    this.k2n_1 = timeOfFirstRetry;
		  }
		  protoOf(MetricsSuccessfullySent).toString = function () {
		    return 'MetricsSuccessfullySent(retryNumber=' + this.j2n_1 + ', timeOfFirstRetry=' + this.k2n_1 + ')';
		  };
		  protoOf(MetricsSuccessfullySent).hashCode = function () {
		    var result = this.j2n_1 == null ? 0 : this.j2n_1;
		    result = imul(result, 31) + (this.k2n_1 == null ? 0 : this.k2n_1) | 0;
		    return result;
		  };
		  protoOf(MetricsSuccessfullySent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MetricsSuccessfullySent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MetricsSuccessfullySent ? other : THROW_CCE();
		    if (!(this.j2n_1 == tmp0_other_with_cast.j2n_1))
		      return false;
		    if (!(this.k2n_1 == tmp0_other_with_cast.k2n_1))
		      return false;
		    return true;
		  };
		  function SocketSetSessionId(sessionId) {
		    this.l2n_1 = sessionId;
		  }
		  protoOf(SocketSetSessionId).toString = function () {
		    return toMaskedString(this, mapOf_0(to('sessionId', this.l2n_1)));
		  };
		  protoOf(SocketSetSessionId).hashCode = function () {
		    return getStringHashCode(this.l2n_1);
		  };
		  protoOf(SocketSetSessionId).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketSetSessionId))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketSetSessionId ? other : THROW_CCE();
		    if (!(this.l2n_1 === tmp0_other_with_cast.l2n_1))
		      return false;
		    return true;
		  };
		  function SessionError(code, message, cause) {
		    cause = cause === VOID ? null : cause;
		    Exception_init_$Init$_0(message, cause, this);
		    captureStack(this, SessionError);
		    this.w2m_1 = code;
		    this.x2m_1 = message;
		    this.y2m_1 = cause;
		  }
		  protoOf(SessionError).v2m = function () {
		    return this.w2m_1;
		  };
		  protoOf(SessionError).k8 = function () {
		    return this.x2m_1;
		  };
		  protoOf(SessionError).l8 = function () {
		    return this.y2m_1;
		  };
		  function SessionConnectError(code, message) {
		    SessionError.call(this, code, message);
		    captureStack(this, SessionConnectError);
		    this.p2n_1 = code;
		    this.q2n_1 = message;
		  }
		  protoOf(SessionConnectError).v2m = function () {
		    return this.p2n_1;
		  };
		  protoOf(SessionConnectError).k8 = function () {
		    return this.q2n_1;
		  };
		  function SocketEmitAction() {
		  }
		  function Companion_125() {
		  }
		  protoOf(Companion_125).b13 = function () {
		    return SocketEventSerializer_getInstance();
		  };
		  protoOf(Companion_125).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_126;
		  function SocketEvent() {
		  }
		  function SocketConversationEvent() {
		  }
		  function SocketStatus(status, reason, timestamp, retryNumber) {
		    this.r2n_1 = status;
		    this.s2n_1 = reason;
		    this.t2n_1 = timestamp;
		    this.u2n_1 = retryNumber;
		  }
		  protoOf(SocketStatus).toString = function () {
		    return 'SocketStatus(status=' + this.r2n_1.toString() + ', reason=' + toString_0(this.s2n_1) + ', timestamp=' + toString_0(this.t2n_1) + ', retryNumber=' + this.u2n_1 + ')';
		  };
		  protoOf(SocketStatus).hashCode = function () {
		    var result = this.r2n_1.hashCode();
		    result = imul(result, 31) + (this.s2n_1 == null ? 0 : this.s2n_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.t2n_1 == null ? 0 : hashCode(this.t2n_1)) | 0;
		    result = imul(result, 31) + (this.u2n_1 == null ? 0 : this.u2n_1) | 0;
		    return result;
		  };
		  protoOf(SocketStatus).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketStatus))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketStatus ? other : THROW_CCE();
		    if (!this.r2n_1.equals(tmp0_other_with_cast.r2n_1))
		      return false;
		    if (!equals(this.s2n_1, tmp0_other_with_cast.s2n_1))
		      return false;
		    if (!equals(this.t2n_1, tmp0_other_with_cast.t2n_1))
		      return false;
		    if (!(this.u2n_1 == tmp0_other_with_cast.u2n_1))
		      return false;
		    return true;
		  };
		  function SocketConnectEmptyTokenError() {
		  }
		  var SocketConnectEmptyTokenError_instance;
		  function SessionTimerEvent(originalAction) {
		    this.v2n_1 = originalAction;
		  }
		  protoOf(SessionTimerEvent).toString = function () {
		    return 'SessionTimerEvent(originalAction=' + toString(this.v2n_1) + ')';
		  };
		  protoOf(SessionTimerEvent).hashCode = function () {
		    return hashCode(this.v2n_1);
		  };
		  protoOf(SessionTimerEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionTimerEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionTimerEvent ? other : THROW_CCE();
		    if (!equals(this.v2n_1, tmp0_other_with_cast.v2n_1))
		      return false;
		    return true;
		  };
		  function Companion_126() {
		  }
		  protoOf(Companion_126).b13 = function () {
		    return $serializer_getInstance_146();
		  };
		  var Companion_instance_127;
		  function $serializer_146() {
		    $serializer_instance_146 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionInvalidTokenEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.w2n_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_146).xf = function () {
		    return this.w2n_1;
		  };
		  protoOf($serializer_146).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_146).zf = function (decoder) {
		    var tmp0_desc = this.w2n_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionInvalidTokenEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_146).x2n = function (encoder, value) {
		    var tmp0_desc = this.w2n_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.z2n_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.z2n_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.a2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.a2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.b2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.b2o_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.c2o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_146).yf = function (encoder, value) {
		    return this.x2n(encoder, value instanceof SessionInvalidTokenEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_146;
		  function $serializer_getInstance_146() {
		    if ($serializer_instance_146 == null)
		      new $serializer_146();
		    return $serializer_instance_146;
		  }
		  function SessionInvalidTokenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_146().w2n_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.y2n_1 = Unit_instance;
		    else
		      $this.y2n_1 = body;
		    if (0 === (seen1 & 2))
		      $this.z2n_1 = null;
		    else
		      $this.z2n_1 = id;
		    if (0 === (seen1 & 4))
		      $this.a2o_1 = null;
		    else
		      $this.a2o_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.b2o_1 = null;
		    else
		      $this.b2o_1 = from;
		    $this.c2o_1 = type;
		    return $this;
		  }
		  function SessionInvalidTokenEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionInvalidTokenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionInvalidTokenEvent)));
		  }
		  function SessionInvalidTokenEvent() {
		  }
		  protoOf(SessionInvalidTokenEvent).l26 = function () {
		    return this.z2n_1;
		  };
		  protoOf(SessionInvalidTokenEvent).m26 = function () {
		    return this.a2o_1;
		  };
		  protoOf(SessionInvalidTokenEvent).toString = function () {
		    return 'SessionInvalidTokenEvent(body=' + this.y2n_1.toString() + ', id=' + this.z2n_1 + ', cid=' + this.a2o_1 + ', from=' + this.b2o_1 + ', type=' + this.c2o_1 + ')';
		  };
		  protoOf(SessionInvalidTokenEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.z2n_1 == null ? 0 : this.z2n_1) | 0;
		    result = imul(result, 31) + (this.a2o_1 == null ? 0 : getStringHashCode(this.a2o_1)) | 0;
		    result = imul(result, 31) + (this.b2o_1 == null ? 0 : getStringHashCode(this.b2o_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.c2o_1) | 0;
		    return result;
		  };
		  protoOf(SessionInvalidTokenEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionInvalidTokenEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionInvalidTokenEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.z2n_1 == tmp0_other_with_cast.z2n_1))
		      return false;
		    if (!(this.a2o_1 == tmp0_other_with_cast.a2o_1))
		      return false;
		    if (!(this.b2o_1 == tmp0_other_with_cast.b2o_1))
		      return false;
		    if (!(this.c2o_1 === tmp0_other_with_cast.c2o_1))
		      return false;
		    return true;
		  };
		  function Companion_127() {
		  }
		  protoOf(Companion_127).b13 = function () {
		    return $serializer_getInstance_147();
		  };
		  var Companion_instance_128;
		  function $serializer_147() {
		    $serializer_instance_147 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionInvalidEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.d2o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_147).xf = function () {
		    return this.d2o_1;
		  };
		  protoOf($serializer_147).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_147).zf = function (decoder) {
		    var tmp0_desc = this.d2o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionInvalidEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_147).e2o = function (encoder, value) {
		    var tmp0_desc = this.d2o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.g2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.g2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.h2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.h2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.i2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.i2o_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.j2o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_147).yf = function (encoder, value) {
		    return this.e2o(encoder, value instanceof SessionInvalidEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_147;
		  function $serializer_getInstance_147() {
		    if ($serializer_instance_147 == null)
		      new $serializer_147();
		    return $serializer_instance_147;
		  }
		  function SessionInvalidEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_147().d2o_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.f2o_1 = Unit_instance;
		    else
		      $this.f2o_1 = body;
		    if (0 === (seen1 & 2))
		      $this.g2o_1 = null;
		    else
		      $this.g2o_1 = id;
		    if (0 === (seen1 & 4))
		      $this.h2o_1 = null;
		    else
		      $this.h2o_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.i2o_1 = null;
		    else
		      $this.i2o_1 = from;
		    $this.j2o_1 = type;
		    return $this;
		  }
		  function SessionInvalidEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionInvalidEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionInvalidEvent)));
		  }
		  function SessionInvalidEvent() {
		  }
		  protoOf(SessionInvalidEvent).l26 = function () {
		    return this.g2o_1;
		  };
		  protoOf(SessionInvalidEvent).m26 = function () {
		    return this.h2o_1;
		  };
		  protoOf(SessionInvalidEvent).toString = function () {
		    return 'SessionInvalidEvent(body=' + this.f2o_1.toString() + ', id=' + this.g2o_1 + ', cid=' + this.h2o_1 + ', from=' + this.i2o_1 + ', type=' + this.j2o_1 + ')';
		  };
		  protoOf(SessionInvalidEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.g2o_1 == null ? 0 : this.g2o_1) | 0;
		    result = imul(result, 31) + (this.h2o_1 == null ? 0 : getStringHashCode(this.h2o_1)) | 0;
		    result = imul(result, 31) + (this.i2o_1 == null ? 0 : getStringHashCode(this.i2o_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2o_1) | 0;
		    return result;
		  };
		  protoOf(SessionInvalidEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionInvalidEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionInvalidEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.g2o_1 == tmp0_other_with_cast.g2o_1))
		      return false;
		    if (!(this.h2o_1 == tmp0_other_with_cast.h2o_1))
		      return false;
		    if (!(this.i2o_1 == tmp0_other_with_cast.i2o_1))
		      return false;
		    if (!(this.j2o_1 === tmp0_other_with_cast.j2o_1))
		      return false;
		    return true;
		  };
		  function Companion_128() {
		  }
		  protoOf(Companion_128).b13 = function () {
		    return $serializer_getInstance_148();
		  };
		  var Companion_instance_129;
		  function $serializer_148() {
		    $serializer_instance_148 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionExpiredTokenEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.k2o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_148).xf = function () {
		    return this.k2o_1;
		  };
		  protoOf($serializer_148).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_148).zf = function (decoder) {
		    var tmp0_desc = this.k2o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionExpiredTokenEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_148).l2o = function (encoder, value) {
		    var tmp0_desc = this.k2o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.n2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.n2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.o2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.o2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.p2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.p2o_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.q2o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_148).yf = function (encoder, value) {
		    return this.l2o(encoder, value instanceof SessionExpiredTokenEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_148;
		  function $serializer_getInstance_148() {
		    if ($serializer_instance_148 == null)
		      new $serializer_148();
		    return $serializer_instance_148;
		  }
		  function SessionExpiredTokenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_148().k2o_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.m2o_1 = Unit_instance;
		    else
		      $this.m2o_1 = body;
		    if (0 === (seen1 & 2))
		      $this.n2o_1 = null;
		    else
		      $this.n2o_1 = id;
		    if (0 === (seen1 & 4))
		      $this.o2o_1 = null;
		    else
		      $this.o2o_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.p2o_1 = null;
		    else
		      $this.p2o_1 = from;
		    $this.q2o_1 = type;
		    return $this;
		  }
		  function SessionExpiredTokenEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionExpiredTokenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionExpiredTokenEvent)));
		  }
		  function SessionExpiredTokenEvent() {
		  }
		  protoOf(SessionExpiredTokenEvent).l26 = function () {
		    return this.n2o_1;
		  };
		  protoOf(SessionExpiredTokenEvent).m26 = function () {
		    return this.o2o_1;
		  };
		  protoOf(SessionExpiredTokenEvent).toString = function () {
		    return 'SessionExpiredTokenEvent(body=' + this.m2o_1.toString() + ', id=' + this.n2o_1 + ', cid=' + this.o2o_1 + ', from=' + this.p2o_1 + ', type=' + this.q2o_1 + ')';
		  };
		  protoOf(SessionExpiredTokenEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.n2o_1 == null ? 0 : this.n2o_1) | 0;
		    result = imul(result, 31) + (this.o2o_1 == null ? 0 : getStringHashCode(this.o2o_1)) | 0;
		    result = imul(result, 31) + (this.p2o_1 == null ? 0 : getStringHashCode(this.p2o_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.q2o_1) | 0;
		    return result;
		  };
		  protoOf(SessionExpiredTokenEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionExpiredTokenEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionExpiredTokenEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.n2o_1 == tmp0_other_with_cast.n2o_1))
		      return false;
		    if (!(this.o2o_1 == tmp0_other_with_cast.o2o_1))
		      return false;
		    if (!(this.p2o_1 == tmp0_other_with_cast.p2o_1))
		      return false;
		    if (!(this.q2o_1 === tmp0_other_with_cast.q2o_1))
		      return false;
		    return true;
		  };
		  function Companion_129() {
		  }
		  protoOf(Companion_129).b13 = function () {
		    return $serializer_getInstance_149();
		  };
		  var Companion_instance_130;
		  function $serializer_149() {
		    $serializer_instance_149 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionMaxOpenEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.r2o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_149).xf = function () {
		    return this.r2o_1;
		  };
		  protoOf($serializer_149).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_149).zf = function (decoder) {
		    var tmp0_desc = this.r2o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionMaxOpenEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_149).s2o = function (encoder, value) {
		    var tmp0_desc = this.r2o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.u2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.u2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.v2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.v2o_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.w2o_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.w2o_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.x2o_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_149).yf = function (encoder, value) {
		    return this.s2o(encoder, value instanceof SessionMaxOpenEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_149;
		  function $serializer_getInstance_149() {
		    if ($serializer_instance_149 == null)
		      new $serializer_149();
		    return $serializer_instance_149;
		  }
		  function SessionMaxOpenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_149().r2o_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.t2o_1 = Unit_instance;
		    else
		      $this.t2o_1 = body;
		    if (0 === (seen1 & 2))
		      $this.u2o_1 = null;
		    else
		      $this.u2o_1 = id;
		    if (0 === (seen1 & 4))
		      $this.v2o_1 = null;
		    else
		      $this.v2o_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.w2o_1 = null;
		    else
		      $this.w2o_1 = from;
		    $this.x2o_1 = type;
		    return $this;
		  }
		  function SessionMaxOpenEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionMaxOpenEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionMaxOpenEvent)));
		  }
		  function SessionMaxOpenEvent() {
		  }
		  protoOf(SessionMaxOpenEvent).l26 = function () {
		    return this.u2o_1;
		  };
		  protoOf(SessionMaxOpenEvent).m26 = function () {
		    return this.v2o_1;
		  };
		  protoOf(SessionMaxOpenEvent).toString = function () {
		    return 'SessionMaxOpenEvent(body=' + this.t2o_1.toString() + ', id=' + this.u2o_1 + ', cid=' + this.v2o_1 + ', from=' + this.w2o_1 + ', type=' + this.x2o_1 + ')';
		  };
		  protoOf(SessionMaxOpenEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.u2o_1 == null ? 0 : this.u2o_1) | 0;
		    result = imul(result, 31) + (this.v2o_1 == null ? 0 : getStringHashCode(this.v2o_1)) | 0;
		    result = imul(result, 31) + (this.w2o_1 == null ? 0 : getStringHashCode(this.w2o_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x2o_1) | 0;
		    return result;
		  };
		  protoOf(SessionMaxOpenEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionMaxOpenEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionMaxOpenEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.u2o_1 == tmp0_other_with_cast.u2o_1))
		      return false;
		    if (!(this.v2o_1 == tmp0_other_with_cast.v2o_1))
		      return false;
		    if (!(this.w2o_1 == tmp0_other_with_cast.w2o_1))
		      return false;
		    if (!(this.x2o_1 === tmp0_other_with_cast.x2o_1))
		      return false;
		    return true;
		  };
		  function Companion_130() {
		  }
		  protoOf(Companion_130).b13 = function () {
		    return $serializer_getInstance_150();
		  };
		  var Companion_instance_131;
		  function $serializer_150() {
		    $serializer_instance_150 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.AuthorizationErrorEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.y2o_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_150).xf = function () {
		    return this.y2o_1;
		  };
		  protoOf($serializer_150).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_150).zf = function (decoder) {
		    var tmp0_desc = this.y2o_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return AuthorizationErrorEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_150).z2o = function (encoder, value) {
		    var tmp0_desc = this.y2o_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.b2p_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.b2p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.c2p_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.c2p_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.d2p_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.d2p_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.e2p_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_150).yf = function (encoder, value) {
		    return this.z2o(encoder, value instanceof AuthorizationErrorEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_150;
		  function $serializer_getInstance_150() {
		    if ($serializer_instance_150 == null)
		      new $serializer_150();
		    return $serializer_instance_150;
		  }
		  function AuthorizationErrorEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_150().y2o_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.a2p_1 = Unit_instance;
		    else
		      $this.a2p_1 = body;
		    if (0 === (seen1 & 2))
		      $this.b2p_1 = null;
		    else
		      $this.b2p_1 = id;
		    if (0 === (seen1 & 4))
		      $this.c2p_1 = null;
		    else
		      $this.c2p_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.d2p_1 = null;
		    else
		      $this.d2p_1 = from;
		    $this.e2p_1 = type;
		    return $this;
		  }
		  function AuthorizationErrorEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return AuthorizationErrorEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(AuthorizationErrorEvent)));
		  }
		  function AuthorizationErrorEvent() {
		  }
		  protoOf(AuthorizationErrorEvent).l26 = function () {
		    return this.b2p_1;
		  };
		  protoOf(AuthorizationErrorEvent).m26 = function () {
		    return this.c2p_1;
		  };
		  protoOf(AuthorizationErrorEvent).toString = function () {
		    return 'AuthorizationErrorEvent(body=' + this.a2p_1.toString() + ', id=' + this.b2p_1 + ', cid=' + this.c2p_1 + ', from=' + this.d2p_1 + ', type=' + this.e2p_1 + ')';
		  };
		  protoOf(AuthorizationErrorEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.b2p_1 == null ? 0 : this.b2p_1) | 0;
		    result = imul(result, 31) + (this.c2p_1 == null ? 0 : getStringHashCode(this.c2p_1)) | 0;
		    result = imul(result, 31) + (this.d2p_1 == null ? 0 : getStringHashCode(this.d2p_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e2p_1) | 0;
		    return result;
		  };
		  protoOf(AuthorizationErrorEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AuthorizationErrorEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof AuthorizationErrorEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.b2p_1 == tmp0_other_with_cast.b2p_1))
		      return false;
		    if (!(this.c2p_1 == tmp0_other_with_cast.c2p_1))
		      return false;
		    if (!(this.d2p_1 == tmp0_other_with_cast.d2p_1))
		      return false;
		    if (!(this.e2p_1 === tmp0_other_with_cast.e2p_1))
		      return false;
		    return true;
		  };
		  function SessionEmptyTokenError(code, message) {
		    code = code === VOID ? 'session:error:empty-token' : code;
		    message = message === VOID ? 'You provided an empty token. Please provide a valid token.' : message;
		    SessionError.call(this, code, message);
		    captureStack(this, SessionEmptyTokenError);
		    this.i2p_1 = code;
		    this.j2p_1 = message;
		  }
		  protoOf(SessionEmptyTokenError).v2m = function () {
		    return this.i2p_1;
		  };
		  protoOf(SessionEmptyTokenError).k8 = function () {
		    return this.j2p_1;
		  };
		  protoOf(SessionEmptyTokenError).toString = function () {
		    return 'SessionEmptyTokenError(code=' + this.i2p_1 + ', message=' + this.j2p_1 + ')';
		  };
		  protoOf(SessionEmptyTokenError).hashCode = function () {
		    var result = getStringHashCode(this.i2p_1);
		    result = imul(result, 31) + getStringHashCode(this.j2p_1) | 0;
		    return result;
		  };
		  protoOf(SessionEmptyTokenError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionEmptyTokenError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionEmptyTokenError ? other : THROW_CCE();
		    if (!(this.i2p_1 === tmp0_other_with_cast.i2p_1))
		      return false;
		    if (!(this.j2p_1 === tmp0_other_with_cast.j2p_1))
		      return false;
		    return true;
		  };
		  function SessionSocketTransportError(code, message) {
		    code = code === VOID ? 'session:error:websocket-transport-invalid' : code;
		    message = message === VOID ? 'Session failed due to an invalid websocket transport.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionSocketTransportError);
		    this.p2p_1 = code;
		    this.q2p_1 = message;
		  }
		  protoOf(SessionSocketTransportError).v2m = function () {
		    return this.p2p_1;
		  };
		  protoOf(SessionSocketTransportError).k8 = function () {
		    return this.q2p_1;
		  };
		  protoOf(SessionSocketTransportError).toString = function () {
		    return 'SessionSocketTransportError(code=' + this.p2p_1 + ', message=' + this.q2p_1 + ')';
		  };
		  protoOf(SessionSocketTransportError).hashCode = function () {
		    var result = getStringHashCode(this.p2p_1);
		    result = imul(result, 31) + getStringHashCode(this.q2p_1) | 0;
		    return result;
		  };
		  protoOf(SessionSocketTransportError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionSocketTransportError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionSocketTransportError ? other : THROW_CCE();
		    if (!(this.p2p_1 === tmp0_other_with_cast.p2p_1))
		      return false;
		    if (!(this.q2p_1 === tmp0_other_with_cast.q2p_1))
		      return false;
		    return true;
		  };
		  function SessionTimeoutError(code, message) {
		    code = code === VOID ? 'session:error:timeout' : code;
		    message = message === VOID ? 'Session failed due to a timeout expiration.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionTimeoutError);
		    this.w2p_1 = code;
		    this.x2p_1 = message;
		  }
		  protoOf(SessionTimeoutError).v2m = function () {
		    return this.w2p_1;
		  };
		  protoOf(SessionTimeoutError).k8 = function () {
		    return this.x2p_1;
		  };
		  protoOf(SessionTimeoutError).toString = function () {
		    return 'SessionTimeoutError(code=' + this.w2p_1 + ', message=' + this.x2p_1 + ')';
		  };
		  protoOf(SessionTimeoutError).hashCode = function () {
		    var result = getStringHashCode(this.w2p_1);
		    result = imul(result, 31) + getStringHashCode(this.x2p_1) | 0;
		    return result;
		  };
		  protoOf(SessionTimeoutError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionTimeoutError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionTimeoutError ? other : THROW_CCE();
		    if (!(this.w2p_1 === tmp0_other_with_cast.w2p_1))
		      return false;
		    if (!(this.x2p_1 === tmp0_other_with_cast.x2p_1))
		      return false;
		    return true;
		  };
		  function SessionInvalidError(code, message) {
		    code = code === VOID ? 'session:error:invalid-session' : code;
		    message = message === VOID ? 'The request failed due to an invalid session. Please establish a valid session and try again.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionInvalidError);
		    this.d2q_1 = code;
		    this.e2q_1 = message;
		  }
		  protoOf(SessionInvalidError).v2m = function () {
		    return this.d2q_1;
		  };
		  protoOf(SessionInvalidError).k8 = function () {
		    return this.e2q_1;
		  };
		  protoOf(SessionInvalidError).toString = function () {
		    return 'SessionInvalidError(code=' + this.d2q_1 + ', message=' + this.e2q_1 + ')';
		  };
		  protoOf(SessionInvalidError).hashCode = function () {
		    var result = getStringHashCode(this.d2q_1);
		    result = imul(result, 31) + getStringHashCode(this.e2q_1) | 0;
		    return result;
		  };
		  protoOf(SessionInvalidError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionInvalidError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionInvalidError ? other : THROW_CCE();
		    if (!(this.d2q_1 === tmp0_other_with_cast.d2q_1))
		      return false;
		    if (!(this.e2q_1 === tmp0_other_with_cast.e2q_1))
		      return false;
		    return true;
		  };
		  function SessionInvalidTokenError(code, message) {
		    code = code === VOID ? 'session:error:invalid-token' : code;
		    message = message === VOID ? 'You provided an invalid token. Please provide a valid token.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionInvalidTokenError);
		    this.k2q_1 = code;
		    this.l2q_1 = message;
		  }
		  protoOf(SessionInvalidTokenError).v2m = function () {
		    return this.k2q_1;
		  };
		  protoOf(SessionInvalidTokenError).k8 = function () {
		    return this.l2q_1;
		  };
		  protoOf(SessionInvalidTokenError).toString = function () {
		    return 'SessionInvalidTokenError(code=' + this.k2q_1 + ', message=' + this.l2q_1 + ')';
		  };
		  protoOf(SessionInvalidTokenError).hashCode = function () {
		    var result = getStringHashCode(this.k2q_1);
		    result = imul(result, 31) + getStringHashCode(this.l2q_1) | 0;
		    return result;
		  };
		  protoOf(SessionInvalidTokenError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionInvalidTokenError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionInvalidTokenError ? other : THROW_CCE();
		    if (!(this.k2q_1 === tmp0_other_with_cast.k2q_1))
		      return false;
		    if (!(this.l2q_1 === tmp0_other_with_cast.l2q_1))
		      return false;
		    return true;
		  };
		  function AuthorizationError(code, message) {
		    code = code === VOID ? 'system:error:permission' : code;
		    message = message === VOID ? 'Permission denied. Please provide a valid token.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, AuthorizationError);
		    this.r2q_1 = code;
		    this.s2q_1 = message;
		  }
		  protoOf(AuthorizationError).v2m = function () {
		    return this.r2q_1;
		  };
		  protoOf(AuthorizationError).k8 = function () {
		    return this.s2q_1;
		  };
		  protoOf(AuthorizationError).toString = function () {
		    return 'AuthorizationError(code=' + this.r2q_1 + ', message=' + this.s2q_1 + ')';
		  };
		  protoOf(AuthorizationError).hashCode = function () {
		    var result = getStringHashCode(this.r2q_1);
		    result = imul(result, 31) + getStringHashCode(this.s2q_1) | 0;
		    return result;
		  };
		  protoOf(AuthorizationError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AuthorizationError))
		      return false;
		    var tmp0_other_with_cast = other instanceof AuthorizationError ? other : THROW_CCE();
		    if (!(this.r2q_1 === tmp0_other_with_cast.r2q_1))
		      return false;
		    if (!(this.s2q_1 === tmp0_other_with_cast.s2q_1))
		      return false;
		    return true;
		  };
		  function SessionExpiredTokenError(code, message) {
		    code = code === VOID ? 'session:error:expired-token' : code;
		    message = message === VOID ? 'You provided an expired token. Please provide a valid token.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionExpiredTokenError);
		    this.y2q_1 = code;
		    this.z2q_1 = message;
		  }
		  protoOf(SessionExpiredTokenError).v2m = function () {
		    return this.y2q_1;
		  };
		  protoOf(SessionExpiredTokenError).k8 = function () {
		    return this.z2q_1;
		  };
		  protoOf(SessionExpiredTokenError).toString = function () {
		    return 'SessionExpiredTokenError(code=' + this.y2q_1 + ', message=' + this.z2q_1 + ')';
		  };
		  protoOf(SessionExpiredTokenError).hashCode = function () {
		    var result = getStringHashCode(this.y2q_1);
		    result = imul(result, 31) + getStringHashCode(this.z2q_1) | 0;
		    return result;
		  };
		  protoOf(SessionExpiredTokenError).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionExpiredTokenError))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionExpiredTokenError ? other : THROW_CCE();
		    if (!(this.y2q_1 === tmp0_other_with_cast.y2q_1))
		      return false;
		    if (!(this.z2q_1 === tmp0_other_with_cast.z2q_1))
		      return false;
		    return true;
		  };
		  function SessionMaxOpenSessions(code, message) {
		    code = code === VOID ? 'session:error:max-open-sessions-permitted' : code;
		    message = message === VOID ? 'The maximum amount of open sessions has been established. Please delete them by logging out and try again.' : message;
		    SessionConnectError.call(this, code, message);
		    captureStack(this, SessionMaxOpenSessions);
		    this.f2r_1 = code;
		    this.g2r_1 = message;
		  }
		  protoOf(SessionMaxOpenSessions).v2m = function () {
		    return this.f2r_1;
		  };
		  protoOf(SessionMaxOpenSessions).k8 = function () {
		    return this.g2r_1;
		  };
		  protoOf(SessionMaxOpenSessions).toString = function () {
		    return 'SessionMaxOpenSessions(code=' + this.f2r_1 + ', message=' + this.g2r_1 + ')';
		  };
		  protoOf(SessionMaxOpenSessions).hashCode = function () {
		    var result = getStringHashCode(this.f2r_1);
		    result = imul(result, 31) + getStringHashCode(this.g2r_1) | 0;
		    return result;
		  };
		  protoOf(SessionMaxOpenSessions).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionMaxOpenSessions))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionMaxOpenSessions ? other : THROW_CCE();
		    if (!(this.f2r_1 === tmp0_other_with_cast.f2r_1))
		      return false;
		    if (!(this.g2r_1 === tmp0_other_with_cast.g2r_1))
		      return false;
		    return true;
		  };
		  function SocketEventSerializer() {
		    SocketEventSerializer_instance = this;
		    JsonContentPolymorphicSerializer.call(this, getKClass(SocketEvent));
		  }
		  protoOf(SocketEventSerializer).z12 = function (element) {
		    var tmp0_safe_receiver = get_jsonObject(element).e13('type');
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
		    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h13();
		    var type = tmp2_elvis_lhs == null ? '' : tmp2_elvis_lhs;
		    var tmp;
		    if (type === 'session:success') {
		      tmp = Companion_instance_93.b13();
		    } else {
		      if (type === 'member:media') {
		        tmp = Companion_instance_98.b13();
		      } else {
		        if (type === CSConversationEventType_MEMBER_INVITED_getInstance().x1q_1) {
		          tmp = Companion_instance_97.b13();
		        } else {
		          if (type === CSConversationEventType_MEMBER_JOINED_getInstance().x1q_1) {
		            tmp = Companion_instance_95.b13();
		          } else {
		            if (type === CSConversationEventType_MEMBER_LEFT_getInstance().x1q_1) {
		              tmp = Companion_instance_99.b13();
		            } else {
		              if (type === CSConversationEventType_MESSAGE_getInstance().x1q_1) {
		                tmp = Companion_instance_101.b13();
		              } else {
		                if (type === CSConversationEventType_EPHEMERAL_getInstance().x1q_1) {
		                  tmp = Companion_instance_102.b13();
		                } else {
		                  if (type === CSConversationEventType_EVENT_DELETE_getInstance().x1q_1) {
		                    tmp = Companion_instance_103.b13();
		                  } else {
		                    if (type === CSConversationEventType_MESSAGE_DELIVERED_getInstance().x1q_1) {
		                      tmp = Companion_instance_104.b13();
		                    } else {
		                      if (type === CSConversationEventType_MESSAGE_REJECTED_getInstance().x1q_1) {
		                        tmp = Companion_instance_105.b13();
		                      } else {
		                        if (type === CSConversationEventType_MESSAGE_SUBMITTED_getInstance().x1q_1) {
		                          tmp = Companion_instance_106.b13();
		                        } else {
		                          if (type === CSConversationEventType_MESSAGE_UNDELIVERABLE_getInstance().x1q_1) {
		                            tmp = Companion_instance_107.b13();
		                          } else {
		                            if (type === CSConversationEventType_MESSAGE_SEEN_getInstance().x1q_1) {
		                              tmp = Companion_instance_108.b13();
		                            } else {
		                              if (type === 'rtc:answer') {
		                                tmp = Companion_instance_96.b13();
		                              } else {
		                                if (type === 'rtc:hangup') {
		                                  tmp = Companion_instance_91.b13();
		                                } else {
		                                  if (type === 'rtc:transfer') {
		                                    tmp = Companion_instance_92.b13();
		                                  } else {
		                                    if (type === 'audio:say') {
		                                      tmp = Companion_instance_83.b13();
		                                    } else {
		                                      if (type === 'audio:say:done') {
		                                        tmp = Companion_instance_109.b13();
		                                      } else {
		                                        if (type === 'audio:mute:on') {
		                                          tmp = Companion_instance_86.b13();
		                                        } else {
		                                          if (type === 'audio:mute:off') {
		                                            tmp = Companion_instance_87.b13();
		                                          } else {
		                                            if (type === 'audio:earmuff:on') {
		                                              tmp = Companion_instance_88.b13();
		                                            } else {
		                                              if (type === 'audio:earmuff:off') {
		                                                tmp = Companion_instance_89.b13();
		                                              } else {
		                                                if (type === 'audio:dtmf') {
		                                                  tmp = Companion_instance_90.b13();
		                                                } else {
		                                                  if (type === 'leg:status:update') {
		                                                    tmp = Companion_instance_84.b13();
		                                                  } else {
		                                                    if (type === 'session:update-token:success') {
		                                                      tmp = Companion_instance_132.b13();
		                                                    } else {
		                                                      if (type === 'session:logged-out') {
		                                                        tmp = Companion_instance_133.b13();
		                                                      } else {
		                                                        if (type === 'session:terminated') {
		                                                          tmp = Companion_instance_134.b13();
		                                                        } else {
		                                                          if (type === 'session:invalid') {
		                                                            tmp = Companion_instance_128.b13();
		                                                          } else {
		                                                            if (type === 'session:error:invalid') {
		                                                              tmp = Companion_instance_128.b13();
		                                                            } else {
		                                                              if (type === 'system:error:expired-token') {
		                                                                tmp = Companion_instance_129.b13();
		                                                              } else {
		                                                                switch (type) {
		                                                                  case 'system:error:invalid-token':
		                                                                  case 'user:error:invalid-user':
		                                                                    tmp = Companion_instance_127.b13();
		                                                                    break;
		                                                                  default:
		                                                                    if (type === 'session:error:max-open-sessions') {
		                                                                      tmp = Companion_instance_130.b13();
		                                                                    } else {
		                                                                      if (type === 'system:error:permission') {
		                                                                        tmp = Companion_instance_131.b13();
		                                                                      } else {
		                                                                        // Inline function 'kotlin.takeIf' call
		                                                                        // Inline function 'kotlin.contracts.contract' call
		                                                                        var tmp_0;
		                                                                        // Inline function 'com.vonage.clientcore.core.actions.SocketEventSerializer.selectDeserializer.<anonymous>' call
		                                                                        if (startsWith(type, CSConversationEventType_CUSTOM_getInstance().x1q_1)) {
		                                                                          tmp_0 = type;
		                                                                        } else {
		                                                                          tmp_0 = null;
		                                                                        }
		                                                                        if (type === tmp_0) {
		                                                                          tmp = Companion_instance_110.b13();
		                                                                        } else {
		                                                                          throw new IgnoredSerializerException(type);
		                                                                        }
		                                                                      }
		                                                                    }

		                                                                    break;
		                                                                }
		                                                              }
		                                                            }
		                                                          }
		                                                        }
		                                                      }
		                                                    }
		                                                  }
		                                                }
		                                              }
		                                            }
		                                          }
		                                        }
		                                      }
		                                    }
		                                  }
		                                }
		                              }
		                            }
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  var SocketEventSerializer_instance;
		  function SocketEventSerializer_getInstance() {
		    if (SocketEventSerializer_instance == null)
		      new SocketEventSerializer();
		    return SocketEventSerializer_instance;
		  }
		  function Companion_131() {
		  }
		  protoOf(Companion_131).b13 = function () {
		    return $serializer_getInstance_151();
		  };
		  var Companion_instance_132;
		  function $serializer_151() {
		    $serializer_instance_151 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionUpdateTokenSuccessEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.j2r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_151).xf = function () {
		    return this.j2r_1;
		  };
		  protoOf($serializer_151).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_151).zf = function (decoder) {
		    var tmp0_desc = this.j2r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionUpdateTokenSuccessEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_151).k2r = function (encoder, value) {
		    var tmp0_desc = this.j2r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.m2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.m2r_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.n2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.n2r_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.o2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.o2r_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.p2r_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_151).yf = function (encoder, value) {
		    return this.k2r(encoder, value instanceof SessionUpdateTokenSuccessEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_151;
		  function $serializer_getInstance_151() {
		    if ($serializer_instance_151 == null)
		      new $serializer_151();
		    return $serializer_instance_151;
		  }
		  function SessionUpdateTokenSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_151().j2r_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.l2r_1 = Unit_instance;
		    else
		      $this.l2r_1 = body;
		    if (0 === (seen1 & 2))
		      $this.m2r_1 = null;
		    else
		      $this.m2r_1 = id;
		    if (0 === (seen1 & 4))
		      $this.n2r_1 = null;
		    else
		      $this.n2r_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.o2r_1 = null;
		    else
		      $this.o2r_1 = from;
		    $this.p2r_1 = type;
		    return $this;
		  }
		  function SessionUpdateTokenSuccessEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionUpdateTokenSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionUpdateTokenSuccessEvent)));
		  }
		  function SessionUpdateTokenSuccessEvent() {
		  }
		  protoOf(SessionUpdateTokenSuccessEvent).l26 = function () {
		    return this.m2r_1;
		  };
		  protoOf(SessionUpdateTokenSuccessEvent).m26 = function () {
		    return this.n2r_1;
		  };
		  protoOf(SessionUpdateTokenSuccessEvent).toString = function () {
		    return 'SessionUpdateTokenSuccessEvent(body=' + this.l2r_1.toString() + ', id=' + this.m2r_1 + ', cid=' + this.n2r_1 + ', from=' + this.o2r_1 + ', type=' + this.p2r_1 + ')';
		  };
		  protoOf(SessionUpdateTokenSuccessEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.m2r_1 == null ? 0 : this.m2r_1) | 0;
		    result = imul(result, 31) + (this.n2r_1 == null ? 0 : getStringHashCode(this.n2r_1)) | 0;
		    result = imul(result, 31) + (this.o2r_1 == null ? 0 : getStringHashCode(this.o2r_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.p2r_1) | 0;
		    return result;
		  };
		  protoOf(SessionUpdateTokenSuccessEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionUpdateTokenSuccessEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionUpdateTokenSuccessEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.m2r_1 == tmp0_other_with_cast.m2r_1))
		      return false;
		    if (!(this.n2r_1 == tmp0_other_with_cast.n2r_1))
		      return false;
		    if (!(this.o2r_1 == tmp0_other_with_cast.o2r_1))
		      return false;
		    if (!(this.p2r_1 === tmp0_other_with_cast.p2r_1))
		      return false;
		    return true;
		  };
		  function Companion_132() {
		  }
		  protoOf(Companion_132).b13 = function () {
		    return $serializer_getInstance_152();
		  };
		  var Companion_instance_133;
		  function $serializer_152() {
		    $serializer_instance_152 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionLogoutSuccessEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.q2r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_152).xf = function () {
		    return this.q2r_1;
		  };
		  protoOf($serializer_152).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_152).zf = function (decoder) {
		    var tmp0_desc = this.q2r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionLogoutSuccessEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_152).r2r = function (encoder, value) {
		    var tmp0_desc = this.q2r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.t2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.t2r_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.u2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.u2r_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.v2r_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.v2r_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.w2r_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_152).yf = function (encoder, value) {
		    return this.r2r(encoder, value instanceof SessionLogoutSuccessEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_152;
		  function $serializer_getInstance_152() {
		    if ($serializer_instance_152 == null)
		      new $serializer_152();
		    return $serializer_instance_152;
		  }
		  function SessionLogoutSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_152().q2r_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.s2r_1 = Unit_instance;
		    else
		      $this.s2r_1 = body;
		    if (0 === (seen1 & 2))
		      $this.t2r_1 = null;
		    else
		      $this.t2r_1 = id;
		    if (0 === (seen1 & 4))
		      $this.u2r_1 = null;
		    else
		      $this.u2r_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.v2r_1 = null;
		    else
		      $this.v2r_1 = from;
		    $this.w2r_1 = type;
		    return $this;
		  }
		  function SessionLogoutSuccessEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionLogoutSuccessEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionLogoutSuccessEvent)));
		  }
		  function SessionLogoutSuccessEvent() {
		  }
		  protoOf(SessionLogoutSuccessEvent).l26 = function () {
		    return this.t2r_1;
		  };
		  protoOf(SessionLogoutSuccessEvent).m26 = function () {
		    return this.u2r_1;
		  };
		  protoOf(SessionLogoutSuccessEvent).toString = function () {
		    return 'SessionLogoutSuccessEvent(body=' + this.s2r_1.toString() + ', id=' + this.t2r_1 + ', cid=' + this.u2r_1 + ', from=' + this.v2r_1 + ', type=' + this.w2r_1 + ')';
		  };
		  protoOf(SessionLogoutSuccessEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.t2r_1 == null ? 0 : this.t2r_1) | 0;
		    result = imul(result, 31) + (this.u2r_1 == null ? 0 : getStringHashCode(this.u2r_1)) | 0;
		    result = imul(result, 31) + (this.v2r_1 == null ? 0 : getStringHashCode(this.v2r_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w2r_1) | 0;
		    return result;
		  };
		  protoOf(SessionLogoutSuccessEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionLogoutSuccessEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionLogoutSuccessEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.t2r_1 == tmp0_other_with_cast.t2r_1))
		      return false;
		    if (!(this.u2r_1 == tmp0_other_with_cast.u2r_1))
		      return false;
		    if (!(this.v2r_1 == tmp0_other_with_cast.v2r_1))
		      return false;
		    if (!(this.w2r_1 === tmp0_other_with_cast.w2r_1))
		      return false;
		    return true;
		  };
		  function Companion_133() {
		  }
		  protoOf(Companion_133).b13 = function () {
		    return $serializer_getInstance_153();
		  };
		  var Companion_instance_134;
		  function $serializer_153() {
		    $serializer_instance_153 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.actions.SessionTerminatedEvent', this, 5);
		    tmp0_serialDesc.rq('body', true);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('cid', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('type', false);
		    this.x2r_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_153).xf = function () {
		    return this.x2r_1;
		  };
		  protoOf($serializer_153).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [UnitSerializer_getInstance(), get_nullable(IntSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_153).zf = function (decoder) {
		    var tmp0_desc = this.x2r_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_input = decoder.hj(tmp0_desc);
		    if (tmp9_input.xj()) {
		      tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp9_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp9_input.tj(tmp0_desc, 0, UnitSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp9_input.vj(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp9_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp9_input.vj(tmp0_desc, 3, StringSerializer_getInstance(), tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp9_input.rj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp9_input.ij(tmp0_desc);
		    return SessionTerminatedEvent_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
		  };
		  protoOf($serializer_153).y2r = function (encoder, value) {
		    var tmp0_desc = this.x2r_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp;
		    if (tmp1_output.el(tmp0_desc, 0)) {
		      tmp = true;
		    } else {
		      tmp = !equals(Unit_instance, Unit_instance);
		    }
		    if (tmp) {
		      var tmp_0 = UnitSerializer_getInstance();
		      tmp1_output.yk(tmp0_desc, 0, tmp_0, Unit_instance);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.a2s_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, IntSerializer_getInstance(), value.a2s_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.b2s_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.b2s_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.c2s_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, StringSerializer_getInstance(), value.c2s_1);
		    }
		    tmp1_output.wk(tmp0_desc, 4, value.d2s_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_153).yf = function (encoder, value) {
		    return this.y2r(encoder, value instanceof SessionTerminatedEvent ? value : THROW_CCE());
		  };
		  var $serializer_instance_153;
		  function $serializer_getInstance_153() {
		    if ($serializer_instance_153 == null)
		      new $serializer_153();
		    return $serializer_instance_153;
		  }
		  function SessionTerminatedEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, $this) {
		    if (!(16 === (16 & seen1))) {
		      throwMissingFieldException(seen1, 16, $serializer_getInstance_153().x2r_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.z2r_1 = Unit_instance;
		    else
		      $this.z2r_1 = body;
		    if (0 === (seen1 & 2))
		      $this.a2s_1 = null;
		    else
		      $this.a2s_1 = id;
		    if (0 === (seen1 & 4))
		      $this.b2s_1 = null;
		    else
		      $this.b2s_1 = cid;
		    if (0 === (seen1 & 8))
		      $this.c2s_1 = null;
		    else
		      $this.c2s_1 = from;
		    $this.d2s_1 = type;
		    return $this;
		  }
		  function SessionTerminatedEvent_init_$Create$(seen1, body, id, cid, from, type, serializationConstructorMarker) {
		    return SessionTerminatedEvent_init_$Init$(seen1, body, id, cid, from, type, serializationConstructorMarker, objectCreate(protoOf(SessionTerminatedEvent)));
		  }
		  function SessionTerminatedEvent() {
		  }
		  protoOf(SessionTerminatedEvent).l26 = function () {
		    return this.a2s_1;
		  };
		  protoOf(SessionTerminatedEvent).m26 = function () {
		    return this.b2s_1;
		  };
		  protoOf(SessionTerminatedEvent).toString = function () {
		    return 'SessionTerminatedEvent(body=' + this.z2r_1.toString() + ', id=' + this.a2s_1 + ', cid=' + this.b2s_1 + ', from=' + this.c2s_1 + ', type=' + this.d2s_1 + ')';
		  };
		  protoOf(SessionTerminatedEvent).hashCode = function () {
		    var result = hashCode(Unit_instance);
		    result = imul(result, 31) + (this.a2s_1 == null ? 0 : this.a2s_1) | 0;
		    result = imul(result, 31) + (this.b2s_1 == null ? 0 : getStringHashCode(this.b2s_1)) | 0;
		    result = imul(result, 31) + (this.c2s_1 == null ? 0 : getStringHashCode(this.c2s_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.d2s_1) | 0;
		    return result;
		  };
		  protoOf(SessionTerminatedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionTerminatedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionTerminatedEvent ? other : THROW_CCE();
		    if (!equals(Unit_instance, Unit_instance))
		      return false;
		    if (!(this.a2s_1 == tmp0_other_with_cast.a2s_1))
		      return false;
		    if (!(this.b2s_1 == tmp0_other_with_cast.b2s_1))
		      return false;
		    if (!(this.c2s_1 == tmp0_other_with_cast.c2s_1))
		      return false;
		    if (!(this.d2s_1 === tmp0_other_with_cast.d2s_1))
		      return false;
		    return true;
		  };
		  function SocketConnectionStatus_Disconnected_getInstance() {
		    SocketConnectionStatus_initEntries();
		    return SocketConnectionStatus_Disconnected_instance;
		  }
		  function SocketConnectionStatus_Reconnecting_getInstance() {
		    SocketConnectionStatus_initEntries();
		    return SocketConnectionStatus_Reconnecting_instance;
		  }
		  function SocketConnectionStatus_Connected_getInstance() {
		    SocketConnectionStatus_initEntries();
		    return SocketConnectionStatus_Connected_instance;
		  }
		  function SocketConnectionFailedReason_ServerDisconnected_getInstance() {
		    SocketConnectionFailedReason_initEntries();
		    return SocketConnectionFailedReason_ServerDisconnected_instance;
		  }
		  function SocketConnectionFailedReason_ClientDisconnected_getInstance() {
		    SocketConnectionFailedReason_initEntries();
		    return SocketConnectionFailedReason_ClientDisconnected_instance;
		  }
		  function SocketConnectionFailedReason_ClientNetworkError_getInstance() {
		    SocketConnectionFailedReason_initEntries();
		    return SocketConnectionFailedReason_ClientNetworkError_instance;
		  }
		  function SocketConnectionFailedReason_PingTimeout_getInstance() {
		    SocketConnectionFailedReason_initEntries();
		    return SocketConnectionFailedReason_PingTimeout_instance;
		  }
		  function ChatAPI() {
		  }
		  function ChatAPIImpl$o$onConversationEvent$lambda(this$0, $event) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        this$0.e2s_1.g1g(Action_init_$Create$(new PostConversationEventRequest($event.g2s(), memberResponse.y1p_1, CSConversationEventType_MESSAGE_DELIVERED_getInstance(), new UpdateEventStateRequestBody($event.l26()))));
		      }
		      return Unit_instance;
		    };
		  }
		  function buildMessageEventBody($this, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template) {
		    var tmp;
		    if (text == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		      tmp = new TextBody(text);
		    }
		    var tmp2_elvis_lhs = tmp;
		    var tmp_0;
		    if (tmp2_elvis_lhs == null) {
		      var tmp_1;
		      if (imageUrl == null) {
		        tmp_1 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_1 = new ImageBody(new UrlObject(imageUrl));
		      }
		      tmp_0 = tmp_1;
		    } else {
		      tmp_0 = tmp2_elvis_lhs;
		    }
		    var tmp4_elvis_lhs = tmp_0;
		    var tmp_2;
		    if (tmp4_elvis_lhs == null) {
		      var tmp_3;
		      if (videoUrl == null) {
		        tmp_3 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_3 = new VideoBody(new UrlObject(videoUrl));
		      }
		      tmp_2 = tmp_3;
		    } else {
		      tmp_2 = tmp4_elvis_lhs;
		    }
		    var tmp6_elvis_lhs = tmp_2;
		    var tmp_4;
		    if (tmp6_elvis_lhs == null) {
		      var tmp_5;
		      if (audioUrl == null) {
		        tmp_5 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_5 = new AudioBody(new UrlObject(audioUrl));
		      }
		      tmp_4 = tmp_5;
		    } else {
		      tmp_4 = tmp6_elvis_lhs;
		    }
		    var tmp8_elvis_lhs = tmp_4;
		    var tmp_6;
		    if (tmp8_elvis_lhs == null) {
		      var tmp_7;
		      if (fileUrl == null) {
		        tmp_7 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_7 = new FileBody(new UrlObject(fileUrl));
		      }
		      tmp_6 = tmp_7;
		    } else {
		      tmp_6 = tmp8_elvis_lhs;
		    }
		    var tmp10_elvis_lhs = tmp_6;
		    var tmp_8;
		    if (tmp10_elvis_lhs == null) {
		      var tmp_9;
		      if (vCardUrl == null) {
		        tmp_9 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_9 = new VCardBody(new UrlObject(vCardUrl));
		      }
		      tmp_8 = tmp_9;
		    } else {
		      tmp_8 = tmp10_elvis_lhs;
		    }
		    var tmp12_elvis_lhs = tmp_8;
		    var tmp_10;
		    if (tmp12_elvis_lhs == null) {
		      var tmp_11;
		      if (customBody == null) {
		        tmp_11 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_11 = new CustomBody(get_jsonObject(Default_getInstance().g11(customBody)));
		      }
		      tmp_10 = tmp_11;
		    } else {
		      tmp_10 = tmp12_elvis_lhs;
		    }
		    var tmp14_elvis_lhs = tmp_10;
		    var tmp_12;
		    if (tmp14_elvis_lhs == null) {
		      var tmp_13;
		      if (location == null) {
		        tmp_13 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_13 = Companion_instance_119.x2j(location);
		      }
		      tmp_12 = tmp_13;
		    } else {
		      tmp_12 = tmp14_elvis_lhs;
		    }
		    var tmp16_elvis_lhs = tmp_12;
		    var tmp_14;
		    if (tmp16_elvis_lhs == null) {
		      var tmp_15;
		      if (template == null) {
		        tmp_15 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.buildMessageEventBody.<anonymous>' call
		        tmp_15 = Companion_instance_118.r2j(template);
		      }
		      tmp_14 = tmp_15;
		    } else {
		      tmp_14 = tmp16_elvis_lhs;
		    }
		    return tmp_14;
		  }
		  function ChatAPIImpl$1(this$0) {
		    this.h2s_1 = this$0;
		  }
		  protoOf(ChatAPIImpl$1).i2s = function (event) {
		    var tmp0_safe_receiver = this.h2s_1.f2s_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      tmp0_safe_receiver.i2s(event);
		    }
		    if (isInterface(event, MessageEvent_0)) {
		      var tmp = new GetMyMemberRequest(event.g2s());
		      this.h2s_1.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$o$onConversationEvent$lambda(this.h2s_1, event))));
		    }
		  };
		  function ChatAPIImpl$createConversation$lambda($callback) {
		    return function (it) {
		      if (it instanceof ConversationCreate) {
		        $callback(null, it.p1r_1);
		      } else {
		        invokeCallbackWithError(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$updateConversation$lambda($callback) {
		    return function (response) {
		      if (response instanceof GetConversation) {
		        $callback(null, Companion_instance_139.q2s(response));
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$joinConversation$lambda($callback) {
		    return function (it) {
		      if (it instanceof ConversationJoin) {
		        $callback(null, it.i1t_1);
		      } else {
		        invokeCallbackWithError(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$inviteToConversation$lambda($callback) {
		    return function (it) {
		      if (it instanceof ConversationInvite) {
		        $callback(null, it.j1u_1);
		      } else {
		        invokeCallbackWithError(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$leaveConversation$lambda$lambda($callback) {
		    return function (memberKickResponse) {
		      if (memberKickResponse instanceof MemberLeft) {
		        $callback(null);
		      } else {
		        invokeCallbackWithError_0(memberKickResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$leaveConversation$lambda(this$0, $cid, $callback) {
		    return function (it) {
		      if (it instanceof GetMember) {
		        var tmp_0 = new MemberKickRequest($cid, it.y1p_1);
		        this$0.e2s_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, ChatAPIImpl$leaveConversation$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError_0(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$deleteConversation$lambda($callback) {
		    return function (it) {
		      if (it instanceof ConversationDelete) {
		        $callback(null);
		      } else {
		        invokeCallbackWithError_0(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$getConversations$lambda($callback) {
		    return function (response) {
		      if (response instanceof GetUserConversations) {
		        // Inline function 'kotlin.collections.map' call
		        var this_0 = response.e1v_1.b1v_1;
		        // Inline function 'kotlin.collections.mapTo' call
		        var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var item = tmp0_iterator.k();
		          // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.getConversations.<anonymous>.<anonymous>' call
		          var tmp$ret$0 = Companion_instance_139.q2s(item);
		          destination.d(tmp$ret$0);
		        }
		        var conversations = destination;
		        var tmp1_safe_receiver = response.f1v_1.s1j_1;
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o1j_1;
		        var previous = tmp2_safe_receiver == null ? null : getCursor(tmp2_safe_receiver);
		        var tmp3_safe_receiver = response.f1v_1.r1j_1;
		        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.o1j_1;
		        var next = tmp4_safe_receiver == null ? null : getCursor(tmp4_safe_receiver);
		        var page = new ConversationsPage(conversations, previous, next);
		        $callback(null, page);
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$getConversationEvents$lambda($cid, $callback) {
		    return function (response) {
		      if (response instanceof GetConversationEvents) {
		        // Inline function 'kotlin.collections.map' call
		        var this_0 = response.x1v_1.u1v_1;
		        // Inline function 'kotlin.collections.mapTo' call
		        var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var item = tmp0_iterator.k();
		          // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.getConversationEvents.<anonymous>.<anonymous>' call
		          var tmp$ret$0 = item.v22($cid);
		          destination.d(tmp$ret$0);
		        }
		        var events = destination;
		        var tmp1_safe_receiver = response.y1v_1.s1j_1;
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o1j_1;
		        var previous = tmp2_safe_receiver == null ? null : getCursor(tmp2_safe_receiver);
		        var tmp3_safe_receiver = response.y1v_1.r1j_1;
		        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.o1j_1;
		        var next = tmp4_safe_receiver == null ? null : getCursor(tmp4_safe_receiver);
		        var page = new EventsPage(events, previous, next);
		        $callback(null, page);
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$getConversationMembers$lambda($callback) {
		    return function (response) {
		      if (response instanceof GetConversationMembers) {
		        // Inline function 'kotlin.collections.map' call
		        var this_0 = response.l1w_1.i1w_1;
		        // Inline function 'kotlin.collections.mapTo' call
		        var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var item = tmp0_iterator.k();
		          // Inline function 'com.vonage.clientcore.core.api.ChatAPIImpl.getConversationMembers.<anonymous>.<anonymous>' call
		          var tmp$ret$0 = Companion_instance_143.r2s(item);
		          destination.d(tmp$ret$0);
		        }
		        var members = destination;
		        var tmp1_safe_receiver = response.m1w_1.s1j_1;
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o1j_1;
		        var previous = tmp2_safe_receiver == null ? null : getCursor(tmp2_safe_receiver);
		        var tmp3_safe_receiver = response.m1w_1.r1j_1;
		        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.o1j_1;
		        var next = tmp4_safe_receiver == null ? null : getCursor(tmp4_safe_receiver);
		        var page = new MembersPage(members, previous, next);
		        $callback(null, page);
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$getConversationMember$lambda($callback) {
		    return function (response) {
		      if (response instanceof GetMember) {
		        var tmp1_safe_receiver = response.a1q_1;
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.u1p_1;
		        var user = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.a1x();
		        $callback(null, new Member(response.y1p_1, response.z1p_1, user, response.b1q_1, response.c1q_1));
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendMessageEvent$lambda$lambda($callback) {
		    return function (postEventResponse) {
		      if (postEventResponse instanceof PostConversationEvent) {
		        $callback(null, postEventResponse.d1x_1);
		      } else {
		        invokeCallbackWithError(postEventResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendMessageEvent$lambda(this$0, $text, $imageUrl, $videoUrl, $audioUrl, $fileUrl, $vCardUrl, $customBody, $location, $template, $callback, $cid) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        var tmp_0;
		        try {
		          var tmp1_elvis_lhs = buildMessageEventBody(this$0, $text, $imageUrl, $videoUrl, $audioUrl, $fileUrl, $vCardUrl, $customBody, $location, $template);
		          var tmp_1;
		          if (tmp1_elvis_lhs == null) {
		            // Inline function 'kotlin.run' call
		            // Inline function 'kotlin.contracts.contract' call
		            var message = 'At least one between text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl or customBody must be provided.';
		            invokeCallbackWithError(new IllegalArgumentException_0(message), $callback);
		            return Unit_instance;
		          } else {
		            tmp_1 = tmp1_elvis_lhs;
		          }
		          tmp_0 = tmp_1;
		        } catch ($p) {
		          if ($p instanceof IllegalArgumentException) {
		            var error = $p;
		            invokeCallbackWithError(new IllegalArgumentException_0(VOID, error), $callback);
		            return Unit_instance;
		          } else {
		            throw $p;
		          }
		        }
		        var body = tmp_0;
		        var tmp_3 = new PostConversationEventRequest($cid, memberResponse.y1p_1, CSConversationEventType_MESSAGE_getInstance(), body);
		        this$0.e2s_1.g1g(new Action_0(tmp_3, new ActionMeta(VOID, VOID, ChatAPIImpl$sendMessageEvent$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError(memberResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendEphemeralEvent$lambda$lambda($callback) {
		    return function (postEventResponse) {
		      if (postEventResponse instanceof PostConversationEvent) {
		        $callback(null, postEventResponse.d1x_1);
		      } else {
		        invokeCallbackWithError(postEventResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendEphemeralEvent$lambda($customData, $callback, this$0, $cid) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        var tmp_0;
		        try {
		          var jsonObject = get_jsonObject(Default_getInstance().g11($customData));
		          tmp_0 = new CSConversationEventJsonBody(jsonObject);
		        } catch ($p) {
		          if ($p instanceof IllegalArgumentException) {
		            var error = $p;
		            invokeCallbackWithError(new IllegalArgumentException_0(VOID, error), $callback);
		            return Unit_instance;
		          } else {
		            throw $p;
		          }
		        }
		        var body = tmp_0;
		        var tmp_2 = new PostConversationEventRequest($cid, memberResponse.y1p_1, CSConversationEventType_EPHEMERAL_getInstance(), body);
		        this$0.e2s_1.g1g(new Action_0(tmp_2, new ActionMeta(VOID, VOID, ChatAPIImpl$sendEphemeralEvent$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError(memberResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendCustomEvent$lambda$lambda($callback) {
		    return function (postEventResponse) {
		      if (postEventResponse instanceof PostConversationEvent) {
		        $callback(null, postEventResponse.d1x_1);
		      } else {
		        invokeCallbackWithError(postEventResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendCustomEvent$lambda($customData, $callback, $eventType, this$0, $cid) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        var tmp_0;
		        try {
		          var jsonObject = get_jsonObject(Default_getInstance().g11($customData));
		          tmp_0 = new CSConversationEventJsonBody(jsonObject);
		        } catch ($p) {
		          if ($p instanceof IllegalArgumentException) {
		            var error = $p;
		            invokeCallbackWithError(new IllegalArgumentException_0(VOID, error), $callback);
		            return Unit_instance;
		          } else {
		            throw $p;
		          }
		        }
		        var body = tmp_0;
		        var typeCustom = CSConversationEventType_CUSTOM_getInstance();
		        typeCustom.x1q_1 = $eventType;
		        var tmp_2 = new PostConversationEventRequest($cid, memberResponse.y1p_1, typeCustom, body);
		        this$0.e2s_1.g1g(new Action_0(tmp_2, new ActionMeta(VOID, VOID, ChatAPIImpl$sendCustomEvent$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError(memberResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$deleteEvent$lambda$lambda($callback) {
		    return function (response) {
		      if (response instanceof DeleteConversationEvent) {
		        $callback(null);
		      } else {
		        invokeCallbackWithError_0(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$deleteEvent$lambda(this$0, $id, $cid, $callback) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        var tmp_0 = new DeleteConversationEventRequest($id, $cid, memberResponse.y1p_1);
		        this$0.e2s_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, ChatAPIImpl$deleteEvent$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError_0(memberResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendMessageSeenEvent$lambda$lambda($callback) {
		    return function (response) {
		      if (response instanceof PostConversationEvent) {
		        $callback(null, response.d1x_1);
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl$sendMessageSeenEvent$lambda(this$0, $cid, $id, $callback) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        var tmp_0 = new PostConversationEventRequest($cid, memberResponse.y1p_1, CSConversationEventType_MESSAGE_SEEN_getInstance(), new UpdateEventStateRequestBody($id));
		        this$0.e2s_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, ChatAPIImpl$sendMessageSeenEvent$lambda$lambda($callback))));
		      } else {
		        invokeCallbackWithError(memberResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function ChatAPIImpl(store, events) {
		    this.e2s_1 = store;
		    this.f2s_1 = null;
		    events.c1g(new ChatAPIImpl$1(this));
		  }
		  protoOf(ChatAPIImpl).w1d = function (_set____db54di) {
		    this.f2s_1 = _set____db54di;
		  };
		  protoOf(ChatAPIImpl).k1f = function (parameters, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp;
		    try {
		      var tmp_0 = parameters == null ? null : parameters.s2s_1;
		      var tmp_1 = parameters == null ? null : parameters.t2s_1;
		      var tmp_2 = parameters == null ? null : parameters.u2s_1;
		      tmp = new CreateConversationRequest(tmp_0, tmp_1, tmp_2, parameters == null ? null : parameters.y2s());
		    } catch ($p) {
		      if ($p instanceof IllegalArgumentException) {
		        var error = $p;
		        invokeCallbackWithError(new IllegalArgumentException_0(VOID, error), callback);
		        return Unit_instance;
		      } else {
		        throw $p;
		      }
		    }
		    var createConversationRequest = tmp;
		    this.e2s_1.g1g(new Action_0(createConversationRequest, new ActionMeta(VOID, VOID, ChatAPIImpl$createConversation$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).y1f = function (conversationId, parameters, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp;
		    try {
		      tmp = new UpdateConversationRequest(conversationId, parameters.z2s_1, parameters.a2t_1, parameters.b2t_1, parameters.y2s());
		    } catch ($p) {
		      if ($p instanceof IllegalArgumentException) {
		        var error = $p;
		        invokeCallbackWithError(new IllegalArgumentException_0(VOID, error), callback);
		        return Unit_instance;
		      } else {
		        throw $p;
		      }
		    }
		    var updateConversationRequest = tmp;
		    this.e2s_1.g1g(new Action_0(updateConversationRequest, new ActionMeta(VOID, VOID, ChatAPIImpl$updateConversation$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).s1f = function (cid, callback) {
		    var tmp0_elvis_lhs = getSessionUserOrError(this.e2s_1, callback);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var user = tmp;
		    var tmp_0 = new ConversationJoinRequest(cid, user.f2t_1, user.g2t_1);
		    this.e2s_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, ChatAPIImpl$joinConversation$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).r1f = function (cid, username, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new ConversationInviteRequest(cid, username);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$inviteToConversation$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).t1f = function (cid, callback) {
		    if (getSessionUserOrError_0(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$leaveConversation$lambda(this, cid, callback))));
		  };
		  protoOf(ChatAPIImpl).l1f = function (cid, callback) {
		    if (getSessionUserOrError_0(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new ConversationDeleteRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$deleteConversation$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).q1f = function (parameters, callback) {
		    var tmp0_elvis_lhs = getSessionUserOrError(this.e2s_1, callback);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var user = tmp;
		    var tmp_0 = user.f2t_1;
		    var tmp_1 = parameters == null ? null : parameters.h2t_1;
		    var tmp_2 = parameters == null ? null : parameters.i2t_1;
		    var tmp_3 = parameters == null ? null : parameters.j2t_1;
		    var tmp_4 = parameters == null ? null : parameters.k2t_1;
		    var tmp_5 = new GetUserConversationsRequest(tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, parameters == null ? null : parameters.l2t_1);
		    this.e2s_1.g1g(new Action_0(tmp_5, new ActionMeta(VOID, VOID, ChatAPIImpl$getConversations$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).n1f = function (cid, parameters, filterGroup, filterGroupVersion, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = parameters == null ? null : parameters.m2t_1;
		    var tmp_0 = parameters == null ? null : parameters.n2t_1;
		    var tmp_1 = parameters == null ? null : parameters.o2t_1;
		    var tmp5_safe_receiver = parameters == null ? null : parameters.p2t_1;
		    var tmp_2 = tmp5_safe_receiver == null ? null : joinToString(tmp5_safe_receiver, ',');
		    var tmp7_elvis_lhs = parameters == null ? null : parameters.q2t_1;
		    var tmp_3 = !(tmp7_elvis_lhs == null ? false : tmp7_elvis_lhs);
		    var tmp_4 = new GetConversationEventsRequest(cid, tmp, tmp_0, tmp_1, filterGroup, filterGroupVersion, tmp_2, tmp_3, parameters == null ? null : parameters.r2t_1);
		    this.e2s_1.g1g(new Action_0(tmp_4, new ActionMeta(VOID, VOID, ChatAPIImpl$getConversationEvents$lambda(cid, callback))));
		  };
		  protoOf(ChatAPIImpl).p1f = function (cid, parameters, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = parameters == null ? null : parameters.s2t_1;
		    var tmp_0 = parameters == null ? null : parameters.t2t_1;
		    var tmp_1 = new GetConversationMembersRequest(cid, tmp, tmp_0, parameters == null ? null : parameters.u2t_1);
		    this.e2s_1.g1g(new Action_0(tmp_1, new ActionMeta(VOID, VOID, ChatAPIImpl$getConversationMembers$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).o1f = function (cid, mid, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetConversationMemberRequest(cid, mid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$getConversationMember$lambda(callback))));
		  };
		  protoOf(ChatAPIImpl).w1f = function (cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$sendMessageEvent$lambda(this, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback, cid))));
		  };
		  protoOf(ChatAPIImpl).v1f = function (cid, customData, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$sendEphemeralEvent$lambda(customData, callback, this, cid))));
		  };
		  protoOf(ChatAPIImpl).u1f = function (cid, eventType, customData, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$sendCustomEvent$lambda(customData, callback, eventType, this, cid))));
		  };
		  protoOf(ChatAPIImpl).m1f = function (id, cid, callback) {
		    if (getSessionUserOrError_0(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$deleteEvent$lambda(this, id, cid, callback))));
		  };
		  protoOf(ChatAPIImpl).x1f = function (id, cid, callback) {
		    if (getSessionUserOrError(this.e2s_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetMyMemberRequest(cid);
		    this.e2s_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ChatAPIImpl$sendMessageSeenEvent$lambda(this, cid, id, callback))));
		  };
		  var LoggingLevel_Verbose_instance;
		  var LoggingLevel_Debug_instance;
		  var LoggingLevel_Info_instance;
		  var LoggingLevel_Warn_instance;
		  var LoggingLevel_Error_instance;
		  var LoggingLevel_Assert_instance;
		  function valueOf_1(value) {
		    switch (value) {
		      case 'Verbose':
		        return LoggingLevel_Verbose_getInstance();
		      case 'Debug':
		        return LoggingLevel_Debug_getInstance();
		      case 'Info':
		        return LoggingLevel_Info_getInstance();
		      case 'Warn':
		        return LoggingLevel_Warn_getInstance();
		      case 'Error':
		        return LoggingLevel_Error_getInstance();
		      case 'Assert':
		        return LoggingLevel_Assert_getInstance();
		      default:
		        LoggingLevel_initEntries();
		        THROW_IAE('No enum constant value.');
		        break;
		    }
		  }
		  var LoggingLevel_entriesInitialized;
		  function LoggingLevel_initEntries() {
		    if (LoggingLevel_entriesInitialized)
		      return Unit_instance;
		    LoggingLevel_entriesInitialized = true;
		    LoggingLevel_Verbose_instance = new LoggingLevel('Verbose', 0, 'Verbose');
		    LoggingLevel_Debug_instance = new LoggingLevel('Debug', 1, 'Debug');
		    LoggingLevel_Info_instance = new LoggingLevel('Info', 2, 'Info');
		    LoggingLevel_Warn_instance = new LoggingLevel('Warn', 3, 'Warn');
		    LoggingLevel_Error_instance = new LoggingLevel('Error', 4, 'Error');
		    LoggingLevel_Assert_instance = new LoggingLevel('Assert', 5, 'Assert');
		  }
		  function LoggingLevel(name, ordinal, sev) {
		    Enum.call(this, name, ordinal);
		    this.x2t_1 = sev;
		  }
		  function DefaultConfig() {
		    DefaultConfig_instance = this;
		    this.y2t_1 = '/v2/rtc';
		    this.z2t_1 = false;
		    this.a2u_1 = true;
		    this.b2u_1 = true;
		    this.c2u_1 = false;
		    this.d2u_1 = ClientConfigRegion_US_getInstance();
		    this.e2u_1 = LoggingLevel_Error_getInstance();
		  }
		  var DefaultConfig_instance;
		  function DefaultConfig_getInstance() {
		    if (DefaultConfig_instance == null)
		      new DefaultConfig();
		    return DefaultConfig_instance;
		  }
		  var ClientConfigRegion_AP_instance;
		  var ClientConfigRegion_EU_instance;
		  var ClientConfigRegion_US_instance;
		  var ClientConfigRegion_entriesInitialized;
		  function ClientConfigRegion_initEntries() {
		    if (ClientConfigRegion_entriesInitialized)
		      return Unit_instance;
		    ClientConfigRegion_entriesInitialized = true;
		    ClientConfigRegion_AP_instance = new ClientConfigRegion('AP', 0, 'https://api-ap.vonage.com', 'https://ws-ap.vonage.com');
		    ClientConfigRegion_EU_instance = new ClientConfigRegion('EU', 1, 'https://api-eu.vonage.com', 'https://ws-eu.vonage.com');
		    ClientConfigRegion_US_instance = new ClientConfigRegion('US', 2, 'https://api-us.vonage.com', 'https://ws-us.vonage.com');
		  }
		  function ClientConfigRegion(name, ordinal, apiUrl, websocketUrl) {
		    Enum.call(this, name, ordinal);
		    this.h2u_1 = apiUrl;
		    this.i2u_1 = websocketUrl;
		  }
		  function LoggingLevel_Verbose_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Verbose_instance;
		  }
		  function LoggingLevel_Debug_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Debug_instance;
		  }
		  function LoggingLevel_Info_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Info_instance;
		  }
		  function LoggingLevel_Warn_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Warn_instance;
		  }
		  function LoggingLevel_Error_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Error_instance;
		  }
		  function LoggingLevel_Assert_getInstance() {
		    LoggingLevel_initEntries();
		    return LoggingLevel_Assert_instance;
		  }
		  function ClientConfigRegion_AP_getInstance() {
		    ClientConfigRegion_initEntries();
		    return ClientConfigRegion_AP_instance;
		  }
		  function ClientConfigRegion_EU_getInstance() {
		    ClientConfigRegion_initEntries();
		    return ClientConfigRegion_EU_instance;
		  }
		  function ClientConfigRegion_US_getInstance() {
		    ClientConfigRegion_initEntries();
		    return ClientConfigRegion_US_instance;
		  }
		  function ConversationAPIImpl$getConversation$lambda($callback) {
		    return function (response) {
		      if (response instanceof Exception) {
		        invokeCallbackWithError(response, $callback);
		      } else {
		        if (response instanceof GetConversation) {
		          var tmp1_safe_receiver = response.v1i_1;
		          var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.l1i_1;
		          var tmp_0 = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.y1p_1;
		          var tmp3_safe_receiver = response.v1i_1;
		          var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.l1i_1;
		          var tmp_1 = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.z1p_1;
		          var tmp5_safe_receiver = response.w1i_1;
		          var conversation = new Conversation(response.p1i_1, response.q1i_1, response.r1i_1, tmp_0, tmp_1, response.s1i_1, response.u1i_1, response.t1i_1, tmp5_safe_receiver == null ? null : tmp5_safe_receiver.i1q());
		          $callback(null, conversation);
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function ConversationAPIImpl$getUser$lambda($callback) {
		    return function (response) {
		      if (response instanceof Exception) {
		        invokeCallbackWithError(response, $callback);
		      } else {
		        if (response instanceof GetUser) {
		          var tmp1_safe_receiver = response.w1w_1;
		          var tmp_0;
		          if (tmp1_safe_receiver == null) {
		            tmp_0 = null;
		          } else {
		            // Inline function 'kotlin.takeUnless' call
		            // Inline function 'kotlin.contracts.contract' call
		            var tmp_1;
		            // Inline function 'com.vonage.clientcore.core.api.ConversationAPIImpl.getUser.<anonymous>.<anonymous>' call
		            if (!tmp1_safe_receiver.u2u()) {
		              tmp_1 = tmp1_safe_receiver;
		            } else {
		              tmp_1 = null;
		            }
		            tmp_0 = tmp_1;
		          }
		          var tmp_2 = tmp_0;
		          var tmp2_safe_receiver = response.z1w_1;
		          var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.g1q_1;
		          var tmp_3;
		          if (tmp3_safe_receiver == null) {
		            tmp_3 = null;
		          } else {
		            // Inline function 'kotlin.takeUnless' call
		            // Inline function 'kotlin.contracts.contract' call
		            var tmp_4;
		            // Inline function 'com.vonage.clientcore.core.api.ConversationAPIImpl.getUser.<anonymous>.<anonymous>' call
		            if (!tmp3_safe_receiver.n()) {
		              tmp_4 = tmp3_safe_receiver;
		            } else {
		              tmp_4 = null;
		            }
		            tmp_3 = tmp_4;
		          }
		          var tmp4_safe_receiver = tmp_3;
		          var user = new User(response.t1w_1, response.u1w_1, response.v1w_1, tmp_2, response.x1w_1, response.y1w_1, tmp4_safe_receiver == null ? null : tmp4_safe_receiver.toString());
		          $callback(null, user);
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function ConversationAPIImpl(store) {
		    this.v2u_1 = store;
		  }
		  protoOf(ConversationAPIImpl).d1g = function (conversationIdOrName, callback) {
		    var tmp = new GetConversationRequest(conversationIdOrName);
		    this.v2u_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ConversationAPIImpl$getConversation$lambda(callback))));
		  };
		  protoOf(ConversationAPIImpl).e1g = function (userIdOrName, callback) {
		    var tmp = new GetUserRequest(userIdOrName);
		    this.v2u_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, ConversationAPIImpl$getUser$lambda(callback))));
		  };
		  function CustomLoggersLimitReached(provided, limit) {
		    limit = limit === VOID ? 10 : limit;
		    InternalError.call(this, 'internal:error:custom_loggers_limit_exceeded', 'Exceeded Max number of Custom Client Loggers. Provided: ' + provided + ', Limit: ' + limit);
		    captureStack(this, CustomLoggersLimitReached);
		  }
		  function NoCallFound() {
		    InternalError.call(this, 'voice:error:no_call_found', 'No call found');
		    captureStack(this, NoCallFound);
		  }
		  function NoCallMediaFound() {
		    InternalError.call(this, 'voice:error:no_call_media_found', 'No call media found');
		    captureStack(this, NoCallMediaFound);
		  }
		  function MediaTimeout() {
		    InternalError.call(this, 'voice:error:media_timeout', 'Media Timeout');
		    captureStack(this, MediaTimeout);
		  }
		  function NoInviteFound() {
		    InternalError.call(this, 'voice:error:no_invite_found', 'No invite found');
		    captureStack(this, NoInviteFound);
		  }
		  function InvalidCallAction() {
		    InternalError.call(this, 'voice:error:invalid_call_action', 'Invalid call action');
		    captureStack(this, InvalidCallAction);
		  }
		  function NoOfferFound() {
		    InternalError.call(this, 'voice:error:no_offer_found', 'No offer found');
		    captureStack(this, NoOfferFound);
		  }
		  function InboundCallFailed(cause) {
		    cause = cause === VOID ? null : cause;
		    InternalError.call(this, 'voice:error:inbound_call_failed', 'Inbound call failed', cause);
		    captureStack(this, InboundCallFailed);
		  }
		  function AuthorizationError_0(message) {
		    message = message === VOID ? null : message;
		    var tmp;
		    if (message == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.errors.AuthorizationError.<init>.<anonymous>' call
		      tmp = ': ' + message;
		    }
		    var tmp1_elvis_lhs = tmp;
		    InternalError.call(this, 'internal:auth:authorization_error', 'Authorization Error' + (tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs));
		    captureStack(this, AuthorizationError_0);
		  }
		  function MemberNotInConversation() {
		    InternalError.call(this, 'voice:error:member_not_in_conversation', 'Member has not joined the conversation');
		    captureStack(this, MemberNotInConversation);
		  }
		  function NoConversationFound() {
		    InternalError.call(this, 'voice:error:no_conversation_found', 'No conversation found');
		    captureStack(this, NoConversationFound);
		  }
		  function NoLegFound() {
		    InternalError.call(this, 'voice:error:no_leg_found', 'No leg found');
		    captureStack(this, NoLegFound);
		  }
		  function InternalError(code, message, cause) {
		    cause = cause === VOID ? null : cause;
		    Exception_init_$Init$_0(message, cause, this);
		    captureStack(this, InternalError);
		    this.w2u_1 = code;
		    this.x2u_1 = message;
		    this.y2u_1 = cause;
		  }
		  protoOf(InternalError).k8 = function () {
		    return this.x2u_1;
		  };
		  protoOf(InternalError).l8 = function () {
		    return this.y2u_1;
		  };
		  function ServiceTempNotAvailable() {
		    InternalError.call(this, 'internal:error:serviceNotAvailable', 'ServiceTempNotAvailable');
		    captureStack(this, ServiceTempNotAvailable);
		  }
		  function UnexpectedNullValue() {
		    InternalError.call(this, 'internal:error:unexpected_null_value', 'Unexpected Null Value');
		    captureStack(this, UnexpectedNullValue);
		  }
		  function IllegalArgumentException_0(message, cause) {
		    message = message === VOID ? null : message;
		    cause = cause === VOID ? null : cause;
		    InternalError.call(this, 'internal:error:illegal_argument_exception', message == null ? 'Incorrect arguments provided to method' : message, cause);
		    captureStack(this, IllegalArgumentException_0);
		  }
		  function ServiceNotAvailable(statusCode) {
		    statusCode = statusCode === VOID ? 500 : statusCode;
		    InternalError.call(this, 'internal:error:service_no_available', 'ServiceNotAvailable:' + statusCode);
		    captureStack(this, ServiceNotAvailable);
		  }
		  function ParsingException(cause) {
		    InternalError.call(this, 'internal:error:parsing_exception', 'Error throw whilst parsing data', cause);
		    captureStack(this, ParsingException);
		  }
		  function UnsanitizedInputError() {
		    InternalError.call(this, 'internal:error:unsanitized_input_error', 'Unsanitized Input Error');
		    captureStack(this, UnsanitizedInputError);
		  }
		  function NoAnswerFound() {
		    InternalError.call(this, 'voice:error:no_answer_found', 'No answer found');
		    captureStack(this, NoAnswerFound);
		  }
		  function Companion_134() {
		    this.z2u_1 = 'Unknown failure';
		  }
		  function MediaClientError(code, message, cause) {
		    cause = cause === VOID ? null : cause;
		    Exception_init_$Init$_0(message, cause, this);
		    captureStack(this, MediaClientError);
		    this.a2v_1 = code;
		    this.b2v_1 = message;
		    this.c2v_1 = cause;
		  }
		  protoOf(MediaClientError).k8 = function () {
		    return this.b2v_1;
		  };
		  protoOf(MediaClientError).l8 = function () {
		    return this.c2v_1;
		  };
		  function PeerConnectionNotFound(legId) {
		    MediaClientError.call(this, 'media:error:peer_connection_not_found', 'Peer Connection Not Found for Leg Id: ' + legId);
		    captureStack(this, PeerConnectionNotFound);
		  }
		  function TrackNotFound(legId) {
		    MediaClientError.call(this, 'media:error:track_not_found', 'Audio Track Not Found for Leg Id: ' + legId);
		    captureStack(this, TrackNotFound);
		  }
		  function ProcessAnswerError(legId, message) {
		    message = message === VOID ? null : message;
		    MediaClientError.call(this, 'media:error:process_answer_error', 'Error Processing Answer for Leg Id ' + legId + ': ' + (message == null ? 'Unknown failure' : message));
		    captureStack(this, ProcessAnswerError);
		  }
		  function CreateAnswerError(message) {
		    message = message === VOID ? null : message;
		    MediaClientError.call(this, 'media:error:create_answer_error', 'Error Creating Answer: ' + (message == null ? 'Unknown failure' : message));
		    captureStack(this, CreateAnswerError);
		  }
		  function CreateOfferError(message) {
		    message = message === VOID ? null : message;
		    MediaClientError.call(this, 'media:error:create_offer_error', 'Error Creating Offer: ' + (message == null ? 'Unknown failure' : message));
		    captureStack(this, CreateOfferError);
		  }
		  function VonageError(type, code, message, cause) {
		    type = type === VOID ? VonageErrorType_UNKNOWN_ERROR_getInstance() : type;
		    code = code === VOID ? null : code;
		    message = message === VOID ? null : message;
		    cause = cause === VOID ? null : cause;
		    Exception_init_$Init$_0(message, cause, this);
		    captureStack(this, VonageError);
		    this.d2v_1 = type;
		    this.e2v_1 = code;
		  }
		  var VonageErrorType_CS_ERROR_instance;
		  var VonageErrorType_SESSION_ERROR_instance;
		  var VonageErrorType_INTERNAL_ERROR_instance;
		  var VonageErrorType_NETWORK_ERROR_instance;
		  var VonageErrorType_UNKNOWN_ERROR_instance;
		  var VonageErrorType_entriesInitialized;
		  function VonageErrorType_initEntries() {
		    if (VonageErrorType_entriesInitialized)
		      return Unit_instance;
		    VonageErrorType_entriesInitialized = true;
		    VonageErrorType_CS_ERROR_instance = new VonageErrorType('CS_ERROR', 0);
		    VonageErrorType_SESSION_ERROR_instance = new VonageErrorType('SESSION_ERROR', 1);
		    VonageErrorType_INTERNAL_ERROR_instance = new VonageErrorType('INTERNAL_ERROR', 2);
		    VonageErrorType_NETWORK_ERROR_instance = new VonageErrorType('NETWORK_ERROR', 3);
		    VonageErrorType_UNKNOWN_ERROR_instance = new VonageErrorType('UNKNOWN_ERROR', 4);
		  }
		  function VonageErrorType(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function toVonageError(_this__u8e3s4) {
		    var tmp;
		    if (_this__u8e3s4 instanceof VonageError) {
		      tmp = _this__u8e3s4;
		    } else {
		      if (_this__u8e3s4 instanceof SessionError) {
		        var tmp_0 = VonageErrorType_SESSION_ERROR_getInstance();
		        var tmp_1 = _this__u8e3s4.v2m();
		        var tmp_2 = _this__u8e3s4.k8();
		        var tmp1_elvis_lhs = _this__u8e3s4.cause;
		        tmp = new VonageError(tmp_0, tmp_1, tmp_2, tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs);
		      } else {
		        if (_this__u8e3s4 instanceof CSError) {
		          var tmp_3 = VonageErrorType_CS_ERROR_getInstance();
		          var tmp2_elvis_lhs = _this__u8e3s4.cause;
		          tmp = new VonageError(tmp_3, _this__u8e3s4.k1p_1, _this__u8e3s4.o1p_1, tmp2_elvis_lhs == null ? _this__u8e3s4 : tmp2_elvis_lhs);
		        } else {
		          if (_this__u8e3s4 instanceof HTTPClientError) {
		            var tmp_4 = VonageErrorType_NETWORK_ERROR_getInstance();
		            var tmp_5 = _this__u8e3s4.message;
		            var tmp3_elvis_lhs = _this__u8e3s4.cause;
		            tmp = new VonageError(tmp_4, VOID, tmp_5, tmp3_elvis_lhs == null ? _this__u8e3s4 : tmp3_elvis_lhs);
		          } else {
		            if (_this__u8e3s4 instanceof MediaClientError) {
		              var tmp_6 = VonageErrorType_INTERNAL_ERROR_getInstance();
		              var tmp_7 = _this__u8e3s4.k8();
		              var tmp4_elvis_lhs = _this__u8e3s4.cause;
		              tmp = new VonageError(tmp_6, _this__u8e3s4.a2v_1, tmp_7, tmp4_elvis_lhs == null ? _this__u8e3s4 : tmp4_elvis_lhs);
		            } else {
		              if (_this__u8e3s4 instanceof InternalError) {
		                var tmp_8;
		                if (_this__u8e3s4 instanceof ServiceTempNotAvailable) {
		                  var tmp_9 = VonageErrorType_NETWORK_ERROR_getInstance();
		                  var tmp_10 = _this__u8e3s4.k8();
		                  var tmp6_elvis_lhs = _this__u8e3s4.l8();
		                  tmp_8 = new VonageError(tmp_9, _this__u8e3s4.w2u_1, tmp_10, tmp6_elvis_lhs == null ? _this__u8e3s4 : tmp6_elvis_lhs);
		                } else {
		                  var tmp_11 = VonageErrorType_INTERNAL_ERROR_getInstance();
		                  var tmp_12 = _this__u8e3s4.k8();
		                  var tmp7_elvis_lhs = _this__u8e3s4.l8();
		                  tmp_8 = new VonageError(tmp_11, _this__u8e3s4.w2u_1, tmp_12, tmp7_elvis_lhs == null ? _this__u8e3s4 : tmp7_elvis_lhs);
		                }
		                tmp = tmp_8;
		              } else {
		                var tmp_13 = VonageErrorType_UNKNOWN_ERROR_getInstance();
		                var tmp_14 = _this__u8e3s4.message;
		                var tmp8_elvis_lhs = _this__u8e3s4.cause;
		                tmp = new VonageError(tmp_13, null, tmp_14, tmp8_elvis_lhs == null ? _this__u8e3s4 : tmp8_elvis_lhs);
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  }
		  function invokeCallbackWithError(e, callback) {
		    if (e instanceof Exception)
		      callback(toVonageError(e), null);
		    else {
		      callback(toVonageError(new UnexpectedNullValue()), null);
		    }
		  }
		  function invokeCallbackWithError_0(e, callback) {
		    return invokeCallbackWithError(e, invokeCallbackWithError$lambda(callback));
		  }
		  function invokeCallbackWithError$lambda($callback) {
		    return function (exception, _anonymous_parameter_1__qggqgd) {
		      $callback(exception);
		      return Unit_instance;
		    };
		  }
		  function VonageErrorType_CS_ERROR_getInstance() {
		    VonageErrorType_initEntries();
		    return VonageErrorType_CS_ERROR_instance;
		  }
		  function VonageErrorType_SESSION_ERROR_getInstance() {
		    VonageErrorType_initEntries();
		    return VonageErrorType_SESSION_ERROR_instance;
		  }
		  function VonageErrorType_INTERNAL_ERROR_getInstance() {
		    VonageErrorType_initEntries();
		    return VonageErrorType_INTERNAL_ERROR_instance;
		  }
		  function VonageErrorType_NETWORK_ERROR_getInstance() {
		    VonageErrorType_initEntries();
		    return VonageErrorType_NETWORK_ERROR_instance;
		  }
		  function VonageErrorType_UNKNOWN_ERROR_getInstance() {
		    VonageErrorType_initEntries();
		    return VonageErrorType_UNKNOWN_ERROR_instance;
		  }
		  function invokeEventListener($this, event, listener) {
		    if (event == null)
		      return Unit_instance;
		    if (isInterface(event, SocketConversationEvent)) {
		      listener.i2s(event.g2b());
		    } else {
		      if (event instanceof AudioSayEvent) {
		        listener.m2s();
		      } else {
		        if (event instanceof LegStatusUpdateEvent) {
		          var tmp1_safe_receiver = event.t26_1;
		          var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o1x_1;
		          var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.r1x_1;
		          if (tmp3_safe_receiver == null)
		            ;
		          else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            listener.l2s(event.m26(), event.p26_1.z26_1, tmp3_safe_receiver, event.p26_1.a27_1);
		          }
		        } else {
		          if (event instanceof AudioMuteOnEvent) {
		            listener.n2s(event.h27_1, event.f27_1.m27_1, true);
		          } else {
		            if (event instanceof AudioMuteOffEvent) {
		              listener.n2s(event.r27_1, event.p27_1.m27_1, false);
		            } else {
		              if (event instanceof AudioEarmuffOnEvent) {
		                listener.o2s(event.y27_1, event.w27_1.d28_1, true);
		              } else {
		                if (event instanceof AudioEarmuffOffEvent) {
		                  listener.o2s(event.i28_1, event.g28_1.d28_1, false);
		                } else {
		                  if (event instanceof AudioDTMFEvent) {
		                    listener.p2s(event.p28_1, event.n28_1.v28_1.f2v_1, event.n28_1.u28_1);
		                  } else {
		                    if (event instanceof RTCHangupEvent) {
		                      listener.j2s(event.a29_1, event.y28_1.z25_1.c25_1, event.y28_1);
		                    } else {
		                      if (event instanceof RTCTransferEvent) {
		                        var tmp4_safe_receiver = event.f29_1.p29_1.c25_1;
		                        if (tmp4_safe_receiver == null)
		                          ;
		                        else {
		                          // Inline function 'kotlin.let' call
		                          // Inline function 'kotlin.contracts.contract' call
		                          listener.k2s(event.h29_1, tmp4_safe_receiver);
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		  }
		  function EventAPIImpl$onEvent$lambda$lambda(this$0, $listener, $eventCounters) {
		    return function () {
		      var state = this$0.h2v_1.i2v(getKClass(RemoteEventReducer));
		      var tmp0_safe_receiver = state.k2v_1;
		      if (tmp0_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        var tmp0_elvis_lhs = state.j2v_1.u1(tmp0_safe_receiver);
		        var tmp;
		        if (tmp0_elvis_lhs == null) {
		          return Unit_instance;
		        } else {
		          tmp = tmp0_elvis_lhs;
		        }
		        var buffer = tmp;
		        invokeEventListener(this$0, buffer.n2v_1, $listener);
		        var this_0 = $eventCounters;
		        var value = buffer.l2v_1;
		        this_0.b2(tmp0_safe_receiver, value);
		      }
		      return Unit_instance;
		    };
		  }
		  function EventAPIImpl$onEvent$lambda(this$0, $listener) {
		    return function () {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      var eventCounters = LinkedHashMap_init_$Create$();
		      return new StoredSubscription(EventAPIImpl$onEvent$lambda$lambda(this$0, $listener, eventCounters));
		    };
		  }
		  function EventAPIImpl(store) {
		    this.h2v_1 = store;
		  }
		  protoOf(EventAPIImpl).c1g = function (listener) {
		    var tmp = getKClass(RemoteEventReducer);
		    this.h2v_1.p2v(tmp, EventAPIImpl$onEvent$lambda(this, listener));
		  };
		  function RTCEventListener() {
		  }
		  function AudioEventListener() {
		  }
		  function ConversationEventListener() {
		  }
		  function Companion_135() {
		  }
		  function $serializer_154() {
		    $serializer_instance_154 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.Channel', this, 2);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('number', true);
		    this.q2v_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_154).xf = function () {
		    return this.q2v_1;
		  };
		  protoOf($serializer_154).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_154).zf = function (decoder) {
		    var tmp0_desc = this.q2v_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return Channel_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_154).r2v = function (encoder, value) {
		    var tmp0_desc = this.q2v_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.s2v_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.s2v_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.t2v_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.t2v_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_154).yf = function (encoder, value) {
		    return this.r2v(encoder, value instanceof Channel ? value : THROW_CCE());
		  };
		  var $serializer_instance_154;
		  function $serializer_getInstance_154() {
		    if ($serializer_instance_154 == null)
		      new $serializer_154();
		    return $serializer_instance_154;
		  }
		  function Channel_init_$Init$(seen1, id, number, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_154().q2v_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.s2v_1 = null;
		    else
		      $this.s2v_1 = id;
		    if (0 === (seen1 & 2))
		      $this.t2v_1 = null;
		    else
		      $this.t2v_1 = number;
		    return $this;
		  }
		  function Channel_init_$Create$(seen1, id, number, serializationConstructorMarker) {
		    return Channel_init_$Init$(seen1, id, number, serializationConstructorMarker, objectCreate(protoOf(Channel)));
		  }
		  function Channel(id, number) {
		    id = id === VOID ? null : id;
		    number = number === VOID ? null : number;
		    this.s2v_1 = id;
		    this.t2v_1 = number;
		  }
		  protoOf(Channel).toString = function () {
		    return 'Channel(id=' + this.s2v_1 + ', number=' + this.t2v_1 + ')';
		  };
		  protoOf(Channel).hashCode = function () {
		    var result = this.s2v_1 == null ? 0 : getStringHashCode(this.s2v_1);
		    result = imul(result, 31) + (this.t2v_1 == null ? 0 : getStringHashCode(this.t2v_1)) | 0;
		    return result;
		  };
		  protoOf(Channel).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Channel))
		      return false;
		    var tmp0_other_with_cast = other instanceof Channel ? other : THROW_CCE();
		    if (!(this.s2v_1 == tmp0_other_with_cast.s2v_1))
		      return false;
		    if (!(this.t2v_1 == tmp0_other_with_cast.t2v_1))
		      return false;
		    return true;
		  };
		  function $serializer_155() {
		    $serializer_instance_155 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.MemberChannel', this, 3);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('to', true);
		    this.u2v_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_155).xf = function () {
		    return this.u2v_1;
		  };
		  protoOf($serializer_155).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [$serializer_getInstance_157(), get_nullable($serializer_getInstance_154()), get_nullable($serializer_getInstance_154())];
		  };
		  protoOf($serializer_155).zf = function (decoder) {
		    var tmp0_desc = this.u2v_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_157(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, $serializer_getInstance_154(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_154(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.tj(tmp0_desc, 0, $serializer_getInstance_157(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, $serializer_getInstance_154(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, $serializer_getInstance_154(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return MemberChannel_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_155).v2v = function (encoder, value) {
		    var tmp0_desc = this.u2v_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.yk(tmp0_desc, 0, $serializer_getInstance_157(), value.w2v_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.x2v_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, $serializer_getInstance_154(), value.x2v_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.y2v_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, $serializer_getInstance_154(), value.y2v_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_155).yf = function (encoder, value) {
		    return this.v2v(encoder, value instanceof MemberChannel ? value : THROW_CCE());
		  };
		  var $serializer_instance_155;
		  function $serializer_getInstance_155() {
		    if ($serializer_instance_155 == null)
		      new $serializer_155();
		    return $serializer_instance_155;
		  }
		  function MemberChannel_init_$Init$(seen1, type, from, to, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_155().u2v_1);
		    }
		    $this.w2v_1 = type;
		    if (0 === (seen1 & 2))
		      $this.x2v_1 = null;
		    else
		      $this.x2v_1 = from;
		    if (0 === (seen1 & 4))
		      $this.y2v_1 = null;
		    else
		      $this.y2v_1 = to;
		    return $this;
		  }
		  function MemberChannel_init_$Create$(seen1, type, from, to, serializationConstructorMarker) {
		    return MemberChannel_init_$Init$(seen1, type, from, to, serializationConstructorMarker, objectCreate(protoOf(MemberChannel)));
		  }
		  function MemberChannel() {
		  }
		  protoOf(MemberChannel).toString = function () {
		    return 'MemberChannel(type=' + this.w2v_1.toString() + ', from=' + toString_0(this.x2v_1) + ', to=' + toString_0(this.y2v_1) + ')';
		  };
		  protoOf(MemberChannel).hashCode = function () {
		    var result = this.w2v_1.hashCode();
		    result = imul(result, 31) + (this.x2v_1 == null ? 0 : this.x2v_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.y2v_1 == null ? 0 : this.y2v_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(MemberChannel).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberChannel))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberChannel ? other : THROW_CCE();
		    if (!this.w2v_1.equals(tmp0_other_with_cast.w2v_1))
		      return false;
		    if (!equals(this.x2v_1, tmp0_other_with_cast.x2v_1))
		      return false;
		    if (!equals(this.y2v_1, tmp0_other_with_cast.y2v_1))
		      return false;
		    return true;
		  };
		  function Companion_136() {
		    Companion_instance_137 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.z2v_1 = [new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154()), new ArrayListSerializer($serializer_getInstance_154())];
		  }
		  var Companion_instance_137;
		  function Companion_getInstance_138() {
		    if (Companion_instance_137 == null)
		      new Companion_136();
		    return Companion_instance_137;
		  }
		  function $serializer_156() {
		    $serializer_instance_156 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.UserChannels', this, 11);
		    tmp0_serialDesc.rq('app', true);
		    tmp0_serialDesc.rq('phone', true);
		    tmp0_serialDesc.rq('pstn', true);
		    tmp0_serialDesc.rq('sip', true);
		    tmp0_serialDesc.rq('vbc', true);
		    tmp0_serialDesc.rq('websocket', true);
		    tmp0_serialDesc.rq('sms', true);
		    tmp0_serialDesc.rq('mms', true);
		    tmp0_serialDesc.rq('whatsapp', true);
		    tmp0_serialDesc.rq('viber', true);
		    tmp0_serialDesc.rq('messenger', true);
		    this.a2w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_156).xf = function () {
		    return this.a2w_1;
		  };
		  protoOf($serializer_156).gr = function () {
		    var tmp0_cached = Companion_getInstance_138().z2v_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(tmp0_cached[0]), get_nullable(tmp0_cached[1]), get_nullable(tmp0_cached[2]), get_nullable(tmp0_cached[3]), get_nullable(tmp0_cached[4]), get_nullable(tmp0_cached[5]), get_nullable(tmp0_cached[6]), get_nullable(tmp0_cached[7]), get_nullable(tmp0_cached[8]), get_nullable(tmp0_cached[9]), get_nullable(tmp0_cached[10])];
		  };
		  protoOf($serializer_156).zf = function (decoder) {
		    var tmp0_desc = this.a2w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_local6 = null;
		    var tmp11_local7 = null;
		    var tmp12_local8 = null;
		    var tmp13_local9 = null;
		    var tmp14_local10 = null;
		    var tmp15_input = decoder.hj(tmp0_desc);
		    var tmp16_cached = Companion_getInstance_138().z2v_1;
		    if (tmp15_input.xj()) {
		      tmp4_local0 = tmp15_input.vj(tmp0_desc, 0, tmp16_cached[0], tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp15_input.vj(tmp0_desc, 1, tmp16_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp15_input.vj(tmp0_desc, 2, tmp16_cached[2], tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp15_input.vj(tmp0_desc, 3, tmp16_cached[3], tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp15_input.vj(tmp0_desc, 4, tmp16_cached[4], tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp15_input.vj(tmp0_desc, 5, tmp16_cached[5], tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp15_input.vj(tmp0_desc, 6, tmp16_cached[6], tmp10_local6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp15_input.vj(tmp0_desc, 7, tmp16_cached[7], tmp11_local7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp15_input.vj(tmp0_desc, 8, tmp16_cached[8], tmp12_local8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		      tmp13_local9 = tmp15_input.vj(tmp0_desc, 9, tmp16_cached[9], tmp13_local9);
		      tmp3_bitMask0 = tmp3_bitMask0 | 512;
		      tmp14_local10 = tmp15_input.vj(tmp0_desc, 10, tmp16_cached[10], tmp14_local10);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp15_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp15_input.vj(tmp0_desc, 0, tmp16_cached[0], tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp15_input.vj(tmp0_desc, 1, tmp16_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp15_input.vj(tmp0_desc, 2, tmp16_cached[2], tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp15_input.vj(tmp0_desc, 3, tmp16_cached[3], tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp15_input.vj(tmp0_desc, 4, tmp16_cached[4], tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp15_input.vj(tmp0_desc, 5, tmp16_cached[5], tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp15_input.vj(tmp0_desc, 6, tmp16_cached[6], tmp10_local6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp15_input.vj(tmp0_desc, 7, tmp16_cached[7], tmp11_local7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp15_input.vj(tmp0_desc, 8, tmp16_cached[8], tmp12_local8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          case 9:
		            tmp13_local9 = tmp15_input.vj(tmp0_desc, 9, tmp16_cached[9], tmp13_local9);
		            tmp3_bitMask0 = tmp3_bitMask0 | 512;
		            break;
		          case 10:
		            tmp14_local10 = tmp15_input.vj(tmp0_desc, 10, tmp16_cached[10], tmp14_local10);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp15_input.ij(tmp0_desc);
		    return UserChannels_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, null);
		  };
		  protoOf($serializer_156).b2w = function (encoder, value) {
		    var tmp0_desc = this.a2w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_138().z2v_1;
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.j2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, tmp2_cached[0], value.j2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.k2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, tmp2_cached[1], value.k2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.l2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, tmp2_cached[2], value.l2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.m2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, tmp2_cached[3], value.m2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.n2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, tmp2_cached[4], value.n2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.o2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, tmp2_cached[5], value.o2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 6) ? true : !(value.p2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 6, tmp2_cached[6], value.p2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 7) ? true : !(value.q2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 7, tmp2_cached[7], value.q2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 8) ? true : !(value.r2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 8, tmp2_cached[8], value.r2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 9) ? true : !(value.s2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 9, tmp2_cached[9], value.s2u_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 10) ? true : !(value.t2u_1 == null)) {
		      tmp1_output.al(tmp0_desc, 10, tmp2_cached[10], value.t2u_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_156).yf = function (encoder, value) {
		    return this.b2w(encoder, value instanceof UserChannels ? value : THROW_CCE());
		  };
		  var $serializer_instance_156;
		  function $serializer_getInstance_156() {
		    if ($serializer_instance_156 == null)
		      new $serializer_156();
		    return $serializer_instance_156;
		  }
		  function UserChannels_init_$Init$(seen1, app, phone, pstn, sip, vbc, websocket, sms, mms, whatsapp, viber, messenger, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_156().a2w_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.j2u_1 = null;
		    else
		      $this.j2u_1 = app;
		    if (0 === (seen1 & 2))
		      $this.k2u_1 = null;
		    else
		      $this.k2u_1 = phone;
		    if (0 === (seen1 & 4))
		      $this.l2u_1 = null;
		    else
		      $this.l2u_1 = pstn;
		    if (0 === (seen1 & 8))
		      $this.m2u_1 = null;
		    else
		      $this.m2u_1 = sip;
		    if (0 === (seen1 & 16))
		      $this.n2u_1 = null;
		    else
		      $this.n2u_1 = vbc;
		    if (0 === (seen1 & 32))
		      $this.o2u_1 = null;
		    else
		      $this.o2u_1 = websocket;
		    if (0 === (seen1 & 64))
		      $this.p2u_1 = null;
		    else
		      $this.p2u_1 = sms;
		    if (0 === (seen1 & 128))
		      $this.q2u_1 = null;
		    else
		      $this.q2u_1 = mms;
		    if (0 === (seen1 & 256))
		      $this.r2u_1 = null;
		    else
		      $this.r2u_1 = whatsapp;
		    if (0 === (seen1 & 512))
		      $this.s2u_1 = null;
		    else
		      $this.s2u_1 = viber;
		    if (0 === (seen1 & 1024))
		      $this.t2u_1 = null;
		    else
		      $this.t2u_1 = messenger;
		    return $this;
		  }
		  function UserChannels_init_$Create$(seen1, app, phone, pstn, sip, vbc, websocket, sms, mms, whatsapp, viber, messenger, serializationConstructorMarker) {
		    return UserChannels_init_$Init$(seen1, app, phone, pstn, sip, vbc, websocket, sms, mms, whatsapp, viber, messenger, serializationConstructorMarker, objectCreate(protoOf(UserChannels)));
		  }
		  function UserChannels(app, phone, pstn, sip, vbc, websocket, sms, mms, whatsapp, viber, messenger) {
		    Companion_getInstance_138();
		    app = app === VOID ? null : app;
		    phone = phone === VOID ? null : phone;
		    pstn = pstn === VOID ? null : pstn;
		    sip = sip === VOID ? null : sip;
		    vbc = vbc === VOID ? null : vbc;
		    websocket = websocket === VOID ? null : websocket;
		    sms = sms === VOID ? null : sms;
		    mms = mms === VOID ? null : mms;
		    whatsapp = whatsapp === VOID ? null : whatsapp;
		    viber = viber === VOID ? null : viber;
		    messenger = messenger === VOID ? null : messenger;
		    this.j2u_1 = app;
		    this.k2u_1 = phone;
		    this.l2u_1 = pstn;
		    this.m2u_1 = sip;
		    this.n2u_1 = vbc;
		    this.o2u_1 = websocket;
		    this.p2u_1 = sms;
		    this.q2u_1 = mms;
		    this.r2u_1 = whatsapp;
		    this.s2u_1 = viber;
		    this.t2u_1 = messenger;
		  }
		  protoOf(UserChannels).u2u = function () {
		    return this.equals(new UserChannels());
		  };
		  protoOf(UserChannels).toString = function () {
		    return 'UserChannels(app=' + toString_0(this.j2u_1) + ', phone=' + toString_0(this.k2u_1) + ', pstn=' + toString_0(this.l2u_1) + ', sip=' + toString_0(this.m2u_1) + ', vbc=' + toString_0(this.n2u_1) + ', websocket=' + toString_0(this.o2u_1) + ', sms=' + toString_0(this.p2u_1) + ', mms=' + toString_0(this.q2u_1) + ', whatsapp=' + toString_0(this.r2u_1) + ', viber=' + toString_0(this.s2u_1) + ', messenger=' + toString_0(this.t2u_1) + ')';
		  };
		  protoOf(UserChannels).hashCode = function () {
		    var result = this.j2u_1 == null ? 0 : hashCode(this.j2u_1);
		    result = imul(result, 31) + (this.k2u_1 == null ? 0 : hashCode(this.k2u_1)) | 0;
		    result = imul(result, 31) + (this.l2u_1 == null ? 0 : hashCode(this.l2u_1)) | 0;
		    result = imul(result, 31) + (this.m2u_1 == null ? 0 : hashCode(this.m2u_1)) | 0;
		    result = imul(result, 31) + (this.n2u_1 == null ? 0 : hashCode(this.n2u_1)) | 0;
		    result = imul(result, 31) + (this.o2u_1 == null ? 0 : hashCode(this.o2u_1)) | 0;
		    result = imul(result, 31) + (this.p2u_1 == null ? 0 : hashCode(this.p2u_1)) | 0;
		    result = imul(result, 31) + (this.q2u_1 == null ? 0 : hashCode(this.q2u_1)) | 0;
		    result = imul(result, 31) + (this.r2u_1 == null ? 0 : hashCode(this.r2u_1)) | 0;
		    result = imul(result, 31) + (this.s2u_1 == null ? 0 : hashCode(this.s2u_1)) | 0;
		    result = imul(result, 31) + (this.t2u_1 == null ? 0 : hashCode(this.t2u_1)) | 0;
		    return result;
		  };
		  protoOf(UserChannels).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UserChannels))
		      return false;
		    var tmp0_other_with_cast = other instanceof UserChannels ? other : THROW_CCE();
		    if (!equals(this.j2u_1, tmp0_other_with_cast.j2u_1))
		      return false;
		    if (!equals(this.k2u_1, tmp0_other_with_cast.k2u_1))
		      return false;
		    if (!equals(this.l2u_1, tmp0_other_with_cast.l2u_1))
		      return false;
		    if (!equals(this.m2u_1, tmp0_other_with_cast.m2u_1))
		      return false;
		    if (!equals(this.n2u_1, tmp0_other_with_cast.n2u_1))
		      return false;
		    if (!equals(this.o2u_1, tmp0_other_with_cast.o2u_1))
		      return false;
		    if (!equals(this.p2u_1, tmp0_other_with_cast.p2u_1))
		      return false;
		    if (!equals(this.q2u_1, tmp0_other_with_cast.q2u_1))
		      return false;
		    if (!equals(this.r2u_1, tmp0_other_with_cast.r2u_1))
		      return false;
		    if (!equals(this.s2u_1, tmp0_other_with_cast.s2u_1))
		      return false;
		    if (!equals(this.t2u_1, tmp0_other_with_cast.t2u_1))
		      return false;
		    return true;
		  };
		  function _get_$cachedSerializer__te6jhj_0($this) {
		    return $this.c2w_1.r1();
		  }
		  function ChannelType$Companion$_anonymous__a1qjea() {
		    return $serializer_getInstance_157();
		  }
		  var ChannelType_APP_instance;
		  var ChannelType_PHONE_instance;
		  var ChannelType_PSTN_instance;
		  var ChannelType_SIP_instance;
		  var ChannelType_VBC_instance;
		  var ChannelType_WEBSOCKET_instance;
		  var ChannelType_SMS_instance;
		  var ChannelType_MMS_instance;
		  var ChannelType_WHATSAPP_instance;
		  var ChannelType_VIBER_instance;
		  var ChannelType_MESSENGER_instance;
		  function Companion_137() {
		    Companion_instance_138 = this;
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.c2w_1 = lazy(tmp_0, ChannelType$Companion$_anonymous__a1qjea);
		  }
		  protoOf(Companion_137).b13 = function () {
		    return _get_$cachedSerializer__te6jhj_0(this);
		  };
		  protoOf(Companion_137).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_138;
		  function Companion_getInstance_139() {
		    ChannelType_initEntries();
		    if (Companion_instance_138 == null)
		      new Companion_137();
		    return Companion_instance_138;
		  }
		  function $serializer_157() {
		    $serializer_instance_157 = this;
		    var tmp0_serialDesc = new EnumDescriptor('com.vonage.clientcore.core.api.models.ChannelType', 11);
		    tmp0_serialDesc.rq('app', false);
		    tmp0_serialDesc.rq('phone', false);
		    tmp0_serialDesc.rq('pstn', false);
		    tmp0_serialDesc.rq('sip', false);
		    tmp0_serialDesc.rq('vbc', false);
		    tmp0_serialDesc.rq('websocket', false);
		    tmp0_serialDesc.rq('sms', false);
		    tmp0_serialDesc.rq('mms', false);
		    tmp0_serialDesc.rq('whatsapp', false);
		    tmp0_serialDesc.rq('viber', false);
		    tmp0_serialDesc.rq('messenger', false);
		    this.d2w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_157).xf = function () {
		    return this.d2w_1;
		  };
		  protoOf($serializer_157).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_157).zf = function (decoder) {
		    return values_0()[decoder.dj(this.d2w_1)];
		  };
		  protoOf($serializer_157).e2w = function (encoder, value) {
		    encoder.mk(this.d2w_1, value.e2_1);
		  };
		  protoOf($serializer_157).yf = function (encoder, value) {
		    return this.e2w(encoder, value instanceof ChannelType ? value : THROW_CCE());
		  };
		  var $serializer_instance_157;
		  function $serializer_getInstance_157() {
		    ChannelType_initEntries();
		    if ($serializer_instance_157 == null)
		      new $serializer_157();
		    return $serializer_instance_157;
		  }
		  function values_0() {
		    return [ChannelType_APP_getInstance(), ChannelType_PHONE_getInstance(), ChannelType_PSTN_getInstance(), ChannelType_SIP_getInstance(), ChannelType_VBC_getInstance(), ChannelType_WEBSOCKET_getInstance(), ChannelType_SMS_getInstance(), ChannelType_MMS_getInstance(), ChannelType_WHATSAPP_getInstance(), ChannelType_VIBER_getInstance(), ChannelType_MESSENGER_getInstance()];
		  }
		  var ChannelType_entriesInitialized;
		  function ChannelType_initEntries() {
		    if (ChannelType_entriesInitialized)
		      return Unit_instance;
		    ChannelType_entriesInitialized = true;
		    ChannelType_APP_instance = new ChannelType('APP', 0);
		    ChannelType_PHONE_instance = new ChannelType('PHONE', 1);
		    ChannelType_PSTN_instance = new ChannelType('PSTN', 2);
		    ChannelType_SIP_instance = new ChannelType('SIP', 3);
		    ChannelType_VBC_instance = new ChannelType('VBC', 4);
		    ChannelType_WEBSOCKET_instance = new ChannelType('WEBSOCKET', 5);
		    ChannelType_SMS_instance = new ChannelType('SMS', 6);
		    ChannelType_MMS_instance = new ChannelType('MMS', 7);
		    ChannelType_WHATSAPP_instance = new ChannelType('WHATSAPP', 8);
		    ChannelType_VIBER_instance = new ChannelType('VIBER', 9);
		    ChannelType_MESSENGER_instance = new ChannelType('MESSENGER', 10);
		    Companion_getInstance_139();
		  }
		  function ChannelType(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function $serializer_158() {
		    $serializer_instance_158 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.ChannelFromTo', this, 3);
		    tmp0_serialDesc.rq('type', true);
		    tmp0_serialDesc.rq('number', true);
		    tmp0_serialDesc.rq('user', true);
		    this.f2w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_158).xf = function () {
		    return this.f2w_1;
		  };
		  protoOf($serializer_158).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_158).zf = function (decoder) {
		    var tmp0_desc = this.f2w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return ChannelFromTo_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_158).g2w = function (encoder, value) {
		    var tmp0_desc = this.f2w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.h2w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.h2w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.i2w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.i2w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.j2w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.j2w_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_158).yf = function (encoder, value) {
		    return this.g2w(encoder, value instanceof ChannelFromTo ? value : THROW_CCE());
		  };
		  var $serializer_instance_158;
		  function $serializer_getInstance_158() {
		    if ($serializer_instance_158 == null)
		      new $serializer_158();
		    return $serializer_instance_158;
		  }
		  function ChannelFromTo_init_$Init$(seen1, type, number, user, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_158().f2w_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.h2w_1 = null;
		    else
		      $this.h2w_1 = type;
		    if (0 === (seen1 & 2))
		      $this.i2w_1 = null;
		    else
		      $this.i2w_1 = number;
		    if (0 === (seen1 & 4))
		      $this.j2w_1 = null;
		    else
		      $this.j2w_1 = user;
		    return $this;
		  }
		  function ChannelFromTo_init_$Create$(seen1, type, number, user, serializationConstructorMarker) {
		    return ChannelFromTo_init_$Init$(seen1, type, number, user, serializationConstructorMarker, objectCreate(protoOf(ChannelFromTo)));
		  }
		  function ChannelFromTo() {
		  }
		  protoOf(ChannelFromTo).toString = function () {
		    return 'ChannelFromTo(type=' + this.h2w_1 + ', number=' + this.i2w_1 + ', user=' + this.j2w_1 + ')';
		  };
		  protoOf(ChannelFromTo).hashCode = function () {
		    var result = this.h2w_1 == null ? 0 : getStringHashCode(this.h2w_1);
		    result = imul(result, 31) + (this.i2w_1 == null ? 0 : getStringHashCode(this.i2w_1)) | 0;
		    result = imul(result, 31) + (this.j2w_1 == null ? 0 : getStringHashCode(this.j2w_1)) | 0;
		    return result;
		  };
		  protoOf(ChannelFromTo).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ChannelFromTo))
		      return false;
		    var tmp0_other_with_cast = other instanceof ChannelFromTo ? other : THROW_CCE();
		    if (!(this.h2w_1 == tmp0_other_with_cast.h2w_1))
		      return false;
		    if (!(this.i2w_1 == tmp0_other_with_cast.i2w_1))
		      return false;
		    if (!(this.j2w_1 == tmp0_other_with_cast.j2w_1))
		      return false;
		    return true;
		  };
		  function ChannelType_APP_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_APP_instance;
		  }
		  function ChannelType_PHONE_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_PHONE_instance;
		  }
		  function ChannelType_PSTN_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_PSTN_instance;
		  }
		  function ChannelType_SIP_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_SIP_instance;
		  }
		  function ChannelType_VBC_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_VBC_instance;
		  }
		  function ChannelType_WEBSOCKET_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_WEBSOCKET_instance;
		  }
		  function ChannelType_SMS_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_SMS_instance;
		  }
		  function ChannelType_MMS_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_MMS_instance;
		  }
		  function ChannelType_WHATSAPP_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_WHATSAPP_instance;
		  }
		  function ChannelType_VIBER_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_VIBER_instance;
		  }
		  function ChannelType_MESSENGER_getInstance() {
		    ChannelType_initEntries();
		    return ChannelType_MESSENGER_instance;
		  }
		  function Properties_1(ttl, customSortKey, customData) {
		    ttl = ttl === VOID ? null : ttl;
		    customSortKey = customSortKey === VOID ? null : customSortKey;
		    customData = customData === VOID ? null : customData;
		    this.k2w_1 = ttl;
		    this.l2w_1 = customSortKey;
		    this.m2w_1 = customData;
		  }
		  protoOf(Properties_1).toString = function () {
		    return 'Properties(ttl=' + this.k2w_1 + ', customSortKey=' + this.l2w_1 + ', customData=' + this.m2w_1 + ')';
		  };
		  protoOf(Properties_1).hashCode = function () {
		    var result = this.k2w_1 == null ? 0 : this.k2w_1;
		    result = imul(result, 31) + (this.l2w_1 == null ? 0 : getStringHashCode(this.l2w_1)) | 0;
		    result = imul(result, 31) + (this.m2w_1 == null ? 0 : getStringHashCode(this.m2w_1)) | 0;
		    return result;
		  };
		  protoOf(Properties_1).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Properties_1))
		      return false;
		    var tmp0_other_with_cast = other instanceof Properties_1 ? other : THROW_CCE();
		    if (!(this.k2w_1 == tmp0_other_with_cast.k2w_1))
		      return false;
		    if (!(this.l2w_1 == tmp0_other_with_cast.l2w_1))
		      return false;
		    if (!(this.m2w_1 == tmp0_other_with_cast.m2w_1))
		      return false;
		    return true;
		  };
		  function Companion_138() {
		  }
		  protoOf(Companion_138).q2s = function (response) {
		    var tmp0_safe_receiver = response.v1i_1;
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1i_1;
		    var tmp = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.y1p_1;
		    var tmp2_safe_receiver = response.v1i_1;
		    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.l1i_1;
		    var tmp_0 = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.z1p_1;
		    var tmp4_safe_receiver = response.w1i_1;
		    return new Conversation(response.p1i_1, response.q1i_1, response.r1i_1, tmp, tmp_0, response.s1i_1, response.u1i_1, response.t1i_1, tmp4_safe_receiver == null ? null : tmp4_safe_receiver.i1q());
		  };
		  var Companion_instance_139;
		  function Conversation(id, name, timestamp, memberId, memberState, displayName, imageUrl, state, properties) {
		    memberId = memberId === VOID ? null : memberId;
		    memberState = memberState === VOID ? null : memberState;
		    displayName = displayName === VOID ? null : displayName;
		    imageUrl = imageUrl === VOID ? null : imageUrl;
		    state = state === VOID ? null : state;
		    properties = properties === VOID ? null : properties;
		    this.n2w_1 = id;
		    this.o2w_1 = name;
		    this.p2w_1 = timestamp;
		    this.q2w_1 = memberId;
		    this.r2w_1 = memberState;
		    this.s2w_1 = displayName;
		    this.t2w_1 = imageUrl;
		    this.u2w_1 = state;
		    this.v2w_1 = properties;
		  }
		  protoOf(Conversation).toString = function () {
		    return 'Conversation(id=' + this.n2w_1 + ', name=' + this.o2w_1 + ', timestamp=' + this.p2w_1.toString() + ', memberId=' + this.q2w_1 + ', memberState=' + toString_0(this.r2w_1) + ', displayName=' + this.s2w_1 + ', imageUrl=' + this.t2w_1 + ', state=' + toString_0(this.u2w_1) + ', properties=' + toString_0(this.v2w_1) + ')';
		  };
		  protoOf(Conversation).hashCode = function () {
		    var result = getStringHashCode(this.n2w_1);
		    result = imul(result, 31) + getStringHashCode(this.o2w_1) | 0;
		    result = imul(result, 31) + this.p2w_1.hashCode() | 0;
		    result = imul(result, 31) + (this.q2w_1 == null ? 0 : getStringHashCode(this.q2w_1)) | 0;
		    result = imul(result, 31) + (this.r2w_1 == null ? 0 : this.r2w_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.s2w_1 == null ? 0 : getStringHashCode(this.s2w_1)) | 0;
		    result = imul(result, 31) + (this.t2w_1 == null ? 0 : getStringHashCode(this.t2w_1)) | 0;
		    result = imul(result, 31) + (this.u2w_1 == null ? 0 : this.u2w_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.v2w_1 == null ? 0 : this.v2w_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(Conversation).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Conversation))
		      return false;
		    var tmp0_other_with_cast = other instanceof Conversation ? other : THROW_CCE();
		    if (!(this.n2w_1 === tmp0_other_with_cast.n2w_1))
		      return false;
		    if (!(this.o2w_1 === tmp0_other_with_cast.o2w_1))
		      return false;
		    if (!this.p2w_1.equals(tmp0_other_with_cast.p2w_1))
		      return false;
		    if (!(this.q2w_1 == tmp0_other_with_cast.q2w_1))
		      return false;
		    if (!equals(this.r2w_1, tmp0_other_with_cast.r2w_1))
		      return false;
		    if (!(this.s2w_1 == tmp0_other_with_cast.s2w_1))
		      return false;
		    if (!(this.t2w_1 == tmp0_other_with_cast.t2w_1))
		      return false;
		    if (!equals(this.u2w_1, tmp0_other_with_cast.u2w_1))
		      return false;
		    if (!equals(this.v2w_1, tmp0_other_with_cast.v2w_1))
		      return false;
		    return true;
		  };
		  function $serializer_159() {
		    $serializer_instance_159 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.ConversationTimestamp', this, 3);
		    tmp0_serialDesc.rq('created', true);
		    tmp0_serialDesc.rq('updated', true);
		    tmp0_serialDesc.rq('destroyed', true);
		    this.w2w_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_159).xf = function () {
		    return this.w2w_1;
		  };
		  protoOf($serializer_159).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_159).zf = function (decoder) {
		    var tmp0_desc = this.w2w_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return ConversationTimestamp_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_159).x2w = function (encoder, value) {
		    var tmp0_desc = this.w2w_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.y2w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.y2w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.z2w_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.z2w_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.a2x_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.a2x_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_159).yf = function (encoder, value) {
		    return this.x2w(encoder, value instanceof ConversationTimestamp ? value : THROW_CCE());
		  };
		  var $serializer_instance_159;
		  function $serializer_getInstance_159() {
		    if ($serializer_instance_159 == null)
		      new $serializer_159();
		    return $serializer_instance_159;
		  }
		  function ConversationTimestamp_init_$Init$(seen1, created, updated, destroyed, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_159().w2w_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.y2w_1 = null;
		    else
		      $this.y2w_1 = created;
		    if (0 === (seen1 & 2))
		      $this.z2w_1 = null;
		    else
		      $this.z2w_1 = updated;
		    if (0 === (seen1 & 4))
		      $this.a2x_1 = null;
		    else
		      $this.a2x_1 = destroyed;
		    return $this;
		  }
		  function ConversationTimestamp_init_$Create$(seen1, created, updated, destroyed, serializationConstructorMarker) {
		    return ConversationTimestamp_init_$Init$(seen1, created, updated, destroyed, serializationConstructorMarker, objectCreate(protoOf(ConversationTimestamp)));
		  }
		  function ConversationTimestamp() {
		  }
		  protoOf(ConversationTimestamp).toString = function () {
		    return 'ConversationTimestamp(created=' + this.y2w_1 + ', updated=' + this.z2w_1 + ', destroyed=' + this.a2x_1 + ')';
		  };
		  protoOf(ConversationTimestamp).hashCode = function () {
		    var result = this.y2w_1 == null ? 0 : getStringHashCode(this.y2w_1);
		    result = imul(result, 31) + (this.z2w_1 == null ? 0 : getStringHashCode(this.z2w_1)) | 0;
		    result = imul(result, 31) + (this.a2x_1 == null ? 0 : getStringHashCode(this.a2x_1)) | 0;
		    return result;
		  };
		  protoOf(ConversationTimestamp).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationTimestamp))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationTimestamp ? other : THROW_CCE();
		    if (!(this.y2w_1 == tmp0_other_with_cast.y2w_1))
		      return false;
		    if (!(this.z2w_1 == tmp0_other_with_cast.z2w_1))
		      return false;
		    if (!(this.a2x_1 == tmp0_other_with_cast.a2x_1))
		      return false;
		    return true;
		  };
		  var ConversationState_ACTIVE_instance;
		  var ConversationState_INACTIVE_instance;
		  var ConversationState_DELETED_instance;
		  function values_1() {
		    return [ConversationState_ACTIVE_getInstance(), ConversationState_INACTIVE_getInstance(), ConversationState_DELETED_getInstance()];
		  }
		  var ConversationState_entriesInitialized;
		  function ConversationState_initEntries() {
		    if (ConversationState_entriesInitialized)
		      return Unit_instance;
		    ConversationState_entriesInitialized = true;
		    ConversationState_ACTIVE_instance = new ConversationState('ACTIVE', 0);
		    ConversationState_INACTIVE_instance = new ConversationState('INACTIVE', 1);
		    ConversationState_DELETED_instance = new ConversationState('DELETED', 2);
		  }
		  function ConversationState(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function ConversationsPage(conversations, previousCursor, nextCursor) {
		    previousCursor = previousCursor === VOID ? null : previousCursor;
		    nextCursor = nextCursor === VOID ? null : nextCursor;
		    this.b2x_1 = conversations;
		    this.c2x_1 = previousCursor;
		    this.d2x_1 = nextCursor;
		  }
		  protoOf(ConversationsPage).toString = function () {
		    return 'ConversationsPage(conversations=' + toString(this.b2x_1) + ', previousCursor=' + this.c2x_1 + ', nextCursor=' + this.d2x_1 + ')';
		  };
		  protoOf(ConversationsPage).hashCode = function () {
		    var result = hashCode(this.b2x_1);
		    result = imul(result, 31) + (this.c2x_1 == null ? 0 : getStringHashCode(this.c2x_1)) | 0;
		    result = imul(result, 31) + (this.d2x_1 == null ? 0 : getStringHashCode(this.d2x_1)) | 0;
		    return result;
		  };
		  protoOf(ConversationsPage).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationsPage))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationsPage ? other : THROW_CCE();
		    if (!equals(this.b2x_1, tmp0_other_with_cast.b2x_1))
		      return false;
		    if (!(this.c2x_1 == tmp0_other_with_cast.c2x_1))
		      return false;
		    if (!(this.d2x_1 == tmp0_other_with_cast.d2x_1))
		      return false;
		    return true;
		  };
		  function ConversationState_ACTIVE_getInstance() {
		    ConversationState_initEntries();
		    return ConversationState_ACTIVE_instance;
		  }
		  function ConversationState_INACTIVE_getInstance() {
		    ConversationState_initEntries();
		    return ConversationState_INACTIVE_instance;
		  }
		  function ConversationState_DELETED_getInstance() {
		    ConversationState_initEntries();
		    return ConversationState_DELETED_instance;
		  }
		  function EventState(seen, delivered, submitted, rejected, undeliverable) {
		    seen = seen === VOID ? null : seen;
		    delivered = delivered === VOID ? null : delivered;
		    submitted = submitted === VOID ? null : submitted;
		    rejected = rejected === VOID ? null : rejected;
		    undeliverable = undeliverable === VOID ? null : undeliverable;
		    this.e2x_1 = seen;
		    this.f2x_1 = delivered;
		    this.g2x_1 = submitted;
		    this.h2x_1 = rejected;
		    this.i2x_1 = undeliverable;
		    var tmp = this;
		    // Inline function 'kotlin.collections.reduce' call
		    var tmp0_safe_receiver = this.e2x_1;
		    var tmp_0;
		    if (tmp0_safe_receiver == null) {
		      tmp_0 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      tmp_0 = new Pair(EventStateType_SEEN_getInstance(), Companion_getInstance().v10(tmp0_safe_receiver));
		    }
		    var tmp_1 = tmp_0;
		    var tmp1_safe_receiver = this.f2x_1;
		    var tmp_2;
		    if (tmp1_safe_receiver == null) {
		      tmp_2 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      tmp_2 = new Pair(EventStateType_DELIVERED_getInstance(), Companion_getInstance().v10(tmp1_safe_receiver));
		    }
		    var tmp_3 = tmp_2;
		    var tmp2_safe_receiver = this.g2x_1;
		    var tmp_4;
		    if (tmp2_safe_receiver == null) {
		      tmp_4 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      tmp_4 = new Pair(EventStateType_SUBMITTED_getInstance(), Companion_getInstance().v10(tmp2_safe_receiver));
		    }
		    var tmp_5 = tmp_4;
		    var tmp3_safe_receiver = this.h2x_1;
		    var tmp_6;
		    if (tmp3_safe_receiver == null) {
		      tmp_6 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      tmp_6 = new Pair(EventStateType_REJECTED_getInstance(), Companion_getInstance().v10(tmp3_safe_receiver));
		    }
		    var tmp_7 = tmp_6;
		    var tmp4_safe_receiver = this.i2x_1;
		    var tmp_8;
		    if (tmp4_safe_receiver == null) {
		      tmp_8 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      tmp_8 = new Pair(EventStateType_UNDELIVERABLE_getInstance(), Companion_getInstance().v10(tmp4_safe_receiver));
		    }
		    var iterator = listOfNotNull([tmp_1, tmp_3, tmp_5, tmp_7, tmp_8, new Pair(EventStateType_NONE_getInstance(), Companion_getInstance().r10_1)]).i();
		    if (!iterator.j())
		      throw UnsupportedOperationException_init_$Create$("Empty collection can't be reduced.");
		    var accumulator = iterator.k();
		    while (iterator.j()) {
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>' call
		      var acc = accumulator;
		      var pair = iterator.k();
		      // Inline function 'kotlin.takeIf' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_9;
		      // Inline function 'com.vonage.clientcore.core.api.models.EventState.current.<anonymous>.<anonymous>' call
		      if (acc.n8_1.y10(pair.n8_1) > 0) {
		        tmp_9 = acc;
		      } else {
		        tmp_9 = null;
		      }
		      var tmp0_elvis_lhs = tmp_9;
		      accumulator = tmp0_elvis_lhs == null ? pair : tmp0_elvis_lhs;
		    }
		    tmp.j2x_1 = accumulator.m8_1;
		  }
		  protoOf(EventState).toString = function () {
		    return 'EventState(seen=' + this.e2x_1 + ', delivered=' + this.f2x_1 + ', submitted=' + this.g2x_1 + ', rejected=' + this.h2x_1 + ', undeliverable=' + this.i2x_1 + ')';
		  };
		  protoOf(EventState).hashCode = function () {
		    var result = this.e2x_1 == null ? 0 : getStringHashCode(this.e2x_1);
		    result = imul(result, 31) + (this.f2x_1 == null ? 0 : getStringHashCode(this.f2x_1)) | 0;
		    result = imul(result, 31) + (this.g2x_1 == null ? 0 : getStringHashCode(this.g2x_1)) | 0;
		    result = imul(result, 31) + (this.h2x_1 == null ? 0 : getStringHashCode(this.h2x_1)) | 0;
		    result = imul(result, 31) + (this.i2x_1 == null ? 0 : getStringHashCode(this.i2x_1)) | 0;
		    return result;
		  };
		  protoOf(EventState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EventState))
		      return false;
		    var tmp0_other_with_cast = other instanceof EventState ? other : THROW_CCE();
		    if (!(this.e2x_1 == tmp0_other_with_cast.e2x_1))
		      return false;
		    if (!(this.f2x_1 == tmp0_other_with_cast.f2x_1))
		      return false;
		    if (!(this.g2x_1 == tmp0_other_with_cast.g2x_1))
		      return false;
		    if (!(this.h2x_1 == tmp0_other_with_cast.h2x_1))
		      return false;
		    if (!(this.i2x_1 == tmp0_other_with_cast.i2x_1))
		      return false;
		    return true;
		  };
		  var EventStateType_SEEN_instance;
		  var EventStateType_DELIVERED_instance;
		  var EventStateType_SUBMITTED_instance;
		  var EventStateType_REJECTED_instance;
		  var EventStateType_UNDELIVERABLE_instance;
		  var EventStateType_NONE_instance;
		  var EventStateType_entriesInitialized;
		  function EventStateType_initEntries() {
		    if (EventStateType_entriesInitialized)
		      return Unit_instance;
		    EventStateType_entriesInitialized = true;
		    EventStateType_SEEN_instance = new EventStateType('SEEN', 0);
		    EventStateType_DELIVERED_instance = new EventStateType('DELIVERED', 1);
		    EventStateType_SUBMITTED_instance = new EventStateType('SUBMITTED', 2);
		    EventStateType_REJECTED_instance = new EventStateType('REJECTED', 3);
		    EventStateType_UNDELIVERABLE_instance = new EventStateType('UNDELIVERABLE', 4);
		    EventStateType_NONE_instance = new EventStateType('NONE', 5);
		  }
		  function EventStateType(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function EventsPage(events, previousCursor, nextCursor) {
		    previousCursor = previousCursor === VOID ? null : previousCursor;
		    nextCursor = nextCursor === VOID ? null : nextCursor;
		    this.k2x_1 = events;
		    this.l2x_1 = previousCursor;
		    this.m2x_1 = nextCursor;
		  }
		  protoOf(EventsPage).toString = function () {
		    return 'EventsPage(events=' + toString(this.k2x_1) + ', previousCursor=' + this.l2x_1 + ', nextCursor=' + this.m2x_1 + ')';
		  };
		  protoOf(EventsPage).hashCode = function () {
		    var result = hashCode(this.k2x_1);
		    result = imul(result, 31) + (this.l2x_1 == null ? 0 : getStringHashCode(this.l2x_1)) | 0;
		    result = imul(result, 31) + (this.m2x_1 == null ? 0 : getStringHashCode(this.m2x_1)) | 0;
		    return result;
		  };
		  protoOf(EventsPage).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EventsPage))
		      return false;
		    var tmp0_other_with_cast = other instanceof EventsPage ? other : THROW_CCE();
		    if (!equals(this.k2x_1, tmp0_other_with_cast.k2x_1))
		      return false;
		    if (!(this.l2x_1 == tmp0_other_with_cast.l2x_1))
		      return false;
		    if (!(this.m2x_1 == tmp0_other_with_cast.m2x_1))
		      return false;
		    return true;
		  };
		  function PersistentConversationEvent() {
		  }
		  function EmbeddedInfo(memberId, user) {
		    this.n2x_1 = memberId;
		    this.o2x_1 = user;
		  }
		  protoOf(EmbeddedInfo).toString = function () {
		    return 'EmbeddedInfo(memberId=' + this.n2x_1 + ', user=' + this.o2x_1.toString() + ')';
		  };
		  protoOf(EmbeddedInfo).hashCode = function () {
		    var result = this.n2x_1 == null ? 0 : getStringHashCode(this.n2x_1);
		    result = imul(result, 31) + this.o2x_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(EmbeddedInfo).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EmbeddedInfo))
		      return false;
		    var tmp0_other_with_cast = other instanceof EmbeddedInfo ? other : THROW_CCE();
		    if (!(this.n2x_1 == tmp0_other_with_cast.n2x_1))
		      return false;
		    if (!this.o2x_1.equals(tmp0_other_with_cast.o2x_1))
		      return false;
		    return true;
		  };
		  function Body_15(user, memberId, channel) {
		    this.p2x_1 = user;
		    this.q2x_1 = memberId;
		    this.r2x_1 = channel;
		  }
		  protoOf(Body_15).toString = function () {
		    return 'Body(user=' + this.p2x_1.toString() + ', memberId=' + this.q2x_1 + ', channel=' + this.r2x_1.toString() + ')';
		  };
		  protoOf(Body_15).hashCode = function () {
		    var result = this.p2x_1.hashCode();
		    result = imul(result, 31) + getStringHashCode(this.q2x_1) | 0;
		    result = imul(result, 31) + this.r2x_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(Body_15).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_15))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_15 ? other : THROW_CCE();
		    if (!this.p2x_1.equals(tmp0_other_with_cast.p2x_1))
		      return false;
		    if (!(this.q2x_1 === tmp0_other_with_cast.q2x_1))
		      return false;
		    if (!this.r2x_1.equals(tmp0_other_with_cast.r2x_1))
		      return false;
		    return true;
		  };
		  function MemberInvitedConversationEvent(id, timestamp, conversationId, from, body) {
		    this.s2x_1 = id;
		    this.t2x_1 = timestamp;
		    this.u2x_1 = conversationId;
		    this.v2x_1 = from;
		    this.w2x_1 = body;
		  }
		  protoOf(MemberInvitedConversationEvent).g2s = function () {
		    return this.u2x_1;
		  };
		  protoOf(MemberInvitedConversationEvent).toString = function () {
		    return 'MemberInvitedConversationEvent(id=' + this.s2x_1 + ', timestamp=' + this.t2x_1 + ', conversationId=' + this.u2x_1 + ', from=' + toString(this.v2x_1) + ', body=' + this.w2x_1.toString() + ')';
		  };
		  protoOf(MemberInvitedConversationEvent).hashCode = function () {
		    var result = this.s2x_1;
		    result = imul(result, 31) + getStringHashCode(this.t2x_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u2x_1) | 0;
		    result = imul(result, 31) + hashCode(this.v2x_1) | 0;
		    result = imul(result, 31) + this.w2x_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MemberInvitedConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberInvitedConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberInvitedConversationEvent ? other : THROW_CCE();
		    if (!(this.s2x_1 === tmp0_other_with_cast.s2x_1))
		      return false;
		    if (!(this.t2x_1 === tmp0_other_with_cast.t2x_1))
		      return false;
		    if (!(this.u2x_1 === tmp0_other_with_cast.u2x_1))
		      return false;
		    if (!equals(this.v2x_1, tmp0_other_with_cast.v2x_1))
		      return false;
		    if (!this.w2x_1.equals(tmp0_other_with_cast.w2x_1))
		      return false;
		    return true;
		  };
		  function Companion_139() {
		  }
		  protoOf(Companion_139).k23 = function (embedded) {
		    var tmp;
		    if (embedded == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.run' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.models.Companion.invoke.<anonymous>' call
		      var tmp0_safe_receiver = embedded.o1x_1;
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.models.Companion.invoke.<anonymous>.<anonymous>' call
		        var tmp0_safe_receiver_0 = embedded.n1x_1;
		        tmp_0 = new EmbeddedInfo(tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.y1x_1, tmp0_safe_receiver.a1x());
		      }
		      var tmp1_elvis_lhs = tmp_0;
		      tmp = tmp1_elvis_lhs == null ? System_instance : tmp1_elvis_lhs;
		    }
		    var tmp1_elvis_lhs_0 = tmp;
		    return tmp1_elvis_lhs_0 == null ? System_instance : tmp1_elvis_lhs_0;
		  };
		  var Companion_instance_140;
		  function MemberJoinedConversationEvent(id, timestamp, conversationId, from, body) {
		    this.x2x_1 = id;
		    this.y2x_1 = timestamp;
		    this.z2x_1 = conversationId;
		    this.a2y_1 = from;
		    this.b2y_1 = body;
		  }
		  protoOf(MemberJoinedConversationEvent).g2s = function () {
		    return this.z2x_1;
		  };
		  protoOf(MemberJoinedConversationEvent).toString = function () {
		    return 'MemberJoinedConversationEvent(id=' + this.x2x_1 + ', timestamp=' + this.y2x_1 + ', conversationId=' + this.z2x_1 + ', from=' + toString(this.a2y_1) + ', body=' + this.b2y_1.toString() + ')';
		  };
		  protoOf(MemberJoinedConversationEvent).hashCode = function () {
		    var result = this.x2x_1;
		    result = imul(result, 31) + getStringHashCode(this.y2x_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z2x_1) | 0;
		    result = imul(result, 31) + hashCode(this.a2y_1) | 0;
		    result = imul(result, 31) + this.b2y_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MemberJoinedConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinedConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinedConversationEvent ? other : THROW_CCE();
		    if (!(this.x2x_1 === tmp0_other_with_cast.x2x_1))
		      return false;
		    if (!(this.y2x_1 === tmp0_other_with_cast.y2x_1))
		      return false;
		    if (!(this.z2x_1 === tmp0_other_with_cast.z2x_1))
		      return false;
		    if (!equals(this.a2y_1, tmp0_other_with_cast.a2y_1))
		      return false;
		    if (!this.b2y_1.equals(tmp0_other_with_cast.b2y_1))
		      return false;
		    return true;
		  };
		  function MemberLeftConversationEvent(id, timestamp, conversationId, from, body) {
		    this.c2y_1 = id;
		    this.d2y_1 = timestamp;
		    this.e2y_1 = conversationId;
		    this.f2y_1 = from;
		    this.g2y_1 = body;
		  }
		  protoOf(MemberLeftConversationEvent).g2s = function () {
		    return this.e2y_1;
		  };
		  protoOf(MemberLeftConversationEvent).toString = function () {
		    return 'MemberLeftConversationEvent(id=' + this.c2y_1 + ', timestamp=' + this.d2y_1 + ', conversationId=' + this.e2y_1 + ', from=' + toString(this.f2y_1) + ', body=' + this.g2y_1.toString() + ')';
		  };
		  protoOf(MemberLeftConversationEvent).hashCode = function () {
		    var result = this.c2y_1;
		    result = imul(result, 31) + getStringHashCode(this.d2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e2y_1) | 0;
		    result = imul(result, 31) + hashCode(this.f2y_1) | 0;
		    result = imul(result, 31) + this.g2y_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MemberLeftConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberLeftConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberLeftConversationEvent ? other : THROW_CCE();
		    if (!(this.c2y_1 === tmp0_other_with_cast.c2y_1))
		      return false;
		    if (!(this.d2y_1 === tmp0_other_with_cast.d2y_1))
		      return false;
		    if (!(this.e2y_1 === tmp0_other_with_cast.e2y_1))
		      return false;
		    if (!equals(this.f2y_1, tmp0_other_with_cast.f2y_1))
		      return false;
		    if (!this.g2y_1.equals(tmp0_other_with_cast.g2y_1))
		      return false;
		    return true;
		  };
		  function CustomConversationEvent(id, timestamp, conversationId, from, body, eventType) {
		    this.h2y_1 = id;
		    this.i2y_1 = timestamp;
		    this.j2y_1 = conversationId;
		    this.k2y_1 = from;
		    this.l2y_1 = body;
		    this.m2y_1 = eventType;
		  }
		  protoOf(CustomConversationEvent).g2s = function () {
		    return this.j2y_1;
		  };
		  protoOf(CustomConversationEvent).toString = function () {
		    return 'CustomConversationEvent(id=' + this.h2y_1 + ', timestamp=' + this.i2y_1 + ', conversationId=' + this.j2y_1 + ', from=' + toString(this.k2y_1) + ', body=' + this.l2y_1 + ', eventType=' + this.m2y_1 + ')';
		  };
		  protoOf(CustomConversationEvent).hashCode = function () {
		    var result = this.h2y_1;
		    result = imul(result, 31) + getStringHashCode(this.i2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2y_1) | 0;
		    result = imul(result, 31) + hashCode(this.k2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.l2y_1) | 0;
		    result = imul(result, 31) + (this.m2y_1 == null ? 0 : getStringHashCode(this.m2y_1)) | 0;
		    return result;
		  };
		  protoOf(CustomConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CustomConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof CustomConversationEvent ? other : THROW_CCE();
		    if (!(this.h2y_1 === tmp0_other_with_cast.h2y_1))
		      return false;
		    if (!(this.i2y_1 === tmp0_other_with_cast.i2y_1))
		      return false;
		    if (!(this.j2y_1 === tmp0_other_with_cast.j2y_1))
		      return false;
		    if (!equals(this.k2y_1, tmp0_other_with_cast.k2y_1))
		      return false;
		    if (!(this.l2y_1 === tmp0_other_with_cast.l2y_1))
		      return false;
		    if (!(this.m2y_1 == tmp0_other_with_cast.m2y_1))
		      return false;
		    return true;
		  };
		  function EphemeralConversationEvent(timestamp, conversationId, from, body) {
		    this.n2y_1 = timestamp;
		    this.o2y_1 = conversationId;
		    this.p2y_1 = from;
		    this.q2y_1 = body;
		  }
		  protoOf(EphemeralConversationEvent).g2s = function () {
		    return this.o2y_1;
		  };
		  protoOf(EphemeralConversationEvent).toString = function () {
		    return 'EphemeralConversationEvent(timestamp=' + this.n2y_1 + ', conversationId=' + this.o2y_1 + ', from=' + toString(this.p2y_1) + ', body=' + this.q2y_1 + ')';
		  };
		  protoOf(EphemeralConversationEvent).hashCode = function () {
		    var result = getStringHashCode(this.n2y_1);
		    result = imul(result, 31) + getStringHashCode(this.o2y_1) | 0;
		    result = imul(result, 31) + hashCode(this.p2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.q2y_1) | 0;
		    return result;
		  };
		  protoOf(EphemeralConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EphemeralConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof EphemeralConversationEvent ? other : THROW_CCE();
		    if (!(this.n2y_1 === tmp0_other_with_cast.n2y_1))
		      return false;
		    if (!(this.o2y_1 === tmp0_other_with_cast.o2y_1))
		      return false;
		    if (!equals(this.p2y_1, tmp0_other_with_cast.p2y_1))
		      return false;
		    if (!(this.q2y_1 === tmp0_other_with_cast.q2y_1))
		      return false;
		    return true;
		  };
		  function EventStateBody(eventId) {
		    this.r2y_1 = eventId;
		  }
		  protoOf(EventStateBody).toString = function () {
		    return 'EventStateBody(eventId=' + this.r2y_1 + ')';
		  };
		  protoOf(EventStateBody).hashCode = function () {
		    return this.r2y_1;
		  };
		  protoOf(EventStateBody).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EventStateBody))
		      return false;
		    var tmp0_other_with_cast = other instanceof EventStateBody ? other : THROW_CCE();
		    if (!(this.r2y_1 === tmp0_other_with_cast.r2y_1))
		      return false;
		    return true;
		  };
		  function EventDeleteConversationEvent(id, timestamp, conversationId, from, body) {
		    this.s2y_1 = id;
		    this.t2y_1 = timestamp;
		    this.u2y_1 = conversationId;
		    this.v2y_1 = from;
		    this.w2y_1 = body;
		  }
		  protoOf(EventDeleteConversationEvent).g2s = function () {
		    return this.u2y_1;
		  };
		  protoOf(EventDeleteConversationEvent).toString = function () {
		    return 'EventDeleteConversationEvent(id=' + this.s2y_1 + ', timestamp=' + this.t2y_1 + ', conversationId=' + this.u2y_1 + ', from=' + toString(this.v2y_1) + ', body=' + this.w2y_1.toString() + ')';
		  };
		  protoOf(EventDeleteConversationEvent).hashCode = function () {
		    var result = this.s2y_1;
		    result = imul(result, 31) + getStringHashCode(this.t2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u2y_1) | 0;
		    result = imul(result, 31) + hashCode(this.v2y_1) | 0;
		    result = imul(result, 31) + this.w2y_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(EventDeleteConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EventDeleteConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof EventDeleteConversationEvent ? other : THROW_CCE();
		    if (!(this.s2y_1 === tmp0_other_with_cast.s2y_1))
		      return false;
		    if (!(this.t2y_1 === tmp0_other_with_cast.t2y_1))
		      return false;
		    if (!(this.u2y_1 === tmp0_other_with_cast.u2y_1))
		      return false;
		    if (!equals(this.v2y_1, tmp0_other_with_cast.v2y_1))
		      return false;
		    if (!this.w2y_1.equals(tmp0_other_with_cast.w2y_1))
		      return false;
		    return true;
		  };
		  function MessageDeliveredEvent(id, timestamp, conversationId, from, body) {
		    this.x2y_1 = id;
		    this.y2y_1 = timestamp;
		    this.z2y_1 = conversationId;
		    this.a2z_1 = from;
		    this.b2z_1 = body;
		  }
		  protoOf(MessageDeliveredEvent).g2s = function () {
		    return this.z2y_1;
		  };
		  protoOf(MessageDeliveredEvent).toString = function () {
		    return 'MessageDeliveredEvent(id=' + this.x2y_1 + ', timestamp=' + this.y2y_1 + ', conversationId=' + this.z2y_1 + ', from=' + toString(this.a2z_1) + ', body=' + this.b2z_1.toString() + ')';
		  };
		  protoOf(MessageDeliveredEvent).hashCode = function () {
		    var result = this.x2y_1;
		    result = imul(result, 31) + getStringHashCode(this.y2y_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.z2y_1) | 0;
		    result = imul(result, 31) + hashCode(this.a2z_1) | 0;
		    result = imul(result, 31) + this.b2z_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MessageDeliveredEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageDeliveredEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageDeliveredEvent ? other : THROW_CCE();
		    if (!(this.x2y_1 === tmp0_other_with_cast.x2y_1))
		      return false;
		    if (!(this.y2y_1 === tmp0_other_with_cast.y2y_1))
		      return false;
		    if (!(this.z2y_1 === tmp0_other_with_cast.z2y_1))
		      return false;
		    if (!equals(this.a2z_1, tmp0_other_with_cast.a2z_1))
		      return false;
		    if (!this.b2z_1.equals(tmp0_other_with_cast.b2z_1))
		      return false;
		    return true;
		  };
		  function MessageRejectedEvent(id, timestamp, conversationId, from, body) {
		    this.c2z_1 = id;
		    this.d2z_1 = timestamp;
		    this.e2z_1 = conversationId;
		    this.f2z_1 = from;
		    this.g2z_1 = body;
		  }
		  protoOf(MessageRejectedEvent).g2s = function () {
		    return this.e2z_1;
		  };
		  protoOf(MessageRejectedEvent).toString = function () {
		    return 'MessageRejectedEvent(id=' + this.c2z_1 + ', timestamp=' + this.d2z_1 + ', conversationId=' + this.e2z_1 + ', from=' + toString(this.f2z_1) + ', body=' + this.g2z_1.toString() + ')';
		  };
		  protoOf(MessageRejectedEvent).hashCode = function () {
		    var result = this.c2z_1;
		    result = imul(result, 31) + getStringHashCode(this.d2z_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e2z_1) | 0;
		    result = imul(result, 31) + hashCode(this.f2z_1) | 0;
		    result = imul(result, 31) + this.g2z_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MessageRejectedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageRejectedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageRejectedEvent ? other : THROW_CCE();
		    if (!(this.c2z_1 === tmp0_other_with_cast.c2z_1))
		      return false;
		    if (!(this.d2z_1 === tmp0_other_with_cast.d2z_1))
		      return false;
		    if (!(this.e2z_1 === tmp0_other_with_cast.e2z_1))
		      return false;
		    if (!equals(this.f2z_1, tmp0_other_with_cast.f2z_1))
		      return false;
		    if (!this.g2z_1.equals(tmp0_other_with_cast.g2z_1))
		      return false;
		    return true;
		  };
		  function MessageUndeliverableEvent(id, timestamp, conversationId, from, body) {
		    this.h2z_1 = id;
		    this.i2z_1 = timestamp;
		    this.j2z_1 = conversationId;
		    this.k2z_1 = from;
		    this.l2z_1 = body;
		  }
		  protoOf(MessageUndeliverableEvent).g2s = function () {
		    return this.j2z_1;
		  };
		  protoOf(MessageUndeliverableEvent).toString = function () {
		    return 'MessageUndeliverableEvent(id=' + this.h2z_1 + ', timestamp=' + this.i2z_1 + ', conversationId=' + this.j2z_1 + ', from=' + toString(this.k2z_1) + ', body=' + this.l2z_1.toString() + ')';
		  };
		  protoOf(MessageUndeliverableEvent).hashCode = function () {
		    var result = this.h2z_1;
		    result = imul(result, 31) + getStringHashCode(this.i2z_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j2z_1) | 0;
		    result = imul(result, 31) + hashCode(this.k2z_1) | 0;
		    result = imul(result, 31) + this.l2z_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MessageUndeliverableEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageUndeliverableEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageUndeliverableEvent ? other : THROW_CCE();
		    if (!(this.h2z_1 === tmp0_other_with_cast.h2z_1))
		      return false;
		    if (!(this.i2z_1 === tmp0_other_with_cast.i2z_1))
		      return false;
		    if (!(this.j2z_1 === tmp0_other_with_cast.j2z_1))
		      return false;
		    if (!equals(this.k2z_1, tmp0_other_with_cast.k2z_1))
		      return false;
		    if (!this.l2z_1.equals(tmp0_other_with_cast.l2z_1))
		      return false;
		    return true;
		  };
		  function MessageSubmittedEvent(id, timestamp, conversationId, from, body) {
		    this.m2z_1 = id;
		    this.n2z_1 = timestamp;
		    this.o2z_1 = conversationId;
		    this.p2z_1 = from;
		    this.q2z_1 = body;
		  }
		  protoOf(MessageSubmittedEvent).g2s = function () {
		    return this.o2z_1;
		  };
		  protoOf(MessageSubmittedEvent).toString = function () {
		    return 'MessageSubmittedEvent(id=' + this.m2z_1 + ', timestamp=' + this.n2z_1 + ', conversationId=' + this.o2z_1 + ', from=' + toString(this.p2z_1) + ', body=' + this.q2z_1.toString() + ')';
		  };
		  protoOf(MessageSubmittedEvent).hashCode = function () {
		    var result = this.m2z_1;
		    result = imul(result, 31) + getStringHashCode(this.n2z_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.o2z_1) | 0;
		    result = imul(result, 31) + hashCode(this.p2z_1) | 0;
		    result = imul(result, 31) + this.q2z_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MessageSubmittedEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageSubmittedEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageSubmittedEvent ? other : THROW_CCE();
		    if (!(this.m2z_1 === tmp0_other_with_cast.m2z_1))
		      return false;
		    if (!(this.n2z_1 === tmp0_other_with_cast.n2z_1))
		      return false;
		    if (!(this.o2z_1 === tmp0_other_with_cast.o2z_1))
		      return false;
		    if (!equals(this.p2z_1, tmp0_other_with_cast.p2z_1))
		      return false;
		    if (!this.q2z_1.equals(tmp0_other_with_cast.q2z_1))
		      return false;
		    return true;
		  };
		  function MessageSeenEvent(id, timestamp, conversationId, from, body) {
		    this.r2z_1 = id;
		    this.s2z_1 = timestamp;
		    this.t2z_1 = conversationId;
		    this.u2z_1 = from;
		    this.v2z_1 = body;
		  }
		  protoOf(MessageSeenEvent).g2s = function () {
		    return this.t2z_1;
		  };
		  protoOf(MessageSeenEvent).toString = function () {
		    return 'MessageSeenEvent(id=' + this.r2z_1 + ', timestamp=' + this.s2z_1 + ', conversationId=' + this.t2z_1 + ', from=' + toString(this.u2z_1) + ', body=' + this.v2z_1.toString() + ')';
		  };
		  protoOf(MessageSeenEvent).hashCode = function () {
		    var result = this.r2z_1;
		    result = imul(result, 31) + getStringHashCode(this.s2z_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.t2z_1) | 0;
		    result = imul(result, 31) + hashCode(this.u2z_1) | 0;
		    result = imul(result, 31) + this.v2z_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(MessageSeenEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageSeenEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageSeenEvent ? other : THROW_CCE();
		    if (!(this.r2z_1 === tmp0_other_with_cast.r2z_1))
		      return false;
		    if (!(this.s2z_1 === tmp0_other_with_cast.s2z_1))
		      return false;
		    if (!(this.t2z_1 === tmp0_other_with_cast.t2z_1))
		      return false;
		    if (!equals(this.u2z_1, tmp0_other_with_cast.u2z_1))
		      return false;
		    if (!this.v2z_1.equals(tmp0_other_with_cast.v2z_1))
		      return false;
		    return true;
		  };
		  function System() {
		  }
		  var System_instance;
		  function EventStateType_SEEN_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_SEEN_instance;
		  }
		  function EventStateType_DELIVERED_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_DELIVERED_instance;
		  }
		  function EventStateType_SUBMITTED_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_SUBMITTED_instance;
		  }
		  function EventStateType_REJECTED_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_REJECTED_instance;
		  }
		  function EventStateType_UNDELIVERABLE_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_UNDELIVERABLE_instance;
		  }
		  function EventStateType_NONE_getInstance() {
		    EventStateType_initEntries();
		    return EventStateType_NONE_instance;
		  }
		  function Companion_140() {
		  }
		  function $serializer_160() {
		    $serializer_instance_160 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.MediaState', this, 6);
		    tmp0_serialDesc.rq('mute', false);
		    tmp0_serialDesc.rq('earmuff', false);
		    tmp0_serialDesc.rq('play_stream', false);
		    tmp0_serialDesc.rq('tts', false);
		    tmp0_serialDesc.rq('recording', false);
		    tmp0_serialDesc.rq('transcribing', false);
		    this.w2z_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_160).xf = function () {
		    return this.w2z_1;
		  };
		  protoOf($serializer_160).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance()];
		  };
		  protoOf($serializer_160).zf = function (decoder) {
		    var tmp0_desc = this.w2z_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = false;
		    var tmp5_local1 = false;
		    var tmp6_local2 = false;
		    var tmp7_local3 = false;
		    var tmp8_local4 = false;
		    var tmp9_local5 = false;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.jj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.jj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.jj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.jj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.jj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.jj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.jj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.jj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.jj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.jj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.jj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.jj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return MediaState_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_160).x2z = function (encoder, value) {
		    var tmp0_desc = this.w2z_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.ok(tmp0_desc, 0, value.y2z_1);
		    tmp1_output.ok(tmp0_desc, 1, value.z2z_1);
		    tmp1_output.ok(tmp0_desc, 2, value.a30_1);
		    tmp1_output.ok(tmp0_desc, 3, value.b30_1);
		    tmp1_output.ok(tmp0_desc, 4, value.c30_1);
		    tmp1_output.ok(tmp0_desc, 5, value.d30_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_160).yf = function (encoder, value) {
		    return this.x2z(encoder, value instanceof MediaState ? value : THROW_CCE());
		  };
		  var $serializer_instance_160;
		  function $serializer_getInstance_160() {
		    if ($serializer_instance_160 == null)
		      new $serializer_160();
		    return $serializer_instance_160;
		  }
		  function MediaState_init_$Init$(seen1, mute, earmuff, playStream, tts, recording, transcribing, serializationConstructorMarker, $this) {
		    if (!(63 === (63 & seen1))) {
		      throwMissingFieldException(seen1, 63, $serializer_getInstance_160().w2z_1);
		    }
		    $this.y2z_1 = mute;
		    $this.z2z_1 = earmuff;
		    $this.a30_1 = playStream;
		    $this.b30_1 = tts;
		    $this.c30_1 = recording;
		    $this.d30_1 = transcribing;
		    return $this;
		  }
		  function MediaState_init_$Create$(seen1, mute, earmuff, playStream, tts, recording, transcribing, serializationConstructorMarker) {
		    return MediaState_init_$Init$(seen1, mute, earmuff, playStream, tts, recording, transcribing, serializationConstructorMarker, objectCreate(protoOf(MediaState)));
		  }
		  function MediaState(mute, earmuff, playStream, tts, recording, transcribing) {
		    this.y2z_1 = mute;
		    this.z2z_1 = earmuff;
		    this.a30_1 = playStream;
		    this.b30_1 = tts;
		    this.c30_1 = recording;
		    this.d30_1 = transcribing;
		  }
		  protoOf(MediaState).toString = function () {
		    return 'MediaState(mute=' + this.y2z_1 + ', earmuff=' + this.z2z_1 + ', playStream=' + this.a30_1 + ', tts=' + this.b30_1 + ', recording=' + this.c30_1 + ', transcribing=' + this.d30_1 + ')';
		  };
		  protoOf(MediaState).hashCode = function () {
		    var result = getBooleanHashCode(this.y2z_1);
		    result = imul(result, 31) + getBooleanHashCode(this.z2z_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.a30_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.b30_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.c30_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.d30_1) | 0;
		    return result;
		  };
		  protoOf(MediaState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaState))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaState ? other : THROW_CCE();
		    if (!(this.y2z_1 === tmp0_other_with_cast.y2z_1))
		      return false;
		    if (!(this.z2z_1 === tmp0_other_with_cast.z2z_1))
		      return false;
		    if (!(this.a30_1 === tmp0_other_with_cast.a30_1))
		      return false;
		    if (!(this.b30_1 === tmp0_other_with_cast.b30_1))
		      return false;
		    if (!(this.c30_1 === tmp0_other_with_cast.c30_1))
		      return false;
		    if (!(this.d30_1 === tmp0_other_with_cast.d30_1))
		      return false;
		    return true;
		  };
		  function Companion_141() {
		  }
		  protoOf(Companion_141).e30 = function (response) {
		    return new Leg(response.u1h_1, response.a1i_1, response.z1h_1, response.v1h_1, response.w1h_1, response.x1h_1, response.y1h_1, response.b1i_1, response.c1i_1, response.d1i_1);
		  };
		  var Companion_instance_142;
		  function Leg(id, type, direction, conversationId, status, startTime, endTime, from, to, mediaState) {
		    this.f30_1 = id;
		    this.g30_1 = type;
		    this.h30_1 = direction;
		    this.i30_1 = conversationId;
		    this.j30_1 = status;
		    this.k30_1 = startTime;
		    this.l30_1 = endTime;
		    this.m30_1 = from;
		    this.n30_1 = to;
		    this.o30_1 = mediaState;
		  }
		  protoOf(Leg).toString = function () {
		    return 'Leg(id=' + this.f30_1 + ', type=' + this.g30_1 + ', direction=' + this.h30_1 + ', conversationId=' + this.i30_1 + ', status=' + this.j30_1 + ', startTime=' + this.k30_1 + ', endTime=' + this.l30_1 + ', from=' + this.m30_1.toString() + ', to=' + this.n30_1.toString() + ', mediaState=' + toString_0(this.o30_1) + ')';
		  };
		  protoOf(Leg).hashCode = function () {
		    var result = getStringHashCode(this.f30_1);
		    result = imul(result, 31) + getStringHashCode(this.g30_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.h30_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.i30_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.j30_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.k30_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.l30_1) | 0;
		    result = imul(result, 31) + this.m30_1.hashCode() | 0;
		    result = imul(result, 31) + this.n30_1.hashCode() | 0;
		    result = imul(result, 31) + (this.o30_1 == null ? 0 : this.o30_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(Leg).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Leg))
		      return false;
		    var tmp0_other_with_cast = other instanceof Leg ? other : THROW_CCE();
		    if (!(this.f30_1 === tmp0_other_with_cast.f30_1))
		      return false;
		    if (!(this.g30_1 === tmp0_other_with_cast.g30_1))
		      return false;
		    if (!(this.h30_1 === tmp0_other_with_cast.h30_1))
		      return false;
		    if (!(this.i30_1 === tmp0_other_with_cast.i30_1))
		      return false;
		    if (!(this.j30_1 === tmp0_other_with_cast.j30_1))
		      return false;
		    if (!(this.k30_1 === tmp0_other_with_cast.k30_1))
		      return false;
		    if (!(this.l30_1 === tmp0_other_with_cast.l30_1))
		      return false;
		    if (!this.m30_1.equals(tmp0_other_with_cast.m30_1))
		      return false;
		    if (!this.n30_1.equals(tmp0_other_with_cast.n30_1))
		      return false;
		    if (!equals(this.o30_1, tmp0_other_with_cast.o30_1))
		      return false;
		    return true;
		  };
		  function LegsPage(legs, previousCursor, nextCursor) {
		    previousCursor = previousCursor === VOID ? null : previousCursor;
		    nextCursor = nextCursor === VOID ? null : nextCursor;
		    this.p30_1 = legs;
		    this.q30_1 = previousCursor;
		    this.r30_1 = nextCursor;
		  }
		  protoOf(LegsPage).toString = function () {
		    return 'LegsPage(legs=' + toString(this.p30_1) + ', previousCursor=' + this.q30_1 + ', nextCursor=' + this.r30_1 + ')';
		  };
		  protoOf(LegsPage).hashCode = function () {
		    var result = hashCode(this.p30_1);
		    result = imul(result, 31) + (this.q30_1 == null ? 0 : getStringHashCode(this.q30_1)) | 0;
		    result = imul(result, 31) + (this.r30_1 == null ? 0 : getStringHashCode(this.r30_1)) | 0;
		    return result;
		  };
		  protoOf(LegsPage).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof LegsPage))
		      return false;
		    var tmp0_other_with_cast = other instanceof LegsPage ? other : THROW_CCE();
		    if (!equals(this.p30_1, tmp0_other_with_cast.p30_1))
		      return false;
		    if (!(this.q30_1 == tmp0_other_with_cast.q30_1))
		      return false;
		    if (!(this.r30_1 == tmp0_other_with_cast.r30_1))
		      return false;
		    return true;
		  };
		  var MemberState_INVITED_instance;
		  var MemberState_JOINED_instance;
		  var MemberState_LEFT_instance;
		  var MemberState_UNKNOWN_instance;
		  function values_2() {
		    return [MemberState_INVITED_getInstance(), MemberState_JOINED_getInstance(), MemberState_LEFT_getInstance(), MemberState_UNKNOWN_getInstance()];
		  }
		  var MemberState_entriesInitialized;
		  function MemberState_initEntries() {
		    if (MemberState_entriesInitialized)
		      return Unit_instance;
		    MemberState_entriesInitialized = true;
		    MemberState_INVITED_instance = new MemberState('INVITED', 0);
		    MemberState_JOINED_instance = new MemberState('JOINED', 1);
		    MemberState_LEFT_instance = new MemberState('LEFT', 2);
		    MemberState_UNKNOWN_instance = new MemberState('UNKNOWN', 3);
		  }
		  function MemberState(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function Companion_142() {
		  }
		  protoOf(Companion_142).r2s = function (response) {
		    var tmp0_safe_receiver = response.a1q_1;
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u1p_1;
		    return new Member(response.y1p_1, response.z1p_1, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.a1x());
		  };
		  var Companion_instance_143;
		  function Member(id, state, user, channel, timestamp) {
		    user = user === VOID ? null : user;
		    channel = channel === VOID ? null : channel;
		    timestamp = timestamp === VOID ? null : timestamp;
		    this.s30_1 = id;
		    this.t30_1 = state;
		    this.u30_1 = user;
		    this.v30_1 = channel;
		    this.w30_1 = timestamp;
		  }
		  protoOf(Member).toString = function () {
		    return 'Member(id=' + this.s30_1 + ', state=' + this.t30_1.toString() + ', user=' + toString_0(this.u30_1) + ', channel=' + toString_0(this.v30_1) + ', timestamp=' + toString_0(this.w30_1) + ')';
		  };
		  protoOf(Member).hashCode = function () {
		    var result = getStringHashCode(this.s30_1);
		    result = imul(result, 31) + this.t30_1.hashCode() | 0;
		    result = imul(result, 31) + (this.u30_1 == null ? 0 : this.u30_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.v30_1 == null ? 0 : this.v30_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.w30_1 == null ? 0 : this.w30_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(Member).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Member))
		      return false;
		    var tmp0_other_with_cast = other instanceof Member ? other : THROW_CCE();
		    if (!(this.s30_1 === tmp0_other_with_cast.s30_1))
		      return false;
		    if (!this.t30_1.equals(tmp0_other_with_cast.t30_1))
		      return false;
		    if (!equals(this.u30_1, tmp0_other_with_cast.u30_1))
		      return false;
		    if (!equals(this.v30_1, tmp0_other_with_cast.v30_1))
		      return false;
		    if (!equals(this.w30_1, tmp0_other_with_cast.w30_1))
		      return false;
		    return true;
		  };
		  function $serializer_161() {
		    $serializer_instance_161 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.MemberTimestamp', this, 3);
		    tmp0_serialDesc.rq('invited', true);
		    tmp0_serialDesc.rq('joined', true);
		    tmp0_serialDesc.rq('left', true);
		    this.x30_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_161).xf = function () {
		    return this.x30_1;
		  };
		  protoOf($serializer_161).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_161).zf = function (decoder) {
		    var tmp0_desc = this.x30_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return MemberTimestamp_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_161).y30 = function (encoder, value) {
		    var tmp0_desc = this.x30_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.z30_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.z30_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.a31_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.a31_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.b31_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.b31_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_161).yf = function (encoder, value) {
		    return this.y30(encoder, value instanceof MemberTimestamp ? value : THROW_CCE());
		  };
		  var $serializer_instance_161;
		  function $serializer_getInstance_161() {
		    if ($serializer_instance_161 == null)
		      new $serializer_161();
		    return $serializer_instance_161;
		  }
		  function MemberTimestamp_init_$Init$(seen1, invited, joined, left, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_161().x30_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.z30_1 = null;
		    else
		      $this.z30_1 = invited;
		    if (0 === (seen1 & 2))
		      $this.a31_1 = null;
		    else
		      $this.a31_1 = joined;
		    if (0 === (seen1 & 4))
		      $this.b31_1 = null;
		    else
		      $this.b31_1 = left;
		    return $this;
		  }
		  function MemberTimestamp_init_$Create$(seen1, invited, joined, left, serializationConstructorMarker) {
		    return MemberTimestamp_init_$Init$(seen1, invited, joined, left, serializationConstructorMarker, objectCreate(protoOf(MemberTimestamp)));
		  }
		  function MemberTimestamp() {
		  }
		  protoOf(MemberTimestamp).toString = function () {
		    return 'MemberTimestamp(invited=' + this.z30_1 + ', joined=' + this.a31_1 + ', left=' + this.b31_1 + ')';
		  };
		  protoOf(MemberTimestamp).hashCode = function () {
		    var result = this.z30_1 == null ? 0 : getStringHashCode(this.z30_1);
		    result = imul(result, 31) + (this.a31_1 == null ? 0 : getStringHashCode(this.a31_1)) | 0;
		    result = imul(result, 31) + (this.b31_1 == null ? 0 : getStringHashCode(this.b31_1)) | 0;
		    return result;
		  };
		  protoOf(MemberTimestamp).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberTimestamp))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberTimestamp ? other : THROW_CCE();
		    if (!(this.z30_1 == tmp0_other_with_cast.z30_1))
		      return false;
		    if (!(this.a31_1 == tmp0_other_with_cast.a31_1))
		      return false;
		    if (!(this.b31_1 == tmp0_other_with_cast.b31_1))
		      return false;
		    return true;
		  };
		  function MembersPage(members, previousCursor, nextCursor) {
		    previousCursor = previousCursor === VOID ? null : previousCursor;
		    nextCursor = nextCursor === VOID ? null : nextCursor;
		    this.c31_1 = members;
		    this.d31_1 = previousCursor;
		    this.e31_1 = nextCursor;
		  }
		  protoOf(MembersPage).toString = function () {
		    return 'MembersPage(members=' + toString(this.c31_1) + ', previousCursor=' + this.d31_1 + ', nextCursor=' + this.e31_1 + ')';
		  };
		  protoOf(MembersPage).hashCode = function () {
		    var result = hashCode(this.c31_1);
		    result = imul(result, 31) + (this.d31_1 == null ? 0 : getStringHashCode(this.d31_1)) | 0;
		    result = imul(result, 31) + (this.e31_1 == null ? 0 : getStringHashCode(this.e31_1)) | 0;
		    return result;
		  };
		  protoOf(MembersPage).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MembersPage))
		      return false;
		    var tmp0_other_with_cast = other instanceof MembersPage ? other : THROW_CCE();
		    if (!equals(this.c31_1, tmp0_other_with_cast.c31_1))
		      return false;
		    if (!(this.d31_1 == tmp0_other_with_cast.d31_1))
		      return false;
		    if (!(this.e31_1 == tmp0_other_with_cast.e31_1))
		      return false;
		    return true;
		  };
		  function MemberState_INVITED_getInstance() {
		    MemberState_initEntries();
		    return MemberState_INVITED_instance;
		  }
		  function MemberState_JOINED_getInstance() {
		    MemberState_initEntries();
		    return MemberState_JOINED_instance;
		  }
		  function MemberState_LEFT_getInstance() {
		    MemberState_initEntries();
		    return MemberState_LEFT_instance;
		  }
		  function MemberState_UNKNOWN_getInstance() {
		    MemberState_initEntries();
		    return MemberState_UNKNOWN_instance;
		  }
		  function Body_16(text, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.f31_1 = text;
		    this.g31_1 = deleted;
		  }
		  protoOf(Body_16).toString = function () {
		    return 'Body(text=' + this.f31_1 + ', deleted=' + this.g31_1 + ')';
		  };
		  protoOf(Body_16).hashCode = function () {
		    var result = getStringHashCode(this.f31_1);
		    result = imul(result, 31) + (this.g31_1 == null ? 0 : getStringHashCode(this.g31_1)) | 0;
		    return result;
		  };
		  protoOf(Body_16).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_16))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_16 ? other : THROW_CCE();
		    if (!(this.f31_1 === tmp0_other_with_cast.f31_1))
		      return false;
		    if (!(this.g31_1 == tmp0_other_with_cast.g31_1))
		      return false;
		    return true;
		  };
		  function MessageTextEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.h31_1 = timestamp;
		    this.i31_1 = conversationId;
		    this.j31_1 = id;
		    this.k31_1 = from;
		    this.l31_1 = body;
		    this.m31_1 = memberStatuses;
		  }
		  protoOf(MessageTextEvent).g2s = function () {
		    return this.i31_1;
		  };
		  protoOf(MessageTextEvent).l26 = function () {
		    return this.j31_1;
		  };
		  protoOf(MessageTextEvent).toString = function () {
		    return 'MessageTextEvent(timestamp=' + this.h31_1 + ', conversationId=' + this.i31_1 + ', id=' + this.j31_1 + ', from=' + toString(this.k31_1) + ', body=' + this.l31_1.toString() + ', memberStatuses=' + toString_0(this.m31_1) + ')';
		  };
		  protoOf(MessageTextEvent).hashCode = function () {
		    var result = getStringHashCode(this.h31_1);
		    result = imul(result, 31) + getStringHashCode(this.i31_1) | 0;
		    result = imul(result, 31) + this.j31_1 | 0;
		    result = imul(result, 31) + hashCode(this.k31_1) | 0;
		    result = imul(result, 31) + this.l31_1.hashCode() | 0;
		    result = imul(result, 31) + (this.m31_1 == null ? 0 : hashCode(this.m31_1)) | 0;
		    return result;
		  };
		  protoOf(MessageTextEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageTextEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageTextEvent ? other : THROW_CCE();
		    if (!(this.h31_1 === tmp0_other_with_cast.h31_1))
		      return false;
		    if (!(this.i31_1 === tmp0_other_with_cast.i31_1))
		      return false;
		    if (!(this.j31_1 === tmp0_other_with_cast.j31_1))
		      return false;
		    if (!equals(this.k31_1, tmp0_other_with_cast.k31_1))
		      return false;
		    if (!this.l31_1.equals(tmp0_other_with_cast.l31_1))
		      return false;
		    if (!equals(this.m31_1, tmp0_other_with_cast.m31_1))
		      return false;
		    return true;
		  };
		  function Body_17(customData, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.n31_1 = customData;
		    this.o31_1 = deleted;
		  }
		  protoOf(Body_17).toString = function () {
		    return 'Body(customData=' + this.n31_1 + ', deleted=' + this.o31_1 + ')';
		  };
		  protoOf(Body_17).hashCode = function () {
		    var result = getStringHashCode(this.n31_1);
		    result = imul(result, 31) + (this.o31_1 == null ? 0 : getStringHashCode(this.o31_1)) | 0;
		    return result;
		  };
		  protoOf(Body_17).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_17))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_17 ? other : THROW_CCE();
		    if (!(this.n31_1 === tmp0_other_with_cast.n31_1))
		      return false;
		    if (!(this.o31_1 == tmp0_other_with_cast.o31_1))
		      return false;
		    return true;
		  };
		  function MessageCustomEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.p31_1 = timestamp;
		    this.q31_1 = conversationId;
		    this.r31_1 = id;
		    this.s31_1 = from;
		    this.t31_1 = body;
		    this.u31_1 = memberStatuses;
		  }
		  protoOf(MessageCustomEvent).g2s = function () {
		    return this.q31_1;
		  };
		  protoOf(MessageCustomEvent).l26 = function () {
		    return this.r31_1;
		  };
		  protoOf(MessageCustomEvent).toString = function () {
		    return 'MessageCustomEvent(timestamp=' + this.p31_1 + ', conversationId=' + this.q31_1 + ', id=' + this.r31_1 + ', from=' + toString(this.s31_1) + ', body=' + this.t31_1.toString() + ', memberStatuses=' + toString_0(this.u31_1) + ')';
		  };
		  protoOf(MessageCustomEvent).hashCode = function () {
		    var result = getStringHashCode(this.p31_1);
		    result = imul(result, 31) + getStringHashCode(this.q31_1) | 0;
		    result = imul(result, 31) + this.r31_1 | 0;
		    result = imul(result, 31) + hashCode(this.s31_1) | 0;
		    result = imul(result, 31) + this.t31_1.hashCode() | 0;
		    result = imul(result, 31) + (this.u31_1 == null ? 0 : hashCode(this.u31_1)) | 0;
		    return result;
		  };
		  protoOf(MessageCustomEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageCustomEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageCustomEvent ? other : THROW_CCE();
		    if (!(this.p31_1 === tmp0_other_with_cast.p31_1))
		      return false;
		    if (!(this.q31_1 === tmp0_other_with_cast.q31_1))
		      return false;
		    if (!(this.r31_1 === tmp0_other_with_cast.r31_1))
		      return false;
		    if (!equals(this.s31_1, tmp0_other_with_cast.s31_1))
		      return false;
		    if (!this.t31_1.equals(tmp0_other_with_cast.t31_1))
		      return false;
		    if (!equals(this.u31_1, tmp0_other_with_cast.u31_1))
		      return false;
		    return true;
		  };
		  function Body_18(imageUrl, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.v31_1 = imageUrl;
		    this.w31_1 = deleted;
		  }
		  protoOf(Body_18).toString = function () {
		    return 'Body(imageUrl=' + this.v31_1 + ', deleted=' + this.w31_1 + ')';
		  };
		  protoOf(Body_18).hashCode = function () {
		    var result = getStringHashCode(this.v31_1);
		    result = imul(result, 31) + (this.w31_1 == null ? 0 : getStringHashCode(this.w31_1)) | 0;
		    return result;
		  };
		  protoOf(Body_18).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_18))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_18 ? other : THROW_CCE();
		    if (!(this.v31_1 === tmp0_other_with_cast.v31_1))
		      return false;
		    if (!(this.w31_1 == tmp0_other_with_cast.w31_1))
		      return false;
		    return true;
		  };
		  function MessageImageEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.x31_1 = timestamp;
		    this.y31_1 = conversationId;
		    this.z31_1 = id;
		    this.a32_1 = from;
		    this.b32_1 = body;
		    this.c32_1 = memberStatuses;
		  }
		  protoOf(MessageImageEvent).g2s = function () {
		    return this.y31_1;
		  };
		  protoOf(MessageImageEvent).l26 = function () {
		    return this.z31_1;
		  };
		  protoOf(MessageImageEvent).toString = function () {
		    return 'MessageImageEvent(timestamp=' + this.x31_1 + ', conversationId=' + this.y31_1 + ', id=' + this.z31_1 + ', from=' + toString(this.a32_1) + ', body=' + this.b32_1.toString() + ', memberStatuses=' + toString_0(this.c32_1) + ')';
		  };
		  protoOf(MessageImageEvent).hashCode = function () {
		    var result = getStringHashCode(this.x31_1);
		    result = imul(result, 31) + getStringHashCode(this.y31_1) | 0;
		    result = imul(result, 31) + this.z31_1 | 0;
		    result = imul(result, 31) + hashCode(this.a32_1) | 0;
		    result = imul(result, 31) + this.b32_1.hashCode() | 0;
		    result = imul(result, 31) + (this.c32_1 == null ? 0 : hashCode(this.c32_1)) | 0;
		    return result;
		  };
		  protoOf(MessageImageEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageImageEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageImageEvent ? other : THROW_CCE();
		    if (!(this.x31_1 === tmp0_other_with_cast.x31_1))
		      return false;
		    if (!(this.y31_1 === tmp0_other_with_cast.y31_1))
		      return false;
		    if (!(this.z31_1 === tmp0_other_with_cast.z31_1))
		      return false;
		    if (!equals(this.a32_1, tmp0_other_with_cast.a32_1))
		      return false;
		    if (!this.b32_1.equals(tmp0_other_with_cast.b32_1))
		      return false;
		    if (!equals(this.c32_1, tmp0_other_with_cast.c32_1))
		      return false;
		    return true;
		  };
		  function Body_19(videoUrl, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.d32_1 = videoUrl;
		    this.e32_1 = deleted;
		  }
		  protoOf(Body_19).toString = function () {
		    return 'Body(videoUrl=' + this.d32_1 + ', deleted=' + this.e32_1 + ')';
		  };
		  protoOf(Body_19).hashCode = function () {
		    var result = getStringHashCode(this.d32_1);
		    result = imul(result, 31) + (this.e32_1 == null ? 0 : getStringHashCode(this.e32_1)) | 0;
		    return result;
		  };
		  protoOf(Body_19).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_19))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_19 ? other : THROW_CCE();
		    if (!(this.d32_1 === tmp0_other_with_cast.d32_1))
		      return false;
		    if (!(this.e32_1 == tmp0_other_with_cast.e32_1))
		      return false;
		    return true;
		  };
		  function MessageVideoEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.f32_1 = timestamp;
		    this.g32_1 = conversationId;
		    this.h32_1 = id;
		    this.i32_1 = from;
		    this.j32_1 = body;
		    this.k32_1 = memberStatuses;
		  }
		  protoOf(MessageVideoEvent).g2s = function () {
		    return this.g32_1;
		  };
		  protoOf(MessageVideoEvent).l26 = function () {
		    return this.h32_1;
		  };
		  protoOf(MessageVideoEvent).toString = function () {
		    return 'MessageVideoEvent(timestamp=' + this.f32_1 + ', conversationId=' + this.g32_1 + ', id=' + this.h32_1 + ', from=' + toString(this.i32_1) + ', body=' + this.j32_1.toString() + ', memberStatuses=' + toString_0(this.k32_1) + ')';
		  };
		  protoOf(MessageVideoEvent).hashCode = function () {
		    var result = getStringHashCode(this.f32_1);
		    result = imul(result, 31) + getStringHashCode(this.g32_1) | 0;
		    result = imul(result, 31) + this.h32_1 | 0;
		    result = imul(result, 31) + hashCode(this.i32_1) | 0;
		    result = imul(result, 31) + this.j32_1.hashCode() | 0;
		    result = imul(result, 31) + (this.k32_1 == null ? 0 : hashCode(this.k32_1)) | 0;
		    return result;
		  };
		  protoOf(MessageVideoEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageVideoEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageVideoEvent ? other : THROW_CCE();
		    if (!(this.f32_1 === tmp0_other_with_cast.f32_1))
		      return false;
		    if (!(this.g32_1 === tmp0_other_with_cast.g32_1))
		      return false;
		    if (!(this.h32_1 === tmp0_other_with_cast.h32_1))
		      return false;
		    if (!equals(this.i32_1, tmp0_other_with_cast.i32_1))
		      return false;
		    if (!this.j32_1.equals(tmp0_other_with_cast.j32_1))
		      return false;
		    if (!equals(this.k32_1, tmp0_other_with_cast.k32_1))
		      return false;
		    return true;
		  };
		  function Body_20(audioUrl, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.l32_1 = audioUrl;
		    this.m32_1 = deleted;
		  }
		  protoOf(Body_20).toString = function () {
		    return 'Body(audioUrl=' + this.l32_1 + ', deleted=' + this.m32_1 + ')';
		  };
		  protoOf(Body_20).hashCode = function () {
		    var result = getStringHashCode(this.l32_1);
		    result = imul(result, 31) + (this.m32_1 == null ? 0 : getStringHashCode(this.m32_1)) | 0;
		    return result;
		  };
		  protoOf(Body_20).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_20))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_20 ? other : THROW_CCE();
		    if (!(this.l32_1 === tmp0_other_with_cast.l32_1))
		      return false;
		    if (!(this.m32_1 == tmp0_other_with_cast.m32_1))
		      return false;
		    return true;
		  };
		  function MessageAudioEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.n32_1 = timestamp;
		    this.o32_1 = conversationId;
		    this.p32_1 = id;
		    this.q32_1 = from;
		    this.r32_1 = body;
		    this.s32_1 = memberStatuses;
		  }
		  protoOf(MessageAudioEvent).g2s = function () {
		    return this.o32_1;
		  };
		  protoOf(MessageAudioEvent).l26 = function () {
		    return this.p32_1;
		  };
		  protoOf(MessageAudioEvent).toString = function () {
		    return 'MessageAudioEvent(timestamp=' + this.n32_1 + ', conversationId=' + this.o32_1 + ', id=' + this.p32_1 + ', from=' + toString(this.q32_1) + ', body=' + this.r32_1.toString() + ', memberStatuses=' + toString_0(this.s32_1) + ')';
		  };
		  protoOf(MessageAudioEvent).hashCode = function () {
		    var result = getStringHashCode(this.n32_1);
		    result = imul(result, 31) + getStringHashCode(this.o32_1) | 0;
		    result = imul(result, 31) + this.p32_1 | 0;
		    result = imul(result, 31) + hashCode(this.q32_1) | 0;
		    result = imul(result, 31) + this.r32_1.hashCode() | 0;
		    result = imul(result, 31) + (this.s32_1 == null ? 0 : hashCode(this.s32_1)) | 0;
		    return result;
		  };
		  protoOf(MessageAudioEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageAudioEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageAudioEvent ? other : THROW_CCE();
		    if (!(this.n32_1 === tmp0_other_with_cast.n32_1))
		      return false;
		    if (!(this.o32_1 === tmp0_other_with_cast.o32_1))
		      return false;
		    if (!(this.p32_1 === tmp0_other_with_cast.p32_1))
		      return false;
		    if (!equals(this.q32_1, tmp0_other_with_cast.q32_1))
		      return false;
		    if (!this.r32_1.equals(tmp0_other_with_cast.r32_1))
		      return false;
		    if (!equals(this.s32_1, tmp0_other_with_cast.s32_1))
		      return false;
		    return true;
		  };
		  function Body_21(fileUrl, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.t32_1 = fileUrl;
		    this.u32_1 = deleted;
		  }
		  protoOf(Body_21).toString = function () {
		    return 'Body(fileUrl=' + this.t32_1 + ', deleted=' + this.u32_1 + ')';
		  };
		  protoOf(Body_21).hashCode = function () {
		    var result = getStringHashCode(this.t32_1);
		    result = imul(result, 31) + (this.u32_1 == null ? 0 : getStringHashCode(this.u32_1)) | 0;
		    return result;
		  };
		  protoOf(Body_21).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_21))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_21 ? other : THROW_CCE();
		    if (!(this.t32_1 === tmp0_other_with_cast.t32_1))
		      return false;
		    if (!(this.u32_1 == tmp0_other_with_cast.u32_1))
		      return false;
		    return true;
		  };
		  function MessageFileEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.v32_1 = timestamp;
		    this.w32_1 = conversationId;
		    this.x32_1 = id;
		    this.y32_1 = from;
		    this.z32_1 = body;
		    this.a33_1 = memberStatuses;
		  }
		  protoOf(MessageFileEvent).g2s = function () {
		    return this.w32_1;
		  };
		  protoOf(MessageFileEvent).l26 = function () {
		    return this.x32_1;
		  };
		  protoOf(MessageFileEvent).toString = function () {
		    return 'MessageFileEvent(timestamp=' + this.v32_1 + ', conversationId=' + this.w32_1 + ', id=' + this.x32_1 + ', from=' + toString(this.y32_1) + ', body=' + this.z32_1.toString() + ', memberStatuses=' + toString_0(this.a33_1) + ')';
		  };
		  protoOf(MessageFileEvent).hashCode = function () {
		    var result = getStringHashCode(this.v32_1);
		    result = imul(result, 31) + getStringHashCode(this.w32_1) | 0;
		    result = imul(result, 31) + this.x32_1 | 0;
		    result = imul(result, 31) + hashCode(this.y32_1) | 0;
		    result = imul(result, 31) + this.z32_1.hashCode() | 0;
		    result = imul(result, 31) + (this.a33_1 == null ? 0 : hashCode(this.a33_1)) | 0;
		    return result;
		  };
		  protoOf(MessageFileEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageFileEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageFileEvent ? other : THROW_CCE();
		    if (!(this.v32_1 === tmp0_other_with_cast.v32_1))
		      return false;
		    if (!(this.w32_1 === tmp0_other_with_cast.w32_1))
		      return false;
		    if (!(this.x32_1 === tmp0_other_with_cast.x32_1))
		      return false;
		    if (!equals(this.y32_1, tmp0_other_with_cast.y32_1))
		      return false;
		    if (!this.z32_1.equals(tmp0_other_with_cast.z32_1))
		      return false;
		    if (!equals(this.a33_1, tmp0_other_with_cast.a33_1))
		      return false;
		    return true;
		  };
		  function Body_22(vcardUrl, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.b33_1 = vcardUrl;
		    this.c33_1 = deleted;
		  }
		  protoOf(Body_22).toString = function () {
		    return 'Body(vcardUrl=' + this.b33_1 + ', deleted=' + this.c33_1 + ')';
		  };
		  protoOf(Body_22).hashCode = function () {
		    var result = getStringHashCode(this.b33_1);
		    result = imul(result, 31) + (this.c33_1 == null ? 0 : getStringHashCode(this.c33_1)) | 0;
		    return result;
		  };
		  protoOf(Body_22).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_22))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_22 ? other : THROW_CCE();
		    if (!(this.b33_1 === tmp0_other_with_cast.b33_1))
		      return false;
		    if (!(this.c33_1 == tmp0_other_with_cast.c33_1))
		      return false;
		    return true;
		  };
		  function MessageVCardEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.d33_1 = timestamp;
		    this.e33_1 = conversationId;
		    this.f33_1 = id;
		    this.g33_1 = from;
		    this.h33_1 = body;
		    this.i33_1 = memberStatuses;
		  }
		  protoOf(MessageVCardEvent).g2s = function () {
		    return this.e33_1;
		  };
		  protoOf(MessageVCardEvent).l26 = function () {
		    return this.f33_1;
		  };
		  protoOf(MessageVCardEvent).toString = function () {
		    return 'MessageVCardEvent(timestamp=' + this.d33_1 + ', conversationId=' + this.e33_1 + ', id=' + this.f33_1 + ', from=' + toString(this.g33_1) + ', body=' + this.h33_1.toString() + ', memberStatuses=' + toString_0(this.i33_1) + ')';
		  };
		  protoOf(MessageVCardEvent).hashCode = function () {
		    var result = getStringHashCode(this.d33_1);
		    result = imul(result, 31) + getStringHashCode(this.e33_1) | 0;
		    result = imul(result, 31) + this.f33_1 | 0;
		    result = imul(result, 31) + hashCode(this.g33_1) | 0;
		    result = imul(result, 31) + this.h33_1.hashCode() | 0;
		    result = imul(result, 31) + (this.i33_1 == null ? 0 : hashCode(this.i33_1)) | 0;
		    return result;
		  };
		  protoOf(MessageVCardEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageVCardEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageVCardEvent ? other : THROW_CCE();
		    if (!(this.d33_1 === tmp0_other_with_cast.d33_1))
		      return false;
		    if (!(this.e33_1 === tmp0_other_with_cast.e33_1))
		      return false;
		    if (!(this.f33_1 === tmp0_other_with_cast.f33_1))
		      return false;
		    if (!equals(this.g33_1, tmp0_other_with_cast.g33_1))
		      return false;
		    if (!this.h33_1.equals(tmp0_other_with_cast.h33_1))
		      return false;
		    if (!equals(this.i33_1, tmp0_other_with_cast.i33_1))
		      return false;
		    return true;
		  };
		  function Body_23(template, whatsapp, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.j33_1 = template;
		    this.k33_1 = whatsapp;
		    this.l33_1 = deleted;
		  }
		  protoOf(Body_23).toString = function () {
		    return 'Body(template=' + this.j33_1.toString() + ', whatsapp=' + this.k33_1.toString() + ', deleted=' + this.l33_1 + ')';
		  };
		  protoOf(Body_23).hashCode = function () {
		    var result = this.j33_1.hashCode();
		    result = imul(result, 31) + this.k33_1.hashCode() | 0;
		    result = imul(result, 31) + (this.l33_1 == null ? 0 : getStringHashCode(this.l33_1)) | 0;
		    return result;
		  };
		  protoOf(Body_23).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_23))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_23 ? other : THROW_CCE();
		    if (!this.j33_1.equals(tmp0_other_with_cast.j33_1))
		      return false;
		    if (!this.k33_1.equals(tmp0_other_with_cast.k33_1))
		      return false;
		    if (!(this.l33_1 == tmp0_other_with_cast.l33_1))
		      return false;
		    return true;
		  };
		  function TemplateObject_0(name, parameters) {
		    parameters = parameters === VOID ? null : parameters;
		    this.s2k_1 = name;
		    this.t2k_1 = parameters;
		  }
		  protoOf(TemplateObject_0).toString = function () {
		    return 'TemplateObject(name=' + this.s2k_1 + ', parameters=' + toString_0(this.t2k_1) + ')';
		  };
		  protoOf(TemplateObject_0).hashCode = function () {
		    var result = getStringHashCode(this.s2k_1);
		    result = imul(result, 31) + (this.t2k_1 == null ? 0 : hashCode(this.t2k_1)) | 0;
		    return result;
		  };
		  protoOf(TemplateObject_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof TemplateObject_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof TemplateObject_0 ? other : THROW_CCE();
		    if (!(this.s2k_1 === tmp0_other_with_cast.s2k_1))
		      return false;
		    if (!equals(this.t2k_1, tmp0_other_with_cast.t2k_1))
		      return false;
		    return true;
		  };
		  function WhatsappObject_0(policy, locale) {
		    this.w2k_1 = policy;
		    this.x2k_1 = locale;
		  }
		  protoOf(WhatsappObject_0).toString = function () {
		    return 'WhatsappObject(policy=' + this.w2k_1 + ', locale=' + this.x2k_1 + ')';
		  };
		  protoOf(WhatsappObject_0).hashCode = function () {
		    var result = getStringHashCode(this.w2k_1);
		    result = imul(result, 31) + getStringHashCode(this.x2k_1) | 0;
		    return result;
		  };
		  protoOf(WhatsappObject_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof WhatsappObject_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof WhatsappObject_0 ? other : THROW_CCE();
		    if (!(this.w2k_1 === tmp0_other_with_cast.w2k_1))
		      return false;
		    if (!(this.x2k_1 === tmp0_other_with_cast.x2k_1))
		      return false;
		    return true;
		  };
		  function MessageTemplateEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.m33_1 = timestamp;
		    this.n33_1 = conversationId;
		    this.o33_1 = id;
		    this.p33_1 = from;
		    this.q33_1 = body;
		    this.r33_1 = memberStatuses;
		  }
		  protoOf(MessageTemplateEvent).g2s = function () {
		    return this.n33_1;
		  };
		  protoOf(MessageTemplateEvent).l26 = function () {
		    return this.o33_1;
		  };
		  protoOf(MessageTemplateEvent).toString = function () {
		    return 'MessageTemplateEvent(timestamp=' + this.m33_1 + ', conversationId=' + this.n33_1 + ', id=' + this.o33_1 + ', from=' + toString(this.p33_1) + ', body=' + this.q33_1.toString() + ', memberStatuses=' + toString_0(this.r33_1) + ')';
		  };
		  protoOf(MessageTemplateEvent).hashCode = function () {
		    var result = getStringHashCode(this.m33_1);
		    result = imul(result, 31) + getStringHashCode(this.n33_1) | 0;
		    result = imul(result, 31) + this.o33_1 | 0;
		    result = imul(result, 31) + hashCode(this.p33_1) | 0;
		    result = imul(result, 31) + this.q33_1.hashCode() | 0;
		    result = imul(result, 31) + (this.r33_1 == null ? 0 : hashCode(this.r33_1)) | 0;
		    return result;
		  };
		  protoOf(MessageTemplateEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageTemplateEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageTemplateEvent ? other : THROW_CCE();
		    if (!(this.m33_1 === tmp0_other_with_cast.m33_1))
		      return false;
		    if (!(this.n33_1 === tmp0_other_with_cast.n33_1))
		      return false;
		    if (!(this.o33_1 === tmp0_other_with_cast.o33_1))
		      return false;
		    if (!equals(this.p33_1, tmp0_other_with_cast.p33_1))
		      return false;
		    if (!this.q33_1.equals(tmp0_other_with_cast.q33_1))
		      return false;
		    if (!equals(this.r33_1, tmp0_other_with_cast.r33_1))
		      return false;
		    return true;
		  };
		  function Body_24(location, deleted) {
		    deleted = deleted === VOID ? null : deleted;
		    this.s33_1 = location;
		    this.t33_1 = deleted;
		  }
		  protoOf(Body_24).toString = function () {
		    return 'Body(location=' + this.s33_1.toString() + ', deleted=' + this.t33_1 + ')';
		  };
		  protoOf(Body_24).hashCode = function () {
		    var result = this.s33_1.hashCode();
		    result = imul(result, 31) + (this.t33_1 == null ? 0 : getStringHashCode(this.t33_1)) | 0;
		    return result;
		  };
		  protoOf(Body_24).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Body_24))
		      return false;
		    var tmp0_other_with_cast = other instanceof Body_24 ? other : THROW_CCE();
		    if (!this.s33_1.equals(tmp0_other_with_cast.s33_1))
		      return false;
		    if (!(this.t33_1 == tmp0_other_with_cast.t33_1))
		      return false;
		    return true;
		  };
		  function Location(longitude, latitude, name, address) {
		    name = name === VOID ? null : name;
		    address = address === VOID ? null : address;
		    this.a2l_1 = longitude;
		    this.b2l_1 = latitude;
		    this.c2l_1 = name;
		    this.d2l_1 = address;
		  }
		  protoOf(Location).toString = function () {
		    return 'Location(longitude=' + this.a2l_1 + ', latitude=' + this.b2l_1 + ', name=' + this.c2l_1 + ', address=' + this.d2l_1 + ')';
		  };
		  protoOf(Location).hashCode = function () {
		    var result = getStringHashCode(this.a2l_1);
		    result = imul(result, 31) + getStringHashCode(this.b2l_1) | 0;
		    result = imul(result, 31) + (this.c2l_1 == null ? 0 : getStringHashCode(this.c2l_1)) | 0;
		    result = imul(result, 31) + (this.d2l_1 == null ? 0 : getStringHashCode(this.d2l_1)) | 0;
		    return result;
		  };
		  protoOf(Location).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Location))
		      return false;
		    var tmp0_other_with_cast = other instanceof Location ? other : THROW_CCE();
		    if (!(this.a2l_1 === tmp0_other_with_cast.a2l_1))
		      return false;
		    if (!(this.b2l_1 === tmp0_other_with_cast.b2l_1))
		      return false;
		    if (!(this.c2l_1 == tmp0_other_with_cast.c2l_1))
		      return false;
		    if (!(this.d2l_1 == tmp0_other_with_cast.d2l_1))
		      return false;
		    return true;
		  };
		  function MessageLocationEvent(timestamp, conversationId, id, from, body, memberStatuses) {
		    memberStatuses = memberStatuses === VOID ? null : memberStatuses;
		    this.u33_1 = timestamp;
		    this.v33_1 = conversationId;
		    this.w33_1 = id;
		    this.x33_1 = from;
		    this.y33_1 = body;
		    this.z33_1 = memberStatuses;
		  }
		  protoOf(MessageLocationEvent).g2s = function () {
		    return this.v33_1;
		  };
		  protoOf(MessageLocationEvent).l26 = function () {
		    return this.w33_1;
		  };
		  protoOf(MessageLocationEvent).toString = function () {
		    return 'MessageLocationEvent(timestamp=' + this.u33_1 + ', conversationId=' + this.v33_1 + ', id=' + this.w33_1 + ', from=' + toString(this.x33_1) + ', body=' + this.y33_1.toString() + ', memberStatuses=' + toString_0(this.z33_1) + ')';
		  };
		  protoOf(MessageLocationEvent).hashCode = function () {
		    var result = getStringHashCode(this.u33_1);
		    result = imul(result, 31) + getStringHashCode(this.v33_1) | 0;
		    result = imul(result, 31) + this.w33_1 | 0;
		    result = imul(result, 31) + hashCode(this.x33_1) | 0;
		    result = imul(result, 31) + this.y33_1.hashCode() | 0;
		    result = imul(result, 31) + (this.z33_1 == null ? 0 : hashCode(this.z33_1)) | 0;
		    return result;
		  };
		  protoOf(MessageLocationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MessageLocationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof MessageLocationEvent ? other : THROW_CCE();
		    if (!(this.u33_1 === tmp0_other_with_cast.u33_1))
		      return false;
		    if (!(this.v33_1 === tmp0_other_with_cast.v33_1))
		      return false;
		    if (!(this.w33_1 === tmp0_other_with_cast.w33_1))
		      return false;
		    if (!equals(this.x33_1, tmp0_other_with_cast.x33_1))
		      return false;
		    if (!this.y33_1.equals(tmp0_other_with_cast.y33_1))
		      return false;
		    if (!equals(this.z33_1, tmp0_other_with_cast.z33_1))
		      return false;
		    return true;
		  };
		  function MessageEvent_0() {
		  }
		  var PresentingOrder_ASC_instance;
		  var PresentingOrder_DESC_instance;
		  var PresentingOrder_entriesInitialized;
		  function PresentingOrder_initEntries() {
		    if (PresentingOrder_entriesInitialized)
		      return Unit_instance;
		    PresentingOrder_entriesInitialized = true;
		    PresentingOrder_ASC_instance = new PresentingOrder('ASC', 0);
		    PresentingOrder_DESC_instance = new PresentingOrder('DESC', 1);
		  }
		  function PresentingOrder(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function OrderBy$CREATED() {
		    OrderBy.call(this, 'CREATED', 0);
		    OrderBy_CREATED_instance = this;
		  }
		  protoOf(OrderBy$CREATED).toString = function () {
		    return 'created';
		  };
		  var OrderBy_CREATED_instance;
		  function OrderBy$CUSTOM_SORT_KEY() {
		    OrderBy.call(this, 'CUSTOM_SORT_KEY', 1);
		    OrderBy_CUSTOM_SORT_KEY_instance = this;
		  }
		  protoOf(OrderBy$CUSTOM_SORT_KEY).toString = function () {
		    return 'custom_sort_key';
		  };
		  var OrderBy_CUSTOM_SORT_KEY_instance;
		  var OrderBy_entriesInitialized;
		  function OrderBy_initEntries() {
		    if (OrderBy_entriesInitialized)
		      return Unit_instance;
		    OrderBy_entriesInitialized = true;
		    OrderBy_CREATED_instance = new OrderBy$CREATED();
		    OrderBy_CUSTOM_SORT_KEY_instance = new OrderBy$CUSTOM_SORT_KEY();
		  }
		  function OrderBy(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function getCursor(_this__u8e3s4) {
		    return getQueryParameter(_this__u8e3s4, 'cursor');
		  }
		  function PresentingOrder_ASC_getInstance() {
		    PresentingOrder_initEntries();
		    return PresentingOrder_ASC_instance;
		  }
		  function PresentingOrder_DESC_getInstance() {
		    PresentingOrder_initEntries();
		    return PresentingOrder_DESC_instance;
		  }
		  function OrderBy_CREATED_getInstance() {
		    OrderBy_initEntries();
		    return OrderBy_CREATED_instance;
		  }
		  function OrderBy_CUSTOM_SORT_KEY_getInstance() {
		    OrderBy_initEntries();
		    return OrderBy_CUSTOM_SORT_KEY_instance;
		  }
		  function CreateConversationParameters(name, displayName, imageUrl, ttl, customSortKey, customData) {
		    name = name === VOID ? null : name;
		    displayName = displayName === VOID ? null : displayName;
		    imageUrl = imageUrl === VOID ? null : imageUrl;
		    ttl = ttl === VOID ? null : ttl;
		    customSortKey = customSortKey === VOID ? null : customSortKey;
		    customData = customData === VOID ? null : customData;
		    this.s2s_1 = name;
		    this.t2s_1 = displayName;
		    this.u2s_1 = imageUrl;
		    this.v2s_1 = ttl;
		    this.w2s_1 = customSortKey;
		    this.x2s_1 = customData;
		  }
		  protoOf(CreateConversationParameters).y2s = function () {
		    var tmp;
		    if (this.v2s_1 == null && this.x2s_1 == null && this.w2s_1 == null) {
		      tmp = null;
		    } else {
		      var tmp1_ttl = this.v2s_1;
		      var tmp2_custom_sort_key = this.w2s_1;
		      var tmp0_safe_receiver = this.x2s_1;
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.models.CreateConversationParameters.<get-properties>.<anonymous>' call
		        tmp_0 = get_jsonObject(Default_getInstance().g11(tmp0_safe_receiver));
		      }
		      var tmp3_custom_data = tmp_0;
		      tmp = new Properties(tmp2_custom_sort_key, tmp3_custom_data, tmp1_ttl);
		    }
		    return tmp;
		  };
		  protoOf(CreateConversationParameters).toString = function () {
		    return 'CreateConversationParameters(name=' + this.s2s_1 + ', displayName=' + this.t2s_1 + ', imageUrl=' + this.u2s_1 + ', ttl=' + this.v2s_1 + ', customSortKey=' + this.w2s_1 + ', customData=' + this.x2s_1 + ')';
		  };
		  protoOf(CreateConversationParameters).hashCode = function () {
		    var result = this.s2s_1 == null ? 0 : getStringHashCode(this.s2s_1);
		    result = imul(result, 31) + (this.t2s_1 == null ? 0 : getStringHashCode(this.t2s_1)) | 0;
		    result = imul(result, 31) + (this.u2s_1 == null ? 0 : getStringHashCode(this.u2s_1)) | 0;
		    result = imul(result, 31) + (this.v2s_1 == null ? 0 : this.v2s_1) | 0;
		    result = imul(result, 31) + (this.w2s_1 == null ? 0 : getStringHashCode(this.w2s_1)) | 0;
		    result = imul(result, 31) + (this.x2s_1 == null ? 0 : getStringHashCode(this.x2s_1)) | 0;
		    return result;
		  };
		  protoOf(CreateConversationParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CreateConversationParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof CreateConversationParameters ? other : THROW_CCE();
		    if (!(this.s2s_1 == tmp0_other_with_cast.s2s_1))
		      return false;
		    if (!(this.t2s_1 == tmp0_other_with_cast.t2s_1))
		      return false;
		    if (!(this.u2s_1 == tmp0_other_with_cast.u2s_1))
		      return false;
		    if (!(this.v2s_1 == tmp0_other_with_cast.v2s_1))
		      return false;
		    if (!(this.w2s_1 == tmp0_other_with_cast.w2s_1))
		      return false;
		    if (!(this.x2s_1 == tmp0_other_with_cast.x2s_1))
		      return false;
		    return true;
		  };
		  function GetConversationsParameters(order, pageSize, cursor, includeCustomData, orderBy) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    includeCustomData = includeCustomData === VOID ? null : includeCustomData;
		    orderBy = orderBy === VOID ? null : orderBy;
		    this.h2t_1 = order;
		    this.i2t_1 = pageSize;
		    this.j2t_1 = cursor;
		    this.k2t_1 = includeCustomData;
		    this.l2t_1 = orderBy;
		  }
		  protoOf(GetConversationsParameters).toString = function () {
		    return 'GetConversationsParameters(order=' + toString_0(this.h2t_1) + ', pageSize=' + this.i2t_1 + ', cursor=' + this.j2t_1 + ', includeCustomData=' + this.k2t_1 + ', orderBy=' + toString_0(this.l2t_1) + ')';
		  };
		  protoOf(GetConversationsParameters).hashCode = function () {
		    var result = this.h2t_1 == null ? 0 : this.h2t_1.hashCode();
		    result = imul(result, 31) + (this.i2t_1 == null ? 0 : this.i2t_1) | 0;
		    result = imul(result, 31) + (this.j2t_1 == null ? 0 : getStringHashCode(this.j2t_1)) | 0;
		    result = imul(result, 31) + (this.k2t_1 == null ? 0 : getBooleanHashCode(this.k2t_1)) | 0;
		    result = imul(result, 31) + (this.l2t_1 == null ? 0 : this.l2t_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(GetConversationsParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationsParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationsParameters ? other : THROW_CCE();
		    if (!equals(this.h2t_1, tmp0_other_with_cast.h2t_1))
		      return false;
		    if (!(this.i2t_1 == tmp0_other_with_cast.i2t_1))
		      return false;
		    if (!(this.j2t_1 == tmp0_other_with_cast.j2t_1))
		      return false;
		    if (!(this.k2t_1 == tmp0_other_with_cast.k2t_1))
		      return false;
		    if (!equals(this.l2t_1, tmp0_other_with_cast.l2t_1))
		      return false;
		    return true;
		  };
		  function GetConversationMembersParameters(order, pageSize, cursor) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    this.s2t_1 = order;
		    this.t2t_1 = pageSize;
		    this.u2t_1 = cursor;
		  }
		  protoOf(GetConversationMembersParameters).toString = function () {
		    return 'GetConversationMembersParameters(order=' + toString_0(this.s2t_1) + ', pageSize=' + this.t2t_1 + ', cursor=' + this.u2t_1 + ')';
		  };
		  protoOf(GetConversationMembersParameters).hashCode = function () {
		    var result = this.s2t_1 == null ? 0 : this.s2t_1.hashCode();
		    result = imul(result, 31) + (this.t2t_1 == null ? 0 : this.t2t_1) | 0;
		    result = imul(result, 31) + (this.u2t_1 == null ? 0 : getStringHashCode(this.u2t_1)) | 0;
		    return result;
		  };
		  protoOf(GetConversationMembersParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationMembersParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationMembersParameters ? other : THROW_CCE();
		    if (!equals(this.s2t_1, tmp0_other_with_cast.s2t_1))
		      return false;
		    if (!(this.t2t_1 == tmp0_other_with_cast.t2t_1))
		      return false;
		    if (!(this.u2t_1 == tmp0_other_with_cast.u2t_1))
		      return false;
		    return true;
		  };
		  function GetConversationEventsParameters(order, pageSize, cursor, eventFilter, includeDeletedEvents, startId) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    eventFilter = eventFilter === VOID ? null : eventFilter;
		    includeDeletedEvents = includeDeletedEvents === VOID ? null : includeDeletedEvents;
		    startId = startId === VOID ? null : startId;
		    this.m2t_1 = order;
		    this.n2t_1 = pageSize;
		    this.o2t_1 = cursor;
		    this.p2t_1 = eventFilter;
		    this.q2t_1 = includeDeletedEvents;
		    this.r2t_1 = startId;
		  }
		  protoOf(GetConversationEventsParameters).toString = function () {
		    return 'GetConversationEventsParameters(order=' + toString_0(this.m2t_1) + ', pageSize=' + this.n2t_1 + ', cursor=' + this.o2t_1 + ', eventFilter=' + toString_0(this.p2t_1) + ', includeDeletedEvents=' + this.q2t_1 + ', startId=' + this.r2t_1 + ')';
		  };
		  protoOf(GetConversationEventsParameters).hashCode = function () {
		    var result = this.m2t_1 == null ? 0 : this.m2t_1.hashCode();
		    result = imul(result, 31) + (this.n2t_1 == null ? 0 : this.n2t_1) | 0;
		    result = imul(result, 31) + (this.o2t_1 == null ? 0 : getStringHashCode(this.o2t_1)) | 0;
		    result = imul(result, 31) + (this.p2t_1 == null ? 0 : hashCode(this.p2t_1)) | 0;
		    result = imul(result, 31) + (this.q2t_1 == null ? 0 : getBooleanHashCode(this.q2t_1)) | 0;
		    result = imul(result, 31) + (this.r2t_1 == null ? 0 : this.r2t_1) | 0;
		    return result;
		  };
		  protoOf(GetConversationEventsParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetConversationEventsParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetConversationEventsParameters ? other : THROW_CCE();
		    if (!equals(this.m2t_1, tmp0_other_with_cast.m2t_1))
		      return false;
		    if (!(this.n2t_1 == tmp0_other_with_cast.n2t_1))
		      return false;
		    if (!(this.o2t_1 == tmp0_other_with_cast.o2t_1))
		      return false;
		    if (!equals(this.p2t_1, tmp0_other_with_cast.p2t_1))
		      return false;
		    if (!(this.q2t_1 == tmp0_other_with_cast.q2t_1))
		      return false;
		    if (!(this.r2t_1 == tmp0_other_with_cast.r2t_1))
		      return false;
		    return true;
		  };
		  function UpdateConversationParameters$_get_properties_$lambda_kj27c5(it) {
		    return get_jsonObject(Default_getInstance().g11(it));
		  }
		  function UpdateConversationParameters(name, displayName, imageUrl, ttl, customSortKey, customData) {
		    name = name === VOID ? none() : name;
		    displayName = displayName === VOID ? none() : displayName;
		    imageUrl = imageUrl === VOID ? none() : imageUrl;
		    ttl = ttl === VOID ? none() : ttl;
		    customSortKey = customSortKey === VOID ? none() : customSortKey;
		    customData = customData === VOID ? none() : customData;
		    this.z2s_1 = name;
		    this.a2t_1 = displayName;
		    this.b2t_1 = imageUrl;
		    this.c2t_1 = ttl;
		    this.d2t_1 = customSortKey;
		    this.e2t_1 = customData;
		  }
		  protoOf(UpdateConversationParameters).y2s = function () {
		    var tmp;
		    var tmp_0;
		    var tmp_1;
		    var tmp_2 = this.c2t_1;
		    if (tmp_2 instanceof None_2) {
		      var tmp_3 = this.e2t_1;
		      tmp_1 = tmp_3 instanceof None_2;
		    } else {
		      tmp_1 = false;
		    }
		    if (tmp_1) {
		      var tmp_4 = this.d2t_1;
		      tmp_0 = tmp_4 instanceof None_2;
		    } else {
		      tmp_0 = false;
		    }
		    if (tmp_0) {
		      tmp = none();
		    } else {
		      var tmp_5;
		      var tmp_6;
		      var tmp_7 = this.c2t_1;
		      if (tmp_7 instanceof None_2) {
		        tmp_6 = this.e2t_1.a34(null);
		      } else {
		        tmp_6 = false;
		      }
		      if (tmp_6) {
		        tmp_5 = this.d2t_1.a34(null);
		      } else {
		        tmp_5 = false;
		      }
		      if (tmp_5) {
		        tmp = some(null);
		      } else {
		        var tmp0_ttl = this.c2t_1;
		        var tmp1_custom_sort_key = this.d2t_1;
		        var tmp2_custom_data = this.e2t_1.b34(UpdateConversationParameters$_get_properties_$lambda_kj27c5);
		        tmp = some(new Properties_0(tmp1_custom_sort_key, tmp2_custom_data, tmp0_ttl));
		      }
		    }
		    return tmp;
		  };
		  protoOf(UpdateConversationParameters).toString = function () {
		    return 'UpdateConversationParameters(name=' + toString(this.z2s_1) + ', displayName=' + toString(this.a2t_1) + ', imageUrl=' + toString(this.b2t_1) + ', ttl=' + toString(this.c2t_1) + ', customSortKey=' + toString(this.d2t_1) + ', customData=' + toString(this.e2t_1) + ')';
		  };
		  protoOf(UpdateConversationParameters).hashCode = function () {
		    var result = this.z2s_1.hashCode();
		    result = imul(result, 31) + this.a2t_1.hashCode() | 0;
		    result = imul(result, 31) + this.b2t_1.hashCode() | 0;
		    result = imul(result, 31) + this.c2t_1.hashCode() | 0;
		    result = imul(result, 31) + this.d2t_1.hashCode() | 0;
		    result = imul(result, 31) + this.e2t_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(UpdateConversationParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UpdateConversationParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof UpdateConversationParameters ? other : THROW_CCE();
		    if (!this.z2s_1.equals(tmp0_other_with_cast.z2s_1))
		      return false;
		    if (!this.a2t_1.equals(tmp0_other_with_cast.a2t_1))
		      return false;
		    if (!this.b2t_1.equals(tmp0_other_with_cast.b2t_1))
		      return false;
		    if (!this.c2t_1.equals(tmp0_other_with_cast.c2t_1))
		      return false;
		    if (!this.d2t_1.equals(tmp0_other_with_cast.d2t_1))
		      return false;
		    if (!this.e2t_1.equals(tmp0_other_with_cast.e2t_1))
		      return false;
		    return true;
		  };
		  function GetCallLegsParameters(order, pageSize, cursor) {
		    order = order === VOID ? null : order;
		    pageSize = pageSize === VOID ? null : pageSize;
		    cursor = cursor === VOID ? null : cursor;
		    this.c34_1 = order;
		    this.d34_1 = pageSize;
		    this.e34_1 = cursor;
		  }
		  protoOf(GetCallLegsParameters).toString = function () {
		    return 'GetCallLegsParameters(order=' + toString_0(this.c34_1) + ', pageSize=' + this.d34_1 + ', cursor=' + this.e34_1 + ')';
		  };
		  protoOf(GetCallLegsParameters).hashCode = function () {
		    var result = this.c34_1 == null ? 0 : this.c34_1.hashCode();
		    result = imul(result, 31) + (this.d34_1 == null ? 0 : this.d34_1) | 0;
		    result = imul(result, 31) + (this.e34_1 == null ? 0 : getStringHashCode(this.e34_1)) | 0;
		    return result;
		  };
		  protoOf(GetCallLegsParameters).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof GetCallLegsParameters))
		      return false;
		    var tmp0_other_with_cast = other instanceof GetCallLegsParameters ? other : THROW_CCE();
		    if (!equals(this.c34_1, tmp0_other_with_cast.c34_1))
		      return false;
		    if (!(this.d34_1 == tmp0_other_with_cast.d34_1))
		      return false;
		    if (!(this.e34_1 == tmp0_other_with_cast.e34_1))
		      return false;
		    return true;
		  };
		  function User(id, name, displayName, channels, timestamp, imageUrl, customData) {
		    displayName = displayName === VOID ? null : displayName;
		    channels = channels === VOID ? null : channels;
		    timestamp = timestamp === VOID ? null : timestamp;
		    imageUrl = imageUrl === VOID ? null : imageUrl;
		    customData = customData === VOID ? null : customData;
		    this.f34_1 = id;
		    this.g34_1 = name;
		    this.h34_1 = displayName;
		    this.i34_1 = channels;
		    this.j34_1 = timestamp;
		    this.k34_1 = imageUrl;
		    this.l34_1 = customData;
		  }
		  protoOf(User).toString = function () {
		    return 'User(id=' + this.f34_1 + ', name=' + this.g34_1 + ', displayName=' + this.h34_1 + ', channels=' + toString_0(this.i34_1) + ', timestamp=' + toString_0(this.j34_1) + ', imageUrl=' + this.k34_1 + ', customData=' + this.l34_1 + ')';
		  };
		  protoOf(User).hashCode = function () {
		    var result = getStringHashCode(this.f34_1);
		    result = imul(result, 31) + getStringHashCode(this.g34_1) | 0;
		    result = imul(result, 31) + (this.h34_1 == null ? 0 : getStringHashCode(this.h34_1)) | 0;
		    result = imul(result, 31) + (this.i34_1 == null ? 0 : this.i34_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.j34_1 == null ? 0 : this.j34_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.k34_1 == null ? 0 : getStringHashCode(this.k34_1)) | 0;
		    result = imul(result, 31) + (this.l34_1 == null ? 0 : getStringHashCode(this.l34_1)) | 0;
		    return result;
		  };
		  protoOf(User).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof User))
		      return false;
		    var tmp0_other_with_cast = other instanceof User ? other : THROW_CCE();
		    if (!(this.f34_1 === tmp0_other_with_cast.f34_1))
		      return false;
		    if (!(this.g34_1 === tmp0_other_with_cast.g34_1))
		      return false;
		    if (!(this.h34_1 == tmp0_other_with_cast.h34_1))
		      return false;
		    if (!equals(this.i34_1, tmp0_other_with_cast.i34_1))
		      return false;
		    if (!equals(this.j34_1, tmp0_other_with_cast.j34_1))
		      return false;
		    if (!(this.k34_1 == tmp0_other_with_cast.k34_1))
		      return false;
		    if (!(this.l34_1 == tmp0_other_with_cast.l34_1))
		      return false;
		    return true;
		  };
		  function $serializer_162() {
		    $serializer_instance_162 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.api.models.UserTimestamp', this, 3);
		    tmp0_serialDesc.rq('created', true);
		    tmp0_serialDesc.rq('updated', true);
		    tmp0_serialDesc.rq('destroyed', true);
		    this.m34_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_162).xf = function () {
		    return this.m34_1;
		  };
		  protoOf($serializer_162).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_162).zf = function (decoder) {
		    var tmp0_desc = this.m34_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return UserTimestamp_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_162).n34 = function (encoder, value) {
		    var tmp0_desc = this.m34_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.o34_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.o34_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.p34_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.p34_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.q34_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.q34_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_162).yf = function (encoder, value) {
		    return this.n34(encoder, value instanceof UserTimestamp ? value : THROW_CCE());
		  };
		  var $serializer_instance_162;
		  function $serializer_getInstance_162() {
		    if ($serializer_instance_162 == null)
		      new $serializer_162();
		    return $serializer_instance_162;
		  }
		  function UserTimestamp_init_$Init$(seen1, created, updated, destroyed, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_162().m34_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.o34_1 = null;
		    else
		      $this.o34_1 = created;
		    if (0 === (seen1 & 2))
		      $this.p34_1 = null;
		    else
		      $this.p34_1 = updated;
		    if (0 === (seen1 & 4))
		      $this.q34_1 = null;
		    else
		      $this.q34_1 = destroyed;
		    return $this;
		  }
		  function UserTimestamp_init_$Create$(seen1, created, updated, destroyed, serializationConstructorMarker) {
		    return UserTimestamp_init_$Init$(seen1, created, updated, destroyed, serializationConstructorMarker, objectCreate(protoOf(UserTimestamp)));
		  }
		  function UserTimestamp() {
		  }
		  protoOf(UserTimestamp).toString = function () {
		    return 'UserTimestamp(created=' + this.o34_1 + ', updated=' + this.p34_1 + ', destroyed=' + this.q34_1 + ')';
		  };
		  protoOf(UserTimestamp).hashCode = function () {
		    var result = this.o34_1 == null ? 0 : getStringHashCode(this.o34_1);
		    result = imul(result, 31) + (this.p34_1 == null ? 0 : getStringHashCode(this.p34_1)) | 0;
		    result = imul(result, 31) + (this.q34_1 == null ? 0 : getStringHashCode(this.q34_1)) | 0;
		    return result;
		  };
		  protoOf(UserTimestamp).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UserTimestamp))
		      return false;
		    var tmp0_other_with_cast = other instanceof UserTimestamp ? other : THROW_CCE();
		    if (!(this.o34_1 == tmp0_other_with_cast.o34_1))
		      return false;
		    if (!(this.p34_1 == tmp0_other_with_cast.p34_1))
		      return false;
		    if (!(this.q34_1 == tmp0_other_with_cast.q34_1))
		      return false;
		    return true;
		  };
		  function PushAPIImpl$decoder$lambda($this$Json) {
		    $this$Json.y11_1 = true;
		    $this$Json.w11_1 = true;
		    $this$Json.f12_1 = 'type';
		    return Unit_instance;
		  }
		  function PushAPIImpl(store, sessionAPI) {
		    this.r34_1 = store;
		    this.s34_1 = sessionAPI;
		    var tmp = this;
		    tmp.t34_1 = Json(VOID, PushAPIImpl$decoder$lambda);
		  }
		  var SessionErrorReason_TokenExpired_instance;
		  var SessionErrorReason_TransportClosed_instance;
		  var SessionErrorReason_PingTimeout_instance;
		  var SessionErrorReason_entriesInitialized;
		  function SessionErrorReason_initEntries() {
		    if (SessionErrorReason_entriesInitialized)
		      return Unit_instance;
		    SessionErrorReason_entriesInitialized = true;
		    SessionErrorReason_TokenExpired_instance = new SessionErrorReason('TokenExpired', 0);
		    SessionErrorReason_TransportClosed_instance = new SessionErrorReason('TransportClosed', 1);
		    SessionErrorReason_PingTimeout_instance = new SessionErrorReason('PingTimeout', 2);
		  }
		  function SessionErrorReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function onCreateSession($this, callback) {
		    var cleanup = {_v: null};
		    var tmp = getKClass(SessionReducer);
		    cleanup._v = $this.u34_1.p2v(tmp, SessionAPIImpl$onCreateSession$lambda($this, cleanup, callback));
		  }
		  function onDeleteSession($this, callback) {
		    var cleanup = {_v: null};
		    var tmp = getKClass(SessionReducer);
		    cleanup._v = $this.u34_1.p2v(tmp, SessionAPIImpl$onDeleteSession$lambda($this, cleanup, callback));
		  }
		  function onDeleteSessionClientDisconnect($this, callback) {
		    var cleanup = {_v: null};
		    var tmp = getKClass(SessionReducer);
		    cleanup._v = $this.u34_1.p2v(tmp, SessionAPIImpl$onDeleteSessionClientDisconnect$lambda($this, cleanup, callback));
		  }
		  function SessionAPIImpl$createSession$lambda($callback, this$0, $token, $sessionId) {
		    return function (e) {
		      if (!(e == null)) {
		        invokeCallbackWithError(new SessionNoActiveSessionError(), $callback);
		      } else {
		        onCreateSession(this$0, $callback);
		        this$0.u34_1.g1g(Action_init_$Create$(new SocketConnect($token, $sessionId)));
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$refreshSession$lambda($callback, this$0, $sessionId, $token) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        this$0.u34_1.g1g(Action_init_$Create$(new SocketSetSession($sessionId, $token)));
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$lambda$lambda$lambda(this$0) {
		    return function (it) {
		      if (it instanceof MetricsWsReconnectionTime) {
		        this$0.u34_1.g1g(Action_init_$Create$(new MetricsSuccessfullySent(null, null)));
		      } else {
		        if (it instanceof Exception) {
		          this$0.v34_1.z34('Failed to publish socket reconnection metrics ' + toString_0(it));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$lambda$lambda(this$0, $connectionStatus) {
		    return function () {
		      var state = this$0.u34_1.i2v(getKClass(SessionReducer));
		      var tmp0_safe_receiver = $connectionStatus._v;
		      if (!equals(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h2n_1, state.b35_1.h2n_1)) {
		        switch (state.b35_1.h2n_1.e2_1) {
		          case 1:
		            var tmp_1 = state.a35_1;
		            if (tmp_1 instanceof Resolved) {
		              var tmp2_safe_receiver = this$0.w34_1;
		              if (tmp2_safe_receiver == null)
		                ;
		              else {
		                tmp2_safe_receiver.h35();
		              }
		            }

		            $connectionStatus._v = state.b35_1;
		            break;
		          case 2:
		            var tmp_2 = state.a35_1;
		            if (tmp_2 instanceof Resolved) {
		              var tmp3_safe_receiver = this$0.w34_1;
		              if (tmp3_safe_receiver == null)
		                ;
		              else {
		                tmp3_safe_receiver.i35();
		              }
		              var tmp4_elvis_lhs = state.a35_1.r1().l26();
		              var tmp_3;
		              if (tmp4_elvis_lhs == null) {
		                return Unit_instance;
		              } else {
		                tmp_3 = tmp4_elvis_lhs;
		              }
		              var sessionId = tmp_3;
		              var tmp5_elvis_lhs = state.c35_1;
		              var tmp_4;
		              if (tmp5_elvis_lhs == null) {
		                return Unit_instance;
		              } else {
		                tmp_4 = tmp5_elvis_lhs;
		              }
		              var timeOfFirstRetry = tmp_4;
		              var tmp6_elvis_lhs = state.d35_1;
		              var tmp_5;
		              if (tmp6_elvis_lhs == null) {
		                return Unit_instance;
		              } else {
		                tmp_5 = tmp6_elvis_lhs;
		              }
		              var retryNumber = tmp_5;
		              var reconnectingOffset = numberToLong(generateTimeStamp()).n2(numberToLong(timeOfFirstRetry));
		              var tmp_6 = new MetricsWsReconnectionTimeReq(sessionId, reconnectingOffset, retryNumber, 'TIME_TO_RECONNECT_SUCCESS');
		              this$0.u34_1.g1g(new Action_0(tmp_6, new ActionMeta(VOID, VOID, SessionAPIImpl$lambda$lambda$lambda(this$0))));
		            }

		            $connectionStatus._v = state.b35_1;
		            break;
		          case 0:
		            var tmp7_safe_receiver = state.a35_1.r1().e2m();
		            if (tmp7_safe_receiver == null)
		              ;
		            else {
		              // Inline function 'kotlin.let' call
		              // Inline function 'kotlin.contracts.contract' call
		              // Inline function 'com.vonage.clientcore.core.api.SessionAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		              this$0.u34_1.g1g(Action_init_$Create$(DeleteSession_instance));
		              this$0.u34_1.g1g(Action_init_$Create$(SocketDisconnect_instance));
		              var tmp0_safe_receiver_0 = this$0.w34_1;
		              if (tmp0_safe_receiver_0 == null) ; else {
		                tmp0_safe_receiver_0.j35(tmp7_safe_receiver);
		              }
		            }

		            $connectionStatus._v = state.b35_1;
		            break;
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$lambda(this$0) {
		    return function () {
		      var connectionStatus = {_v: null};
		      return new StoredSubscription(SessionAPIImpl$lambda$lambda(this$0, connectionStatus));
		    };
		  }
		  function SessionAPIImpl$onCreateSession$lambda$lambda(this$0, $cleanup, $callback) {
		    return function () {
		      var state = this$0.u34_1.i2v(getKClass(SessionReducer));
		      var s = state.a35_1;
		      if (s instanceof Failed) {
		        var tmp0_safe_receiver = $cleanup._v;
		        if (tmp0_safe_receiver == null)
		          ;
		        else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          tmp0_safe_receiver();
		        }
		        if (state.b35_1.h2n_1.equals(SocketConnectionStatus_Connected_getInstance())) {
		          this$0.u34_1.g1g(Action_init_$Create$(SocketDisconnect_instance));
		        }
		        invokeCallbackWithError(s.k35_1.n8_1, $callback);
		      } else {
		        if (s instanceof Resolved) {
		          var tmp1_safe_receiver = $cleanup._v;
		          if (tmp1_safe_receiver == null)
		            ;
		          else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            tmp1_safe_receiver();
		          }
		          $callback(null, s.r1().l26());
		          var tmp2_safe_receiver = s.r1().l26();
		          if (tmp2_safe_receiver == null)
		            ;
		          else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            this$0.u34_1.g1g(Action_init_$Create$(new SocketSetSessionId(tmp2_safe_receiver)));
		          }
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$onCreateSession$lambda(this$0, $cleanup, $callback) {
		    return function () {
		      return new StoredSubscription(SessionAPIImpl$onCreateSession$lambda$lambda(this$0, $cleanup, $callback));
		    };
		  }
		  function SessionAPIImpl$onDeleteSession$lambda$lambda(this$0, $connectionStatus, $cleanup, $callback) {
		    return function () {
		      var state = this$0.u34_1.i2v(getKClass(SessionReducer));
		      if (state.a35_1.r1().l26() == null && state.b35_1.h2n_1.equals(SocketConnectionStatus_Disconnected_getInstance()) && !state.b35_1.h2n_1.equals($connectionStatus)) {
		        var tmp0_safe_receiver = $cleanup._v;
		        if (tmp0_safe_receiver == null)
		          ;
		        else
		          tmp0_safe_receiver();
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$onDeleteSession$lambda(this$0, $cleanup, $callback) {
		    return function () {
		      var connectionStatus = this$0.u34_1.i2v(getKClass(SessionReducer)).b35_1.h2n_1;
		      return new StoredSubscription(SessionAPIImpl$onDeleteSession$lambda$lambda(this$0, connectionStatus, $cleanup, $callback));
		    };
		  }
		  function SessionAPIImpl$onDeleteSessionClientDisconnect$lambda$lambda(this$0, $cleanup, $callback) {
		    return function () {
		      var state = this$0.u34_1.i2v(getKClass(SessionReducer));
		      if (equals(state.e35_1, SocketConnectionFailedReason_ClientDisconnected_getInstance())) {
		        var tmp0_safe_receiver = $cleanup._v;
		        if (tmp0_safe_receiver == null)
		          ;
		        else
		          tmp0_safe_receiver();
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function SessionAPIImpl$onDeleteSessionClientDisconnect$lambda(this$0, $cleanup, $callback) {
		    return function () {
		      return new StoredSubscription(SessionAPIImpl$onDeleteSessionClientDisconnect$lambda$lambda(this$0, $cleanup, $callback));
		    };
		  }
		  function SessionAPIImpl(store, loggerAdapter) {
		    this.u34_1 = store;
		    this.v34_1 = loggerAdapter.b1f(Session_getInstance());
		    this.w34_1 = null;
		    var tmp = getKClass(SessionReducer);
		    this.u34_1.p2v(tmp, SessionAPIImpl$lambda(this));
		  }
		  protoOf(SessionAPIImpl).z1f = function (token, sessionId, callback) {
		    var state = this.u34_1.i2v(getKClass(SessionReducer));
		    if (!(state.a35_1.r1().l26() == null)) {
		      onDeleteSessionClientDisconnect(this, SessionAPIImpl$createSession$lambda(callback, this, token, sessionId));
		      this.u34_1.g1g(Action_init_$Create$(DeleteSession_instance));
		      this.u34_1.g1g(Action_init_$Create$(SocketDisconnect_instance));
		    } else {
		      onCreateSession(this, callback);
		      this.u34_1.g1g(Action_init_$Create$(new SocketConnect(token, sessionId)));
		    }
		  };
		  protoOf(SessionAPIImpl).a1g = function (callback) {
		    var state = this.u34_1.i2v(getKClass(SessionReducer));
		    if (state.a35_1.r1().l26() == null)
		      return invokeCallbackWithError_0(new SessionNoActiveSessionError(), callback);
		    onDeleteSession(this, callback);
		    this.u34_1.g1g(Action_init_$Create$(DeleteSession_instance));
		    this.u34_1.g1g(Action_init_$Create$(SocketDisconnect_instance));
		  };
		  protoOf(SessionAPIImpl).b1g = function (token, callback) {
		    var state = this.u34_1.i2v(getKClass(SessionReducer));
		    var tmp0_elvis_lhs = state.a35_1.r1().l26();
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return invokeCallbackWithError_0(new SessionNoActiveSessionError(), callback);
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var sessionId = tmp;
		    var tmp_0 = new UpdateSessionRequest(sessionId, token);
		    this.u34_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, SessionAPIImpl$refreshSession$lambda(callback, this, sessionId, token))));
		  };
		  protoOf(SessionAPIImpl).v1d = function (listener) {
		    this.w34_1 = listener;
		  };
		  function SessionErrorReason_TokenExpired_getInstance() {
		    SessionErrorReason_initEntries();
		    return SessionErrorReason_TokenExpired_instance;
		  }
		  function SessionErrorReason_TransportClosed_getInstance() {
		    SessionErrorReason_initEntries();
		    return SessionErrorReason_TransportClosed_instance;
		  }
		  function SessionErrorReason_PingTimeout_getInstance() {
		    SessionErrorReason_initEntries();
		    return SessionErrorReason_PingTimeout_instance;
		  }
		  function VoiceClientListener() {
		  }
		  var VoiceInviteCancelReason_AnsweredElsewhere_instance;
		  var VoiceInviteCancelReason_RejectedElsewhere_instance;
		  var VoiceInviteCancelReason_RemoteCancel_instance;
		  var VoiceInviteCancelReason_RemoteTimeout_instance;
		  var VoiceInviteCancelReason_entriesInitialized;
		  function VoiceInviteCancelReason_initEntries() {
		    if (VoiceInviteCancelReason_entriesInitialized)
		      return Unit_instance;
		    VoiceInviteCancelReason_entriesInitialized = true;
		    VoiceInviteCancelReason_AnsweredElsewhere_instance = new VoiceInviteCancelReason('AnsweredElsewhere', 0);
		    VoiceInviteCancelReason_RejectedElsewhere_instance = new VoiceInviteCancelReason('RejectedElsewhere', 1);
		    VoiceInviteCancelReason_RemoteCancel_instance = new VoiceInviteCancelReason('RemoteCancel', 2);
		    VoiceInviteCancelReason_RemoteTimeout_instance = new VoiceInviteCancelReason('RemoteTimeout', 3);
		  }
		  function VoiceInviteCancelReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  var HangupReason_remoteReject_instance;
		  var HangupReason_remoteHangup_instance;
		  var HangupReason_remoteNoAnswerTimeout_instance;
		  var HangupReason_localHangup_instance;
		  var HangupReason_mediaTimeout_instance;
		  var HangupReason_entriesInitialized;
		  function HangupReason_initEntries() {
		    if (HangupReason_entriesInitialized)
		      return Unit_instance;
		    HangupReason_entriesInitialized = true;
		    HangupReason_remoteReject_instance = new HangupReason('remoteReject', 0);
		    HangupReason_remoteHangup_instance = new HangupReason('remoteHangup', 1);
		    HangupReason_remoteNoAnswerTimeout_instance = new HangupReason('remoteNoAnswerTimeout', 2);
		    HangupReason_localHangup_instance = new HangupReason('localHangup', 3);
		    HangupReason_mediaTimeout_instance = new HangupReason('mediaTimeout', 4);
		  }
		  function HangupReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  var LegStatus_ringing_instance;
		  var LegStatus_answered_instance;
		  var LegStatus_completed_instance;
		  function valueOf_2(value) {
		    switch (value) {
		      case 'ringing':
		        return LegStatus_ringing_getInstance();
		      case 'answered':
		        return LegStatus_answered_getInstance();
		      case 'completed':
		        return LegStatus_completed_getInstance();
		      default:
		        LegStatus_initEntries();
		        THROW_IAE('No enum constant value.');
		        break;
		    }
		  }
		  var LegStatus_entriesInitialized;
		  function LegStatus_initEntries() {
		    if (LegStatus_entriesInitialized)
		      return Unit_instance;
		    LegStatus_entriesInitialized = true;
		    LegStatus_ringing_instance = new LegStatus('ringing', 0);
		    LegStatus_answered_instance = new LegStatus('answered', 1);
		    LegStatus_completed_instance = new LegStatus('completed', 2);
		  }
		  function LegStatus(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  var CallDisconnectReason_networkChange_instance;
		  var CallDisconnectReason_entriesInitialized;
		  function CallDisconnectReason_initEntries() {
		    if (CallDisconnectReason_entriesInitialized)
		      return Unit_instance;
		    CallDisconnectReason_entriesInitialized = true;
		    CallDisconnectReason_networkChange_instance = new CallDisconnectReason('networkChange', 0);
		  }
		  function CallDisconnectReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function VoiceAPIImpl$o$onAudioMuteUpdate$lambda($legId, $isMuted) {
		    return function (l, callId) {
		      l.q35(callId, $legId, $isMuted);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$o$onAudioEarmuffUpdate$lambda($legId, $earmuffStatus) {
		    return function (l, callId) {
		      l.r35(callId, $legId, $earmuffStatus);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$o$onAudioDTMFUpdate$lambda($leg_id, $digits) {
		    return function (l, callId) {
		      l.s35(callId, $leg_id, $digits);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$o$onRTCHangup$lambda($hangup, $reason) {
		    return function (l, callId) {
		      l.t35(callId, $hangup.c26_1, $reason._v);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$o$onLegStatusUpdate$lambda($legId, $status) {
		    return function (l, callId) {
		      l.u35(callId, $legId, valueOf_2($status));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$o$onRTCTransfer$lambda($legId, $conversationId) {
		    return function (l, callId) {
		      if (callId === $legId) {
		        l.p35(callId, $conversationId);
		      } else {
		        l.u35(callId, $legId, LegStatus_answered_getInstance());
		      }
		      return Unit_instance;
		    };
		  }
		  function dispatchCallAction($this, callId, action) {
		    var tmp0_elvis_lhs = getCallStateByLeg($this, callId);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return new NoCallFound();
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var call = tmp;
		    var callMemberShipState = call.e36_1.r1();
		    var tmp_0;
		    if (callMemberShipState instanceof Joined) {
		      action(callMemberShipState.j36_1, callMemberShipState.k36_1);
		      tmp_0 = null;
		    } else {
		      tmp_0 = new InvalidCallAction();
		    }
		    return tmp_0;
		  }
		  function getCallStateByLeg($this, legId) {
		    var state = $this.m36_1.i2v(getKClass(CallReducer));
		    return state.p36_1.u1(legId);
		  }
		  function getCallStateByConversation($this, cid) {
		    var state = $this.m36_1.i2v(getKClass(CallReducer));
		    var tmp0_safe_receiver = state.q36_1.u1(cid);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.getCallStateByConversation.<anonymous>' call
		      tmp = getCallStateByLeg($this, tmp0_safe_receiver);
		    }
		    return tmp;
		  }
		  function getLegIdByConversation($this, cid) {
		    var state = $this.m36_1.i2v(getKClass(CallReducer));
		    return state.q36_1.u1(cid);
		  }
		  function isFromMe($this, userId) {
		    var state = $this.m36_1.i2v(getKClass(SessionReducer));
		    var tmp0_safe_receiver = state.a35_1.r1().d2m();
		    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f2t_1) === userId;
		  }
		  function invokeListener($this, conversationId, givenLegId, fn) {
		    var tmp0_safe_receiver = $this.o36_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp1_elvis_lhs = getLegIdByConversation($this, conversationId);
		      var tmp;
		      if (tmp1_elvis_lhs == null) {
		        var tmp_0;
		        if (givenLegId == null) {
		          tmp_0 = null;
		        } else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.invokeListener.<anonymous>.<anonymous>' call
		          var tmp_1;
		          if (getCallStateByLeg($this, givenLegId) == null) {
		            tmp_1 = null;
		          } else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.invokeListener.<anonymous>.<anonymous>.<anonymous>' call
		            tmp_1 = givenLegId;
		          }
		          tmp_0 = tmp_1;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = tmp1_elvis_lhs;
		      }
		      var tmp3_elvis_lhs = tmp;
		      var tmp_2;
		      if (tmp3_elvis_lhs == null) {
		        var tmp2_safe_receiver = getCallStateByConversation($this, conversationId);
		        tmp_2 = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.d36_1;
		      } else {
		        tmp_2 = tmp3_elvis_lhs;
		      }
		      var legId = tmp_2;
		      if (legId == null) {
		        $this.n36_1.z34('Call Id for Conversation Id: ' + conversationId + ' was not found');
		      } else
		        fn(tmp0_safe_receiver, legId);
		    }
		  }
		  function invokeListener$default($this, conversationId, givenLegId, fn, $super) {
		    givenLegId = givenLegId === VOID ? null : givenLegId;
		    return invokeListener($this, conversationId, givenLegId, fn);
		  }
		  function handleCallReconnection($this, store, callId) {
		    var cancel = {_v: null};
		    var cachedRetryCount = {_v: 0};
		    var tmp = getKClass(CallReducer);
		    cancel._v = store.p2v(tmp, VoiceAPIImpl$handleCallReconnection$lambda(store, callId, cancel, cachedRetryCount, $this));
		  }
		  function reconnectCall($this, store, callId) {
		    var tmp0_safe_receiver = store.i2v(getKClass(CallReducer)).p36_1.u1(callId);
		    var tmp;
		    if (tmp0_safe_receiver == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.takeIf' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_0;
		      // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.reconnectCall.<anonymous>' call
		      var tmp_1 = tmp0_safe_receiver.h36_1;
		      if (tmp_1 instanceof Reconnecting) {
		        tmp_0 = tmp0_safe_receiver;
		      } else {
		        tmp_0 = null;
		      }
		      tmp = tmp_0;
		    }
		    var tmp1_elvis_lhs = tmp;
		    var tmp_2;
		    if (tmp1_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp_2 = tmp1_elvis_lhs;
		    }
		    var updatedCall = tmp_2;
		    var tmp_3 = updatedCall.e36_1.r1();
		    var tmp2_elvis_lhs = tmp_3 instanceof Joined ? tmp_3 : null;
		    var tmp_4;
		    if (tmp2_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp_4 = tmp2_elvis_lhs;
		    }
		    var member = tmp_4;
		    var tmp_5 = new CallReconnect(updatedCall.d36_1, member.k36_1, member.j36_1);
		    var reconnectAction = new Action_0(tmp_5, new ActionMeta(VOID, VOID, VoiceAPIImpl$reconnectCall$lambda_0(store, updatedCall)));
		    store.g1g(reconnectAction);
		  }
		  function onCallMediaChange($this, callState) {
		    var tmp = callState.f36_1;
		    if (tmp instanceof Failed) {
		      $this.m36_1.g1g(Action_init_$Create$(new MediaDisable(callState.d36_1)));
		    } else {
		      var tmp_0 = callState.f36_1.r1();
		      if (tmp_0 instanceof Completed) {
		        $this.m36_1.g1g(Action_init_$Create$(new MediaDisable(callState.d36_1)));
		      }
		    }
		  }
		  function onCallMemberChange($this, callState) {
		    if (callState.e36_1 instanceof Failed) {
		      var tmp1_subject = callState.e36_1.r1();
		      if (tmp1_subject instanceof Knocking) {
		        $this.m36_1.g1g(Action_init_$Create$(new MediaDisable(callState.d36_1)));
		      } else {
		        if (tmp1_subject instanceof Left) {
		          $this.m36_1.g1g(Action_init_$Create$(new MediaDisable(callState.d36_1)));
		        }
		      }
		    }
		  }
		  function getCallDetailsAndDispatchCallReconnect($this, legId, callback) {
		    var tmp = new GetLegRequest(legId);
		    $this.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, legId, VoiceAPIImpl$getCallDetailsAndDispatchCallReconnect$lambda($this, callback, legId))));
		  }
		  function VoiceAPIImpl$getLeg$lambda($callback) {
		    return function (response) {
		      if (response instanceof GetLeg) {
		        var leg = Companion_instance_142.e30(response);
		        $callback(null, leg);
		      } else {
		        invokeCallbackWithError(response, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$getCallLegs$lambda$lambda($conversationMedia, $callback) {
		    return function (conversationLegsResponse) {
		      if (conversationLegsResponse instanceof GetConversationLegs) {
		        // Inline function 'kotlin.collections.map' call
		        var this_0 = conversationLegsResponse.k1j_1.h1j_1;
		        // Inline function 'kotlin.collections.mapTo' call
		        var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
		        var tmp0_iterator = this_0.i();
		        while (tmp0_iterator.j()) {
		          var item = tmp0_iterator.k();
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.getCallLegs.<anonymous>.<anonymous>.<anonymous>' call
		          var tmp0_safe_receiver = item.d1i_1;
		          var tmp_0;
		          if (tmp0_safe_receiver == null) {
		            tmp_0 = null;
		          } else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.getCallLegs.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		            tmp_0 = new MediaState($conversationMedia.y2z_1 || tmp0_safe_receiver.y2z_1, $conversationMedia.z2z_1 || tmp0_safe_receiver.z2z_1, $conversationMedia.a30_1 || tmp0_safe_receiver.a30_1, $conversationMedia.b30_1 || tmp0_safe_receiver.b30_1, $conversationMedia.c30_1 || tmp0_safe_receiver.c30_1, $conversationMedia.d30_1 || tmp0_safe_receiver.d30_1);
		          }
		          var tmp1_elvis_lhs = tmp_0;
		          var mediaState = tmp1_elvis_lhs == null ? $conversationMedia : tmp1_elvis_lhs;
		          var tmp$ret$2 = Companion_instance_142.e30(item.f1i(VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, mediaState));
		          destination.d(tmp$ret$2);
		        }
		        var legs = destination;
		        var tmp1_safe_receiver = conversationLegsResponse.l1j_1.s1j_1;
		        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.o1j_1;
		        var previous = tmp2_safe_receiver == null ? null : getCursor(tmp2_safe_receiver);
		        var tmp3_safe_receiver = conversationLegsResponse.l1j_1.r1j_1;
		        var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.o1j_1;
		        var next = tmp4_safe_receiver == null ? null : getCursor(tmp4_safe_receiver);
		        var page = new LegsPage(legs, previous, next);
		        $callback(null, page);
		      } else {
		        invokeCallbackWithError(conversationLegsResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$getCallLegs$lambda(this$0, $callback, $memberState, $parameters) {
		    return function (getConversationResponse) {
		      if (getConversationResponse instanceof GetConversation) {
		        var tmp1_elvis_lhs = getConversationResponse.x1i_1;
		        var tmp_0;
		        if (tmp1_elvis_lhs == null) {
		          // Inline function 'kotlin.run' call
		          // Inline function 'kotlin.contracts.contract' call
		          invokeCallbackWithError(new NoCallMediaFound(), $callback);
		          return Unit_instance;
		        } else {
		          tmp_0 = tmp1_elvis_lhs;
		        }
		        var conversationMedia = tmp_0;
		        var tmp2_safe_receiver = $parameters;
		        var tmp_1 = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.c34_1;
		        var tmp3_safe_receiver = $parameters;
		        var tmp_2 = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.d34_1;
		        var tmp4_safe_receiver = $parameters;
		        var tmp_3 = new GetConversationLegsRequest($memberState.j36_1, tmp_1, tmp_2, tmp4_safe_receiver == null ? null : tmp4_safe_receiver.e34_1);
		        this$0.m36_1.g1g(new Action_0(tmp_3, new ActionMeta(VOID, VOID, VoiceAPIImpl$getCallLegs$lambda$lambda(conversationMedia, $callback))));
		      } else {
		        invokeCallbackWithError(getConversationResponse, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda$lambda$lambda($call, $cancel, $callback, this$0, $legId) {
		    return function () {
		      if ($call.i36_1.e2_1 === 5) {
		        var tmp1_safe_receiver = $cancel._v;
		        if (tmp1_safe_receiver == null)
		          ;
		        else
		          tmp1_safe_receiver();
		        invokeCallbackWithError(new MediaTimeout(), $callback);
		        this$0.m36_1.g1g(Action_init_$Create$(new CallCleanup($legId)));
		      } else {
		        if ($call.e36_1.r1() instanceof Joined) {
		          var tmp3_safe_receiver = $cancel._v;
		          if (tmp3_safe_receiver == null)
		            ;
		          else
		            tmp3_safe_receiver();
		          $callback(null, $legId);
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda$lambda($call, $cancel, $callback, this$0, $legId) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda$lambda$lambda($call, $cancel, $callback, this$0, $legId));
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda(this$0, $call, $callback, $cancel, $legId) {
		    return function (it) {
		      if (it instanceof Exception) {
		        this$0.m36_1.g1g(Action_init_$Create$(new CallKnockingRequestFailure($call.d36_1, it)));
		        invokeCallbackWithError(it, $callback);
		      } else {
		        var tmp_0 = getKClass(CallReducer);
		        $cancel._v = this$0.m36_1.p2v(tmp_0, VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda$lambda($call, $cancel, $callback, this$0, $legId));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda_0() {
		    return 'Unexpected Media Connection Transition during setup';
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda$lambda(this$0, $legId, $cancel, $callback) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(CallReducer));
		      var tmp0_safe_receiver = state.p36_1.u1($legId);
		      if (tmp0_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        switch (tmp0_safe_receiver.i36_1.e2_1) {
		          case 3:
		            var tmp1_safe_receiver = $cancel._v;
		            if (tmp1_safe_receiver == null)
		              ;
		            else
		              tmp1_safe_receiver();
		            var tmp2_safe_receiver = tmp0_safe_receiver.c36_1;
		            var tmp = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.u1('to');
		            var tmp3_elvis_lhs = (!(tmp == null) ? typeof tmp === 'string' : false) ? tmp : null;
		            var tmp_0 = new AppKnockingRequest(tmp0_safe_receiver.b36_1, new PhoneChannelEndpoint(tmp3_elvis_lhs == null ? '' : tmp3_elvis_lhs), $legId, tmp0_safe_receiver.c36_1);
		            this$0.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, tmp0_safe_receiver.d36_1, VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda(this$0, tmp0_safe_receiver, $callback, $cancel, $legId))));
		            break;
		          case 2:
		          case 1:
		          case 0:
		            break;
		          case 5:
		            var tmp4_safe_receiver = $cancel._v;
		            if (tmp4_safe_receiver == null)
		              ;
		            else
		              tmp4_safe_receiver();
		            invokeCallbackWithError(new MediaTimeout(), $callback);
		            this$0.m36_1.g1g(Action_init_$Create$(new CallCleanup($legId)));
		            break;
		          case 6:
		          case 4:
		            this$0.n36_1.t36(VOID, VoiceAPIImpl$serverCall$lambda$lambda$lambda$lambda_0);
		            var tmp5_safe_receiver = $cancel._v;
		            if (tmp5_safe_receiver == null)
		              ;
		            else
		              tmp5_safe_receiver();
		            this$0.m36_1.g1g(Action_init_$Create$(new CallCleanup($legId)));
		            break;
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda$lambda(this$0, $legId, $cancel, $callback) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$serverCall$lambda$lambda$lambda(this$0, $legId, $cancel, $callback));
		    };
		  }
		  function VoiceAPIImpl$serverCall$lambda(this$0, $callback) {
		    return function (it) {
		      if (!(it == null) ? typeof it === 'string' : false) {
		        var legId = it;
		        var cancel = {_v: null};
		        var tmp_0 = getKClass(CallReducer);
		        cancel._v = this$0.m36_1.p2v(tmp_0, VoiceAPIImpl$serverCall$lambda$lambda(this$0, legId, cancel, $callback));
		      } else {
		        invokeCallbackWithError(it, $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$reconnectCall$lambda$lambda(this$0, $callId, $once, $callback) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(CallReducer));
		      var tmp0_elvis_lhs = state.p36_1.u1($callId);
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var call = tmp;
		      var legState = call.f36_1;
		      if (legState.r1() instanceof Started) {
		        var tmp2_safe_receiver = $once._v;
		        if (tmp2_safe_receiver == null)
		          ;
		        else
		          tmp2_safe_receiver();
		        if (call.a36_1) {
		          $callback(null);
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$reconnectCall$lambda(this$0, $callId, $once, $callback) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$reconnectCall$lambda$lambda(this$0, $callId, $once, $callback));
		    };
		  }
		  function VoiceAPIImpl$rejectCall$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$answerCall$lambda$lambda$lambda$lambda(this$0, $legIdOrErr, $callback, $cancel) {
		    return function () {
		      var call = this$0.m36_1.i2v(getKClass(CallReducer)).p36_1.u1($legIdOrErr);
		      var tmp1_subject = call == null ? null : call.i36_1;
		      switch (tmp1_subject == null ? -1 : tmp1_subject.e2_1) {
		        case -1:
		          // Inline function 'kotlin.let' call

		          invokeCallbackWithError_0(new NoInviteFound(), $callback);
		          // Inline function 'kotlin.contracts.contract' call

		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.answerCall.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call

		          var tmp0_safe_receiver = $cancel._v;
		          tmp0_safe_receiver == null || tmp0_safe_receiver();
		          break;
		        case 3:
		          // Inline function 'kotlin.also' call

		          var tmp2_safe_receiver = $cancel._v;
		          tmp2_safe_receiver == null || tmp2_safe_receiver();
		          // Inline function 'kotlin.contracts.contract' call

		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.answerCall.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call

		          $callback(null);
		          break;
		        case 5:
		        case 6:
		          // Inline function 'kotlin.also' call

		          var tmp3_safe_receiver = $cancel._v;
		          tmp3_safe_receiver == null || tmp3_safe_receiver();
		          // Inline function 'kotlin.contracts.contract' call

		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.answerCall.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call

		          invokeCallbackWithError_0(new InboundCallFailed(), $callback);
		          break;
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$answerCall$lambda$lambda$lambda(this$0, $legIdOrErr, $callback, $cancel) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$answerCall$lambda$lambda$lambda$lambda(this$0, $legIdOrErr, $callback, $cancel));
		    };
		  }
		  function VoiceAPIImpl$answerCall$lambda$lambda(this$0, $callback) {
		    return function (legIdOrErr) {
		      if (!(legIdOrErr == null) ? typeof legIdOrErr === 'string' : false) {
		        var cancel = {_v: null};
		        var tmp_0 = getKClass(CallReducer);
		        cancel._v = this$0.m36_1.p2v(tmp_0, VoiceAPIImpl$answerCall$lambda$lambda$lambda(this$0, legIdOrErr, $callback, cancel));
		      } else {
		        invokeCallbackWithError_0(new InboundCallFailed(legIdOrErr instanceof Exception ? legIdOrErr : null), $callback);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$answerCall$lambda($callback, $invite, this$0, $callId) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        if ($invite.y36_1 == null) {
		          // Inline function 'kotlin.run' call
		          // Inline function 'kotlin.contracts.contract' call
		          invokeCallbackWithError_0(new NoOfferFound(), $callback);
		          return Unit_instance;
		        }
		        var tmp_0 = new SetupInboundCall($callId, $invite.x36_1, $invite.w36_1, $invite.u36_1, $invite.y36_1, null);
		        this$0.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, VoiceAPIImpl$answerCall$lambda$lambda(this$0, $callback))));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$hangupCall$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$hangupCall$lambda_0($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$mute$lambda$lambda$lambda($callback) {
		    return function (legMuteResponse) {
		      if (legMuteResponse instanceof Exception) {
		        invokeCallbackWithError_0(legMuteResponse, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$mute$lambda$lambda($callback, this$0, $cid, $callId, $mid) {
		    return function (muteOutcome) {
		      if (muteOutcome instanceof Exception) {
		        invokeCallbackWithError_0(muteOutcome, $callback);
		      } else {
		        var tmp_0 = new LegMuteRequest($cid, $callId, $mid);
		        this$0.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, $callId, VoiceAPIImpl$mute$lambda$lambda$lambda($callback))));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$mute$lambda(this$0, $callId, $callback) {
		    return function (cid, mid) {
		      var tmp = new Mute($callId);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$mute$lambda$lambda($callback, this$0, cid, $callId, mid))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$unmute$lambda$lambda$lambda($callback) {
		    return function (legUnmuteResponse) {
		      if (legUnmuteResponse instanceof Exception) {
		        invokeCallbackWithError_0(legUnmuteResponse, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$unmute$lambda$lambda($callback, this$0, $cid, $callId, $mid) {
		    return function (unmuteOutcome) {
		      if (unmuteOutcome instanceof Exception) {
		        invokeCallbackWithError_0(unmuteOutcome, $callback);
		      } else {
		        var tmp_0 = new LegUnmuteRequest($cid, $callId, $mid);
		        this$0.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, $callId, VoiceAPIImpl$unmute$lambda$lambda$lambda($callback))));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$unmute$lambda(this$0, $callId, $callback) {
		    return function (cid, mid) {
		      var tmp = new Unmute($callId);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$unmute$lambda$lambda($callback, this$0, cid, $callId, mid))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$enableEarmuff$lambda$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$enableEarmuff$lambda(this$0, $callId, $callback) {
		    return function (cid, mid) {
		      this$0.m36_1.g1g(Action_init_$Create$(new EnableEarmuff($callId)));
		      var tmp = new LegEarmuffEnableRequest(cid, $callId, mid);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$enableEarmuff$lambda$lambda($callback))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$disableEarmuff$lambda$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$disableEarmuff$lambda(this$0, $callId, $callback) {
		    return function (cid, mid) {
		      this$0.m36_1.g1g(Action_init_$Create$(new DisableEarmuff($callId)));
		      var tmp = new LegEarmuffDisableRequest(cid, $callId, mid);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$disableEarmuff$lambda$lambda($callback))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$sendDTMF$lambda$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$sendDTMF$lambda(this$0, $callId, $digits, $callback) {
		    return function (cid, mid) {
		      this$0.m36_1.g1g(Action_init_$Create$(new DisableEarmuff($callId)));
		      var tmp = new LegDTMFRequest(cid, $callId, mid, $digits);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$sendDTMF$lambda$lambda($callback))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$say$lambda$lambda($callback) {
		    return function (it) {
		      if (it instanceof Exception) {
		        invokeCallbackWithError_0(it, $callback);
		      } else {
		        $callback(null);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$say$lambda(this$0, $text, $level, $loop, $queue, $voiceName, $ssml, $callId, $callback) {
		    return function (cid, mid) {
		      var tmp = new AudioSayRequest(cid, mid, $text, $level, $loop, $queue, $voiceName, $ssml);
		      this$0.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, $callId, VoiceAPIImpl$say$lambda$lambda($callback))));
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$handleCallReconnection$lambda$lambda($store, $callId, $cancel, $cachedRetryCount, this$0) {
		    return function () {
		      var callState = $store.i2v(getKClass(CallReducer));
		      var tmp0_elvis_lhs = callState.p36_1.u1($callId);
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var call = tmp;
		      var tmp_1 = call.h36_1;
		      if (tmp_1 instanceof Connected) {
		        var tmp1_safe_receiver = $cancel._v;
		        if (tmp1_safe_receiver == null)
		          ;
		        else
		          tmp1_safe_receiver();
		      }
		      var tmp_2 = call.h36_1;
		      var tmp2_safe_receiver = tmp_2 instanceof Reconnecting ? tmp_2 : null;
		      var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.d37_1;
		      var tmp_3;
		      if (tmp3_safe_receiver == null) {
		        tmp_3 = null;
		      } else {
		        // Inline function 'kotlin.takeIf' call
		        // Inline function 'kotlin.contracts.contract' call
		        var tmp_4;
		        // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.handleCallReconnection.<anonymous>.<anonymous>.<anonymous>' call
		        if (tmp3_safe_receiver > $cachedRetryCount._v) {
		          tmp_4 = tmp3_safe_receiver;
		        } else {
		          tmp_4 = null;
		        }
		        tmp_3 = tmp_4;
		      }
		      var tmp4_elvis_lhs = tmp_3;
		      var tmp_5;
		      if (tmp4_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp_5 = tmp4_elvis_lhs;
		      }
		      $cachedRetryCount._v = tmp_5;
		      reconnectCall(this$0, $store, $callId);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$handleCallReconnection$lambda($store, $callId, $cancel, $cachedRetryCount, this$0) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$handleCallReconnection$lambda$lambda($store, $callId, $cancel, $cachedRetryCount, this$0));
		    };
		  }
		  function VoiceAPIImpl$reconnectCall$lambda_0($store, $updatedCall) {
		    return function (response) {
		      if (!(response == null) ? typeof response === 'string' : false) {
		        $store.g1g(Action_init_$Create$(new CallReconnectSuccess($updatedCall.d36_1)));
		      } else {
		        var tmp_0 = $updatedCall.h36_1;
		        var tmp1_safe_receiver = tmp_0 instanceof Reconnecting ? tmp_0 : null;
		        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.d37_1;
		        var tmp_1;
		        if (tmp2_elvis_lhs == null) {
		          return Unit_instance;
		        } else {
		          tmp_1 = tmp2_elvis_lhs;
		        }
		        var retryCount = tmp_1;
		        var csError = response instanceof CSError ? response : null;
		        if (retryCount === 5 || !(csError == null)) {
		          $store.g1g(Action_init_$Create$(new CallReconnectFailure($updatedCall.d36_1)));
		        } else {
		          $store.g1g(Action_init_$Create$(new TimeoutAction(new CallReconnectionRetry($updatedCall.d36_1), 3000)));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$1(this$0) {
		    this.e37_1 = this$0;
		  }
		  protoOf(VoiceAPIImpl$1).n2s = function (conversationId, legId, isMuted) {
		    invokeListener$default(this.e37_1, conversationId, VOID, VoiceAPIImpl$o$onAudioMuteUpdate$lambda(legId, isMuted));
		  };
		  protoOf(VoiceAPIImpl$1).o2s = function (conversationId, legId, earmuffStatus) {
		    invokeListener$default(this.e37_1, conversationId, VOID, VoiceAPIImpl$o$onAudioEarmuffUpdate$lambda(legId, earmuffStatus));
		  };
		  protoOf(VoiceAPIImpl$1).p2s = function (conversationId, legId, digits) {
		    var leg_id = legId == null ? '' : legId;
		    invokeListener$default(this.e37_1, conversationId, VOID, VoiceAPIImpl$o$onAudioDTMFUpdate$lambda(leg_id, digits));
		  };
		  protoOf(VoiceAPIImpl$1).j2s = function (conversationId, legId, hangup) {
		    var tmp;
		    if (legId == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.api.<no name provided>.onRTCHangup.<anonymous>' call
		      tmp = getCallStateByLeg(this.e37_1, legId);
		    }
		    var call = tmp;
		    var tmp0 = hangup.b26_1.g37_1.e2_1;
		    var reason = {_v: tmp0 === 0 ? HangupReason_localHangup_getInstance() : tmp0 === 2 ? HangupReason_remoteHangup_getInstance() : tmp0 === 1 ? HangupReason_mediaTimeout_getInstance() : tmp0 === 4 ? HangupReason_mediaTimeout_getInstance() : HangupReason_localHangup_getInstance()};
		    if (!(call == null)) {
		      if (call.e36_1.m37() === null) {
		        var tmp_0;
		        var tmp_1;
		        var tmp_2 = call.e36_1;
		        if (tmp_2 instanceof Resolved) {
		          var tmp_3 = call.e36_1.r1();
		          tmp_1 = tmp_3 instanceof Left;
		        } else {
		          tmp_1 = false;
		        }
		        if (tmp_1) {
		          var tmp_4 = call.e36_1.r1();
		          var tmp_5;
		          switch ((tmp_4 instanceof Left ? tmp_4 : THROW_CCE()).l37_1) {
		            case 'remote_rejected':
		              tmp_5 = HangupReason_remoteReject_getInstance();
		              break;
		            case 'remote_no_answer':
		              tmp_5 = HangupReason_remoteReject_getInstance();
		              break;
		            case 'local_cancel':
		              tmp_5 = HangupReason_remoteNoAnswerTimeout_getInstance();
		              break;
		            case 'ring_timer':
		              tmp_5 = HangupReason_remoteNoAnswerTimeout_getInstance();
		              break;
		            default:
		              tmp_5 = HangupReason_remoteHangup_getInstance();
		              break;
		          }
		          tmp_0 = tmp_5;
		        } else {
		          tmp_0 = HangupReason_remoteHangup_getInstance();
		        }
		        reason._v = tmp_0;
		      }
		      invokeListener$default(this.e37_1, conversationId, VOID, VoiceAPIImpl$o$onRTCHangup$lambda(hangup, reason));
		    }
		    cleanupReducers(this.e37_1.m36_1, legId, conversationId);
		  };
		  protoOf(VoiceAPIImpl$1).l2s = function (conversationId, legId, fromUserId, status) {
		    if (!(conversationId == null) && !isFromMe(this.e37_1, fromUserId)) {
		      invokeListener(this.e37_1, conversationId, legId, VoiceAPIImpl$o$onLegStatusUpdate$lambda(legId, status));
		    }
		  };
		  protoOf(VoiceAPIImpl$1).k2s = function (conversationId, legId) {
		    invokeListener$default(this.e37_1, conversationId, VOID, VoiceAPIImpl$o$onRTCTransfer$lambda(legId, conversationId));
		  };
		  function VoiceAPIImpl$lambda$lambda(this$0, $cachedSessionId) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(SessionReducer));
		      var currentSessionId = state.a35_1.r1().l26();
		      if (!state.b35_1.h2n_1.equals(SocketConnectionStatus_Connected_getInstance())) {
		        $cachedSessionId._v = null;
		      } else if (!(currentSessionId == null) && !(currentSessionId == $cachedSessionId._v)) {
		        cleanupReducers(this$0.m36_1);
		        var invites = this$0.m36_1.i2v(getKClass(InviteReducer)).n37_1;
		        // Inline function 'kotlin.collections.filterValues' call
		        var result = LinkedHashMap_init_$Create$();
		        // Inline function 'kotlin.collections.iterator' call
		        var tmp0_iterator = invites.x1().i();
		        while (tmp0_iterator.j()) {
		          var entry = tmp0_iterator.k();
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		          var invite = entry.r1();
		          if (equals(invite.z36_1.r1(), None_instance_1)) {
		            result.b2(entry.q1(), entry.r1());
		          }
		        }
		        // Inline function 'kotlin.collections.iterator' call
		        var tmp0_iterator_0 = result.x1().i();
		        while (tmp0_iterator_0.j()) {
		          var element = tmp0_iterator_0.k();
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		          this$0.m36_1.g1g(new Action_0(new GetConversationRequest(element.r1().x36_1), new ActionMeta(VOID, element.r1().v36_1)));
		        }
		      } else ;
		      $cachedSessionId._v = state.a35_1.r1().l26();
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda(this$0) {
		    return function () {
		      var cachedSessionId = {_v: null};
		      return new StoredSubscription(VoiceAPIImpl$lambda$lambda(this$0, cachedSessionId));
		    };
		  }
		  function VoiceAPIImpl$lambda$lambda$lambda($state, $it, this$0) {
		    return function (getConversationResponse) {
		      var tmp_0;
		      var tmp_1;
		      if (getConversationResponse instanceof HTTPClientError) {
		        tmp_1 = true;
		      } else {
		        tmp_1 = getConversationResponse instanceof CSError;
		      }
		      if (tmp_1) {
		        tmp_0 = true;
		      } else {
		        tmp_0 = getConversationResponse instanceof AuthorizationError_0;
		      }
		      if (tmp_0) {
		        var tmp0_safe_receiver = $state.n37_1.u1($it.v36_1);
		        var currentInviteState = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.z36_1;
		        if (!(currentInviteState == null) && equals(currentInviteState.r1(), None_instance_1)) {
		          this$0.m36_1.g1g(Action_init_$Create$(new InviteReconcile($it.v36_1)));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda$lambda_0(this$0, $cache) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(InviteReducer));
		      var tmp;
		      if (state.p37_1 == null) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		        // Inline function 'kotlin.collections.get' call
		        var this_0 = state.n37_1;
		        var key = state.p37_1;
		        tmp = (isInterface(this_0, KtMap) ? this_0 : THROW_CCE()).u1(key);
		      }
		      var updatedInvite = tmp;
		      if (state.p37_1 == null) ; else {
		        var tmp_1;
		        if (!(updatedInvite == null)) {
		          // Inline function 'kotlin.collections.get' call
		          var this_1 = $cache;
		          var key_0 = state.p37_1;
		          tmp_1 = (isInterface(this_1, KtMap) ? this_1 : THROW_CCE()).u1(key_0) == null;
		        } else {
		          tmp_1 = false;
		        }
		        if (tmp_1) {
		          // Inline function 'kotlin.collections.set' call
		          var this_2 = $cache;
		          var key_1 = updatedInvite.v36_1;
		          var value = updatedInvite.q37();
		          this_2.b2(key_1, value);
		          // Inline function 'kotlin.also' call
		          // Inline function 'kotlin.contracts.contract' call
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		          var config = this$0.m36_1.i2v(getKClass(ConfigReducer));
		          if (config.w37_1 && updatedInvite.a37_1) {
		            var tmp0_safe_receiver = this$0.o36_1;
		            if (tmp0_safe_receiver == null)
		              ;
		            else {
		              tmp0_safe_receiver.n35(updatedInvite.v36_1, from(updatedInvite.u36_1), updatedInvite.u36_1.r37());
		            }
		          }
		          this$0.m36_1.g1g(new Action_0(new GetConversationRequest(updatedInvite.x36_1), new ActionMeta(VOID, updatedInvite.v36_1)));
		          var tmp_2 = new TimeoutAction(new GetConversationRequest(updatedInvite.x36_1), 60000);
		          this$0.m36_1.g1g(new Action_0(tmp_2, new ActionMeta(VOID, updatedInvite.v36_1, VoiceAPIImpl$lambda$lambda$lambda(state, updatedInvite, this$0))));
		        } else {
		          var tmp_3;
		          var tmp_4;
		          var tmp_5;
		          if (!(updatedInvite == null)) {
		            var tmp_6 = updatedInvite.z36_1.r1();
		            tmp_5 = tmp_6 instanceof Joined;
		          } else {
		            tmp_5 = false;
		          }
		          if (tmp_5) {
		            tmp_4 = updatedInvite.z36_1.m37() == null;
		          } else {
		            tmp_4 = false;
		          }
		          if (tmp_4) {
		            // Inline function 'kotlin.collections.get' call
		            var this_3 = $cache;
		            var key_2 = state.p37_1;
		            var tmp1_safe_receiver = (isInterface(this_3, KtMap) ? this_3 : THROW_CCE()).u1(key_2);
		            var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.z36_1;
		            tmp_3 = equals(tmp2_safe_receiver == null ? null : tmp2_safe_receiver.r1(), None_instance_1);
		          } else {
		            tmp_3 = false;
		          }
		          if (tmp_3) {
		            var tmp3_safe_receiver = this$0.o36_1;
		            if (tmp3_safe_receiver == null)
		              ;
		            else {
		              tmp3_safe_receiver.o35(updatedInvite.v36_1, VoiceInviteCancelReason_AnsweredElsewhere_getInstance());
		            }
		          } else {
		            var tmp_7;
		            var tmp_8;
		            if (!(updatedInvite == null)) {
		              // Inline function 'kotlin.collections.get' call
		              var this_4 = $cache;
		              var key_3 = state.p37_1;
		              var tmp6_safe_receiver = (isInterface(this_4, KtMap) ? this_4 : THROW_CCE()).u1(key_3);
		              var tmp_9 = (tmp6_safe_receiver == null ? null : tmp6_safe_receiver.b37_1) === false;
		              // Inline function 'kotlin.collections.get' call
		              var this_5 = $cache;
		              var key_4 = state.p37_1;
		              var tmp4_safe_receiver = (isInterface(this_5, KtMap) ? this_5 : THROW_CCE()).u1(key_4);
		              var tmp5_safe_receiver = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.z36_1;
		              tmp_8 = !!(tmp_9 | equals(tmp5_safe_receiver == null ? null : tmp5_safe_receiver.r1(), None_instance_1));
		            } else {
		              tmp_8 = false;
		            }
		            if (tmp_8) {
		              var tmp_10 = updatedInvite.b37_1;
		              var tmp_11 = updatedInvite.z36_1.r1();
		              tmp_7 = !!(tmp_10 & tmp_11 instanceof Left);
		            } else {
		              tmp_7 = false;
		            }
		            if (tmp_7) {
		              var tmp_12;
		              // Inline function 'kotlin.collections.get' call
		              var this_6 = $cache;
		              var key_5 = state.p37_1;
		              var tmp7_safe_receiver = (isInterface(this_6, KtMap) ? this_6 : THROW_CCE()).u1(key_5);
		              var tmp8_safe_receiver = tmp7_safe_receiver == null ? null : tmp7_safe_receiver.z36_1;
		              var tmp_13 = tmp8_safe_receiver == null ? null : tmp8_safe_receiver.r1();
		              if (tmp_13 instanceof Joined) {
		                tmp_12 = null;
		              } else {
		                if (!(updatedInvite.z36_1.m37() == null)) {
		                  tmp_12 = null;
		                } else {
		                  var tmp_14 = updatedInvite.z36_1.r1();
		                  if ((tmp_14 instanceof Left ? tmp_14 : THROW_CCE()).l37_1 === 'REMOTE_REJECT') {
		                    tmp_12 = VoiceInviteCancelReason_RejectedElsewhere_getInstance();
		                  } else {
		                    if (updatedInvite.c37_1 === 487) {
		                      tmp_12 = VoiceInviteCancelReason_RemoteTimeout_getInstance();
		                    } else {
		                      tmp_12 = VoiceInviteCancelReason_RemoteCancel_getInstance();
		                    }
		                  }
		                }
		              }
		              var reason = tmp_12;
		              if (reason == null)
		                ;
		              else {
		                // Inline function 'kotlin.let' call
		                // Inline function 'kotlin.contracts.contract' call
		                // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		                var tmp0_safe_receiver_0 = this$0.o36_1;
		                if (tmp0_safe_receiver_0 == null) ; else {
		                  tmp0_safe_receiver_0.o35(updatedInvite.v36_1, reason);
		                }
		              }
		            } else {
		              var tmp_16;
		              if (updatedInvite == null) {
		                // Inline function 'kotlin.collections.get' call
		                var this_7 = $cache;
		                var key_6 = state.p37_1;
		                tmp_16 = !((isInterface(this_7, KtMap) ? this_7 : THROW_CCE()).u1(key_6) == null);
		              } else {
		                tmp_16 = false;
		              }
		              if (tmp_16) {
		                // Inline function 'kotlin.collections.remove' call
		                var this_8 = $cache;
		                var key_7 = state.p37_1;
		                (isInterface(this_8, KtMutableMap) ? this_8 : THROW_CCE()).c2(key_7);
		              }
		            }
		          }
		        }
		      }
		      if (updatedInvite == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        var this_9 = $cache;
		        var key_8 = updatedInvite.v36_1;
		        var value_0 = updatedInvite.q37();
		        this_9.b2(key_8, value_0);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda_0(this$0) {
		    return function () {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      var cache = LinkedHashMap_init_$Create$();
		      return new StoredSubscription(VoiceAPIImpl$lambda$lambda_0(this$0, cache));
		    };
		  }
		  function VoiceAPIImpl$lambda$lambda_1(this$0, $cache) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(CallReducer));
		      var tmp0_elvis_lhs = state.s36_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var lastModifiedCallId = tmp;
		      var tmp1_elvis_lhs = state.p36_1.u1(lastModifiedCallId);
		      var tmp_0;
		      if (tmp1_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp_0 = tmp1_elvis_lhs;
		      }
		      var updatedCall = tmp_0;
		      var cachedCall = $cache.u1(lastModifiedCallId);
		      var this_0 = $cache;
		      var key = updatedCall.d36_1;
		      var value = updatedCall.d38();
		      this_0.b2(key, value);
		      if (cachedCall == null)
		        return Unit_instance;
		      if (!equals(updatedCall.e36_1, cachedCall.e36_1)) {
		        onCallMemberChange(this$0, updatedCall);
		      }
		      if ((!(updatedCall.g36_1.e38_1 == null) || updatedCall.a36_1) && (!updatedCall.g36_1.equals(cachedCall.g36_1) || !equals(updatedCall.f36_1, cachedCall.f36_1))) {
		        onCallMediaChange(this$0, updatedCall);
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda_1(this$0) {
		    return function () {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      var cache = LinkedHashMap_init_$Create$();
		      return new StoredSubscription(VoiceAPIImpl$lambda$lambda_1(this$0, cache));
		    };
		  }
		  function VoiceAPIImpl$lambda$lambda_2(this$0, $cache) {
		    return function () {
		      var callState = this$0.m36_1.i2v(getKClass(CallReducer));
		      var tmp0_elvis_lhs = callState.s36_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var lastModifiedCallId = tmp;
		      var tmp1_safe_receiver = callState.p36_1.u1(lastModifiedCallId);
		      var tmp_0;
		      if (tmp1_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.takeUnless' call
		        // Inline function 'kotlin.contracts.contract' call
		        var tmp_1;
		        // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		        var tmp_2 = tmp1_safe_receiver.f36_1.r1();
		        if (!(tmp_2 instanceof Completed)) {
		          tmp_1 = tmp1_safe_receiver;
		        } else {
		          tmp_1 = null;
		        }
		        tmp_0 = tmp_1;
		      }
		      var tmp2_elvis_lhs = tmp_0;
		      var tmp_3;
		      if (tmp2_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp_3 = tmp2_elvis_lhs;
		      }
		      var updatedCall = tmp_3;
		      var tmp3_safe_receiver = $cache.u1(lastModifiedCallId);
		      var tmp_4;
		      if (tmp3_safe_receiver == null) {
		        tmp_4 = null;
		      } else {
		        // Inline function 'kotlin.takeUnless' call
		        // Inline function 'kotlin.contracts.contract' call
		        var tmp_5;
		        // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		        if (!getKClassFromExpression(tmp3_safe_receiver.h36_1).equals(getKClassFromExpression(updatedCall.h36_1))) {
		          tmp_5 = tmp3_safe_receiver;
		        } else {
		          tmp_5 = null;
		        }
		        tmp_4 = tmp_5;
		      }
		      var tmp4_safe_receiver = tmp_4;
		      if (tmp4_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        $l$block: {
		          // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>' call
		          var tmp0_subject = updatedCall.h36_1;
		          if (tmp0_subject instanceof Reconnecting) {
		            // Inline function 'kotlin.takeIf' call
		            var this_0 = this$0.m36_1.i2v(getKClass(ConfigReducer));
		            // Inline function 'kotlin.contracts.contract' call
		            var tmp_6;
		            // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		            if (this_0.b38_1) {
		              tmp_6 = this_0;
		            } else {
		              tmp_6 = null;
		            }
		            if (tmp_6 == null) {
		              break $l$block;
		            }
		            var tmp2_safe_receiver = this$0.o36_1;
		            if (tmp2_safe_receiver == null)
		              ;
		            else {
		              tmp2_safe_receiver.v35(updatedCall.d36_1);
		            }
		            handleCallReconnection(this$0, this$0.m36_1, updatedCall.d36_1);
		          } else {
		            if (equals(tmp0_subject, Connected_instance)) {
		              var tmp3_safe_receiver_0 = this$0.o36_1;
		              var tmp_7;
		              if (tmp3_safe_receiver_0 == null) {
		                tmp_7 = null;
		              } else {
		                // Inline function 'kotlin.takeIf' call
		                // Inline function 'kotlin.contracts.contract' call
		                var tmp_8;
		                // Inline function 'com.vonage.clientcore.core.api.VoiceAPIImpl.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		                var tmp_9 = tmp4_safe_receiver.h36_1;
		                if (tmp_9 instanceof Reconnecting) {
		                  tmp_8 = tmp3_safe_receiver_0;
		                } else {
		                  tmp_8 = null;
		                }
		                tmp_7 = tmp_8;
		              }
		              var tmp4_safe_receiver_0 = tmp_7;
		              if (tmp4_safe_receiver_0 == null)
		                ;
		              else {
		                tmp4_safe_receiver_0.w35(updatedCall.d36_1);
		              }
		            } else {
		              if (equals(tmp0_subject, Disconnected_instance)) {
		                var tmp5_safe_receiver = this$0.o36_1;
		                if (tmp5_safe_receiver == null)
		                  ;
		                else {
		                  tmp5_safe_receiver.x35(updatedCall.d36_1, CallDisconnectReason_networkChange_getInstance());
		                }
		              } else {
		                equals(tmp0_subject, New_instance);
		              }
		            }
		          }
		        }
		      }
		      var this_1 = $cache;
		      var value = updatedCall.d38();
		      this_1.b2(lastModifiedCallId, value);
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda_2(this$0) {
		    return function () {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      var cache = LinkedHashMap_init_$Create$();
		      return new StoredSubscription(VoiceAPIImpl$lambda$lambda_2(this$0, cache));
		    };
		  }
		  function VoiceAPIImpl$lambda$lambda_3(this$0) {
		    return function () {
		      var state = this$0.m36_1.i2v(getKClass(MediaEventReducer));
		      var tmp0_elvis_lhs = state.i38_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var callId = tmp;
		      var tmp1_elvis_lhs = state.h38_1.u1(callId);
		      var tmp_0;
		      if (tmp1_elvis_lhs == null) {
		        return Unit_instance;
		      } else {
		        tmp_0 = tmp1_elvis_lhs;
		      }
		      var mediaEvent = tmp_0;
		      if (mediaEvent instanceof MediaErrorEvent) {
		        var tmp3_safe_receiver = this$0.o36_1;
		        if (tmp3_safe_receiver == null)
		          ;
		        else {
		          tmp3_safe_receiver.z35(callId, toVonageError(mediaEvent.p2l_1));
		        }
		      } else {
		        if (mediaEvent instanceof RTCStatsUpdate) {
		          var tmp4_safe_receiver = this$0.o36_1;
		          if (tmp4_safe_receiver == null)
		            ;
		          else {
		            tmp4_safe_receiver.y35(mediaEvent.r2l_1, callId);
		          }
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$lambda_3(this$0) {
		    return function () {
		      return new StoredSubscription(VoiceAPIImpl$lambda$lambda_3(this$0));
		    };
		  }
		  function VoiceAPIImpl$getCallDetailsAndDispatchCallReconnect$lambda$lambda(this$0, $legId, $legResponse, $callback) {
		    return function (memberResponse) {
		      if (memberResponse instanceof GetMember) {
		        if (memberResponse.z1p_1.e2_1 === 1) {
		          this$0.m36_1.g1g(Action_init_$Create$(new CallReconnect($legId, memberResponse.y1p_1, $legResponse.v1h_1)));
		        } else {
		          invokeCallbackWithError_0(new MemberNotInConversation(), $callback);
		        }
		      } else {
		        invokeCallbackWithError_0(new NoConversationFound(), $callback);
		        this$0.m36_1.g1g(Action_init_$Create$(new CallCleanup($legId)));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl$getCallDetailsAndDispatchCallReconnect$lambda(this$0, $callback, $legId) {
		    return function (legResponse) {
		      if (legResponse instanceof GetLeg) {
		        var tmp_0 = new GetMyMemberRequest(legResponse.v1h_1);
		        this$0.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, legResponse.u1h_1, VoiceAPIImpl$getCallDetailsAndDispatchCallReconnect$lambda$lambda(this$0, $legId, legResponse, $callback))));
		      } else {
		        invokeCallbackWithError_0(new NoLegFound(), $callback);
		        this$0.m36_1.g1g(Action_init_$Create$(new CallCleanup($legId)));
		      }
		      return Unit_instance;
		    };
		  }
		  function VoiceAPIImpl(store, events, loggerAdapter) {
		    this.m36_1 = store;
		    this.n36_1 = loggerAdapter.b1f(Voice_getInstance());
		    this.o36_1 = null;
		    events.c1g(new VoiceAPIImpl$1(this));
		    var tmp = getKClass(SessionReducer);
		    this.m36_1.p2v(tmp, VoiceAPIImpl$lambda(this));
		    var tmp_0 = getKClass(InviteReducer);
		    this.m36_1.p2v(tmp_0, VoiceAPIImpl$lambda_0(this));
		    var tmp_1 = getKClass(CallReducer);
		    this.m36_1.p2v(tmp_1, VoiceAPIImpl$lambda_1(this));
		    var tmp_2 = getKClass(CallReducer);
		    this.m36_1.p2v(tmp_2, VoiceAPIImpl$lambda_2(this));
		    var tmp_3 = getKClass(MediaEventReducer);
		    this.m36_1.p2v(tmp_3, VoiceAPIImpl$lambda_3(this));
		  }
		  protoOf(VoiceAPIImpl).z1d = function (listener) {
		    this.o36_1 = listener;
		  };
		  protoOf(VoiceAPIImpl).c1e = function (legId, callback) {
		    if (getSessionUserOrError(this.m36_1, callback) == null)
		      return Unit_instance;
		    var tmp = new GetLegRequest(legId);
		    this.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, VoiceAPIImpl$getLeg$lambda(callback))));
		  };
		  protoOf(VoiceAPIImpl).d1e = function (callId, parameters, callback) {
		    if (getSessionUserOrError(this.m36_1, callback) == null)
		      return Unit_instance;
		    var callState = this.m36_1.i2v(getKClass(CallReducer));
		    var call = callState.p36_1.u1(callId);
		    var tmp2_safe_receiver = call == null ? null : call.e36_1;
		    var tmp = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.r1();
		    var memberState = tmp instanceof Joined ? tmp : null;
		    if (call == null || memberState == null) {
		      return invokeCallbackWithError(new NoCallFound(), callback);
		    }
		    var tmp_0 = new GetConversationRequest(memberState.j36_1);
		    this.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, VoiceAPIImpl$getCallLegs$lambda(this, callback, memberState, parameters))));
		  };
		  protoOf(VoiceAPIImpl).a1e = function (context, callback) {
		    var tmp0_elvis_lhs = getSessionUserOrError(this.m36_1, callback);
		    var tmp;
		    if (tmp0_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp = tmp0_elvis_lhs;
		    }
		    var user = tmp;
		    var tmp_0 = new SetupOutboundCall(user.g2t_1, context);
		    this.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, VOID, VoiceAPIImpl$serverCall$lambda(this, callback))));
		  };
		  protoOf(VoiceAPIImpl).b1e = function (callId, callback) {
		    var once = {_v: null};
		    var tmp = getKClass(CallReducer);
		    once._v = this.m36_1.p2v(tmp, VoiceAPIImpl$reconnectCall$lambda(this, callId, once, callback));
		    if (getSessionUserOrError_0(this.m36_1, callback) == null)
		      return Unit_instance;
		    var callState = this.m36_1.i2v(getKClass(CallReducer));
		    var call = callState.p36_1.u1(callId);
		    var tmp2_safe_receiver = call == null ? null : call.e36_1;
		    var tmp_0 = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.r1();
		    var memberState = tmp_0 instanceof Joined ? tmp_0 : null;
		    if (call == null || memberState == null) {
		      getCallDetailsAndDispatchCallReconnect(this, callId, callback);
		    } else {
		      this.m36_1.g1g(Action_init_$Create$(new CallReconnect(callId, memberState.k36_1, memberState.j36_1)));
		    }
		  };
		  protoOf(VoiceAPIImpl).e1e = function (callId, callback) {
		    var invite = this.m36_1.i2v(getKClass(InviteReducer)).n37_1.u1(callId);
		    if (invite == null) {
		      invokeCallbackWithError_0(new NoInviteFound(), callback);
		      return Unit_instance;
		    }
		    var tmp;
		    var tmp_0;
		    var tmp_1 = invite.z36_1;
		    if (tmp_1 instanceof Pending) {
		      tmp_0 = true;
		    } else {
		      var tmp_2 = invite.z36_1.r1();
		      tmp_0 = tmp_2 instanceof Joined;
		    }
		    if (tmp_0) {
		      tmp = true;
		    } else {
		      var tmp_3 = invite.z36_1.r1();
		      tmp = tmp_3 instanceof Left;
		    }
		    if (tmp) {
		      invokeCallbackWithError_0(new InvalidCallAction(), callback);
		      return Unit_instance;
		    }
		    var tmp_4 = new MemberKickRequest(invite.x36_1, invite.w36_1, 'call-rejected-by-callee', 'REMOTE_REJECT');
		    this.m36_1.g1g(new Action_0(tmp_4, new ActionMeta(VOID, callId, VoiceAPIImpl$rejectCall$lambda(callback))));
		  };
		  protoOf(VoiceAPIImpl).f1e = function (callId, callback) {
		    var invite = this.m36_1.i2v(getKClass(InviteReducer)).n37_1.u1(callId);
		    if (invite == null) {
		      invokeCallbackWithError_0(new NoInviteFound(), callback);
		      return Unit_instance;
		    }
		    var tmp;
		    var tmp_0;
		    var tmp_1 = invite.z36_1;
		    if (tmp_1 instanceof Pending) {
		      tmp_0 = true;
		    } else {
		      var tmp_2 = invite.z36_1.r1();
		      tmp_0 = tmp_2 instanceof Joined;
		    }
		    if (tmp_0) {
		      tmp = true;
		    } else {
		      var tmp_3 = invite.z36_1.r1();
		      tmp = tmp_3 instanceof Left;
		    }
		    if (tmp) {
		      invokeCallbackWithError_0(new InvalidCallAction(), callback);
		      return Unit_instance;
		    }
		    var tmp_4 = new MemberJoinRequest(invite.x36_1, invite.w36_1);
		    this.m36_1.g1g(new Action_0(tmp_4, new ActionMeta(VOID, callId, VoiceAPIImpl$answerCall$lambda(callback, invite, this, callId))));
		  };
		  protoOf(VoiceAPIImpl).g1e = function (callId, reasonText, reasonCode, callback) {
		    var call = this.m36_1.i2v(getKClass(CallReducer)).p36_1.u1(callId);
		    if (call == null) {
		      invokeCallbackWithError_0(new NoCallFound(), callback);
		      return Unit_instance;
		    }
		    this.m36_1.g1g(Action_init_$Create$(new MediaDisable(callId)));
		    var callMemberShipState = call.e36_1.r1();
		    if (callMemberShipState instanceof Joined) {
		      var tmp = new MemberKickRequest(callMemberShipState.j36_1, callMemberShipState.k36_1, reasonText, reasonCode);
		      this.m36_1.g1g(new Action_0(tmp, new ActionMeta(VOID, callId, VoiceAPIImpl$hangupCall$lambda(callback))));
		    } else {
		      if (callMemberShipState instanceof Knocking) {
		        var tmp_0 = new DeleteKnockerRequest(callMemberShipState.j38_1);
		        this.m36_1.g1g(new Action_0(tmp_0, new ActionMeta(VOID, callId, VoiceAPIImpl$hangupCall$lambda_0(callback))));
		      } else {
		        invokeCallbackWithError_0(new InvalidCallAction(), callback);
		      }
		    }
		  };
		  protoOf(VoiceAPIImpl).h1e = function (callId, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$mute$lambda(this, callId, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  protoOf(VoiceAPIImpl).i1e = function (callId, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$unmute$lambda(this, callId, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  protoOf(VoiceAPIImpl).j1e = function (callId, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$enableEarmuff$lambda(this, callId, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  protoOf(VoiceAPIImpl).k1e = function (callId, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$disableEarmuff$lambda(this, callId, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  protoOf(VoiceAPIImpl).l1e = function (callId, digits, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$sendDTMF$lambda(this, callId, digits, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  protoOf(VoiceAPIImpl).m1e = function (callId, text, level, loop, queue, voiceName, ssml, callback) {
		    var tmp0_safe_receiver = dispatchCallAction(this, callId, VoiceAPIImpl$say$lambda(this, text, level, loop, queue, voiceName, ssml, callId, callback));
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      invokeCallbackWithError_0(tmp0_safe_receiver, callback);
		    }
		  };
		  function SetupOutboundCall(user, context) {
		    this.k38_1 = user;
		    this.l38_1 = context;
		  }
		  protoOf(SetupOutboundCall).toString = function () {
		    return 'SetupOutboundCall(user=' + this.k38_1 + ', context=' + toString_0(this.l38_1) + ')';
		  };
		  protoOf(SetupOutboundCall).hashCode = function () {
		    var result = getStringHashCode(this.k38_1);
		    result = imul(result, 31) + (this.l38_1 == null ? 0 : hashCode(this.l38_1)) | 0;
		    return result;
		  };
		  protoOf(SetupOutboundCall).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SetupOutboundCall))
		      return false;
		    var tmp0_other_with_cast = other instanceof SetupOutboundCall ? other : THROW_CCE();
		    if (!(this.k38_1 === tmp0_other_with_cast.k38_1))
		      return false;
		    if (!equals(this.l38_1, tmp0_other_with_cast.l38_1))
		      return false;
		    return true;
		  };
		  function CallKnockingRequestFailure(callId, exception) {
		    this.m38_1 = callId;
		    this.n38_1 = exception;
		  }
		  protoOf(CallKnockingRequestFailure).toString = function () {
		    return 'CallKnockingRequestFailure(callId=' + this.m38_1 + ', exception=' + this.n38_1.toString() + ')';
		  };
		  protoOf(CallKnockingRequestFailure).hashCode = function () {
		    var result = getStringHashCode(this.m38_1);
		    result = imul(result, 31) + hashCode(this.n38_1) | 0;
		    return result;
		  };
		  protoOf(CallKnockingRequestFailure).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallKnockingRequestFailure))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallKnockingRequestFailure ? other : THROW_CCE();
		    if (!(this.m38_1 === tmp0_other_with_cast.m38_1))
		      return false;
		    if (!equals(this.n38_1, tmp0_other_with_cast.n38_1))
		      return false;
		    return true;
		  };
		  function CallCleanup(callId) {
		    this.o38_1 = callId;
		  }
		  protoOf(CallCleanup).toString = function () {
		    return 'CallCleanup(callId=' + this.o38_1 + ')';
		  };
		  protoOf(CallCleanup).hashCode = function () {
		    return getStringHashCode(this.o38_1);
		  };
		  protoOf(CallCleanup).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallCleanup))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallCleanup ? other : THROW_CCE();
		    if (!(this.o38_1 === tmp0_other_with_cast.o38_1))
		      return false;
		    return true;
		  };
		  function CallReconnect(callId, from, conversationId) {
		    this.p38_1 = callId;
		    this.q38_1 = from;
		    this.r38_1 = conversationId;
		  }
		  protoOf(CallReconnect).toString = function () {
		    return 'CallReconnect(callId=' + this.p38_1 + ', from=' + this.q38_1 + ', conversationId=' + this.r38_1 + ')';
		  };
		  protoOf(CallReconnect).hashCode = function () {
		    var result = getStringHashCode(this.p38_1);
		    result = imul(result, 31) + getStringHashCode(this.q38_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.r38_1) | 0;
		    return result;
		  };
		  protoOf(CallReconnect).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallReconnect))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallReconnect ? other : THROW_CCE();
		    if (!(this.p38_1 === tmp0_other_with_cast.p38_1))
		      return false;
		    if (!(this.q38_1 === tmp0_other_with_cast.q38_1))
		      return false;
		    if (!(this.r38_1 === tmp0_other_with_cast.r38_1))
		      return false;
		    return true;
		  };
		  function SetupInboundCall(rtcId, conversationId, memberId, from, sdp, context) {
		    this.s38_1 = rtcId;
		    this.t38_1 = conversationId;
		    this.u38_1 = memberId;
		    this.v38_1 = from;
		    this.w38_1 = sdp;
		    this.x38_1 = context;
		  }
		  protoOf(SetupInboundCall).toString = function () {
		    return 'SetupInboundCall(rtcId=' + this.s38_1 + ', conversationId=' + this.t38_1 + ', memberId=' + this.u38_1 + ', from=' + toString(this.v38_1) + ', sdp=' + this.w38_1 + ', context=' + toString_0(this.x38_1) + ')';
		  };
		  protoOf(SetupInboundCall).hashCode = function () {
		    var result = getStringHashCode(this.s38_1);
		    result = imul(result, 31) + getStringHashCode(this.t38_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.u38_1) | 0;
		    result = imul(result, 31) + hashCode(this.v38_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w38_1) | 0;
		    result = imul(result, 31) + (this.x38_1 == null ? 0 : hashCode(this.x38_1)) | 0;
		    return result;
		  };
		  protoOf(SetupInboundCall).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SetupInboundCall))
		      return false;
		    var tmp0_other_with_cast = other instanceof SetupInboundCall ? other : THROW_CCE();
		    if (!(this.s38_1 === tmp0_other_with_cast.s38_1))
		      return false;
		    if (!(this.t38_1 === tmp0_other_with_cast.t38_1))
		      return false;
		    if (!(this.u38_1 === tmp0_other_with_cast.u38_1))
		      return false;
		    if (!equals(this.v38_1, tmp0_other_with_cast.v38_1))
		      return false;
		    if (!(this.w38_1 === tmp0_other_with_cast.w38_1))
		      return false;
		    if (!equals(this.x38_1, tmp0_other_with_cast.x38_1))
		      return false;
		    return true;
		  };
		  function CallReconnectSuccess(callId) {
		    this.y38_1 = callId;
		  }
		  protoOf(CallReconnectSuccess).toString = function () {
		    return 'CallReconnectSuccess(callId=' + this.y38_1 + ')';
		  };
		  protoOf(CallReconnectSuccess).hashCode = function () {
		    return getStringHashCode(this.y38_1);
		  };
		  protoOf(CallReconnectSuccess).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallReconnectSuccess))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallReconnectSuccess ? other : THROW_CCE();
		    if (!(this.y38_1 === tmp0_other_with_cast.y38_1))
		      return false;
		    return true;
		  };
		  function CallReconnectFailure(callId) {
		    this.z38_1 = callId;
		  }
		  protoOf(CallReconnectFailure).toString = function () {
		    return 'CallReconnectFailure(callId=' + this.z38_1 + ')';
		  };
		  protoOf(CallReconnectFailure).hashCode = function () {
		    return getStringHashCode(this.z38_1);
		  };
		  protoOf(CallReconnectFailure).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallReconnectFailure))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallReconnectFailure ? other : THROW_CCE();
		    if (!(this.z38_1 === tmp0_other_with_cast.z38_1))
		      return false;
		    return true;
		  };
		  function InviteReconcile(callId) {
		    this.a39_1 = callId;
		  }
		  protoOf(InviteReconcile).toString = function () {
		    return 'InviteReconcile(callId=' + this.a39_1 + ')';
		  };
		  protoOf(InviteReconcile).hashCode = function () {
		    return getStringHashCode(this.a39_1);
		  };
		  protoOf(InviteReconcile).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof InviteReconcile))
		      return false;
		    var tmp0_other_with_cast = other instanceof InviteReconcile ? other : THROW_CCE();
		    if (!(this.a39_1 === tmp0_other_with_cast.a39_1))
		      return false;
		    return true;
		  };
		  function CallEvent() {
		  }
		  function CallCreate(legId, from, direction, context, memberJoinInfo) {
		    memberJoinInfo = memberJoinInfo === VOID ? null : memberJoinInfo;
		    this.b39_1 = legId;
		    this.c39_1 = from;
		    this.d39_1 = direction;
		    this.e39_1 = context;
		    this.f39_1 = memberJoinInfo;
		  }
		  protoOf(CallCreate).toString = function () {
		    return 'CallCreate(legId=' + this.b39_1 + ', from=' + toString(this.c39_1) + ', direction=' + this.d39_1.toString() + ', context=' + toString_0(this.e39_1) + ', memberJoinInfo=' + toString_0(this.f39_1) + ')';
		  };
		  protoOf(CallCreate).hashCode = function () {
		    var result = getStringHashCode(this.b39_1);
		    result = imul(result, 31) + hashCode(this.c39_1) | 0;
		    result = imul(result, 31) + this.d39_1.hashCode() | 0;
		    result = imul(result, 31) + (this.e39_1 == null ? 0 : hashCode(this.e39_1)) | 0;
		    result = imul(result, 31) + (this.f39_1 == null ? 0 : this.f39_1.hashCode()) | 0;
		    return result;
		  };
		  protoOf(CallCreate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallCreate))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallCreate ? other : THROW_CCE();
		    if (!(this.b39_1 === tmp0_other_with_cast.b39_1))
		      return false;
		    if (!equals(this.c39_1, tmp0_other_with_cast.c39_1))
		      return false;
		    if (!this.d39_1.equals(tmp0_other_with_cast.d39_1))
		      return false;
		    if (!equals(this.e39_1, tmp0_other_with_cast.e39_1))
		      return false;
		    if (!equals(this.f39_1, tmp0_other_with_cast.f39_1))
		      return false;
		    return true;
		  };
		  function CallMemberMediaTimeout(callId) {
		    this.g39_1 = callId;
		  }
		  protoOf(CallMemberMediaTimeout).toString = function () {
		    return 'CallMemberMediaTimeout(callId=' + this.g39_1 + ')';
		  };
		  protoOf(CallMemberMediaTimeout).hashCode = function () {
		    return getStringHashCode(this.g39_1);
		  };
		  protoOf(CallMemberMediaTimeout).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallMemberMediaTimeout))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallMemberMediaTimeout ? other : THROW_CCE();
		    if (!(this.g39_1 === tmp0_other_with_cast.g39_1))
		      return false;
		    return true;
		  };
		  function MemberJoinInfo(conversationId, memberId) {
		    this.h39_1 = conversationId;
		    this.i39_1 = memberId;
		  }
		  protoOf(MemberJoinInfo).toString = function () {
		    return 'MemberJoinInfo(conversationId=' + this.h39_1 + ', memberId=' + this.i39_1 + ')';
		  };
		  protoOf(MemberJoinInfo).hashCode = function () {
		    var result = getStringHashCode(this.h39_1);
		    result = imul(result, 31) + getStringHashCode(this.i39_1) | 0;
		    return result;
		  };
		  protoOf(MemberJoinInfo).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MemberJoinInfo))
		      return false;
		    var tmp0_other_with_cast = other instanceof MemberJoinInfo ? other : THROW_CCE();
		    if (!(this.h39_1 === tmp0_other_with_cast.h39_1))
		      return false;
		    if (!(this.i39_1 === tmp0_other_with_cast.i39_1))
		      return false;
		    return true;
		  };
		  function CallConversationUpdate(rtcId, name) {
		    this.j39_1 = rtcId;
		    this.k39_1 = name;
		  }
		  protoOf(CallConversationUpdate).toString = function () {
		    return 'CallConversationUpdate(rtcId=' + this.j39_1 + ', name=' + this.k39_1 + ')';
		  };
		  protoOf(CallConversationUpdate).hashCode = function () {
		    var result = getStringHashCode(this.j39_1);
		    result = imul(result, 31) + getStringHashCode(this.k39_1) | 0;
		    return result;
		  };
		  protoOf(CallConversationUpdate).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallConversationUpdate))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallConversationUpdate ? other : THROW_CCE();
		    if (!(this.j39_1 === tmp0_other_with_cast.j39_1))
		      return false;
		    if (!(this.k39_1 === tmp0_other_with_cast.k39_1))
		      return false;
		    return true;
		  };
		  function InviteCleanup(callId) {
		    this.l39_1 = callId;
		  }
		  protoOf(InviteCleanup).toString = function () {
		    return 'InviteCleanup(callId=' + this.l39_1 + ')';
		  };
		  protoOf(InviteCleanup).hashCode = function () {
		    return getStringHashCode(this.l39_1);
		  };
		  protoOf(InviteCleanup).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof InviteCleanup))
		      return false;
		    var tmp0_other_with_cast = other instanceof InviteCleanup ? other : THROW_CCE();
		    if (!(this.l39_1 === tmp0_other_with_cast.l39_1))
		      return false;
		    return true;
		  };
		  function VoiceInviteCancelReason_AnsweredElsewhere_getInstance() {
		    VoiceInviteCancelReason_initEntries();
		    return VoiceInviteCancelReason_AnsweredElsewhere_instance;
		  }
		  function VoiceInviteCancelReason_RejectedElsewhere_getInstance() {
		    VoiceInviteCancelReason_initEntries();
		    return VoiceInviteCancelReason_RejectedElsewhere_instance;
		  }
		  function VoiceInviteCancelReason_RemoteCancel_getInstance() {
		    VoiceInviteCancelReason_initEntries();
		    return VoiceInviteCancelReason_RemoteCancel_instance;
		  }
		  function VoiceInviteCancelReason_RemoteTimeout_getInstance() {
		    VoiceInviteCancelReason_initEntries();
		    return VoiceInviteCancelReason_RemoteTimeout_instance;
		  }
		  function HangupReason_remoteReject_getInstance() {
		    HangupReason_initEntries();
		    return HangupReason_remoteReject_instance;
		  }
		  function HangupReason_remoteHangup_getInstance() {
		    HangupReason_initEntries();
		    return HangupReason_remoteHangup_instance;
		  }
		  function HangupReason_remoteNoAnswerTimeout_getInstance() {
		    HangupReason_initEntries();
		    return HangupReason_remoteNoAnswerTimeout_instance;
		  }
		  function HangupReason_localHangup_getInstance() {
		    HangupReason_initEntries();
		    return HangupReason_localHangup_instance;
		  }
		  function HangupReason_mediaTimeout_getInstance() {
		    HangupReason_initEntries();
		    return HangupReason_mediaTimeout_instance;
		  }
		  function LegStatus_ringing_getInstance() {
		    LegStatus_initEntries();
		    return LegStatus_ringing_instance;
		  }
		  function LegStatus_answered_getInstance() {
		    LegStatus_initEntries();
		    return LegStatus_answered_instance;
		  }
		  function LegStatus_completed_getInstance() {
		    LegStatus_initEntries();
		    return LegStatus_completed_instance;
		  }
		  function CallDisconnectReason_networkChange_getInstance() {
		    CallDisconnectReason_initEntries();
		    return CallDisconnectReason_networkChange_instance;
		  }
		  var VoiceChannelType_app_instance;
		  var VoiceChannelType_phone_instance;
		  var VoiceChannelType_sip_instance;
		  var VoiceChannelType_websocket_instance;
		  function values_3() {
		    return [VoiceChannelType_app_getInstance(), VoiceChannelType_phone_getInstance(), VoiceChannelType_sip_getInstance(), VoiceChannelType_websocket_getInstance()];
		  }
		  var VoiceChannelType_entriesInitialized;
		  function VoiceChannelType_initEntries() {
		    if (VoiceChannelType_entriesInitialized)
		      return Unit_instance;
		    VoiceChannelType_entriesInitialized = true;
		    VoiceChannelType_app_instance = new VoiceChannelType('app', 0);
		    VoiceChannelType_phone_instance = new VoiceChannelType('phone', 1);
		    VoiceChannelType_sip_instance = new VoiceChannelType('sip', 2);
		    VoiceChannelType_websocket_instance = new VoiceChannelType('websocket', 3);
		  }
		  function VoiceChannelType(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function _get_$cachedSerializer__te6jhj_1($this) {
		    return $this.m39_1.r1();
		  }
		  function ChannelEndpoint$Companion$_anonymous__4a66ll() {
		    var tmp = getKClass(ChannelEndpoint);
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp_0 = [getKClass(AppChannelEndpoint), getKClass(AppChannelEndpointNoUser), getKClass(PhoneChannelEndpoint), getKClass(SipChannelEndpoint), getKClass(WebSocketChannelEndpoint)];
		    // Inline function 'kotlin.arrayOf' call
		    var tmp_1 = $serializer_getInstance_164();
		    var tmp_2 = AppChannelEndpointNoUser_getInstance();
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp$ret$5 = [];
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp_3 = [tmp_1, ObjectSerializer_init_$Create$('com.vonage.clientcore.core.conversation.AppChannelEndpointNoUser', tmp_2, tmp$ret$5), $serializer_getInstance_163(), $serializer_getInstance_165(), $serializer_getInstance_166()];
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp$ret$11 = [];
		    return SealedClassSerializer_init_$Create$('com.vonage.clientcore.core.conversation.ChannelEndpoint', tmp, tmp_0, tmp_3, tmp$ret$11);
		  }
		  function Companion_143() {
		    Companion_instance_144 = this;
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.m39_1 = lazy(tmp_0, ChannelEndpoint$Companion$_anonymous__4a66ll);
		  }
		  protoOf(Companion_143).b13 = function () {
		    return _get_$cachedSerializer__te6jhj_1(this);
		  };
		  protoOf(Companion_143).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_144;
		  function Companion_getInstance_145() {
		    if (Companion_instance_144 == null)
		      new Companion_143();
		    return Companion_instance_144;
		  }
		  function ChannelEndpoint() {
		    Companion_getInstance_145();
		  }
		  function Companion_144() {
		    Companion_instance_145 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.n39_1 = [null, new EnumSerializer('com.vonage.clientcore.core.conversation.VoiceChannelType', values_3())];
		  }
		  protoOf(Companion_144).b13 = function () {
		    return $serializer_getInstance_163();
		  };
		  var Companion_instance_145;
		  function Companion_getInstance_146() {
		    if (Companion_instance_145 == null)
		      new Companion_144();
		    return Companion_instance_145;
		  }
		  function $serializer_163() {
		    $serializer_instance_163 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.PhoneChannelEndpoint', this, 2);
		    tmp0_serialDesc.rq('number', false);
		    tmp0_serialDesc.rq('type', true);
		    this.o39_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_163).xf = function () {
		    return this.o39_1;
		  };
		  protoOf($serializer_163).gr = function () {
		    var tmp0_cached = Companion_getInstance_146().n39_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), tmp0_cached[1]];
		  };
		  protoOf($serializer_163).zf = function (decoder) {
		    var tmp0_desc = this.o39_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    var tmp7_cached = Companion_getInstance_146().n39_1;
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return PhoneChannelEndpoint_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_163).p39 = function (encoder, value) {
		    var tmp0_desc = this.o39_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_146().n39_1;
		    tmp1_output.wk(tmp0_desc, 0, value.z1j_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.a1k_1.equals(VoiceChannelType_phone_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.a1k_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_163).yf = function (encoder, value) {
		    return this.p39(encoder, value instanceof PhoneChannelEndpoint ? value : THROW_CCE());
		  };
		  var $serializer_instance_163;
		  function $serializer_getInstance_163() {
		    if ($serializer_instance_163 == null)
		      new $serializer_163();
		    return $serializer_instance_163;
		  }
		  function PhoneChannelEndpoint_init_$Init$(seen1, number, type, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_163().o39_1);
		    }
		    $this.z1j_1 = number;
		    if (0 === (seen1 & 2))
		      $this.a1k_1 = VoiceChannelType_phone_getInstance();
		    else
		      $this.a1k_1 = type;
		    return $this;
		  }
		  function PhoneChannelEndpoint_init_$Create$(seen1, number, type, serializationConstructorMarker) {
		    return PhoneChannelEndpoint_init_$Init$(seen1, number, type, serializationConstructorMarker, objectCreate(protoOf(PhoneChannelEndpoint)));
		  }
		  function PhoneChannelEndpoint(number) {
		    Companion_getInstance_146();
		    ChannelEndpoint.call(this);
		    this.z1j_1 = number;
		    this.a1k_1 = VoiceChannelType_phone_getInstance();
		  }
		  protoOf(PhoneChannelEndpoint).r37 = function () {
		    return this.a1k_1;
		  };
		  protoOf(PhoneChannelEndpoint).toString = function () {
		    return 'PhoneChannelEndpoint(number=' + this.z1j_1 + ')';
		  };
		  protoOf(PhoneChannelEndpoint).hashCode = function () {
		    return getStringHashCode(this.z1j_1);
		  };
		  protoOf(PhoneChannelEndpoint).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof PhoneChannelEndpoint))
		      return false;
		    var tmp0_other_with_cast = other instanceof PhoneChannelEndpoint ? other : THROW_CCE();
		    if (!(this.z1j_1 === tmp0_other_with_cast.z1j_1))
		      return false;
		    return true;
		  };
		  function from(_this__u8e3s4) {
		    // Inline function 'kotlin.run' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.conversation.from.<anonymous>' call
		    var tmp;
		    if (_this__u8e3s4 instanceof PhoneChannelEndpoint) {
		      tmp = _this__u8e3s4.z1j_1;
		    } else {
		      if (_this__u8e3s4 instanceof AppChannelEndpoint) {
		        tmp = _this__u8e3s4.b1k_1;
		      } else {
		        if (_this__u8e3s4 instanceof AppChannelEndpointNoUser) {
		          tmp = '';
		        } else {
		          if (_this__u8e3s4 instanceof SipChannelEndpoint) {
		            var tmp1_elvis_lhs = _this__u8e3s4.u1j_1;
		            tmp = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
		          } else {
		            if (_this__u8e3s4 instanceof WebSocketChannelEndpoint) {
		              tmp = _this__u8e3s4.x1j_1;
		            } else {
		              noWhenBranchMatchedException();
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  }
		  function Companion_145() {
		    Companion_instance_146 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.q39_1 = [null, new EnumSerializer('com.vonage.clientcore.core.conversation.VoiceChannelType', values_3())];
		  }
		  protoOf(Companion_145).b13 = function () {
		    return $serializer_getInstance_164();
		  };
		  var Companion_instance_146;
		  function Companion_getInstance_147() {
		    if (Companion_instance_146 == null)
		      new Companion_145();
		    return Companion_instance_146;
		  }
		  function $serializer_164() {
		    $serializer_instance_164 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.AppChannelEndpoint', this, 2);
		    tmp0_serialDesc.rq('user', false);
		    tmp0_serialDesc.rq('type', true);
		    this.r39_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_164).xf = function () {
		    return this.r39_1;
		  };
		  protoOf($serializer_164).gr = function () {
		    var tmp0_cached = Companion_getInstance_147().q39_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), tmp0_cached[1]];
		  };
		  protoOf($serializer_164).zf = function (decoder) {
		    var tmp0_desc = this.r39_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    var tmp7_cached = Companion_getInstance_147().q39_1;
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return AppChannelEndpoint_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_164).s39 = function (encoder, value) {
		    var tmp0_desc = this.r39_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_147().q39_1;
		    tmp1_output.wk(tmp0_desc, 0, value.b1k_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.c1k_1.equals(VoiceChannelType_app_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.c1k_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_164).yf = function (encoder, value) {
		    return this.s39(encoder, value instanceof AppChannelEndpoint ? value : THROW_CCE());
		  };
		  var $serializer_instance_164;
		  function $serializer_getInstance_164() {
		    if ($serializer_instance_164 == null)
		      new $serializer_164();
		    return $serializer_instance_164;
		  }
		  function AppChannelEndpoint_init_$Init$(seen1, user, type, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_164().r39_1);
		    }
		    $this.b1k_1 = user;
		    if (0 === (seen1 & 2))
		      $this.c1k_1 = VoiceChannelType_app_getInstance();
		    else
		      $this.c1k_1 = type;
		    return $this;
		  }
		  function AppChannelEndpoint_init_$Create$(seen1, user, type, serializationConstructorMarker) {
		    return AppChannelEndpoint_init_$Init$(seen1, user, type, serializationConstructorMarker, objectCreate(protoOf(AppChannelEndpoint)));
		  }
		  function AppChannelEndpoint(user) {
		    Companion_getInstance_147();
		    ChannelEndpoint.call(this);
		    this.b1k_1 = user;
		    this.c1k_1 = VoiceChannelType_app_getInstance();
		  }
		  protoOf(AppChannelEndpoint).r37 = function () {
		    return this.c1k_1;
		  };
		  protoOf(AppChannelEndpoint).toString = function () {
		    return 'AppChannelEndpoint(user=' + this.b1k_1 + ')';
		  };
		  protoOf(AppChannelEndpoint).hashCode = function () {
		    return getStringHashCode(this.b1k_1);
		  };
		  protoOf(AppChannelEndpoint).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof AppChannelEndpoint))
		      return false;
		    var tmp0_other_with_cast = other instanceof AppChannelEndpoint ? other : THROW_CCE();
		    if (!(this.b1k_1 === tmp0_other_with_cast.b1k_1))
		      return false;
		    return true;
		  };
		  function _get_$cachedSerializer__te6jhj_2($this) {
		    return $this.u39_1.r1();
		  }
		  function AppChannelEndpointNoUser$_anonymous__rkc74c() {
		    var tmp = AppChannelEndpointNoUser_getInstance();
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    var tmp$ret$2 = [];
		    return ObjectSerializer_init_$Create$('com.vonage.clientcore.core.conversation.AppChannelEndpointNoUser', tmp, tmp$ret$2);
		  }
		  function AppChannelEndpointNoUser() {
		    AppChannelEndpointNoUser_instance = this;
		    ChannelEndpoint.call(this);
		    this.t39_1 = VoiceChannelType_app_getInstance();
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.u39_1 = lazy(tmp_0, AppChannelEndpointNoUser$_anonymous__rkc74c);
		  }
		  protoOf(AppChannelEndpointNoUser).r37 = function () {
		    return this.t39_1;
		  };
		  protoOf(AppChannelEndpointNoUser).b13 = function () {
		    return _get_$cachedSerializer__te6jhj_2(this);
		  };
		  protoOf(AppChannelEndpointNoUser).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var AppChannelEndpointNoUser_instance;
		  function AppChannelEndpointNoUser_getInstance() {
		    if (AppChannelEndpointNoUser_instance == null)
		      new AppChannelEndpointNoUser();
		    return AppChannelEndpointNoUser_instance;
		  }
		  function Companion_146() {
		    Companion_instance_147 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.v39_1 = [null, null, null, new EnumSerializer('com.vonage.clientcore.core.conversation.VoiceChannelType', values_3())];
		  }
		  protoOf(Companion_146).b13 = function () {
		    return $serializer_getInstance_165();
		  };
		  var Companion_instance_147;
		  function Companion_getInstance_148() {
		    if (Companion_instance_147 == null)
		      new Companion_146();
		    return Companion_instance_147;
		  }
		  function $serializer_165() {
		    $serializer_instance_165 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.SipChannelEndpoint', this, 4);
		    tmp0_serialDesc.rq('uri', false);
		    tmp0_serialDesc.rq('username', true);
		    tmp0_serialDesc.rq('password', true);
		    tmp0_serialDesc.rq('type', true);
		    this.w39_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_165).xf = function () {
		    return this.w39_1;
		  };
		  protoOf($serializer_165).gr = function () {
		    var tmp0_cached = Companion_getInstance_148().v39_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), tmp0_cached[3]];
		  };
		  protoOf($serializer_165).zf = function (decoder) {
		    var tmp0_desc = this.w39_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_input = decoder.hj(tmp0_desc);
		    var tmp9_cached = Companion_getInstance_148().v39_1;
		    if (tmp8_input.xj()) {
		      tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp8_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, tmp9_cached[3], tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp8_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp8_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp8_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp8_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp8_input.tj(tmp0_desc, 3, tmp9_cached[3], tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp8_input.ij(tmp0_desc);
		    return SipChannelEndpoint_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
		  };
		  protoOf($serializer_165).x39 = function (encoder, value) {
		    var tmp0_desc = this.w39_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_148().v39_1;
		    tmp1_output.wk(tmp0_desc, 0, value.t1j_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.u1j_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.u1j_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.v1j_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.v1j_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !value.w1j_1.equals(VoiceChannelType_sip_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 3, tmp2_cached[3], value.w1j_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_165).yf = function (encoder, value) {
		    return this.x39(encoder, value instanceof SipChannelEndpoint ? value : THROW_CCE());
		  };
		  var $serializer_instance_165;
		  function $serializer_getInstance_165() {
		    if ($serializer_instance_165 == null)
		      new $serializer_165();
		    return $serializer_instance_165;
		  }
		  function SipChannelEndpoint_init_$Init$(seen1, uri, username, password, type, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_165().w39_1);
		    }
		    $this.t1j_1 = uri;
		    if (0 === (seen1 & 2))
		      $this.u1j_1 = null;
		    else
		      $this.u1j_1 = username;
		    if (0 === (seen1 & 4))
		      $this.v1j_1 = null;
		    else
		      $this.v1j_1 = password;
		    if (0 === (seen1 & 8))
		      $this.w1j_1 = VoiceChannelType_sip_getInstance();
		    else
		      $this.w1j_1 = type;
		    return $this;
		  }
		  function SipChannelEndpoint_init_$Create$(seen1, uri, username, password, type, serializationConstructorMarker) {
		    return SipChannelEndpoint_init_$Init$(seen1, uri, username, password, type, serializationConstructorMarker, objectCreate(protoOf(SipChannelEndpoint)));
		  }
		  function SipChannelEndpoint(uri, username, password) {
		    Companion_getInstance_148();
		    username = username === VOID ? null : username;
		    password = password === VOID ? null : password;
		    ChannelEndpoint.call(this);
		    this.t1j_1 = uri;
		    this.u1j_1 = username;
		    this.v1j_1 = password;
		    this.w1j_1 = VoiceChannelType_sip_getInstance();
		  }
		  protoOf(SipChannelEndpoint).r37 = function () {
		    return this.w1j_1;
		  };
		  protoOf(SipChannelEndpoint).toString = function () {
		    return 'SipChannelEndpoint(uri=' + this.t1j_1 + ', username=' + this.u1j_1 + ', password=' + this.v1j_1 + ')';
		  };
		  protoOf(SipChannelEndpoint).hashCode = function () {
		    var result = getStringHashCode(this.t1j_1);
		    result = imul(result, 31) + (this.u1j_1 == null ? 0 : getStringHashCode(this.u1j_1)) | 0;
		    result = imul(result, 31) + (this.v1j_1 == null ? 0 : getStringHashCode(this.v1j_1)) | 0;
		    return result;
		  };
		  protoOf(SipChannelEndpoint).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SipChannelEndpoint))
		      return false;
		    var tmp0_other_with_cast = other instanceof SipChannelEndpoint ? other : THROW_CCE();
		    if (!(this.t1j_1 === tmp0_other_with_cast.t1j_1))
		      return false;
		    if (!(this.u1j_1 == tmp0_other_with_cast.u1j_1))
		      return false;
		    if (!(this.v1j_1 == tmp0_other_with_cast.v1j_1))
		      return false;
		    return true;
		  };
		  function Companion_147() {
		    Companion_instance_148 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.y39_1 = [null, new EnumSerializer('com.vonage.clientcore.core.conversation.VoiceChannelType', values_3())];
		  }
		  protoOf(Companion_147).b13 = function () {
		    return $serializer_getInstance_166();
		  };
		  var Companion_instance_148;
		  function Companion_getInstance_149() {
		    if (Companion_instance_148 == null)
		      new Companion_147();
		    return Companion_instance_148;
		  }
		  function $serializer_166() {
		    $serializer_instance_166 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.WebSocketChannelEndpoint', this, 2);
		    tmp0_serialDesc.rq('uri', false);
		    tmp0_serialDesc.rq('type', true);
		    this.z39_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_166).xf = function () {
		    return this.z39_1;
		  };
		  protoOf($serializer_166).gr = function () {
		    var tmp0_cached = Companion_getInstance_149().y39_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), tmp0_cached[1]];
		  };
		  protoOf($serializer_166).zf = function (decoder) {
		    var tmp0_desc = this.z39_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    var tmp7_cached = Companion_getInstance_149().y39_1;
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.tj(tmp0_desc, 1, tmp7_cached[1], tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return WebSocketChannelEndpoint_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_166).a3a = function (encoder, value) {
		    var tmp0_desc = this.z39_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_149().y39_1;
		    tmp1_output.wk(tmp0_desc, 0, value.x1j_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !value.y1j_1.equals(VoiceChannelType_websocket_getInstance())) {
		      tmp1_output.yk(tmp0_desc, 1, tmp2_cached[1], value.y1j_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_166).yf = function (encoder, value) {
		    return this.a3a(encoder, value instanceof WebSocketChannelEndpoint ? value : THROW_CCE());
		  };
		  var $serializer_instance_166;
		  function $serializer_getInstance_166() {
		    if ($serializer_instance_166 == null)
		      new $serializer_166();
		    return $serializer_instance_166;
		  }
		  function WebSocketChannelEndpoint_init_$Init$(seen1, uri, type, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_166().z39_1);
		    }
		    $this.x1j_1 = uri;
		    if (0 === (seen1 & 2))
		      $this.y1j_1 = VoiceChannelType_websocket_getInstance();
		    else
		      $this.y1j_1 = type;
		    return $this;
		  }
		  function WebSocketChannelEndpoint_init_$Create$(seen1, uri, type, serializationConstructorMarker) {
		    return WebSocketChannelEndpoint_init_$Init$(seen1, uri, type, serializationConstructorMarker, objectCreate(protoOf(WebSocketChannelEndpoint)));
		  }
		  function WebSocketChannelEndpoint(uri) {
		    Companion_getInstance_149();
		    ChannelEndpoint.call(this);
		    this.x1j_1 = uri;
		    this.y1j_1 = VoiceChannelType_websocket_getInstance();
		  }
		  protoOf(WebSocketChannelEndpoint).r37 = function () {
		    return this.y1j_1;
		  };
		  protoOf(WebSocketChannelEndpoint).toString = function () {
		    return 'WebSocketChannelEndpoint(uri=' + this.x1j_1 + ')';
		  };
		  protoOf(WebSocketChannelEndpoint).hashCode = function () {
		    return getStringHashCode(this.x1j_1);
		  };
		  protoOf(WebSocketChannelEndpoint).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof WebSocketChannelEndpoint))
		      return false;
		    var tmp0_other_with_cast = other instanceof WebSocketChannelEndpoint ? other : THROW_CCE();
		    if (!(this.x1j_1 === tmp0_other_with_cast.x1j_1))
		      return false;
		    return true;
		  };
		  function Companion_148() {
		  }
		  function $serializer_167() {
		    $serializer_instance_167 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.DTMFChannel', this, 2);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('type', true);
		    this.b3a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_167).xf = function () {
		    return this.b3a_1;
		  };
		  protoOf($serializer_167).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance()];
		  };
		  protoOf($serializer_167).zf = function (decoder) {
		    var tmp0_desc = this.b3a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return DTMFChannel_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_167).c3a = function (encoder, value) {
		    var tmp0_desc = this.b3a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.f2v_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.f2v_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.g2v_1 === 'app')) {
		      tmp1_output.wk(tmp0_desc, 1, value.g2v_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_167).yf = function (encoder, value) {
		    return this.c3a(encoder, value instanceof DTMFChannel ? value : THROW_CCE());
		  };
		  var $serializer_instance_167;
		  function $serializer_getInstance_167() {
		    if ($serializer_instance_167 == null)
		      new $serializer_167();
		    return $serializer_instance_167;
		  }
		  function DTMFChannel_init_$Init$(seen1, id, type, serializationConstructorMarker, $this) {
		    if (!(0 === (0 & seen1))) {
		      throwMissingFieldException(seen1, 0, $serializer_getInstance_167().b3a_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.f2v_1 = null;
		    else
		      $this.f2v_1 = id;
		    if (0 === (seen1 & 2))
		      $this.g2v_1 = 'app';
		    else
		      $this.g2v_1 = type;
		    return $this;
		  }
		  function DTMFChannel_init_$Create$(seen1, id, type, serializationConstructorMarker) {
		    return DTMFChannel_init_$Init$(seen1, id, type, serializationConstructorMarker, objectCreate(protoOf(DTMFChannel)));
		  }
		  function DTMFChannel(id, type) {
		    id = id === VOID ? null : id;
		    type = type === VOID ? 'app' : type;
		    this.f2v_1 = id;
		    this.g2v_1 = type;
		  }
		  protoOf(DTMFChannel).toString = function () {
		    return 'DTMFChannel(id=' + this.f2v_1 + ', type=' + this.g2v_1 + ')';
		  };
		  protoOf(DTMFChannel).hashCode = function () {
		    var result = this.f2v_1 == null ? 0 : getStringHashCode(this.f2v_1);
		    result = imul(result, 31) + getStringHashCode(this.g2v_1) | 0;
		    return result;
		  };
		  protoOf(DTMFChannel).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof DTMFChannel))
		      return false;
		    var tmp0_other_with_cast = other instanceof DTMFChannel ? other : THROW_CCE();
		    if (!(this.f2v_1 == tmp0_other_with_cast.f2v_1))
		      return false;
		    if (!(this.g2v_1 === tmp0_other_with_cast.g2v_1))
		      return false;
		    return true;
		  };
		  function Companion_149() {
		    Companion_instance_150 = this;
		    var tmp = this;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    tmp.d3a_1 = [null, null, null, new ArrayListSerializer(StringSerializer_getInstance()), null, null];
		  }
		  var Companion_instance_150;
		  function Companion_getInstance_151() {
		    if (Companion_instance_150 == null)
		      new Companion_149();
		    return Companion_instance_150;
		  }
		  function $serializer_168() {
		    $serializer_instance_168 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.Channel', this, 6);
		    tmp0_serialDesc.rq('id', true);
		    tmp0_serialDesc.rq('knocking_id', true);
		    tmp0_serialDesc.rq('type', false);
		    tmp0_serialDesc.rq('leg_ids', true);
		    tmp0_serialDesc.rq('from', true);
		    tmp0_serialDesc.rq('to', true);
		    this.e3a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_168).xf = function () {
		    return this.e3a_1;
		  };
		  protoOf($serializer_168).gr = function () {
		    var tmp0_cached = Companion_getInstance_151().d3a_1;
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable(StringSerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), get_nullable(tmp0_cached[3]), get_nullable(ChannelEndpointSerializer_getInstance()), get_nullable(ChannelEndpointSerializer_getInstance())];
		  };
		  protoOf($serializer_168).zf = function (decoder) {
		    var tmp0_desc = this.e3a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_local3 = null;
		    var tmp8_local4 = null;
		    var tmp9_local5 = null;
		    var tmp10_input = decoder.hj(tmp0_desc);
		    var tmp11_cached = Companion_getInstance_151().d3a_1;
		    if (tmp10_input.xj()) {
		      tmp4_local0 = tmp10_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp10_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp10_input.rj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, tmp11_cached[3], tmp7_local3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, ChannelEndpointSerializer_getInstance(), tmp8_local4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp10_input.vj(tmp0_desc, 5, ChannelEndpointSerializer_getInstance(), tmp9_local5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp10_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp10_input.vj(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp10_input.vj(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp10_input.rj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp10_input.vj(tmp0_desc, 3, tmp11_cached[3], tmp7_local3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp10_input.vj(tmp0_desc, 4, ChannelEndpointSerializer_getInstance(), tmp8_local4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp10_input.vj(tmp0_desc, 5, ChannelEndpointSerializer_getInstance(), tmp9_local5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp10_input.ij(tmp0_desc);
		    return Channel_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
		  };
		  protoOf($serializer_168).f3a = function (encoder, value) {
		    var tmp0_desc = this.e3a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    var tmp2_cached = Companion_getInstance_151().d3a_1;
		    if (tmp1_output.el(tmp0_desc, 0) ? true : !(value.c25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 0, StringSerializer_getInstance(), value.c25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.d25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 1, StringSerializer_getInstance(), value.d25_1);
		    }
		    tmp1_output.wk(tmp0_desc, 2, value.e25_1);
		    if (tmp1_output.el(tmp0_desc, 3) ? true : !(value.f25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 3, tmp2_cached[3], value.f25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 4) ? true : !(value.g25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 4, ChannelEndpointSerializer_getInstance(), value.g25_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 5) ? true : !(value.h25_1 == null)) {
		      tmp1_output.al(tmp0_desc, 5, ChannelEndpointSerializer_getInstance(), value.h25_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_168).yf = function (encoder, value) {
		    return this.f3a(encoder, value instanceof Channel_0 ? value : THROW_CCE());
		  };
		  var $serializer_instance_168;
		  function $serializer_getInstance_168() {
		    if ($serializer_instance_168 == null)
		      new $serializer_168();
		    return $serializer_instance_168;
		  }
		  function Channel_init_$Init$_0(seen1, id, knocking_id, type, leg_ids, from, to, serializationConstructorMarker, $this) {
		    if (!(4 === (4 & seen1))) {
		      throwMissingFieldException(seen1, 4, $serializer_getInstance_168().e3a_1);
		    }
		    if (0 === (seen1 & 1))
		      $this.c25_1 = null;
		    else
		      $this.c25_1 = id;
		    if (0 === (seen1 & 2))
		      $this.d25_1 = null;
		    else
		      $this.d25_1 = knocking_id;
		    $this.e25_1 = type;
		    if (0 === (seen1 & 8))
		      $this.f25_1 = null;
		    else
		      $this.f25_1 = leg_ids;
		    if (0 === (seen1 & 16))
		      $this.g25_1 = null;
		    else
		      $this.g25_1 = from;
		    if (0 === (seen1 & 32))
		      $this.h25_1 = null;
		    else
		      $this.h25_1 = to;
		    return $this;
		  }
		  function Channel_init_$Create$_0(seen1, id, knocking_id, type, leg_ids, from, to, serializationConstructorMarker) {
		    return Channel_init_$Init$_0(seen1, id, knocking_id, type, leg_ids, from, to, serializationConstructorMarker, objectCreate(protoOf(Channel_0)));
		  }
		  function Channel_0() {
		  }
		  protoOf(Channel_0).i25 = function () {
		    return new Channel(this.c25_1, this.c25_1);
		  };
		  protoOf(Channel_0).toString = function () {
		    return 'Channel(id=' + this.c25_1 + ', knocking_id=' + this.d25_1 + ', type=' + this.e25_1 + ', leg_ids=' + toString_0(this.f25_1) + ', from=' + toString_0(this.g25_1) + ', to=' + toString_0(this.h25_1) + ')';
		  };
		  protoOf(Channel_0).hashCode = function () {
		    var result = this.c25_1 == null ? 0 : getStringHashCode(this.c25_1);
		    result = imul(result, 31) + (this.d25_1 == null ? 0 : getStringHashCode(this.d25_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e25_1) | 0;
		    result = imul(result, 31) + (this.f25_1 == null ? 0 : hashCode(this.f25_1)) | 0;
		    result = imul(result, 31) + (this.g25_1 == null ? 0 : hashCode(this.g25_1)) | 0;
		    result = imul(result, 31) + (this.h25_1 == null ? 0 : hashCode(this.h25_1)) | 0;
		    return result;
		  };
		  protoOf(Channel_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Channel_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof Channel_0 ? other : THROW_CCE();
		    if (!(this.c25_1 == tmp0_other_with_cast.c25_1))
		      return false;
		    if (!(this.d25_1 == tmp0_other_with_cast.d25_1))
		      return false;
		    if (!(this.e25_1 === tmp0_other_with_cast.e25_1))
		      return false;
		    if (!equals(this.f25_1, tmp0_other_with_cast.f25_1))
		      return false;
		    if (!equals(this.g25_1, tmp0_other_with_cast.g25_1))
		      return false;
		    if (!equals(this.h25_1, tmp0_other_with_cast.h25_1))
		      return false;
		    return true;
		  };
		  function ChannelEndpointSerializer() {
		    ChannelEndpointSerializer_instance = this;
		    JsonContentPolymorphicSerializer.call(this, getKClass(ChannelEndpoint));
		  }
		  protoOf(ChannelEndpointSerializer).z12 = function (element) {
		    var tmp0_safe_receiver = get_jsonObject(element).e13('type');
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
		    var tmp;
		    switch (tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h13()) {
		      case 'app':
		        var tmp_0;
		        if (!(get_jsonObject(element).e13('user') == null)) {
		          tmp_0 = Companion_getInstance_147().b13();
		        } else {
		          Companion_getInstance_147().b13();
		          tmp_0 = AppChannelEndpointNoUser_getInstance().b13();
		        }

		        tmp = tmp_0;
		        break;
		      case 'phone':
		        tmp = Companion_getInstance_146().b13();
		        break;
		      case 'sip':
		        tmp = Companion_getInstance_148().b13();
		        break;
		      case 'websocket':
		        tmp = Companion_getInstance_149().b13();
		        break;
		      default:
		        tmp = Companion_getInstance_145().b13();
		        break;
		    }
		    return tmp;
		  };
		  var ChannelEndpointSerializer_instance;
		  function ChannelEndpointSerializer_getInstance() {
		    if (ChannelEndpointSerializer_instance == null)
		      new ChannelEndpointSerializer();
		    return ChannelEndpointSerializer_instance;
		  }
		  function VoiceChannelType_app_getInstance() {
		    VoiceChannelType_initEntries();
		    return VoiceChannelType_app_instance;
		  }
		  function VoiceChannelType_phone_getInstance() {
		    VoiceChannelType_initEntries();
		    return VoiceChannelType_phone_instance;
		  }
		  function VoiceChannelType_sip_getInstance() {
		    VoiceChannelType_initEntries();
		    return VoiceChannelType_sip_instance;
		  }
		  function VoiceChannelType_websocket_getInstance() {
		    VoiceChannelType_initEntries();
		    return VoiceChannelType_websocket_instance;
		  }
		  function $serializer_169() {
		    $serializer_instance_169 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.ConversationInfo', this, 3);
		    tmp0_serialDesc.rq('conversation_id', false);
		    tmp0_serialDesc.rq('name', false);
		    tmp0_serialDesc.rq('display_name', true);
		    this.i3a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_169).xf = function () {
		    return this.i3a_1;
		  };
		  protoOf($serializer_169).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance())];
		  };
		  protoOf($serializer_169).zf = function (decoder) {
		    var tmp0_desc = this.i3a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.rj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, StringSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return ConversationInfo_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_169).j3a = function (encoder, value) {
		    var tmp0_desc = this.i3a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.k3a_1);
		    tmp1_output.wk(tmp0_desc, 1, value.l3a_1);
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.m3a_1 == null)) {
		      tmp1_output.al(tmp0_desc, 2, StringSerializer_getInstance(), value.m3a_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_169).yf = function (encoder, value) {
		    return this.j3a(encoder, value instanceof ConversationInfo ? value : THROW_CCE());
		  };
		  var $serializer_instance_169;
		  function $serializer_getInstance_169() {
		    if ($serializer_instance_169 == null)
		      new $serializer_169();
		    return $serializer_instance_169;
		  }
		  function ConversationInfo_init_$Init$(seen1, conversation_id, name, display_name, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_169().i3a_1);
		    }
		    $this.k3a_1 = conversation_id;
		    $this.l3a_1 = name;
		    if (0 === (seen1 & 4))
		      $this.m3a_1 = null;
		    else
		      $this.m3a_1 = display_name;
		    return $this;
		  }
		  function ConversationInfo_init_$Create$(seen1, conversation_id, name, display_name, serializationConstructorMarker) {
		    return ConversationInfo_init_$Init$(seen1, conversation_id, name, display_name, serializationConstructorMarker, objectCreate(protoOf(ConversationInfo)));
		  }
		  function ConversationInfo() {
		  }
		  protoOf(ConversationInfo).toString = function () {
		    return 'ConversationInfo(conversation_id=' + this.k3a_1 + ', name=' + this.l3a_1 + ', display_name=' + this.m3a_1 + ')';
		  };
		  protoOf(ConversationInfo).hashCode = function () {
		    var result = getStringHashCode(this.k3a_1);
		    result = imul(result, 31) + getStringHashCode(this.l3a_1) | 0;
		    result = imul(result, 31) + (this.m3a_1 == null ? 0 : getStringHashCode(this.m3a_1)) | 0;
		    return result;
		  };
		  protoOf(ConversationInfo).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationInfo))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationInfo ? other : THROW_CCE();
		    if (!(this.k3a_1 === tmp0_other_with_cast.k3a_1))
		      return false;
		    if (!(this.l3a_1 === tmp0_other_with_cast.l3a_1))
		      return false;
		    if (!(this.m3a_1 == tmp0_other_with_cast.m3a_1))
		      return false;
		    return true;
		  };
		  function None_0() {
		    None_instance_0 = this;
		    LegState.call(this);
		    this.n3a_1 = null;
		  }
		  var None_instance_0;
		  function None_getInstance_0() {
		    if (None_instance_0 == null)
		      new None_0();
		    return None_instance_0;
		  }
		  function Prewarm(id) {
		    LegState.call(this);
		    this.o3a_1 = id;
		  }
		  protoOf(Prewarm).toString = function () {
		    return 'Prewarm(id=' + this.o3a_1 + ')';
		  };
		  protoOf(Prewarm).hashCode = function () {
		    return getStringHashCode(this.o3a_1);
		  };
		  protoOf(Prewarm).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Prewarm))
		      return false;
		    var tmp0_other_with_cast = other instanceof Prewarm ? other : THROW_CCE();
		    if (!(this.o3a_1 === tmp0_other_with_cast.o3a_1))
		      return false;
		    return true;
		  };
		  function Started(id) {
		    LegState.call(this);
		    this.p3a_1 = id;
		  }
		  protoOf(Started).toString = function () {
		    return 'Started(id=' + this.p3a_1 + ')';
		  };
		  protoOf(Started).hashCode = function () {
		    return getStringHashCode(this.p3a_1);
		  };
		  protoOf(Started).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Started))
		      return false;
		    var tmp0_other_with_cast = other instanceof Started ? other : THROW_CCE();
		    if (!(this.p3a_1 === tmp0_other_with_cast.p3a_1))
		      return false;
		    return true;
		  };
		  function Completed(id, hangupReason) {
		    LegState.call(this);
		    this.q3a_1 = id;
		    this.r3a_1 = hangupReason;
		  }
		  protoOf(Completed).toString = function () {
		    return 'Completed(id=' + this.q3a_1 + ', hangupReason=' + this.r3a_1.toString() + ')';
		  };
		  protoOf(Completed).hashCode = function () {
		    var result = getStringHashCode(this.q3a_1);
		    result = imul(result, 31) + this.r3a_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(Completed).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Completed))
		      return false;
		    var tmp0_other_with_cast = other instanceof Completed ? other : THROW_CCE();
		    if (!(this.q3a_1 === tmp0_other_with_cast.q3a_1))
		      return false;
		    if (!this.r3a_1.equals(tmp0_other_with_cast.r3a_1))
		      return false;
		    return true;
		  };
		  function LegState() {
		  }
		  function Offer(sdp) {
		    MediaDescription.call(this);
		    this.s3a_1 = sdp;
		  }
		  function Answer(sdp) {
		    MediaDescription.call(this);
		    this.t3a_1 = sdp;
		  }
		  function MediaDescription() {
		  }
		  function MediaTransport(localDescription, remoteDescription, connected) {
		    localDescription = localDescription === VOID ? null : localDescription;
		    remoteDescription = remoteDescription === VOID ? null : remoteDescription;
		    connected = connected === VOID ? false : connected;
		    this.e38_1 = localDescription;
		    this.f38_1 = remoteDescription;
		    this.g38_1 = connected;
		  }
		  protoOf(MediaTransport).u3a = function (localDescription, remoteDescription, connected) {
		    return new MediaTransport(localDescription, remoteDescription, connected);
		  };
		  protoOf(MediaTransport).v3a = function (localDescription, remoteDescription, connected, $super) {
		    localDescription = localDescription === VOID ? this.e38_1 : localDescription;
		    remoteDescription = remoteDescription === VOID ? this.f38_1 : remoteDescription;
		    connected = connected === VOID ? this.g38_1 : connected;
		    return $super === VOID ? this.u3a(localDescription, remoteDescription, connected) : $super.u3a.call(this, localDescription, remoteDescription, connected);
		  };
		  protoOf(MediaTransport).toString = function () {
		    return 'MediaTransport(localDescription=' + toString_0(this.e38_1) + ', remoteDescription=' + toString_0(this.f38_1) + ', connected=' + this.g38_1 + ')';
		  };
		  protoOf(MediaTransport).hashCode = function () {
		    var result = this.e38_1 == null ? 0 : hashCode(this.e38_1);
		    result = imul(result, 31) + (this.f38_1 == null ? 0 : hashCode(this.f38_1)) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.g38_1) | 0;
		    return result;
		  };
		  protoOf(MediaTransport).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaTransport))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaTransport ? other : THROW_CCE();
		    if (!equals(this.e38_1, tmp0_other_with_cast.e38_1))
		      return false;
		    if (!equals(this.f38_1, tmp0_other_with_cast.f38_1))
		      return false;
		    if (!(this.g38_1 === tmp0_other_with_cast.g38_1))
		      return false;
		    return true;
		  };
		  function $serializer_170() {
		    $serializer_instance_170 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.UserAudio', this, 3);
		    tmp0_serialDesc.rq('enabled', false);
		    tmp0_serialDesc.rq('earmuffed', true);
		    tmp0_serialDesc.rq('muted', true);
		    this.w3a_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_170).xf = function () {
		    return this.w3a_1;
		  };
		  protoOf($serializer_170).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [BooleanSerializer_getInstance(), get_nullable(BooleanSerializer_getInstance()), get_nullable(BooleanSerializer_getInstance())];
		  };
		  protoOf($serializer_170).zf = function (decoder) {
		    var tmp0_desc = this.w3a_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = false;
		    var tmp5_local1 = null;
		    var tmp6_local2 = null;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.jj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, BooleanSerializer_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, BooleanSerializer_getInstance(), tmp6_local2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.jj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.vj(tmp0_desc, 1, BooleanSerializer_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.vj(tmp0_desc, 2, BooleanSerializer_getInstance(), tmp6_local2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return UserAudio_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_170).x3a = function (encoder, value) {
		    var tmp0_desc = this.w3a_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.ok(tmp0_desc, 0, value.y3a_1);
		    if (tmp1_output.el(tmp0_desc, 1) ? true : !(value.z3a_1 === false)) {
		      tmp1_output.al(tmp0_desc, 1, BooleanSerializer_getInstance(), value.z3a_1);
		    }
		    if (tmp1_output.el(tmp0_desc, 2) ? true : !(value.a3b_1 === false)) {
		      tmp1_output.al(tmp0_desc, 2, BooleanSerializer_getInstance(), value.a3b_1);
		    }
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_170).yf = function (encoder, value) {
		    return this.x3a(encoder, value instanceof UserAudio ? value : THROW_CCE());
		  };
		  var $serializer_instance_170;
		  function $serializer_getInstance_170() {
		    if ($serializer_instance_170 == null)
		      new $serializer_170();
		    return $serializer_instance_170;
		  }
		  function UserAudio_init_$Init$(seen1, enabled, earmuffed, muted, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_170().w3a_1);
		    }
		    $this.y3a_1 = enabled;
		    if (0 === (seen1 & 2))
		      $this.z3a_1 = false;
		    else
		      $this.z3a_1 = earmuffed;
		    if (0 === (seen1 & 4))
		      $this.a3b_1 = false;
		    else
		      $this.a3b_1 = muted;
		    return $this;
		  }
		  function UserAudio_init_$Create$(seen1, enabled, earmuffed, muted, serializationConstructorMarker) {
		    return UserAudio_init_$Init$(seen1, enabled, earmuffed, muted, serializationConstructorMarker, objectCreate(protoOf(UserAudio)));
		  }
		  function UserAudio() {
		  }
		  protoOf(UserAudio).toString = function () {
		    return 'UserAudio(enabled=' + this.y3a_1 + ', earmuffed=' + this.z3a_1 + ', muted=' + this.a3b_1 + ')';
		  };
		  protoOf(UserAudio).hashCode = function () {
		    var result = getBooleanHashCode(this.y3a_1);
		    result = imul(result, 31) + (this.z3a_1 == null ? 0 : getBooleanHashCode(this.z3a_1)) | 0;
		    result = imul(result, 31) + (this.a3b_1 == null ? 0 : getBooleanHashCode(this.a3b_1)) | 0;
		    return result;
		  };
		  protoOf(UserAudio).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UserAudio))
		      return false;
		    var tmp0_other_with_cast = other instanceof UserAudio ? other : THROW_CCE();
		    if (!(this.y3a_1 === tmp0_other_with_cast.y3a_1))
		      return false;
		    if (!(this.z3a_1 == tmp0_other_with_cast.z3a_1))
		      return false;
		    if (!(this.a3b_1 == tmp0_other_with_cast.a3b_1))
		      return false;
		    return true;
		  };
		  function $serializer_171() {
		    $serializer_instance_171 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.InvitedUserMedia', this, 1);
		    tmp0_serialDesc.rq('audio_settings', false);
		    this.b3b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_171).xf = function () {
		    return this.b3b_1;
		  };
		  protoOf($serializer_171).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [get_nullable($serializer_getInstance_170())];
		  };
		  protoOf($serializer_171).zf = function (decoder) {
		    var tmp0_desc = this.b3b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_input = decoder.hj(tmp0_desc);
		    if (tmp5_input.xj()) {
		      tmp4_local0 = tmp5_input.vj(tmp0_desc, 0, $serializer_getInstance_170(), tmp4_local0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp5_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp5_input.vj(tmp0_desc, 0, $serializer_getInstance_170(), tmp4_local0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp5_input.ij(tmp0_desc);
		    return InvitedUserMedia_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
		  };
		  protoOf($serializer_171).c3b = function (encoder, value) {
		    var tmp0_desc = this.b3b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.al(tmp0_desc, 0, $serializer_getInstance_170(), value.d3b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_171).yf = function (encoder, value) {
		    return this.c3b(encoder, value instanceof InvitedUserMedia ? value : THROW_CCE());
		  };
		  var $serializer_instance_171;
		  function $serializer_getInstance_171() {
		    if ($serializer_instance_171 == null)
		      new $serializer_171();
		    return $serializer_instance_171;
		  }
		  function InvitedUserMedia_init_$Init$(seen1, audio_settings, serializationConstructorMarker, $this) {
		    if (!(1 === (1 & seen1))) {
		      throwMissingFieldException(seen1, 1, $serializer_getInstance_171().b3b_1);
		    }
		    $this.d3b_1 = audio_settings;
		    return $this;
		  }
		  function InvitedUserMedia_init_$Create$(seen1, audio_settings, serializationConstructorMarker) {
		    return InvitedUserMedia_init_$Init$(seen1, audio_settings, serializationConstructorMarker, objectCreate(protoOf(InvitedUserMedia)));
		  }
		  function InvitedUserMedia() {
		  }
		  protoOf(InvitedUserMedia).toString = function () {
		    return 'InvitedUserMedia(audio_settings=' + toString_0(this.d3b_1) + ')';
		  };
		  protoOf(InvitedUserMedia).hashCode = function () {
		    return this.d3b_1 == null ? 0 : this.d3b_1.hashCode();
		  };
		  protoOf(InvitedUserMedia).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof InvitedUserMedia))
		      return false;
		    var tmp0_other_with_cast = other instanceof InvitedUserMedia ? other : THROW_CCE();
		    if (!equals(this.d3b_1, tmp0_other_with_cast.d3b_1))
		      return false;
		    return true;
		  };
		  function $serializer_172() {
		    $serializer_instance_172 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.RTCQuality', this, 9);
		    tmp0_serialDesc.rq('mos_score', false);
		    tmp0_serialDesc.rq('quality_percentage', false);
		    tmp0_serialDesc.rq('jitter_min_var', false);
		    tmp0_serialDesc.rq('jitter_max_var', false);
		    tmp0_serialDesc.rq('jitter_loss_rate', false);
		    tmp0_serialDesc.rq('jitter_burst_rate', false);
		    tmp0_serialDesc.rq('flaw_total', false);
		    tmp0_serialDesc.rq('packet_cnt', false);
		    tmp0_serialDesc.rq('packet_loss_perc', false);
		    this.e3b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_172).xf = function () {
		    return this.e3b_1;
		  };
		  protoOf($serializer_172).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), FloatSerializer_getInstance(), IntSerializer_getInstance(), IntSerializer_getInstance(), FloatSerializer_getInstance()];
		  };
		  protoOf($serializer_172).zf = function (decoder) {
		    var tmp0_desc = this.e3b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0.0;
		    var tmp5_local1 = 0.0;
		    var tmp6_local2 = 0.0;
		    var tmp7_local3 = 0.0;
		    var tmp8_local4 = 0.0;
		    var tmp9_local5 = 0.0;
		    var tmp10_local6 = 0;
		    var tmp11_local7 = 0;
		    var tmp12_local8 = 0.0;
		    var tmp13_input = decoder.hj(tmp0_desc);
		    if (tmp13_input.xj()) {
		      tmp4_local0 = tmp13_input.oj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp13_input.oj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp13_input.oj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		      tmp7_local3 = tmp13_input.oj(tmp0_desc, 3);
		      tmp3_bitMask0 = tmp3_bitMask0 | 8;
		      tmp8_local4 = tmp13_input.oj(tmp0_desc, 4);
		      tmp3_bitMask0 = tmp3_bitMask0 | 16;
		      tmp9_local5 = tmp13_input.oj(tmp0_desc, 5);
		      tmp3_bitMask0 = tmp3_bitMask0 | 32;
		      tmp10_local6 = tmp13_input.mj(tmp0_desc, 6);
		      tmp3_bitMask0 = tmp3_bitMask0 | 64;
		      tmp11_local7 = tmp13_input.mj(tmp0_desc, 7);
		      tmp3_bitMask0 = tmp3_bitMask0 | 128;
		      tmp12_local8 = tmp13_input.oj(tmp0_desc, 8);
		      tmp3_bitMask0 = tmp3_bitMask0 | 256;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp13_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp13_input.oj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp13_input.oj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp13_input.oj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          case 3:
		            tmp7_local3 = tmp13_input.oj(tmp0_desc, 3);
		            tmp3_bitMask0 = tmp3_bitMask0 | 8;
		            break;
		          case 4:
		            tmp8_local4 = tmp13_input.oj(tmp0_desc, 4);
		            tmp3_bitMask0 = tmp3_bitMask0 | 16;
		            break;
		          case 5:
		            tmp9_local5 = tmp13_input.oj(tmp0_desc, 5);
		            tmp3_bitMask0 = tmp3_bitMask0 | 32;
		            break;
		          case 6:
		            tmp10_local6 = tmp13_input.mj(tmp0_desc, 6);
		            tmp3_bitMask0 = tmp3_bitMask0 | 64;
		            break;
		          case 7:
		            tmp11_local7 = tmp13_input.mj(tmp0_desc, 7);
		            tmp3_bitMask0 = tmp3_bitMask0 | 128;
		            break;
		          case 8:
		            tmp12_local8 = tmp13_input.oj(tmp0_desc, 8);
		            tmp3_bitMask0 = tmp3_bitMask0 | 256;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp13_input.ij(tmp0_desc);
		    return RTCQuality_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, null);
		  };
		  protoOf($serializer_172).f3b = function (encoder, value) {
		    var tmp0_desc = this.e3b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.tk(tmp0_desc, 0, value.g3b_1);
		    tmp1_output.tk(tmp0_desc, 1, value.h3b_1);
		    tmp1_output.tk(tmp0_desc, 2, value.i3b_1);
		    tmp1_output.tk(tmp0_desc, 3, value.j3b_1);
		    tmp1_output.tk(tmp0_desc, 4, value.k3b_1);
		    tmp1_output.tk(tmp0_desc, 5, value.l3b_1);
		    tmp1_output.rk(tmp0_desc, 6, value.m3b_1);
		    tmp1_output.rk(tmp0_desc, 7, value.n3b_1);
		    tmp1_output.tk(tmp0_desc, 8, value.o3b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_172).yf = function (encoder, value) {
		    return this.f3b(encoder, value instanceof RTCQuality ? value : THROW_CCE());
		  };
		  var $serializer_instance_172;
		  function $serializer_getInstance_172() {
		    if ($serializer_instance_172 == null)
		      new $serializer_172();
		    return $serializer_instance_172;
		  }
		  function RTCQuality_init_$Init$(seen1, mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc, serializationConstructorMarker, $this) {
		    if (!(511 === (511 & seen1))) {
		      throwMissingFieldException(seen1, 511, $serializer_getInstance_172().e3b_1);
		    }
		    $this.g3b_1 = mos_score;
		    $this.h3b_1 = quality_percentage;
		    $this.i3b_1 = jitter_min_var;
		    $this.j3b_1 = jitter_max_var;
		    $this.k3b_1 = jitter_loss_rate;
		    $this.l3b_1 = jitter_burst_rate;
		    $this.m3b_1 = flaw_total;
		    $this.n3b_1 = packet_cnt;
		    $this.o3b_1 = packet_loss_perc;
		    return $this;
		  }
		  function RTCQuality_init_$Create$(seen1, mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc, serializationConstructorMarker) {
		    return RTCQuality_init_$Init$(seen1, mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc, serializationConstructorMarker, objectCreate(protoOf(RTCQuality)));
		  }
		  function RTCQuality() {
		  }
		  protoOf(RTCQuality).toString = function () {
		    return 'RTCQuality(mos_score=' + this.g3b_1 + ', quality_percentage=' + this.h3b_1 + ', jitter_min_var=' + this.i3b_1 + ', jitter_max_var=' + this.j3b_1 + ', jitter_loss_rate=' + this.k3b_1 + ', jitter_burst_rate=' + this.l3b_1 + ', flaw_total=' + this.m3b_1 + ', packet_cnt=' + this.n3b_1 + ', packet_loss_perc=' + this.o3b_1 + ')';
		  };
		  protoOf(RTCQuality).hashCode = function () {
		    var result = getNumberHashCode(this.g3b_1);
		    result = imul(result, 31) + getNumberHashCode(this.h3b_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.i3b_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.j3b_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.k3b_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.l3b_1) | 0;
		    result = imul(result, 31) + this.m3b_1 | 0;
		    result = imul(result, 31) + this.n3b_1 | 0;
		    result = imul(result, 31) + getNumberHashCode(this.o3b_1) | 0;
		    return result;
		  };
		  protoOf(RTCQuality).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCQuality))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCQuality ? other : THROW_CCE();
		    if (!equals(this.g3b_1, tmp0_other_with_cast.g3b_1))
		      return false;
		    if (!equals(this.h3b_1, tmp0_other_with_cast.h3b_1))
		      return false;
		    if (!equals(this.i3b_1, tmp0_other_with_cast.i3b_1))
		      return false;
		    if (!equals(this.j3b_1, tmp0_other_with_cast.j3b_1))
		      return false;
		    if (!equals(this.k3b_1, tmp0_other_with_cast.k3b_1))
		      return false;
		    if (!equals(this.l3b_1, tmp0_other_with_cast.l3b_1))
		      return false;
		    if (!(this.m3b_1 === tmp0_other_with_cast.m3b_1))
		      return false;
		    if (!(this.n3b_1 === tmp0_other_with_cast.n3b_1))
		      return false;
		    if (!equals(this.o3b_1, tmp0_other_with_cast.o3b_1))
		      return false;
		    return true;
		  };
		  function _get_$cachedSerializer__te6jhj_3($this) {
		    return $this.p3b_1.r1();
		  }
		  function CallCompleteReason$Companion$_anonymous__x937xw() {
		    return $serializer_getInstance_173();
		  }
		  var CallCompleteReason_LocalHangup_instance;
		  var CallCompleteReason_LocalCancel_instance;
		  var CallCompleteReason_RemoteHangup_instance;
		  var CallCompleteReason_MaxLength_instance;
		  var CallCompleteReason_RingTimeout_instance;
		  var CallCompleteReason_Failed_instance;
		  var CallCompleteReason_Unknown_instance;
		  function Companion_150() {
		    Companion_instance_151 = this;
		    var tmp = this;
		    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
		    tmp.p3b_1 = lazy(tmp_0, CallCompleteReason$Companion$_anonymous__x937xw);
		  }
		  protoOf(Companion_150).b13 = function () {
		    return _get_$cachedSerializer__te6jhj_3(this);
		  };
		  protoOf(Companion_150).pr = function (typeParamsSerializers) {
		    return this.b13();
		  };
		  var Companion_instance_151;
		  function Companion_getInstance_152() {
		    CallCompleteReason_initEntries();
		    if (Companion_instance_151 == null)
		      new Companion_150();
		    return Companion_instance_151;
		  }
		  function $serializer_173() {
		    $serializer_instance_173 = this;
		    var tmp0_serialDesc = new EnumDescriptor('com.vonage.clientcore.core.conversation.CallCompleteReason', 7);
		    tmp0_serialDesc.rq('LocalHangup', false);
		    tmp0_serialDesc.rq('LocalCancel', false);
		    tmp0_serialDesc.rq('RemoteHangup', false);
		    tmp0_serialDesc.rq('MaxLength', false);
		    tmp0_serialDesc.rq('RingTimeout', false);
		    tmp0_serialDesc.rq('Failed', false);
		    tmp0_serialDesc.rq('Unknown', false);
		    this.q3b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_173).xf = function () {
		    return this.q3b_1;
		  };
		  protoOf($serializer_173).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [];
		  };
		  protoOf($serializer_173).zf = function (decoder) {
		    return values_4()[decoder.dj(this.q3b_1)];
		  };
		  protoOf($serializer_173).r3b = function (encoder, value) {
		    encoder.mk(this.q3b_1, value.e2_1);
		  };
		  protoOf($serializer_173).yf = function (encoder, value) {
		    return this.r3b(encoder, value instanceof CallCompleteReason ? value : THROW_CCE());
		  };
		  var $serializer_instance_173;
		  function $serializer_getInstance_173() {
		    CallCompleteReason_initEntries();
		    if ($serializer_instance_173 == null)
		      new $serializer_173();
		    return $serializer_instance_173;
		  }
		  function values_4() {
		    return [CallCompleteReason_LocalHangup_getInstance(), CallCompleteReason_LocalCancel_getInstance(), CallCompleteReason_RemoteHangup_getInstance(), CallCompleteReason_MaxLength_getInstance(), CallCompleteReason_RingTimeout_getInstance(), CallCompleteReason_Failed_getInstance(), CallCompleteReason_Unknown_getInstance()];
		  }
		  var CallCompleteReason_entriesInitialized;
		  function CallCompleteReason_initEntries() {
		    if (CallCompleteReason_entriesInitialized)
		      return Unit_instance;
		    CallCompleteReason_entriesInitialized = true;
		    CallCompleteReason_LocalHangup_instance = new CallCompleteReason('LocalHangup', 0);
		    CallCompleteReason_LocalCancel_instance = new CallCompleteReason('LocalCancel', 1);
		    CallCompleteReason_RemoteHangup_instance = new CallCompleteReason('RemoteHangup', 2);
		    CallCompleteReason_MaxLength_instance = new CallCompleteReason('MaxLength', 3);
		    CallCompleteReason_RingTimeout_instance = new CallCompleteReason('RingTimeout', 4);
		    CallCompleteReason_Failed_instance = new CallCompleteReason('Failed', 5);
		    CallCompleteReason_Unknown_instance = new CallCompleteReason('Unknown', 6);
		    Companion_getInstance_152();
		  }
		  function CallCompleteReason(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function $serializer_174() {
		    $serializer_instance_174 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.RTCHangupReason', this, 3);
		    tmp0_serialDesc.rq('text', false);
		    tmp0_serialDesc.rq('code', false);
		    tmp0_serialDesc.rq('sip_code', false);
		    this.s3b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_174).xf = function () {
		    return this.s3b_1;
		  };
		  protoOf($serializer_174).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [StringSerializer_getInstance(), CallCompleteReasonSerialiser_getInstance(), IntSerializer_getInstance()];
		  };
		  protoOf($serializer_174).zf = function (decoder) {
		    var tmp0_desc = this.s3b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = null;
		    var tmp5_local1 = null;
		    var tmp6_local2 = 0;
		    var tmp7_input = decoder.hj(tmp0_desc);
		    if (tmp7_input.xj()) {
		      tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, CallCompleteReasonSerialiser_getInstance(), tmp5_local1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		      tmp6_local2 = tmp7_input.mj(tmp0_desc, 2);
		      tmp3_bitMask0 = tmp3_bitMask0 | 4;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp7_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp7_input.rj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp7_input.tj(tmp0_desc, 1, CallCompleteReasonSerialiser_getInstance(), tmp5_local1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          case 2:
		            tmp6_local2 = tmp7_input.mj(tmp0_desc, 2);
		            tmp3_bitMask0 = tmp3_bitMask0 | 4;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp7_input.ij(tmp0_desc);
		    return RTCHangupReason_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
		  };
		  protoOf($serializer_174).t3b = function (encoder, value) {
		    var tmp0_desc = this.s3b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.wk(tmp0_desc, 0, value.f37_1);
		    tmp1_output.yk(tmp0_desc, 1, CallCompleteReasonSerialiser_getInstance(), value.g37_1);
		    tmp1_output.rk(tmp0_desc, 2, value.h37_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_174).yf = function (encoder, value) {
		    return this.t3b(encoder, value instanceof RTCHangupReason ? value : THROW_CCE());
		  };
		  var $serializer_instance_174;
		  function $serializer_getInstance_174() {
		    if ($serializer_instance_174 == null)
		      new $serializer_174();
		    return $serializer_instance_174;
		  }
		  function RTCHangupReason_init_$Init$(seen1, text, code, sip_code, serializationConstructorMarker, $this) {
		    if (!(7 === (7 & seen1))) {
		      throwMissingFieldException(seen1, 7, $serializer_getInstance_174().s3b_1);
		    }
		    $this.f37_1 = text;
		    $this.g37_1 = code;
		    $this.h37_1 = sip_code;
		    return $this;
		  }
		  function RTCHangupReason_init_$Create$(seen1, text, code, sip_code, serializationConstructorMarker) {
		    return RTCHangupReason_init_$Init$(seen1, text, code, sip_code, serializationConstructorMarker, objectCreate(protoOf(RTCHangupReason)));
		  }
		  function RTCHangupReason() {
		  }
		  protoOf(RTCHangupReason).toString = function () {
		    return 'RTCHangupReason(text=' + this.f37_1 + ', code=' + this.g37_1.toString() + ', sip_code=' + this.h37_1 + ')';
		  };
		  protoOf(RTCHangupReason).hashCode = function () {
		    var result = getStringHashCode(this.f37_1);
		    result = imul(result, 31) + this.g37_1.hashCode() | 0;
		    result = imul(result, 31) + this.h37_1 | 0;
		    return result;
		  };
		  protoOf(RTCHangupReason).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCHangupReason))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCHangupReason ? other : THROW_CCE();
		    if (!(this.f37_1 === tmp0_other_with_cast.f37_1))
		      return false;
		    if (!this.g37_1.equals(tmp0_other_with_cast.g37_1))
		      return false;
		    if (!(this.h37_1 === tmp0_other_with_cast.h37_1))
		      return false;
		    return true;
		  };
		  function CallCompleteReasonSerialiser() {
		    CallCompleteReasonSerialiser_instance = this;
		    this.u3b_1 = PrimitiveSerialDescriptor('RTCHangupReason.code', STRING_getInstance());
		  }
		  protoOf(CallCompleteReasonSerialiser).xf = function () {
		    return this.u3b_1;
		  };
		  protoOf(CallCompleteReasonSerialiser).zf = function (decoder) {
		    switch (decoder.cj()) {
		      case 'LOCAL_HANGUP':
		        return CallCompleteReason_LocalHangup_getInstance();
		      case 'REMOTE_HANGUP':
		        return CallCompleteReason_RemoteHangup_getInstance();
		      case 'LOCAL_CANCEL':
		        return CallCompleteReason_LocalCancel_getInstance();
		      case 'LENGTH_TIMER':
		        return CallCompleteReason_MaxLength_getInstance();
		      case 'RING_TIMER':
		        return CallCompleteReason_RingTimeout_getInstance();
		      case 'REMOTE_NO_ANSWER':
		      case 'REMOTE_REJECTED':
		      case 'REMOTE_BUSY':
		      case 'REMOTE_CANCEL':
		      case 'REMOTE_NOT_FOUND':
		      case 'REMOTE_FAILURE':
		        return CallCompleteReason_RemoteHangup_getInstance();
		      default:
		        return CallCompleteReason_Unknown_getInstance();
		    }
		  };
		  protoOf(CallCompleteReasonSerialiser).r3b = function (encoder, value) {
		    encoder.lk(value.d2_1);
		  };
		  protoOf(CallCompleteReasonSerialiser).yf = function (encoder, value) {
		    return this.r3b(encoder, value instanceof CallCompleteReason ? value : THROW_CCE());
		  };
		  var CallCompleteReasonSerialiser_instance;
		  function CallCompleteReasonSerialiser_getInstance() {
		    if (CallCompleteReasonSerialiser_instance == null)
		      new CallCompleteReasonSerialiser();
		    return CallCompleteReasonSerialiser_instance;
		  }
		  function $serializer_175() {
		    $serializer_instance_175 = this;
		    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.vonage.clientcore.core.conversation.RTCBandwidth', this, 2);
		    tmp0_serialDesc.rq('bytes_in', false);
		    tmp0_serialDesc.rq('bytes_out', false);
		    this.v3b_1 = tmp0_serialDesc;
		  }
		  protoOf($serializer_175).xf = function () {
		    return this.v3b_1;
		  };
		  protoOf($serializer_175).gr = function () {
		    // Inline function 'kotlin.arrayOf' call
		    // Inline function 'kotlin.js.unsafeCast' call
		    // Inline function 'kotlin.js.asDynamic' call
		    return [IntSerializer_getInstance(), IntSerializer_getInstance()];
		  };
		  protoOf($serializer_175).zf = function (decoder) {
		    var tmp0_desc = this.v3b_1;
		    var tmp1_flag = true;
		    var tmp2_index = 0;
		    var tmp3_bitMask0 = 0;
		    var tmp4_local0 = 0;
		    var tmp5_local1 = 0;
		    var tmp6_input = decoder.hj(tmp0_desc);
		    if (tmp6_input.xj()) {
		      tmp4_local0 = tmp6_input.mj(tmp0_desc, 0);
		      tmp3_bitMask0 = tmp3_bitMask0 | 1;
		      tmp5_local1 = tmp6_input.mj(tmp0_desc, 1);
		      tmp3_bitMask0 = tmp3_bitMask0 | 2;
		    } else
		      while (tmp1_flag) {
		        tmp2_index = tmp6_input.yj(tmp0_desc);
		        switch (tmp2_index) {
		          case -1:
		            tmp1_flag = false;
		            break;
		          case 0:
		            tmp4_local0 = tmp6_input.mj(tmp0_desc, 0);
		            tmp3_bitMask0 = tmp3_bitMask0 | 1;
		            break;
		          case 1:
		            tmp5_local1 = tmp6_input.mj(tmp0_desc, 1);
		            tmp3_bitMask0 = tmp3_bitMask0 | 2;
		            break;
		          default:
		            throw UnknownFieldException_init_$Create$(tmp2_index);
		        }
		      }
		    tmp6_input.ij(tmp0_desc);
		    return RTCBandwidth_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
		  };
		  protoOf($serializer_175).w3b = function (encoder, value) {
		    var tmp0_desc = this.v3b_1;
		    var tmp1_output = encoder.hj(tmp0_desc);
		    tmp1_output.rk(tmp0_desc, 0, value.x3b_1);
		    tmp1_output.rk(tmp0_desc, 1, value.y3b_1);
		    tmp1_output.ij(tmp0_desc);
		  };
		  protoOf($serializer_175).yf = function (encoder, value) {
		    return this.w3b(encoder, value instanceof RTCBandwidth ? value : THROW_CCE());
		  };
		  var $serializer_instance_175;
		  function $serializer_getInstance_175() {
		    if ($serializer_instance_175 == null)
		      new $serializer_175();
		    return $serializer_instance_175;
		  }
		  function RTCBandwidth_init_$Init$(seen1, bytes_in, bytes_out, serializationConstructorMarker, $this) {
		    if (!(3 === (3 & seen1))) {
		      throwMissingFieldException(seen1, 3, $serializer_getInstance_175().v3b_1);
		    }
		    $this.x3b_1 = bytes_in;
		    $this.y3b_1 = bytes_out;
		    return $this;
		  }
		  function RTCBandwidth_init_$Create$(seen1, bytes_in, bytes_out, serializationConstructorMarker) {
		    return RTCBandwidth_init_$Init$(seen1, bytes_in, bytes_out, serializationConstructorMarker, objectCreate(protoOf(RTCBandwidth)));
		  }
		  function RTCBandwidth() {
		  }
		  protoOf(RTCBandwidth).toString = function () {
		    return 'RTCBandwidth(bytes_in=' + this.x3b_1 + ', bytes_out=' + this.y3b_1 + ')';
		  };
		  protoOf(RTCBandwidth).hashCode = function () {
		    var result = this.x3b_1;
		    result = imul(result, 31) + this.y3b_1 | 0;
		    return result;
		  };
		  protoOf(RTCBandwidth).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCBandwidth))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCBandwidth ? other : THROW_CCE();
		    if (!(this.x3b_1 === tmp0_other_with_cast.x3b_1))
		      return false;
		    if (!(this.y3b_1 === tmp0_other_with_cast.y3b_1))
		      return false;
		    return true;
		  };
		  function CallCompleteReason_LocalHangup_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_LocalHangup_instance;
		  }
		  function CallCompleteReason_LocalCancel_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_LocalCancel_instance;
		  }
		  function CallCompleteReason_RemoteHangup_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_RemoteHangup_instance;
		  }
		  function CallCompleteReason_MaxLength_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_MaxLength_instance;
		  }
		  function CallCompleteReason_RingTimeout_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_RingTimeout_instance;
		  }
		  function CallCompleteReason_Failed_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_Failed_instance;
		  }
		  function CallCompleteReason_Unknown_getInstance() {
		    CallCompleteReason_initEntries();
		    return CallCompleteReason_Unknown_instance;
		  }
		  function ConsoleLogger(minLogLevel) {
		    minLogLevel = minLogLevel === VOID ? DefaultConfig_getInstance().e2u_1 : minLogLevel;
		    BaseVonageLogger.call(this, 'VonageConsoleLogger', minLogLevel);
		    this.g3c_1 = flatten(Companion_getInstance_153().n3c_1);
		  }
		  protoOf(ConsoleLogger).p3c = function () {
		    return this.g3c_1;
		  };
		  function WebRTCLogger(minLogLevel) {
		    minLogLevel = minLogLevel === VOID ? LoggingLevel_Verbose_getInstance() : minLogLevel;
		    BaseVonageLogger.call(this, 'VonageWebRTCLogger', minLogLevel);
		    this.g3d_1 = Companion_getInstance_153().o3c_1;
		  }
		  protoOf(WebRTCLogger).p3c = function () {
		    return this.g3d_1;
		  };
		  function BaseVonageLogger$config$1(this$0) {
		    this.h3d_1 = Companion_getInstance_0().o1d_1.r1d();
		    this.i3d_1 = toSev(this$0.r3c_1);
		  }
		  protoOf(BaseVonageLogger$config$1).r1d = function () {
		    return this.h3d_1;
		  };
		  function BaseVonageLogger(name, minLogLevel) {
		    this.q3c_1 = name;
		    this.r3c_1 = minLogLevel;
		    var tmp = this;
		    tmp.s3c_1 = new BaseVonageLogger$config$1(this);
		    this.t3c_1 = SdkInfo_getInstance().h1g_1;
		    this.u3c_1 = slice(generateUUID(), numberRangeToNumber(1, 5));
		    this.v3c_1 = this.q3c_1 + '::vonage.core.' + this.u3c_1 + '.' + this.t3c_1;
		    this.w3c_1 = new Logger(this.s3c_1);
		  }
		  protoOf(BaseVonageLogger).x3c = function () {
		    return this.r3c_1;
		  };
		  protoOf(BaseVonageLogger).y3c = function (logLevel, topic, message, throwable) {
		    return this.w3c_1.q1d(toSev(logLevel), this.v3c_1 + '.' + topic.j3d_1 + '.' + topic.k3d_1, throwable, message);
		  };
		  function toSev(_this__u8e3s4) {
		    return valueOf(_this__u8e3s4.x2t_1);
		  }
		  function checkSize(_this__u8e3s4, $this) {
		    if (_this__u8e3s4.length > 10) {
		      throw toVonageError(new CustomLoggersLimitReached(_this__u8e3s4.length));
		    }
		  }
		  function LoggerAdapter(consoleLogLevel, customLoggers, disableInternalLogger) {
		    consoleLogLevel = consoleLogLevel === VOID ? DefaultConfig_getInstance().e2u_1 : consoleLogLevel;
		    disableInternalLogger = disableInternalLogger === VOID ? false : disableInternalLogger;
		    var tmp = this;
		    // Inline function 'kotlin.takeUnless' call
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp_0;
		    // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.loggers.<anonymous>' call
		    if (!disableInternalLogger) {
		      tmp_0 = consoleLogLevel;
		    } else {
		      tmp_0 = null;
		    }
		    var tmp0_safe_receiver = tmp_0;
		    var tmp_1;
		    if (tmp0_safe_receiver == null) {
		      tmp_1 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.loggers.<anonymous>' call
		      tmp_1 = new ConsoleLogger(tmp0_safe_receiver);
		    }
		    var tmp_2 = tmp_1;
		    // Inline function 'kotlin.takeIf' call
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp_3;
		    // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.loggers.<anonymous>' call
		    if (consoleLogLevel.equals(LoggingLevel_Verbose_getInstance()) && !disableInternalLogger) {
		      tmp_3 = consoleLogLevel;
		    } else {
		      tmp_3 = null;
		    }
		    var tmp_4;
		    if (tmp_3 == null) {
		      tmp_4 = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.loggers.<anonymous>' call
		      tmp_4 = new WebRTCLogger();
		    }
		    var tmp_5 = [tmp_2, tmp_4];
		    // Inline function 'kotlin.also' call
		    // Inline function 'kotlin.collections.toTypedArray' call
		    var this_0 = copyToArray(customLoggers);
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.loggers.<anonymous>' call
		    checkSize(this_0);
		    tmp.a1f_1 = listOfNotNull(arrayConcat([tmp_5, this_0]));
		  }
		  protoOf(LoggerAdapter).l3d = function (logLevel, topic, throwable, message) {
		    // Inline function 'kotlin.let' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filterTo' call
		    var this_0 = this.a1f_1;
		    var destination = ArrayList_init_$Create$_0();
		    var tmp0_iterator = this_0.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>' call
		      if (element.x3c().h2(logLevel) <= 0) {
		        destination.d(element);
		      }
		    }
		    // Inline function 'kotlin.collections.filterTo' call
		    var destination_0 = ArrayList_init_$Create$_0();
		    var tmp0_iterator_0 = destination.i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>' call
		      if (element_0.p3c().o1(topic)) {
		        destination_0.d(element_0);
		      }
		    }
		    // Inline function 'kotlin.contracts.contract' call
		    var log = message();
		    // Inline function 'kotlin.collections.forEach' call
		    var tmp0_iterator_1 = destination_0.i();
		    while (tmp0_iterator_1.j()) {
		      var element_1 = tmp0_iterator_1.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>.<anonymous>' call
		      element_1.y3c(logLevel, topic, log, throwable);
		    }
		    return Unit_instance;
		  };
		  protoOf(LoggerAdapter).m3d = function (logLevel, topic, message, throwable) {
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filterTo' call
		    var this_0 = this.a1f_1;
		    var destination = ArrayList_init_$Create$_0();
		    var tmp0_iterator = this_0.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>' call
		      if (element.x3c().h2(logLevel) <= 0) {
		        destination.d(element);
		      }
		    }
		    // Inline function 'kotlin.collections.filterTo' call
		    var destination_0 = ArrayList_init_$Create$_0();
		    var tmp0_iterator_0 = destination.i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>' call
		      if (element_0.p3c().o1(topic)) {
		        destination_0.d(element_0);
		      }
		    }
		    var tmp0_iterator_1 = destination_0.i();
		    while (tmp0_iterator_1.j()) {
		      var element_1 = tmp0_iterator_1.k();
		      // Inline function 'com.vonage.clientcore.core.logging.LoggerAdapter.log.<anonymous>' call
		      element_1.y3c(logLevel, topic, message, throwable);
		    }
		    return Unit_instance;
		  };
		  protoOf(LoggerAdapter).b1f = function (topic) {
		    return new TopicLoggerAdapter(topic, this);
		  };
		  function TopicLoggerAdapter(topic, loggerAdapter) {
		    this.x34_1 = topic;
		    this.y34_1 = loggerAdapter;
		  }
		  protoOf(TopicLoggerAdapter).o3d = function (topic, throwable, message) {
		    this.y34_1.o3d(topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).r3d = function (topic, message, throwable) {
		    this.y34_1.r3d(topic, message, throwable);
		  };
		  protoOf(TopicLoggerAdapter).s3d = function (topic, throwable, message) {
		    this.y34_1.s3d(topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).p3d = function (topic, throwable, message) {
		    this.y34_1.p3d(topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).m3d = function (logLevel, topic, message, throwable) {
		    this.y34_1.m3d(logLevel, topic, message, throwable);
		  };
		  protoOf(TopicLoggerAdapter).l3d = function (logLevel, topic, throwable, message) {
		    this.y34_1.l3d(logLevel, topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).n3d = function (topic, throwable, message) {
		    this.y34_1.n3d(topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).q3d = function (topic, throwable, message) {
		    this.y34_1.q3d(topic, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).t3d = function (message, throwable) {
		    return this.r3d(this.x34_1, message, throwable);
		  };
		  protoOf(TopicLoggerAdapter).z34 = function (message, throwable, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.t3d(message, throwable);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.t3d.call(this, message, throwable);
		    }
		    return tmp;
		  };
		  protoOf(TopicLoggerAdapter).u3d = function (throwable, message) {
		    return this.n3d(this.x34_1, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).v3d = function (throwable, message, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.u3d(throwable, message);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.u3d.call(this, throwable, message);
		    }
		    return tmp;
		  };
		  protoOf(TopicLoggerAdapter).w3d = function (throwable, message) {
		    return this.o3d(this.x34_1, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).x3d = function (throwable, message, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.w3d(throwable, message);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.w3d.call(this, throwable, message);
		    }
		    return tmp;
		  };
		  protoOf(TopicLoggerAdapter).y3d = function (throwable, message) {
		    return this.p3d(this.x34_1, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).z3d = function (throwable, message, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.y3d(throwable, message);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.y3d.call(this, throwable, message);
		    }
		    return tmp;
		  };
		  protoOf(TopicLoggerAdapter).a3e = function (throwable, message) {
		    return this.q3d(this.x34_1, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).t36 = function (throwable, message, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.a3e(throwable, message);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.a3e.call(this, throwable, message);
		    }
		    return tmp;
		  };
		  protoOf(TopicLoggerAdapter).b3e = function (throwable, message) {
		    return this.s3d(this.x34_1, throwable, message);
		  };
		  protoOf(TopicLoggerAdapter).c3e = function (throwable, message, $super) {
		    throwable = throwable === VOID ? null : throwable;
		    var tmp;
		    if ($super === VOID) {
		      this.b3e(throwable, message);
		      tmp = Unit_instance;
		    } else {
		      tmp = $super.b3e.call(this, throwable, message);
		    }
		    return tmp;
		  };
		  function ILoggerAdapter() {
		  }
		  function callbackLogger2(fn, logger, tag) {
		    return callbackLogger2$lambda(logger, fn, tag);
		  }
		  function callbackLogger1(fn, logger, tag) {
		    return callbackLogger1$lambda(logger, fn, tag);
		  }
		  function v_0(_this__u8e3s4, a, fn) {
		    return _this__u8e3s4.v3d(VOID, v$lambda(a, fn));
		  }
		  function e_1(_this__u8e3s4, a, fn) {
		    return _this__u8e3s4.c3e(VOID, e$lambda(a, fn));
		  }
		  function d_0(_this__u8e3s4, a, fn) {
		    return _this__u8e3s4.x3d(VOID, d$lambda(a, fn));
		  }
		  function callbackLogger2$lambda$lambda($tag, $a) {
		    return function () {
		      var tmp = $a.message;
		      var tmp0_elvis_lhs = $a.cause;
		      return $tag + ' Callback - Error: ' + tmp + ' ' + toString(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs);
		    };
		  }
		  function callbackLogger2$lambda$lambda_0($tag, $a, $b) {
		    return function () {
		      return $tag + ' Callback - params: ' + toString_0($a) + ', ' + toString_0($b);
		    };
		  }
		  function callbackLogger2$lambda($logger, $fn, $tag) {
		    return function (a, b) {
		      if (a instanceof Exception) {
		        $logger.c3e(VOID, callbackLogger2$lambda$lambda($tag, a));
		      } else {
		        $logger.z3d(VOID, callbackLogger2$lambda$lambda_0($tag, a, b));
		      }
		      return $fn(a, b);
		    };
		  }
		  function callbackLogger1$lambda$lambda($tag, $a) {
		    return function () {
		      var tmp = $a.message;
		      var tmp0_elvis_lhs = $a.cause;
		      return $tag + ' Callback - Error: ' + tmp + ' ' + toString(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs);
		    };
		  }
		  function callbackLogger1$lambda$lambda_0($tag, $a) {
		    return function () {
		      return $tag + ' Callback - params: ' + toString_0($a);
		    };
		  }
		  function callbackLogger1$lambda($logger, $fn, $tag) {
		    return function (a) {
		      if (a instanceof Exception) {
		        $logger.c3e(VOID, callbackLogger1$lambda$lambda($tag, a));
		      } else {
		        $logger.z3d(VOID, callbackLogger1$lambda$lambda_0($tag, a));
		      }
		      return $fn(a);
		    };
		  }
		  function v$lambda($a, $fn) {
		    return function () {
		      var tmp0_elvis_lhs = getKClassFromExpression($a.d3e_1).s8();
		      return (tmp0_elvis_lhs == null ? 'unknown' : tmp0_elvis_lhs) + ' ' + $a.e3e_1.f3e_1 + ' ' + $fn();
		    };
		  }
		  function e$lambda($a, $fn) {
		    return function () {
		      var tmp0_elvis_lhs = getKClassFromExpression($a.d3e_1).s8();
		      return (tmp0_elvis_lhs == null ? 'unknown' : tmp0_elvis_lhs) + ' ' + $a.e3e_1.f3e_1 + ' ' + $fn();
		    };
		  }
		  function d$lambda($a, $fn) {
		    return function () {
		      var tmp0_elvis_lhs = getKClassFromExpression($a.d3e_1).s8();
		      return (tmp0_elvis_lhs == null ? 'unknown' : tmp0_elvis_lhs) + ' ' + $a.e3e_1.f3e_1 + ' ' + $fn();
		    };
		  }
		  function Client() {
		    Client_instance = this;
		    Http.call(this, 'client');
		  }
		  var Client_instance;
		  function Client_getInstance() {
		    if (Client_instance == null)
		      new Client();
		    return Client_instance;
		  }
		  function Middleware() {
		    Middleware_instance = this;
		    Http.call(this, 'middleware');
		  }
		  var Middleware_instance;
		  function Middleware_getInstance() {
		    if (Middleware_instance == null)
		      new Middleware();
		    return Middleware_instance;
		  }
		  function Client_0() {
		    Client_instance_0 = this;
		    Ws.call(this, 'client');
		  }
		  var Client_instance_0;
		  function Client_getInstance_0() {
		    if (Client_instance_0 == null)
		      new Client_0();
		    return Client_instance_0;
		  }
		  function Middleware_0() {
		    Middleware_instance_0 = this;
		    Ws.call(this, 'middleware');
		  }
		  var Middleware_instance_0;
		  function Middleware_getInstance_0() {
		    if (Middleware_instance_0 == null)
		      new Middleware_0();
		    return Middleware_instance_0;
		  }
		  function EventParser() {
		    EventParser_instance = this;
		    Ws.call(this, 'event-parser');
		  }
		  var EventParser_instance;
		  function EventParser_getInstance() {
		    if (EventParser_instance == null)
		      new EventParser();
		    return EventParser_instance;
		  }
		  function EventEmit() {
		    EventEmit_instance = this;
		    Ws.call(this, 'event-emitter');
		  }
		  var EventEmit_instance;
		  function EventEmit_getInstance() {
		    if (EventEmit_instance == null)
		      new EventEmit();
		    return EventEmit_instance;
		  }
		  function Connection() {
		    Connection_instance = this;
		    Ws.call(this, 'connection');
		  }
		  var Connection_instance;
		  function Connection_getInstance() {
		    if (Connection_instance == null)
		      new Connection();
		    return Connection_instance;
		  }
		  function Client_1() {
		    Client_instance_1 = this;
		    Media.call(this, 'client');
		  }
		  var Client_instance_1;
		  function Client_getInstance_1() {
		    if (Client_instance_1 == null)
		      new Client_1();
		    return Client_instance_1;
		  }
		  function Middleware_1() {
		    Middleware_instance_1 = this;
		    Media.call(this, 'middleware');
		  }
		  var Middleware_instance_1;
		  function Middleware_getInstance_1() {
		    if (Middleware_instance_1 == null)
		      new Middleware_1();
		    return Middleware_instance_1;
		  }
		  function WebRtc() {
		    WebRtc_instance = this;
		    Media.call(this, 'webrtc');
		  }
		  var WebRtc_instance;
		  function WebRtc_getInstance() {
		    if (WebRtc_instance == null)
		      new WebRtc();
		    return WebRtc_instance;
		  }
		  function Session() {
		    Session_instance = this;
		    Api.call(this, 'session');
		  }
		  var Session_instance;
		  function Session_getInstance() {
		    if (Session_instance == null)
		      new Session();
		    return Session_instance;
		  }
		  function Voice() {
		    Voice_instance = this;
		    Api.call(this, 'voice');
		  }
		  var Voice_instance;
		  function Voice_getInstance() {
		    if (Voice_instance == null)
		      new Voice();
		    return Voice_instance;
		  }
		  function Chat() {
		    Chat_instance = this;
		    Api.call(this, 'chat');
		  }
		  var Chat_instance;
		  function Chat_getInstance() {
		    if (Chat_instance == null)
		      new Chat();
		    return Chat_instance;
		  }
		  function Push() {
		    Push_instance = this;
		    Api.call(this, 'push');
		  }
		  var Push_instance;
		  function Push_getInstance() {
		    if (Push_instance == null)
		      new Push();
		    return Push_instance;
		  }
		  function Conversation_0() {
		    Conversation_instance = this;
		    Api.call(this, 'conversation');
		  }
		  var Conversation_instance;
		  function Conversation_getInstance() {
		    if (Conversation_instance == null)
		      new Conversation_0();
		    return Conversation_instance;
		  }
		  function Action() {
		    Action_instance = this;
		    Store.call(this, 'action');
		  }
		  var Action_instance;
		  function Action_getInstance() {
		    if (Action_instance == null)
		      new Action();
		    return Action_instance;
		  }
		  function Callback() {
		    Callback_instance = this;
		    Store.call(this, 'callback');
		  }
		  var Callback_instance;
		  function Callback_getInstance() {
		    if (Callback_instance == null)
		      new Callback();
		    return Callback_instance;
		  }
		  function Call() {
		    Call_instance = this;
		    Reducer.call(this, 'call');
		  }
		  var Call_instance;
		  function Call_getInstance() {
		    if (Call_instance == null)
		      new Call();
		    return Call_instance;
		  }
		  function Invite() {
		    Invite_instance = this;
		    Reducer.call(this, 'invite');
		  }
		  var Invite_instance;
		  function Invite_getInstance() {
		    if (Invite_instance == null)
		      new Invite();
		    return Invite_instance;
		  }
		  function Session_0() {
		    Session_instance_0 = this;
		    Reducer.call(this, 'session');
		  }
		  var Session_instance_0;
		  function Session_getInstance_0() {
		    if (Session_instance_0 == null)
		      new Session_0();
		    return Session_instance_0;
		  }
		  function Config() {
		    Config_instance = this;
		    Reducer.call(this, 'config');
		  }
		  var Config_instance;
		  function Config_getInstance() {
		    if (Config_instance == null)
		      new Config();
		    return Config_instance;
		  }
		  function RemoteEvent() {
		    RemoteEvent_instance = this;
		    Reducer.call(this, 'remote-event');
		  }
		  var RemoteEvent_instance;
		  function RemoteEvent_getInstance() {
		    if (RemoteEvent_instance == null)
		      new RemoteEvent();
		    return RemoteEvent_instance;
		  }
		  function MediaEvent_0() {
		    MediaEvent_instance = this;
		    Reducer.call(this, 'media-event');
		  }
		  var MediaEvent_instance;
		  function MediaEvent_getInstance() {
		    if (MediaEvent_instance == null)
		      new MediaEvent_0();
		    return MediaEvent_instance;
		  }
		  function Http(tag) {
		    Topic.call(this, 'http', tag);
		  }
		  function Ws(tag) {
		    Topic.call(this, 'websocket', tag);
		  }
		  function Media(tag) {
		    Topic.call(this, 'media', tag);
		  }
		  function Api(tag) {
		    Topic.call(this, 'api', tag);
		  }
		  function Store(tag) {
		    Topic.call(this, 'store', tag);
		  }
		  function Reducer(tag) {
		    Topic.call(this, 'reducer', tag);
		  }
		  function Companion_151() {
		    Companion_instance_152 = this;
		    this.h3c_1 = listOf([Client_getInstance(), Middleware_getInstance()]);
		    this.i3c_1 = listOf([Client_getInstance_0(), Middleware_getInstance_0(), EventParser_getInstance(), EventEmit_getInstance(), Connection_getInstance()]);
		    this.j3c_1 = listOf([Client_getInstance_1(), Middleware_getInstance_1()]);
		    this.k3c_1 = listOf([Session_getInstance(), Voice_getInstance(), Chat_getInstance(), Conversation_getInstance(), Push_getInstance()]);
		    this.l3c_1 = listOf([Action_getInstance(), Callback_getInstance()]);
		    this.m3c_1 = listOf([Call_getInstance(), Invite_getInstance(), Session_getInstance_0(), Config_getInstance(), RemoteEvent_getInstance(), MediaEvent_getInstance()]);
		    this.n3c_1 = listOf([this.h3c_1, this.i3c_1, this.j3c_1, this.k3c_1, this.l3c_1, this.m3c_1]);
		    this.o3c_1 = listOf_0(WebRtc_getInstance());
		  }
		  var Companion_instance_152;
		  function Companion_getInstance_153() {
		    if (Companion_instance_152 == null)
		      new Companion_151();
		    return Companion_instance_152;
		  }
		  function Topic(name, tag) {
		    Companion_getInstance_153();
		    this.j3d_1 = name;
		    this.k3d_1 = tag;
		  }
		  function createVonageLogger(name, minLogLevel, topics, onLog) {
		    minLogLevel = minLogLevel === VOID ? null : minLogLevel;
		    topics = topics === VOID ? null : topics;
		    return new createVonageLogger$1(name, minLogLevel, topics, onLog);
		  }
		  function createVonageLogger$1($name, $minLogLevel, $topics, $onLog) {
		    this.l3e_1 = $onLog;
		    this.i3e_1 = $name;
		    var tmp = this;
		    tmp.j3e_1 = $minLogLevel == null ? DefaultConfig_getInstance().e2u_1 : $minLogLevel;
		    var tmp_0 = this;
		    tmp_0.k3e_1 = $topics == null ? flatten(Companion_getInstance_153().n3c_1) : $topics;
		  }
		  protoOf(createVonageLogger$1).x3c = function () {
		    return this.j3e_1;
		  };
		  protoOf(createVonageLogger$1).p3c = function () {
		    return this.k3e_1;
		  };
		  protoOf(createVonageLogger$1).y3c = function (logLevel, topic, message, throwable) {
		    return this.l3e_1(logLevel, topic, message, throwable);
		  };
		  function HTTPClientLogger$request$lambda($verb, $url, $headers, $body) {
		    return function () {
		      return 'request() ' + $verb.toString() + ' ' + $url + '\nheaders:' + toString(maskAuthHeader($headers)) + '\nbody:' + $body;
		    };
		  }
		  function HTTPClientLogger(client, logger) {
		    this.m3e_1 = client;
		    this.n3e_1 = logger.b1f(Client_getInstance());
		  }
		  protoOf(HTTPClientLogger).o3e = function (verb, url, headers, body, callback) {
		    this.n3e_1.z3d(VOID, HTTPClientLogger$request$lambda(verb, url, headers, body));
		    this.m3e_1.o3e(verb, url, headers, body, callback);
		  };
		  function SocketClientLogger$_set_delegate_$lambda_2humt9($value) {
		    return function () {
		      return 'setSocketClientDelegate() params: ' + toString_0($value);
		    };
		  }
		  function SocketClientLogger$emit$lambda($type, $msg) {
		    return function () {
		      return 'emit() ' + $type + ' ' + toString_0($msg);
		    };
		  }
		  function SocketClientLogger$connect$lambda($sessionId, $host, $path, $reconnectionAttempts, $reconnectionDelay, $randomizationFactor) {
		    return function () {
		      return 'connect() session_id:' + $sessionId + ' host: ' + $host + ' path: ' + $path + ' reconnectionAttempts: ' + toString($reconnectionAttempts) + ' reconnectionDelay: ' + toString($reconnectionDelay) + ' randomizationFactor: ' + toString($randomizationFactor) + ' ';
		    };
		  }
		  function SocketClientLogger$disconnect$lambda() {
		    return 'disconnect()';
		  }
		  function SocketClientLogger$setConnectParamsSocketConfig$lambda() {
		    return 'setConnectParamsSocketConfig() sessionId: <sessionId>, token: <token>';
		  }
		  function SocketClientLogger$setSocketSessionId$lambda() {
		    return 'setSocketSessionId() sessionId: <sessionId>';
		  }
		  function SocketClientLogger$startVerifyResponseTimer$lambda($milliseconds) {
		    return function () {
		      return 'startVerifyResponseTimer() ' + toString($milliseconds);
		    };
		  }
		  function SocketClientLogger(client, logger) {
		    this.q3e_1 = client;
		    this.r3e_1 = logger.b1f(Client_getInstance_0());
		  }
		  protoOf(SocketClientLogger).s3e = function (value) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$_set_delegate_$lambda_2humt9(value));
		    this.q3e_1.s3e(value == null ? value : new SocketClientDelegateLogger(value, this.r3e_1));
		  };
		  protoOf(SocketClientLogger).t3e = function (type, msg, callback) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$emit$lambda(type, msg));
		    this.q3e_1.t3e(type, msg, callback);
		  };
		  protoOf(SocketClientLogger).u3e = function (host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor, token, sessionId, query) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$connect$lambda(sessionId, host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor));
		    this.q3e_1.u3e(host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor, token, sessionId, query);
		  };
		  protoOf(SocketClientLogger).v3e = function () {
		    this.r3e_1.z3d(VOID, SocketClientLogger$disconnect$lambda);
		    this.q3e_1.v3e();
		  };
		  protoOf(SocketClientLogger).w3e = function (sessionId, token) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$setConnectParamsSocketConfig$lambda);
		    this.q3e_1.w3e(sessionId, token);
		  };
		  protoOf(SocketClientLogger).x3e = function (sessionId) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$setSocketSessionId$lambda);
		    this.q3e_1.x3e(sessionId);
		  };
		  protoOf(SocketClientLogger).y3e = function (milliseconds, callback) {
		    this.r3e_1.z3d(VOID, SocketClientLogger$startVerifyResponseTimer$lambda(milliseconds));
		    this.q3e_1.y3e(milliseconds, callback);
		  };
		  function MediaClientLogger$_set_delegate_$lambda_uk0t84($value) {
		    return function () {
		      return 'setMediaClientDelegate() params: ' + toString_0($value);
		    };
		  }
		  function MediaClientLogger$enableMediaOutbound$lambda() {
		    return 'enableMediaOutbound()';
		  }
		  function MediaClientLogger$enableMediaInbound$lambda($offerSDP) {
		    return function () {
		      return 'enableMediaInbound() ' + $offerSDP;
		    };
		  }
		  function MediaClientLogger$processAnswer$lambda($id) {
		    return function () {
		      return 'processAnswer() ' + $id;
		    };
		  }
		  function MediaClientLogger$disableMedia$lambda($id) {
		    return function () {
		      return 'disableMedia() ' + $id;
		    };
		  }
		  function MediaClientLogger$mute$lambda($id) {
		    return function () {
		      return 'mute() ' + $id;
		    };
		  }
		  function MediaClientLogger$unmute$lambda($id) {
		    return function () {
		      return 'unmute() ' + $id;
		    };
		  }
		  function MediaClientLogger$enableRtcStatsCollection$lambda($id) {
		    return function () {
		      return 'enableRtcStatsCollection() ' + $id;
		    };
		  }
		  function MediaClientLogger$enableNoiseSuppression$lambda($id) {
		    return function () {
		      return 'enableNoiseSuppression() ' + $id;
		    };
		  }
		  function MediaClientLogger$disableNoiseSuppression$lambda($id) {
		    return function () {
		      return 'disableNoiseSuppression() ' + $id;
		    };
		  }
		  function MediaClientLogger$getMediaConnectionState$lambda($id, $state) {
		    return function () {
		      return 'getMediaConnectionState() ' + $id + ': ' + $state.toString();
		    };
		  }
		  function MediaClientLogger(client, logger) {
		    this.z3e_1 = client;
		    this.a3f_1 = logger.b1f(Client_getInstance_1());
		  }
		  protoOf(MediaClientLogger).b3f = function (value) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$_set_delegate_$lambda_uk0t84(value));
		    this.z3e_1.b3f(value == null ? value : new MediaClientDelegateLogger(value, this.a3f_1));
		  };
		  protoOf(MediaClientLogger).c3f = function () {
		    return this.z3e_1.c3f();
		  };
		  protoOf(MediaClientLogger).d3f = function (closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$enableMediaOutbound$lambda);
		    this.z3e_1.d3f(closure);
		  };
		  protoOf(MediaClientLogger).e3f = function (rtcId, offerSDP, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$enableMediaInbound$lambda(offerSDP));
		    this.z3e_1.e3f(rtcId, offerSDP, closure);
		  };
		  protoOf(MediaClientLogger).f3f = function (id, sdp, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$processAnswer$lambda(id));
		    this.z3e_1.f3f(id, sdp, closure);
		  };
		  protoOf(MediaClientLogger).g3f = function (id, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$disableMedia$lambda(id));
		    this.z3e_1.g3f(id, closure);
		  };
		  protoOf(MediaClientLogger).h3f = function (id, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$mute$lambda(id));
		    this.z3e_1.h3f(id, closure);
		  };
		  protoOf(MediaClientLogger).i3f = function (id, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$unmute$lambda(id));
		    this.z3e_1.i3f(id, closure);
		  };
		  protoOf(MediaClientLogger).j3f = function (id, interval, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$enableRtcStatsCollection$lambda(id));
		    this.z3e_1.j3f(id, interval, closure);
		  };
		  protoOf(MediaClientLogger).k3f = function (id, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$enableNoiseSuppression$lambda(id));
		    this.z3e_1.k3f(id, closure);
		  };
		  protoOf(MediaClientLogger).l3f = function (id, closure) {
		    this.a3f_1.z3d(VOID, MediaClientLogger$disableNoiseSuppression$lambda(id));
		    this.z3e_1.l3f(id, closure);
		  };
		  protoOf(MediaClientLogger).m3f = function (id) {
		    var state = this.z3e_1.m3f(id);
		    this.a3f_1.z3d(VOID, MediaClientLogger$getMediaConnectionState$lambda(id, state));
		    return state;
		  };
		  function SessionAPILogger$createSession$lambda($sessionId) {
		    return function () {
		      return 'createSession() params: <token>, ' + $sessionId;
		    };
		  }
		  function SessionAPILogger$deleteSession$lambda() {
		    return 'deleteSession()';
		  }
		  function SessionAPILogger$refreshSession$lambda() {
		    return 'refreshSession() params: <token>';
		  }
		  function SessionAPILogger$setSessionListener$lambda($listener) {
		    return function () {
		      return 'setSessionListener() params: ' + toString($listener);
		    };
		  }
		  function SessionAPILogger(api, logger) {
		    this.n3f_1 = api;
		    this.o3f_1 = logger.b1f(Session_getInstance());
		  }
		  protoOf(SessionAPILogger).z1f = function (token, sessionId, callback) {
		    this.o3f_1.z3d(VOID, SessionAPILogger$createSession$lambda(sessionId));
		    this.n3f_1.z1f(token, sessionId, callbackLogger2(callback, this.o3f_1, 'createSession'));
		  };
		  protoOf(SessionAPILogger).a1g = function (callback) {
		    this.o3f_1.z3d(VOID, SessionAPILogger$deleteSession$lambda);
		    this.n3f_1.a1g(callbackLogger1(callback, this.o3f_1, 'deleteSession'));
		  };
		  protoOf(SessionAPILogger).b1g = function (token, callback) {
		    this.o3f_1.z3d(VOID, SessionAPILogger$refreshSession$lambda);
		    this.n3f_1.b1g(token, callbackLogger1(callback, this.o3f_1, 'refreshSession'));
		  };
		  protoOf(SessionAPILogger).v1d = function (listener) {
		    this.o3f_1.z3d(VOID, SessionAPILogger$setSessionListener$lambda(listener));
		    this.n3f_1.v1d(new SessionAPIListenerLogger(listener, this.o3f_1));
		  };
		  function VoiceAPILogger$serverCall$lambda($tag, $context) {
		    return function () {
		      return $tag + ' params: ' + toString_0($context);
		    };
		  }
		  function VoiceAPILogger$reconnectCall$lambda($callId) {
		    return function () {
		      return 'reconnectCall() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$getLeg$lambda($legId) {
		    return function () {
		      return 'getLeg() params: ' + $legId;
		    };
		  }
		  function VoiceAPILogger$getCallLegs$lambda($callId, $parameters) {
		    return function () {
		      return 'getCallLegs() params: ' + $callId + ', ' + toString_0($parameters);
		    };
		  }
		  function VoiceAPILogger$rejectCall$lambda($callId) {
		    return function () {
		      return 'rejectCall() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$answerCall$lambda($callId) {
		    return function () {
		      return 'answerCall() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$hangupCall$lambda($callId, $reasonText, $reasonCode) {
		    return function () {
		      return 'hangupCall() params: ' + $callId + ', ' + $reasonText + ', ' + $reasonCode;
		    };
		  }
		  function VoiceAPILogger$mute$lambda($callId) {
		    return function () {
		      return 'mute() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$unmute$lambda($callId) {
		    return function () {
		      return 'unmute() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$enableEarmuff$lambda($callId) {
		    return function () {
		      return 'enableEarmuff() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$disableEarmuff$lambda($callId) {
		    return function () {
		      return 'disableEarmuff() params: ' + $callId;
		    };
		  }
		  function VoiceAPILogger$sendDTMF$lambda($callId, $digits) {
		    return function () {
		      return 'sendDTMF() params: ' + $callId + ', ' + $digits;
		    };
		  }
		  function VoiceAPILogger$say$lambda($callId, $text, $level, $loop, $queue, $voiceName, $ssml) {
		    return function () {
		      return 'say() params: ' + $callId + ', ' + $text + ', ' + $level + ', ' + $loop + ', ' + $queue + ', ' + $voiceName + ', ' + $ssml;
		    };
		  }
		  function VoiceAPILogger$setVoiceListener$lambda($listener) {
		    return function () {
		      return 'setVoiceListener() params: ' + toString_0($listener);
		    };
		  }
		  function VoiceAPILogger(api, logger) {
		    this.p3f_1 = api;
		    this.q3f_1 = logger.b1f(Voice_getInstance());
		  }
		  protoOf(VoiceAPILogger).a1e = function (context, callback) {
		    var tag = 'serverCall()';
		    this.q3f_1.z3d(VOID, VoiceAPILogger$serverCall$lambda(tag, context));
		    this.p3f_1.a1e(context, callbackLogger2(callback, this.q3f_1, tag));
		  };
		  protoOf(VoiceAPILogger).b1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$reconnectCall$lambda(callId));
		    this.p3f_1.b1e(callId, callbackLogger1(callback, this.q3f_1, 'reconnectCall'));
		  };
		  protoOf(VoiceAPILogger).c1e = function (legId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$getLeg$lambda(legId));
		    this.p3f_1.c1e(legId, callbackLogger2(callback, this.q3f_1, 'getLeg'));
		  };
		  protoOf(VoiceAPILogger).d1e = function (callId, parameters, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$getCallLegs$lambda(callId, parameters));
		    this.p3f_1.d1e(callId, parameters, callbackLogger2(callback, this.q3f_1, 'getCallLegs'));
		  };
		  protoOf(VoiceAPILogger).e1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$rejectCall$lambda(callId));
		    this.p3f_1.e1e(callId, callbackLogger1(callback, this.q3f_1, 'rejectCall'));
		  };
		  protoOf(VoiceAPILogger).f1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$answerCall$lambda(callId));
		    this.p3f_1.f1e(callId, callbackLogger1(callback, this.q3f_1, 'answerCall'));
		  };
		  protoOf(VoiceAPILogger).g1e = function (callId, reasonText, reasonCode, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$hangupCall$lambda(callId, reasonText, reasonCode));
		    this.p3f_1.g1e(callId, reasonText, reasonCode, callbackLogger1(callback, this.q3f_1, 'hangupCall'));
		  };
		  protoOf(VoiceAPILogger).h1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$mute$lambda(callId));
		    this.p3f_1.h1e(callId, callbackLogger1(callback, this.q3f_1, 'mute'));
		  };
		  protoOf(VoiceAPILogger).i1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$unmute$lambda(callId));
		    this.p3f_1.i1e(callId, callbackLogger1(callback, this.q3f_1, 'unmute'));
		  };
		  protoOf(VoiceAPILogger).j1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$enableEarmuff$lambda(callId));
		    this.p3f_1.j1e(callId, callbackLogger1(callback, this.q3f_1, 'enableEarmuff'));
		  };
		  protoOf(VoiceAPILogger).k1e = function (callId, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$disableEarmuff$lambda(callId));
		    this.p3f_1.k1e(callId, callbackLogger1(callback, this.q3f_1, 'disableEarmuff'));
		  };
		  protoOf(VoiceAPILogger).l1e = function (callId, digits, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$sendDTMF$lambda(callId, digits));
		    this.p3f_1.l1e(callId, digits, callbackLogger1(callback, this.q3f_1, 'sendDTMF'));
		  };
		  protoOf(VoiceAPILogger).m1e = function (callId, text, level, loop, queue, voiceName, ssml, callback) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$say$lambda(callId, text, level, loop, queue, voiceName, ssml));
		    this.p3f_1.m1e(callId, text, level, loop, queue, voiceName, ssml, callbackLogger1(callback, this.q3f_1, 'say'));
		  };
		  protoOf(VoiceAPILogger).z1d = function (listener) {
		    this.q3f_1.z3d(VOID, VoiceAPILogger$setVoiceListener$lambda(listener));
		    var tmp;
		    if (listener == null) {
		      tmp = null;
		    } else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      this.p3f_1.z1d(new VoiceAPIListenerLogger(listener, this.q3f_1));
		      tmp = Unit_instance;
		    }
		    if (tmp == null) {
		      this.p3f_1.z1d(listener);
		    }
		  };
		  function PushAPILogger(api, logger) {
		    this.r3f_1 = api;
		    this.s3f_1 = logger.b1f(Push_getInstance());
		  }
		  function ConversationAPILogger$getConversation$lambda($conversationIdOrName) {
		    return function () {
		      return 'getConversation() params: ' + $conversationIdOrName;
		    };
		  }
		  function ConversationAPILogger$getUser$lambda($userIdOrName) {
		    return function () {
		      return 'getUser() params: ' + $userIdOrName;
		    };
		  }
		  function ConversationAPILogger(api, logger) {
		    this.t3f_1 = api;
		    this.u3f_1 = logger.b1f(Conversation_getInstance());
		  }
		  protoOf(ConversationAPILogger).d1g = function (conversationIdOrName, callback) {
		    this.u3f_1.z3d(VOID, ConversationAPILogger$getConversation$lambda(conversationIdOrName));
		    this.t3f_1.d1g(conversationIdOrName, callbackLogger2(callback, this.u3f_1, 'getConversation'));
		  };
		  protoOf(ConversationAPILogger).e1g = function (userIdOrName, callback) {
		    this.u3f_1.z3d(VOID, ConversationAPILogger$getUser$lambda(userIdOrName));
		    this.t3f_1.e1g(userIdOrName, callbackLogger2(callback, this.u3f_1, 'getUser'));
		  };
		  function ChatAPILogger$_set_chatListener_$lambda_wbqlbi($value) {
		    return function () {
		      return 'setChatListener() params: ' + toString_0($value);
		    };
		  }
		  function ChatAPILogger$createConversation$ref($boundThis) {
		    var l = function (p0, p1) {
		      $boundThis.k1f(p0, p1);
		      return Unit_instance;
		    };
		    l.callableName = 'createConversation';
		    return l;
		  }
		  function ChatAPILogger$createConversation$lambda(this$0, $parameters) {
		    return function () {
		      return toString(ChatAPILogger$createConversation$ref(this$0)) + '() params: ' + toString_0($parameters);
		    };
		  }
		  function ChatAPILogger$joinConversation$lambda($cid) {
		    return function () {
		      return 'joinConversation() params: ' + $cid;
		    };
		  }
		  function ChatAPILogger$inviteToConversation$lambda($cid, $username) {
		    return function () {
		      return 'inviteToConversation() params: ' + $cid + ', ' + $username;
		    };
		  }
		  function ChatAPILogger$leaveConversation$lambda($cid) {
		    return function () {
		      return 'leaveConversation() params: ' + $cid;
		    };
		  }
		  function ChatAPILogger$deleteConversation$lambda($cid) {
		    return function () {
		      return 'deleteConversation() params: ' + $cid;
		    };
		  }
		  function ChatAPILogger$getConversations$lambda($parameters) {
		    return function () {
		      return 'getConversations() params: ' + toString_0($parameters);
		    };
		  }
		  function ChatAPILogger$getConversationMembers$lambda($cid, $parameters) {
		    return function () {
		      return 'getConversationMembers() params: ' + $cid + ', ' + toString_0($parameters);
		    };
		  }
		  function ChatAPILogger$getConversationEvents$lambda($cid, $parameters, $filterGroup, $filterGroupVersion) {
		    return function () {
		      return 'getConversationEvents() params: ' + $cid + ', ' + toString_0($parameters) + ', ' + $filterGroup + ', ' + $filterGroupVersion;
		    };
		  }
		  function ChatAPILogger$getConversationMember$lambda($cid, $mid) {
		    return function () {
		      return 'getConversationMember() params: ' + $cid + ', ' + $mid;
		    };
		  }
		  function ChatAPILogger$sendMessageEvent$lambda($cid, $text, $imageUrl, $videoUrl, $audioUrl, $fileUrl, $vCardUrl, $customBody, $location, $template) {
		    return function () {
		      return 'sendMessageEvent() params: ' + $cid + ', ' + $text + ', ' + $imageUrl + ', ' + $videoUrl + ', ' + $audioUrl + ', ' + $fileUrl + ', ' + $vCardUrl + ', ' + $customBody + ', ' + toString_0($location) + ', ' + toString_0($template);
		    };
		  }
		  function ChatAPILogger$sendEphemeralEvent$lambda($cid, $customData) {
		    return function () {
		      return 'sendEphemeralEvent() params: ' + $cid + ', ' + $customData;
		    };
		  }
		  function ChatAPILogger$sendCustomEvent$lambda($cid, $customData, $eventType) {
		    return function () {
		      return 'sendCustomEvent() params: ' + $cid + ', ' + $customData + ' ' + $eventType;
		    };
		  }
		  function ChatAPILogger$deleteEvent$lambda($id, $cid) {
		    return function () {
		      return 'deleteEvent() params: ' + $id + ', ' + $cid;
		    };
		  }
		  function ChatAPILogger$sendMessageSeenEvent$lambda($id, $cid) {
		    return function () {
		      return 'sendMessageSeenEvent() params: ' + $id + ', ' + $cid;
		    };
		  }
		  function ChatAPILogger$updateConversation$lambda($conversationId, $parameters) {
		    return function () {
		      return 'updateConversation() params: ' + $conversationId + ', ' + $parameters.toString();
		    };
		  }
		  function ChatAPILogger(api, logger) {
		    this.v3f_1 = api;
		    this.w3f_1 = logger.b1f(Chat_getInstance());
		  }
		  protoOf(ChatAPILogger).w1d = function (value) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$_set_chatListener_$lambda_wbqlbi(value));
		    this.v3f_1.w1d(value == null ? value : new ChatAPIListenerLogger(value, this.w3f_1));
		  };
		  protoOf(ChatAPILogger).k1f = function (parameters, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$createConversation$lambda(this, parameters));
		    this.v3f_1.k1f(parameters, callbackLogger2(callback, this.w3f_1, 'createConversation'));
		  };
		  protoOf(ChatAPILogger).s1f = function (cid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$joinConversation$lambda(cid));
		    this.v3f_1.s1f(cid, callbackLogger2(callback, this.w3f_1, 'joinConversation'));
		  };
		  protoOf(ChatAPILogger).r1f = function (cid, username, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$inviteToConversation$lambda(cid, username));
		    this.v3f_1.r1f(cid, username, callbackLogger2(callback, this.w3f_1, 'inviteToConversation'));
		  };
		  protoOf(ChatAPILogger).t1f = function (cid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$leaveConversation$lambda(cid));
		    this.v3f_1.t1f(cid, callbackLogger1(callback, this.w3f_1, 'leaveConversation'));
		  };
		  protoOf(ChatAPILogger).l1f = function (cid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$deleteConversation$lambda(cid));
		    this.v3f_1.l1f(cid, callbackLogger1(callback, this.w3f_1, 'deleteConversation'));
		  };
		  protoOf(ChatAPILogger).q1f = function (parameters, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$getConversations$lambda(parameters));
		    this.v3f_1.q1f(parameters, callbackLogger2(callback, this.w3f_1, 'getConversations'));
		  };
		  protoOf(ChatAPILogger).p1f = function (cid, parameters, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$getConversationMembers$lambda(cid, parameters));
		    this.v3f_1.p1f(cid, parameters, callbackLogger2(callback, this.w3f_1, 'getConversationMembers'));
		  };
		  protoOf(ChatAPILogger).n1f = function (cid, parameters, filterGroup, filterGroupVersion, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$getConversationEvents$lambda(cid, parameters, filterGroup, filterGroupVersion));
		    this.v3f_1.n1f(cid, parameters, filterGroup, filterGroupVersion, callbackLogger2(callback, this.w3f_1, 'getConversationEvents'));
		  };
		  protoOf(ChatAPILogger).o1f = function (cid, mid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$getConversationMember$lambda(cid, mid));
		    this.v3f_1.o1f(cid, mid, callbackLogger2(callback, this.w3f_1, 'getConversationMember'));
		  };
		  protoOf(ChatAPILogger).w1f = function (cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$sendMessageEvent$lambda(cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template));
		    this.v3f_1.w1f(cid, text, imageUrl, videoUrl, audioUrl, fileUrl, vCardUrl, customBody, location, template, callbackLogger2(callback, this.w3f_1, 'sendMessageEvent'));
		  };
		  protoOf(ChatAPILogger).v1f = function (cid, customData, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$sendEphemeralEvent$lambda(cid, customData));
		    this.v3f_1.v1f(cid, customData, callbackLogger2(callback, this.w3f_1, 'sendEphemeralEvent'));
		  };
		  protoOf(ChatAPILogger).u1f = function (cid, eventType, customData, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$sendCustomEvent$lambda(cid, customData, eventType));
		    this.v3f_1.u1f(cid, eventType, customData, callbackLogger2(callback, this.w3f_1, 'sendCustomEvent'));
		  };
		  protoOf(ChatAPILogger).m1f = function (id, cid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$deleteEvent$lambda(id, cid));
		    this.v3f_1.m1f(id, cid, callbackLogger1(callback, this.w3f_1, 'deleteEvent'));
		  };
		  protoOf(ChatAPILogger).x1f = function (id, cid, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$sendMessageSeenEvent$lambda(id, cid));
		    this.v3f_1.x1f(id, cid, callbackLogger2(callback, this.w3f_1, 'sendMessageSeenEvent'));
		  };
		  protoOf(ChatAPILogger).y1f = function (conversationId, parameters, callback) {
		    this.w3f_1.z3d(VOID, ChatAPILogger$updateConversation$lambda(conversationId, parameters));
		    this.v3f_1.y1f(conversationId, parameters, callbackLogger2(callback, this.w3f_1, 'updateConversation'));
		  };
		  function SocketClientDelegateLogger$didReceiveNewSocketEvent$lambda($event) {
		    return function () {
		      return 'didReceiveNewSocketEvent() params: ' + $event.y2l_1;
		    };
		  }
		  function SocketClientDelegateLogger$didReceiveNewSocketConnectionStatusEvent$lambda($type, $reason, $timestamp, $retryNumber) {
		    return function () {
		      var tmp0_safe_receiver = $reason;
		      return 'didReceiveNewSocketConnectionStatusEvent() params: ' + $type.d2_1 + ' ' + (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d2_1) + ' ' + toString($timestamp) + ' ' + $retryNumber;
		    };
		  }
		  function SocketClientDelegateLogger(delegate, logger) {
		    this.x3f_1 = delegate;
		    this.y3f_1 = logger;
		  }
		  protoOf(SocketClientDelegateLogger).z3f = function (event) {
		    this.y3f_1.v3d(VOID, SocketClientDelegateLogger$didReceiveNewSocketEvent$lambda(event));
		    this.x3f_1.z3f(event);
		  };
		  protoOf(SocketClientDelegateLogger).a3g = function (type, reason, timestamp, retryNumber) {
		    this.y3f_1.x3d(VOID, SocketClientDelegateLogger$didReceiveNewSocketConnectionStatusEvent$lambda(type, reason, timestamp, retryNumber));
		    this.x3f_1.a3g(type, reason, timestamp, retryNumber);
		  };
		  function MediaClientDelegateLogger$onRtcStats$lambda($id, $rtcStats) {
		    return function () {
		      return 'onRtcStats() params: ' + $id + ' ' + $rtcStats.toString();
		    };
		  }
		  function MediaClientDelegateLogger$onConnectionChange$lambda($id, $state) {
		    return function () {
		      return 'onConnectionChange() params: ' + $id + ' ' + $state.d2_1;
		    };
		  }
		  function MediaClientDelegateLogger$onMediaError$lambda($id, $error) {
		    return function () {
		      return 'onMediaError() params: ' + $id + ' ' + $error.a2v_1;
		    };
		  }
		  function MediaClientDelegateLogger(delegate, logger) {
		    this.b3g_1 = delegate;
		    this.c3g_1 = logger;
		  }
		  protoOf(MediaClientDelegateLogger).d3g = function (id, rtcStats) {
		    this.c3g_1.v3d(VOID, MediaClientDelegateLogger$onRtcStats$lambda(id, rtcStats));
		    this.b3g_1.d3g(id, rtcStats);
		  };
		  protoOf(MediaClientDelegateLogger).e3g = function (id, state) {
		    this.c3g_1.x3d(VOID, MediaClientDelegateLogger$onConnectionChange$lambda(id, state));
		    this.b3g_1.e3g(id, state);
		  };
		  protoOf(MediaClientDelegateLogger).f3g = function (id, error) {
		    this.c3g_1.x3d(VOID, MediaClientDelegateLogger$onMediaError$lambda(id, error));
		    this.b3g_1.f3g(id, error);
		  };
		  function SessionAPIListenerLogger$onReconnecting$lambda() {
		    return 'onReconnecting()';
		  }
		  function SessionAPIListenerLogger$onReconnection$lambda() {
		    return 'onReconnection()';
		  }
		  function SessionAPIListenerLogger$onSessionError$lambda($reason) {
		    return function () {
		      return 'onSessionError() params: ' + $reason.d2_1;
		    };
		  }
		  function SessionAPIListenerLogger(listener, logger) {
		    this.g3g_1 = listener;
		    this.h3g_1 = logger;
		  }
		  protoOf(SessionAPIListenerLogger).h35 = function () {
		    this.h3g_1.z3d(VOID, SessionAPIListenerLogger$onReconnecting$lambda);
		    this.g3g_1.h35();
		  };
		  protoOf(SessionAPIListenerLogger).i35 = function () {
		    this.h3g_1.z3d(VOID, SessionAPIListenerLogger$onReconnection$lambda);
		    this.g3g_1.i35();
		  };
		  protoOf(SessionAPIListenerLogger).j35 = function (reason) {
		    this.h3g_1.c3e(VOID, SessionAPIListenerLogger$onSessionError$lambda(reason));
		    this.g3g_1.j35(reason);
		  };
		  function VoiceAPIListenerLogger$onCallInvite$lambda($callId, $from, $channelType) {
		    return function () {
		      return 'onCallInvite() params: ' + $callId + ', ' + $from + ', ' + $channelType.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onCallInviteCancel$lambda($callId, $reason) {
		    return function () {
		      return 'onCallInviteCancel() params: ' + $callId + ', ' + $reason.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onCallTransfer$lambda($callId, $conversationId) {
		    return function () {
		      return 'onCallTransfer() params: ' + $callId + ', ' + $conversationId;
		    };
		  }
		  function VoiceAPIListenerLogger$onMuteUpdate$lambda($callId, $legId, $isMuted) {
		    return function () {
		      return 'onMuteUpdate() params: ' + $callId + ', ' + $legId + ', ' + $isMuted;
		    };
		  }
		  function VoiceAPIListenerLogger$onEarmuffUpdate$lambda($callId, $legId, $earmuffStatus) {
		    return function () {
		      return 'onEarmuffUpdate() params: ' + $callId + ', ' + $legId + ', ' + $earmuffStatus;
		    };
		  }
		  function VoiceAPIListenerLogger$onDTMFUpdate$lambda($callId, $legId, $digits) {
		    return function () {
		      return 'onDTMFUpdate() params: ' + $callId + ', ' + $legId + ', ' + $digits;
		    };
		  }
		  function VoiceAPIListenerLogger$onCallHangup$lambda($callId, $callQuality, $reason) {
		    return function () {
		      return 'onCallHangup() params: ' + $callId + ', ' + $callQuality.toString() + ', ' + $reason.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onLegStatusUpdate$lambda($callId, $legId, $status) {
		    return function () {
		      return 'onLegStatusUpdate() params: ' + $callId + ', ' + $legId + ', ' + $status.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onCallMediaReconnecting$lambda($callId) {
		    return function () {
		      return 'onCallMediaReconnecting() params: ' + $callId;
		    };
		  }
		  function VoiceAPIListenerLogger$onCallMediaReconnection$lambda($callId) {
		    return function () {
		      return 'onCallMediaReconnection() params: ' + $callId;
		    };
		  }
		  function VoiceAPIListenerLogger$onCallMediaDisconnect$lambda($callId, $reason) {
		    return function () {
		      return 'onCallMediaDisconnect() params: ' + $callId + ', ' + $reason.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onRtcStatsUpdate$lambda($legId) {
		    return function () {
		      return 'onRtcStatsUpdate() params: ' + $legId + ' <rtcStats>';
		    };
		  }
		  function VoiceAPIListenerLogger$onRtcStatsUpdate$lambda_0($legId, $rtcStats) {
		    return function () {
		      return 'onRtcStatsUpdate() params: ' + $legId + ' ' + $rtcStats.toString();
		    };
		  }
		  function VoiceAPIListenerLogger$onCallMediaError$lambda($callId, $error) {
		    return function () {
		      return 'onCallMediaError() params: ' + $callId + ', ' + $error.toString();
		    };
		  }
		  function VoiceAPIListenerLogger(listener, logger) {
		    this.i3g_1 = listener;
		    this.j3g_1 = logger;
		  }
		  protoOf(VoiceAPIListenerLogger).n35 = function (callId, from, channelType) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallInvite$lambda(callId, from, channelType));
		    this.i3g_1.n35(callId, from, channelType);
		  };
		  protoOf(VoiceAPIListenerLogger).o35 = function (callId, reason) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallInviteCancel$lambda(callId, reason));
		    this.i3g_1.o35(callId, reason);
		  };
		  protoOf(VoiceAPIListenerLogger).p35 = function (callId, conversationId) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallTransfer$lambda(callId, conversationId));
		    this.i3g_1.p35(callId, conversationId);
		  };
		  protoOf(VoiceAPIListenerLogger).q35 = function (callId, legId, isMuted) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onMuteUpdate$lambda(callId, legId, isMuted));
		    this.i3g_1.q35(callId, legId, isMuted);
		  };
		  protoOf(VoiceAPIListenerLogger).r35 = function (callId, legId, earmuffStatus) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onEarmuffUpdate$lambda(callId, legId, earmuffStatus));
		    this.i3g_1.r35(callId, legId, earmuffStatus);
		  };
		  protoOf(VoiceAPIListenerLogger).s35 = function (callId, legId, digits) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onDTMFUpdate$lambda(callId, legId, digits));
		    this.i3g_1.s35(callId, legId, digits);
		  };
		  protoOf(VoiceAPIListenerLogger).t35 = function (callId, callQuality, reason) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallHangup$lambda(callId, callQuality, reason));
		    this.i3g_1.t35(callId, callQuality, reason);
		  };
		  protoOf(VoiceAPIListenerLogger).u35 = function (callId, legId, status) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onLegStatusUpdate$lambda(callId, legId, status));
		    this.i3g_1.u35(callId, legId, status);
		  };
		  protoOf(VoiceAPIListenerLogger).v35 = function (callId) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallMediaReconnecting$lambda(callId));
		    this.i3g_1.v35(callId);
		  };
		  protoOf(VoiceAPIListenerLogger).w35 = function (callId) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallMediaReconnection$lambda(callId));
		    this.i3g_1.w35(callId);
		  };
		  protoOf(VoiceAPIListenerLogger).x35 = function (callId, reason) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onCallMediaDisconnect$lambda(callId, reason));
		    this.i3g_1.x35(callId, reason);
		  };
		  protoOf(VoiceAPIListenerLogger).y35 = function (rtcStats, legId) {
		    this.j3g_1.z3d(VOID, VoiceAPIListenerLogger$onRtcStatsUpdate$lambda(legId));
		    this.j3g_1.v3d(VOID, VoiceAPIListenerLogger$onRtcStatsUpdate$lambda_0(legId, rtcStats));
		    this.i3g_1.y35(rtcStats, legId);
		  };
		  protoOf(VoiceAPIListenerLogger).z35 = function (callId, error) {
		    this.j3g_1.c3e(VOID, VoiceAPIListenerLogger$onCallMediaError$lambda(callId, error));
		    this.i3g_1.z35(callId, error);
		  };
		  function ChatAPIListenerLogger$onConversationEvent$lambda($event) {
		    return function () {
		      return 'onConversationEvent() params: ' + toString($event);
		    };
		  }
		  function ChatAPIListenerLogger(listener, logger) {
		    this.k3g_1 = listener;
		    this.l3g_1 = logger;
		  }
		  protoOf(ChatAPIListenerLogger).i2s = function (event) {
		    this.l3g_1.z3d(VOID, ChatAPIListenerLogger$onConversationEvent$lambda(event));
		    this.k3g_1.i2s(event);
		  };
		  function CallbackMiddleware(store, logger) {
		    return CallbackMiddleware$lambda(logger);
		  }
		  function CallbackAction(fn, value) {
		    this.m3g_1 = fn;
		    this.n3g_1 = value;
		  }
		  protoOf(CallbackAction).toString = function () {
		    return 'CallbackAction(fn=' + toString(this.m3g_1) + ', value=' + toString_0(this.n3g_1) + ')';
		  };
		  protoOf(CallbackAction).hashCode = function () {
		    var result = hashCode(this.m3g_1);
		    result = imul(result, 31) + (this.n3g_1 == null ? 0 : hashCode(this.n3g_1)) | 0;
		    return result;
		  };
		  protoOf(CallbackAction).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallbackAction))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallbackAction ? other : THROW_CCE();
		    if (!equals(this.m3g_1, tmp0_other_with_cast.m3g_1))
		      return false;
		    if (!equals(this.n3g_1, tmp0_other_with_cast.n3g_1))
		      return false;
		    return true;
		  };
		  function CallbackMiddleware$lambda$lambda$lambda() {
		    return '';
		  }
		  function CallbackMiddleware$lambda$lambda$lambda_0($action) {
		    return function () {
		      return 'Invoking Callback with value:' + toString_0($action.d3e_1.n3g_1);
		    };
		  }
		  function CallbackMiddleware$lambda$lambda($logger, $next) {
		    return function (action) {
		      v_0($logger, action, CallbackMiddleware$lambda$lambda$lambda);
		      if (action.d3e_1 instanceof CallbackAction) {
		        d_0($logger, action, CallbackMiddleware$lambda$lambda$lambda_0(action));
		        action.d3e_1.m3g_1(action.d3e_1.n3g_1);
		      }
		      return $next(action);
		    };
		  }
		  function CallbackMiddleware$lambda($logger) {
		    return function (next) {
		      return CallbackMiddleware$lambda$lambda($logger, next);
		    };
		  }
		  function BufferedSocketEvent() {
		  }
		  function exceptionHandlerMiddleware(store, logger) {
		    return exceptionHandlerMiddleware$lambda(logger);
		  }
		  function exceptionHandlerMiddleware$lambda$lambda$lambda($error) {
		    return function () {
		      return 'Unhandled Exception:\n ' + $error.toString();
		    };
		  }
		  function exceptionHandlerMiddleware$lambda$lambda($next, $logger) {
		    return function (action) {
		      var tmp;
		      try {
		        tmp = $next(action);
		      } catch ($p) {
		        var tmp_0;
		        if ($p instanceof Exception) {
		          var error = $p;
		          e_1($logger, action, exceptionHandlerMiddleware$lambda$lambda$lambda(error));
		          tmp_0 = $next(Action_init_$Create$(new ErrorReport(error, action)));
		        } else {
		          throw $p;
		        }
		        tmp = tmp_0;
		      }
		      return tmp;
		    };
		  }
		  function exceptionHandlerMiddleware$lambda($logger) {
		    return function (next) {
		      return exceptionHandlerMiddleware$lambda$lambda(next, $logger);
		    };
		  }
		  function loggingMiddleware(store, logger) {
		    return loggingMiddleware$lambda(logger);
		  }
		  function loggingMiddleware$lambda$lambda$lambda($action) {
		    return function () {
		      return 'NEW ACTION - ' + toString($action.d3e_1) + ' - ' + $action.e3e_1.toString();
		    };
		  }
		  function loggingMiddleware$lambda$lambda($logger, $next) {
		    return function (action) {
		      v_0($logger, action, loggingMiddleware$lambda$lambda$lambda(action));
		      return $next(action);
		    };
		  }
		  function loggingMiddleware$lambda($logger) {
		    return function (next) {
		      return loggingMiddleware$lambda$lambda($logger, next);
		    };
		  }
		  function SessionMiddleware(store, logger) {
		    return SessionMiddleware$lambda(logger, store);
		  }
		  function SessionMiddleware$lambda$lambda$lambda() {
		    return '';
		  }
		  function SessionMiddleware$lambda$lambda($logger, $next, $store) {
		    return function (action) {
		      v_0($logger, action, SessionMiddleware$lambda$lambda$lambda);
		      // Inline function 'kotlin.also' call
		      var this_0 = $next(action);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.middlewares.SessionMiddleware.<anonymous>.<anonymous>.<anonymous>' call
		      if (action.d3e_1 instanceof SessionSuccessEvent) {
		        if (!(action.d3e_1.j2a_1.v2a_1 == null)) {
		          // Inline function 'kotlin.collections.forEach' call
		          var tmp0_iterator = action.d3e_1.j2a_1.v2a_1.i();
		          while (tmp0_iterator.j()) {
		            var element = tmp0_iterator.k();
		            // Inline function 'com.vonage.clientcore.core.middlewares.SessionMiddleware.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		            $store.g1g(Action_init_$Create$(element));
		          }
		        }
		      }
		      return this_0;
		    };
		  }
		  function SessionMiddleware$lambda($logger, $store) {
		    return function (next) {
		      return SessionMiddleware$lambda$lambda($logger, next, $store);
		    };
		  }
		  function UserConversations(uid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.o3g_1 = uid;
		    this.p3g_1 = version;
		  }
		  protoOf(UserConversations).q3g = function () {
		    return '/' + this.p3g_1 + '/users/' + this.o3g_1 + '/conversations';
		  };
		  protoOf(UserConversations).toString = function () {
		    return 'UserConversations(uid=' + this.o3g_1 + ', version=' + this.p3g_1 + ')';
		  };
		  protoOf(UserConversations).hashCode = function () {
		    var result = getStringHashCode(this.o3g_1);
		    result = imul(result, 31) + getStringHashCode(this.p3g_1) | 0;
		    return result;
		  };
		  protoOf(UserConversations).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof UserConversations))
		      return false;
		    var tmp0_other_with_cast = other instanceof UserConversations ? other : THROW_CCE();
		    if (!(this.o3g_1 === tmp0_other_with_cast.o3g_1))
		      return false;
		    if (!(this.p3g_1 === tmp0_other_with_cast.p3g_1))
		      return false;
		    return true;
		  };
		  function User_0(userIdOrName, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.r3g_1 = userIdOrName;
		    this.s3g_1 = version;
		  }
		  protoOf(User_0).q3g = function () {
		    return '/' + this.s3g_1 + '/users/' + this.r3g_1;
		  };
		  protoOf(User_0).toString = function () {
		    return 'User(userIdOrName=' + this.r3g_1 + ', version=' + this.s3g_1 + ')';
		  };
		  protoOf(User_0).hashCode = function () {
		    var result = getStringHashCode(this.r3g_1);
		    result = imul(result, 31) + getStringHashCode(this.s3g_1) | 0;
		    return result;
		  };
		  protoOf(User_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof User_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof User_0 ? other : THROW_CCE();
		    if (!(this.r3g_1 === tmp0_other_with_cast.r3g_1))
		      return false;
		    if (!(this.s3g_1 === tmp0_other_with_cast.s3g_1))
		      return false;
		    return true;
		  };
		  function ConversationMembers(cid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.t3g_1 = cid;
		    this.u3g_1 = version;
		  }
		  protoOf(ConversationMembers).q3g = function () {
		    return '/' + this.u3g_1 + '/conversations/' + this.t3g_1 + '/members';
		  };
		  protoOf(ConversationMembers).toString = function () {
		    return 'ConversationMembers(cid=' + this.t3g_1 + ', version=' + this.u3g_1 + ')';
		  };
		  protoOf(ConversationMembers).hashCode = function () {
		    var result = getStringHashCode(this.t3g_1);
		    result = imul(result, 31) + getStringHashCode(this.u3g_1) | 0;
		    return result;
		  };
		  protoOf(ConversationMembers).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationMembers))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationMembers ? other : THROW_CCE();
		    if (!(this.t3g_1 === tmp0_other_with_cast.t3g_1))
		      return false;
		    if (!(this.u3g_1 === tmp0_other_with_cast.u3g_1))
		      return false;
		    return true;
		  };
		  function ConversationMember(cid, mid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.v3g_1 = cid;
		    this.w3g_1 = mid;
		    this.x3g_1 = version;
		  }
		  protoOf(ConversationMember).q3g = function () {
		    return '/' + this.x3g_1 + '/conversations/' + this.v3g_1 + '/members/' + this.w3g_1;
		  };
		  protoOf(ConversationMember).toString = function () {
		    return 'ConversationMember(cid=' + this.v3g_1 + ', mid=' + this.w3g_1 + ', version=' + this.x3g_1 + ')';
		  };
		  protoOf(ConversationMember).hashCode = function () {
		    var result = getStringHashCode(this.v3g_1);
		    result = imul(result, 31) + getStringHashCode(this.w3g_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x3g_1) | 0;
		    return result;
		  };
		  protoOf(ConversationMember).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationMember))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationMember ? other : THROW_CCE();
		    if (!(this.v3g_1 === tmp0_other_with_cast.v3g_1))
		      return false;
		    if (!(this.w3g_1 === tmp0_other_with_cast.w3g_1))
		      return false;
		    if (!(this.x3g_1 === tmp0_other_with_cast.x3g_1))
		      return false;
		    return true;
		  };
		  function Conversations(version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.y3g_1 = version;
		  }
		  protoOf(Conversations).q3g = function () {
		    return '/' + this.y3g_1 + '/conversations';
		  };
		  protoOf(Conversations).toString = function () {
		    return 'Conversations(version=' + this.y3g_1 + ')';
		  };
		  protoOf(Conversations).hashCode = function () {
		    return getStringHashCode(this.y3g_1);
		  };
		  protoOf(Conversations).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Conversations))
		      return false;
		    var tmp0_other_with_cast = other instanceof Conversations ? other : THROW_CCE();
		    if (!(this.y3g_1 === tmp0_other_with_cast.y3g_1))
		      return false;
		    return true;
		  };
		  function Conversation_1(cid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.z3g_1 = cid;
		    this.a3h_1 = version;
		  }
		  protoOf(Conversation_1).q3g = function () {
		    return '/' + this.a3h_1 + '/conversations/' + this.z3g_1;
		  };
		  protoOf(Conversation_1).toString = function () {
		    return 'Conversation(cid=' + this.z3g_1 + ', version=' + this.a3h_1 + ')';
		  };
		  protoOf(Conversation_1).hashCode = function () {
		    var result = getStringHashCode(this.z3g_1);
		    result = imul(result, 31) + getStringHashCode(this.a3h_1) | 0;
		    return result;
		  };
		  protoOf(Conversation_1).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Conversation_1))
		      return false;
		    var tmp0_other_with_cast = other instanceof Conversation_1 ? other : THROW_CCE();
		    if (!(this.z3g_1 === tmp0_other_with_cast.z3g_1))
		      return false;
		    if (!(this.a3h_1 === tmp0_other_with_cast.a3h_1))
		      return false;
		    return true;
		  };
		  function ConversationEvents(cid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.b3h_1 = cid;
		    this.c3h_1 = version;
		  }
		  protoOf(ConversationEvents).q3g = function () {
		    return '/' + this.c3h_1 + '/conversations/' + this.b3h_1 + '/events';
		  };
		  protoOf(ConversationEvents).toString = function () {
		    return 'ConversationEvents(cid=' + this.b3h_1 + ', version=' + this.c3h_1 + ')';
		  };
		  protoOf(ConversationEvents).hashCode = function () {
		    var result = getStringHashCode(this.b3h_1);
		    result = imul(result, 31) + getStringHashCode(this.c3h_1) | 0;
		    return result;
		  };
		  protoOf(ConversationEvents).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationEvents))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationEvents ? other : THROW_CCE();
		    if (!(this.b3h_1 === tmp0_other_with_cast.b3h_1))
		      return false;
		    if (!(this.c3h_1 === tmp0_other_with_cast.c3h_1))
		      return false;
		    return true;
		  };
		  function ConversationEvent(cid, eventId, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.d3h_1 = cid;
		    this.e3h_1 = eventId;
		    this.f3h_1 = version;
		  }
		  protoOf(ConversationEvent).q3g = function () {
		    return '/' + this.f3h_1 + '/conversations/' + this.d3h_1 + '/events/' + this.e3h_1;
		  };
		  protoOf(ConversationEvent).toString = function () {
		    return 'ConversationEvent(cid=' + this.d3h_1 + ', eventId=' + this.e3h_1 + ', version=' + this.f3h_1 + ')';
		  };
		  protoOf(ConversationEvent).hashCode = function () {
		    var result = getStringHashCode(this.d3h_1);
		    result = imul(result, 31) + getStringHashCode(this.e3h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.f3h_1) | 0;
		    return result;
		  };
		  protoOf(ConversationEvent).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationEvent))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationEvent ? other : THROW_CCE();
		    if (!(this.d3h_1 === tmp0_other_with_cast.d3h_1))
		      return false;
		    if (!(this.e3h_1 === tmp0_other_with_cast.e3h_1))
		      return false;
		    if (!(this.f3h_1 === tmp0_other_with_cast.f3h_1))
		      return false;
		    return true;
		  };
		  function RtcReconnect(cid, reconnectRtcId, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.g3h_1 = cid;
		    this.h3h_1 = reconnectRtcId;
		    this.i3h_1 = version;
		  }
		  protoOf(RtcReconnect).q3g = function () {
		    return '/' + this.i3h_1 + '/conversations/' + this.g3h_1 + '/rtc/' + this.h3h_1 + '/offer';
		  };
		  protoOf(RtcReconnect).toString = function () {
		    return 'RtcReconnect(cid=' + this.g3h_1 + ', reconnectRtcId=' + this.h3h_1 + ', version=' + this.i3h_1 + ')';
		  };
		  protoOf(RtcReconnect).hashCode = function () {
		    var result = getStringHashCode(this.g3h_1);
		    result = imul(result, 31) + getStringHashCode(this.h3h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.i3h_1) | 0;
		    return result;
		  };
		  protoOf(RtcReconnect).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RtcReconnect))
		      return false;
		    var tmp0_other_with_cast = other instanceof RtcReconnect ? other : THROW_CCE();
		    if (!(this.g3h_1 === tmp0_other_with_cast.g3h_1))
		      return false;
		    if (!(this.h3h_1 === tmp0_other_with_cast.h3h_1))
		      return false;
		    if (!(this.i3h_1 === tmp0_other_with_cast.i3h_1))
		      return false;
		    return true;
		  };
		  function ConversationMemberMe(cid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.j3h_1 = cid;
		    this.k3h_1 = version;
		  }
		  protoOf(ConversationMemberMe).q3g = function () {
		    return '/' + this.k3h_1 + '/conversations/' + this.j3h_1 + '/members/me';
		  };
		  protoOf(ConversationMemberMe).toString = function () {
		    return 'ConversationMemberMe(cid=' + this.j3h_1 + ', version=' + this.k3h_1 + ')';
		  };
		  protoOf(ConversationMemberMe).hashCode = function () {
		    var result = getStringHashCode(this.j3h_1);
		    result = imul(result, 31) + getStringHashCode(this.k3h_1) | 0;
		    return result;
		  };
		  protoOf(ConversationMemberMe).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConversationMemberMe))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConversationMemberMe ? other : THROW_CCE();
		    if (!(this.j3h_1 === tmp0_other_with_cast.j3h_1))
		      return false;
		    if (!(this.k3h_1 === tmp0_other_with_cast.k3h_1))
		      return false;
		    return true;
		  };
		  function Leg_0(legId, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.l3h_1 = legId;
		    this.m3h_1 = version;
		  }
		  protoOf(Leg_0).q3g = function () {
		    return '/' + this.m3h_1 + '/legs/' + this.l3h_1;
		  };
		  protoOf(Leg_0).toString = function () {
		    return 'Leg(legId=' + this.l3h_1 + ', version=' + this.m3h_1 + ')';
		  };
		  protoOf(Leg_0).hashCode = function () {
		    var result = getStringHashCode(this.l3h_1);
		    result = imul(result, 31) + getStringHashCode(this.m3h_1) | 0;
		    return result;
		  };
		  protoOf(Leg_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Leg_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof Leg_0 ? other : THROW_CCE();
		    if (!(this.l3h_1 === tmp0_other_with_cast.l3h_1))
		      return false;
		    if (!(this.m3h_1 === tmp0_other_with_cast.m3h_1))
		      return false;
		    return true;
		  };
		  function Knockers(version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.n3h_1 = version;
		  }
		  protoOf(Knockers).q3g = function () {
		    return '/' + this.n3h_1 + '/knocking';
		  };
		  protoOf(Knockers).toString = function () {
		    return 'Knockers(version=' + this.n3h_1 + ')';
		  };
		  protoOf(Knockers).hashCode = function () {
		    return getStringHashCode(this.n3h_1);
		  };
		  protoOf(Knockers).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Knockers))
		      return false;
		    var tmp0_other_with_cast = other instanceof Knockers ? other : THROW_CCE();
		    if (!(this.n3h_1 === tmp0_other_with_cast.n3h_1))
		      return false;
		    return true;
		  };
		  function Knocker(knockingId, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.o3h_1 = knockingId;
		    this.p3h_1 = version;
		  }
		  protoOf(Knocker).q3g = function () {
		    return '/' + this.p3h_1 + '/knocking/' + this.o3h_1;
		  };
		  protoOf(Knocker).toString = function () {
		    return 'Knocker(knockingId=' + this.o3h_1 + ', version=' + this.p3h_1 + ')';
		  };
		  protoOf(Knocker).hashCode = function () {
		    var result = getStringHashCode(this.o3h_1);
		    result = imul(result, 31) + getStringHashCode(this.p3h_1) | 0;
		    return result;
		  };
		  protoOf(Knocker).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Knocker))
		      return false;
		    var tmp0_other_with_cast = other instanceof Knocker ? other : THROW_CCE();
		    if (!(this.o3h_1 === tmp0_other_with_cast.o3h_1))
		      return false;
		    if (!(this.p3h_1 === tmp0_other_with_cast.p3h_1))
		      return false;
		    return true;
		  };
		  function Legs(version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.q3h_1 = version;
		  }
		  protoOf(Legs).q3g = function () {
		    return '/' + this.q3h_1 + '/legs';
		  };
		  protoOf(Legs).toString = function () {
		    return 'Legs(version=' + this.q3h_1 + ')';
		  };
		  protoOf(Legs).hashCode = function () {
		    return getStringHashCode(this.q3h_1);
		  };
		  protoOf(Legs).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Legs))
		      return false;
		    var tmp0_other_with_cast = other instanceof Legs ? other : THROW_CCE();
		    if (!(this.q3h_1 === tmp0_other_with_cast.q3h_1))
		      return false;
		    return true;
		  };
		  function Sessions(sessionId, version) {
		    version = version === VOID ? 'v0.2' : version;
		    CSEndPoints.call(this);
		    this.r3h_1 = sessionId;
		    this.s3h_1 = version;
		  }
		  protoOf(Sessions).q3g = function () {
		    return '/' + this.s3h_1 + '/sessions/' + this.r3h_1;
		  };
		  protoOf(Sessions).toString = function () {
		    return 'Sessions(sessionId=' + this.r3h_1 + ', version=' + this.s3h_1 + ')';
		  };
		  protoOf(Sessions).hashCode = function () {
		    var result = getStringHashCode(this.r3h_1);
		    result = imul(result, 31) + getStringHashCode(this.s3h_1) | 0;
		    return result;
		  };
		  protoOf(Sessions).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Sessions))
		      return false;
		    var tmp0_other_with_cast = other instanceof Sessions ? other : THROW_CCE();
		    if (!(this.r3h_1 === tmp0_other_with_cast.r3h_1))
		      return false;
		    if (!(this.s3h_1 === tmp0_other_with_cast.s3h_1))
		      return false;
		    return true;
		  };
		  function RTCAnswer_0(cid, rtc_id, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.t3h_1 = cid;
		    this.u3h_1 = rtc_id;
		    this.v3h_1 = version;
		  }
		  protoOf(RTCAnswer_0).q3g = function () {
		    return '/' + this.v3h_1 + '/conversations/' + this.t3h_1 + '/rtc/' + this.u3h_1 + '/answer';
		  };
		  protoOf(RTCAnswer_0).toString = function () {
		    return 'RTCAnswer(cid=' + this.t3h_1 + ', rtc_id=' + this.u3h_1 + ', version=' + this.v3h_1 + ')';
		  };
		  protoOf(RTCAnswer_0).hashCode = function () {
		    var result = getStringHashCode(this.t3h_1);
		    result = imul(result, 31) + getStringHashCode(this.u3h_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.v3h_1) | 0;
		    return result;
		  };
		  protoOf(RTCAnswer_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCAnswer_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCAnswer_0 ? other : THROW_CCE();
		    if (!(this.t3h_1 === tmp0_other_with_cast.t3h_1))
		      return false;
		    if (!(this.u3h_1 === tmp0_other_with_cast.u3h_1))
		      return false;
		    if (!(this.v3h_1 === tmp0_other_with_cast.v3h_1))
		      return false;
		    return true;
		  };
		  function ConversationLegs(cid, version) {
		    version = version === VOID ? 'v0.3' : version;
		    CSEndPoints.call(this);
		    this.w3h_1 = cid;
		    this.x3h_1 = version;
		  }
		  protoOf(ConversationLegs).q3g = function () {
		    return '/' + this.x3h_1 + '/conversations/' + this.w3h_1 + '/legs';
		  };
		  function CSEndPoints() {
		  }
		  function Metrics(version) {
		    version = version === VOID ? 'v2' : version;
		    CapiEndpoints.call(this);
		    this.y3h_1 = version;
		  }
		  protoOf(Metrics).q3g = function () {
		    return '/' + this.y3h_1 + '/rtc/metrics';
		  };
		  protoOf(Metrics).toString = function () {
		    return 'Metrics(version=' + this.y3h_1 + ')';
		  };
		  protoOf(Metrics).hashCode = function () {
		    return getStringHashCode(this.y3h_1);
		  };
		  protoOf(Metrics).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Metrics))
		      return false;
		    var tmp0_other_with_cast = other instanceof Metrics ? other : THROW_CCE();
		    if (!(this.y3h_1 === tmp0_other_with_cast.y3h_1))
		      return false;
		    return true;
		  };
		  function CapiEndpoints() {
		  }
		  function get_httpMiddlewareSerializer() {
		    _init_properties_HTTPActionMiddleware_kt__sbjcs0();
		    return httpMiddlewareSerializer;
		  }
		  var httpMiddlewareSerializer;
		  function httpActionMiddleware(store, http, logger) {
		    _init_properties_HTTPActionMiddleware_kt__sbjcs0();
		    return httpActionMiddleware$lambda(logger, store, http);
		  }
		  function httpMiddlewareSerializer$lambda($this$Json) {
		    _init_properties_HTTPActionMiddleware_kt__sbjcs0();
		    $this$Json.y11_1 = true;
		    $this$Json.w11_1 = true;
		    $this$Json.x11_1 = false;
		    return Unit_instance;
		  }
		  function httpActionMiddleware$lambda$lambda$lambda() {
		    _init_properties_HTTPActionMiddleware_kt__sbjcs0();
		    return '';
		  }
		  function httpActionMiddleware$lambda$lambda$lambda$lambda($response) {
		    return function () {
		      return 'Callback RESPONSE --> ' + toString_0($response);
		    };
		  }
		  function httpActionMiddleware$lambda$lambda$lambda$lambda_0($err) {
		    return function () {
		      return 'Callback ERROR --> ' + toString_0($err);
		    };
		  }
		  function httpActionMiddleware$lambda$lambda$lambda_0($logger, $action, $store) {
		    return function (httpClientError, response) {
		      $logger.x3d(VOID, httpActionMiddleware$lambda$lambda$lambda$lambda(response));
		      var tmp;
		      if (httpClientError == null) {
		        var tmp_0;
		        if (response == null) {
		          tmp_0 = new UnexpectedNullValue();
		        } else if (response.z3h_1 === 503) {
		          tmp_0 = new ServiceTempNotAvailable();
		        } else if (response.z3h_1 >= 500) {
		          tmp_0 = new ServiceNotAvailable(response.z3h_1);
		        } else if (response.z3h_1 === 401) {
		          tmp_0 = new AuthorizationError_0(response.a3i_1);
		        } else if (response.z3h_1 >= 400) {
		          var tmp0_elvis_lhs = CSError_0(response);
		          tmp_0 = tmp0_elvis_lhs == null ? new ParsingException(Exception_init_$Create$('CSErrorParsing')) : tmp0_elvis_lhs;
		        } else {
		          var tmp_1;
		          if (response.a3i_1 == null) {
		            tmp_1 = null;
		          } else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            // Inline function 'com.vonage.clientcore.core.middlewares.http.httpActionMiddleware.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		            var tmp_2;
		            try {
		              var decodedResponse = $action.d3e_1.r1g(response.a3i_1, get_httpMiddlewareSerializer());
		              $store.g1g(new Action_0(decodedResponse, new ActionMeta(VOID, $action.e3e_1.g3e_1)));
		              var tmp0_safe_receiver = $action.e3e_1.h3e_1;
		              if (tmp0_safe_receiver == null)
		                null;
		              else {
		                // Inline function 'kotlin.let' call
		                // Inline function 'kotlin.contracts.contract' call
		                $store.g1g(Action_init_$Create$(new CallbackAction(tmp0_safe_receiver, decodedResponse)));
		              }
		              tmp_2 = null;
		            } catch ($p) {
		              var tmp_3;
		              if ($p instanceof Exception) {
		                var e = $p;
		                tmp_3 = new ParsingException(e);
		              } else {
		                throw $p;
		              }
		              tmp_2 = tmp_3;
		            }
		            tmp_1 = tmp_2;
		          }
		          tmp_0 = tmp_1;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = httpClientError;
		      }
		      var err = tmp;
		      if (!(err == null)) {
		        $logger.c3e(VOID, httpActionMiddleware$lambda$lambda$lambda$lambda_0(err));
		        $store.g1g(Companion_instance_154.b3i(err, $action));
		        var tmp3_safe_receiver = $action.e3e_1.h3e_1;
		        if (tmp3_safe_receiver == null)
		          ;
		        else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          $store.g1g(Action_init_$Create$(new CallbackAction(tmp3_safe_receiver, err)));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function httpActionMiddleware$lambda$lambda$lambda_1() {
		    _init_properties_HTTPActionMiddleware_kt__sbjcs0();
		    return 'Request is not sanitized';
		  }
		  function httpActionMiddleware$lambda$lambda$lambda_2($method, $url, $headers, $body) {
		    return function () {
		      return 'REQUEST --> ' + $method.toString() + ' ' + $url + '\n headers:' + toString(maskAuthHeader($headers)) + '\n body:' + $body;
		    };
		  }
		  function httpActionMiddleware$lambda$lambda$lambda_3($e) {
		    return function () {
		      return 'ERROR --> ' + $e.toString();
		    };
		  }
		  function httpActionMiddleware$lambda$lambda($logger, $store, $next, $http) {
		    return function (action) {
		      v_0($logger, action, httpActionMiddleware$lambda$lambda$lambda);
		      var tmp0_elvis_lhs = $store.i2v(getKClass(SessionReducer)).a35_1.r1().l26();
		      var sessionId = tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs;
		      var tmp1_subject = action.d3e_1;
		      var tmp;
		      if (tmp1_subject instanceof SessionSuccessEvent) {
		        // Inline function 'kotlin.also' call
		        var this_0 = $next(action);
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.middlewares.http.httpActionMiddleware.<anonymous>.<anonymous>.<anonymous>' call
		        $http.p3e();
		        tmp = this_0;
		      } else {
		        if (!isInterface(tmp1_subject, ApiRequest)) {
		          tmp = $next(action);
		        } else {
		          var tmp2_subject = action.d3e_1.o1g();
		          var tmp_0;
		          if (tmp2_subject instanceof CapiEndpoints) {
		            var tmp3_safe_receiver = $store.i2v(getKClass(ConfigReducer)).s37_1;
		            var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : replaceFirst(tmp3_safe_receiver, 'wss', 'https');
		            tmp_0 = tmp4_elvis_lhs == null ? '' : tmp4_elvis_lhs;
		          } else {
		            if (tmp2_subject instanceof CSEndPoints) {
		              var tmp5_elvis_lhs = $store.i2v(getKClass(ConfigReducer)).u37_1;
		              tmp_0 = tmp5_elvis_lhs == null ? '' : tmp5_elvis_lhs;
		            } else {
		              if (tmp2_subject instanceof RtcStatsEndpoints) {
		                var tmp6_elvis_lhs = $store.i2v(getKClass(ConfigReducer)).v37_1;
		                tmp_0 = tmp6_elvis_lhs == null ? '' : tmp6_elvis_lhs;
		              } else {
		                tmp_0 = '';
		              }
		            }
		          }
		          var host = tmp_0;
		          var auth = $store.i2v(getKClass(SessionReducer)).f35_1;
		          var tmp_1 = action.d3e_1;
		          if (tmp_1 instanceof UpdateSessionRequest)
		            auth = action.d3e_1.l1g_1;
		          var tmp_2;
		          var tmp_3 = action.d3e_1;
		          if (!(tmp_3 instanceof RTCStatsReportRequest)) {
		            tmp_2 = mapOf([to('Authorization', 'bearer ' + auth), to('Content-Type', 'application/json')]);
		          } else {
		            tmp_2 = mapOf_0(to('Content-Type', 'application/json'));
		          }
		          var headers = tmp_2;
		          var callback = httpActionMiddleware$lambda$lambda$lambda_0($logger, action, $store);
		          // Inline function 'kotlin.also' call
		          var this_1 = $next(action);
		          // Inline function 'kotlin.contracts.contract' call
		          $l$block: {
		            // Inline function 'com.vonage.clientcore.core.middlewares.http.httpActionMiddleware.<anonymous>.<anonymous>.<anonymous>' call
		            try {
		              if (!action.d3e_1.t1g()) {
		                $logger.c3e(VOID, httpActionMiddleware$lambda$lambda$lambda_1);
		                var e = new UnsanitizedInputError();
		                $store.g1g(Companion_instance_154.b3i(e, action));
		                var tmp0_safe_receiver = action.e3e_1.h3e_1;
		                if (tmp0_safe_receiver == null)
		                  null;
		                else {
		                  // Inline function 'kotlin.let' call
		                  // Inline function 'kotlin.contracts.contract' call
		                  $store.g1g(Action_init_$Create$(new CallbackAction(tmp0_safe_receiver, e)));
		                }
		                break $l$block;
		              }
		              var method = action.d3e_1.p1g();
		              var tmp1_safe_receiver = action.d3e_1.s1g();
		              var tmp_4;
		              if (tmp1_safe_receiver == null) {
		                tmp_4 = null;
		              } else {
		                // Inline function 'kotlin.collections.filterNot' call
		                // Inline function 'kotlin.collections.filterNotTo' call
		                var destination = LinkedHashMap_init_$Create$();
		                // Inline function 'kotlin.collections.iterator' call
		                var tmp0_iterator = tmp1_safe_receiver.x1().i();
		                while (tmp0_iterator.j()) {
		                  var element = tmp0_iterator.k();
		                  // Inline function 'com.vonage.clientcore.core.middlewares.http.httpActionMiddleware.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		                  // Inline function 'kotlin.collections.component2' call
		                  var value = element.r1();
		                  // Inline function 'kotlin.text.isNullOrEmpty' call
		                  // Inline function 'kotlin.contracts.contract' call
		                  if (!(value == null || charSequenceLength(value) === 0)) {
		                    destination.b2(element.q1(), element.r1());
		                  }
		                }
		                tmp_4 = destination;
		              }
		              var tmp2_safe_receiver = tmp_4;
		              var tmp_5;
		              if (tmp2_safe_receiver == null) {
		                tmp_5 = null;
		              } else {
		                // Inline function 'kotlin.collections.map' call
		                // Inline function 'kotlin.collections.mapTo' call
		                var destination_0 = ArrayList_init_$Create$(tmp2_safe_receiver.l());
		                // Inline function 'kotlin.collections.iterator' call
		                var tmp0_iterator_0 = tmp2_safe_receiver.x1().i();
		                while (tmp0_iterator_0.j()) {
		                  var item = tmp0_iterator_0.k();
		                  // Inline function 'com.vonage.clientcore.core.middlewares.http.httpActionMiddleware.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
		                  // Inline function 'kotlin.collections.component1' call
		                  var key = item.q1();
		                  // Inline function 'kotlin.collections.component2' call
		                  var value_0 = item.r1();
		                  var tmp$ret$12 = key + '=' + value_0;
		                  destination_0.d(tmp$ret$12);
		                }
		                tmp_5 = destination_0;
		              }
		              var tmp3_safe_receiver_0 = tmp_5;
		              var queryString = tmp3_safe_receiver_0 == null ? null : joinToString(tmp3_safe_receiver_0, '&');
		              var tmp_6 = host + action.d3e_1.o1g().q3g();
		              var tmp_7;
		              // Inline function 'kotlin.text.isNullOrEmpty' call
		              // Inline function 'kotlin.contracts.contract' call
		              if (queryString == null || charSequenceLength(queryString) === 0) {
		                tmp_7 = '';
		              } else {
		                tmp_7 = '?' + queryString;
		              }
		              var url = tmp_6 + tmp_7;
		              var body = action.d3e_1.q1g(get_httpMiddlewareSerializer(), sessionId);
		              $logger.x3d(VOID, httpActionMiddleware$lambda$lambda$lambda_2(method, url, headers, body));
		              $http.o3e(method, url, headers, body, callback);
		            } catch ($p) {
		              if ($p instanceof Exception) {
		                var e_0 = $p;
		                $logger.c3e(VOID, httpActionMiddleware$lambda$lambda$lambda_3(e_0));
		                $store.g1g(Companion_instance_154.b3i(e_0, action));
		              } else {
		                throw $p;
		              }
		            }
		          }
		          tmp = this_1;
		        }
		      }
		      return tmp;
		    };
		  }
		  function httpActionMiddleware$lambda($logger, $store, $http) {
		    return function (next) {
		      return httpActionMiddleware$lambda$lambda($logger, $store, next, $http);
		    };
		  }
		  var properties_initialized_HTTPActionMiddleware_kt_a2sle6;
		  function _init_properties_HTTPActionMiddleware_kt__sbjcs0() {
		    if (!properties_initialized_HTTPActionMiddleware_kt_a2sle6) {
		      properties_initialized_HTTPActionMiddleware_kt_a2sle6 = true;
		      httpMiddlewareSerializer = Json(VOID, httpMiddlewareSerializer$lambda);
		    }
		  }
		  var HTTPMethod_GET_instance;
		  var HTTPMethod_POST_instance;
		  var HTTPMethod_DELETE_instance;
		  var HTTPMethod_PUT_instance;
		  var HTTPMethod_PATCH_instance;
		  var HTTPMethod_entriesInitialized;
		  function HTTPMethod_initEntries() {
		    if (HTTPMethod_entriesInitialized)
		      return Unit_instance;
		    HTTPMethod_entriesInitialized = true;
		    HTTPMethod_GET_instance = new HTTPMethod('GET', 0);
		    HTTPMethod_POST_instance = new HTTPMethod('POST', 1);
		    HTTPMethod_DELETE_instance = new HTTPMethod('DELETE', 2);
		    HTTPMethod_PUT_instance = new HTTPMethod('PUT', 3);
		    HTTPMethod_PATCH_instance = new HTTPMethod('PATCH', 4);
		  }
		  function HTTPMethod(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function HTTPMethod_GET_getInstance() {
		    HTTPMethod_initEntries();
		    return HTTPMethod_GET_instance;
		  }
		  function HTTPMethod_POST_getInstance() {
		    HTTPMethod_initEntries();
		    return HTTPMethod_POST_instance;
		  }
		  function HTTPMethod_DELETE_getInstance() {
		    HTTPMethod_initEntries();
		    return HTTPMethod_DELETE_instance;
		  }
		  function HTTPMethod_PUT_getInstance() {
		    HTTPMethod_initEntries();
		    return HTTPMethod_PUT_instance;
		  }
		  function HTTPMethod_PATCH_getInstance() {
		    HTTPMethod_initEntries();
		    return HTTPMethod_PATCH_instance;
		  }
		  function HTTPClient() {
		  }
		  function HTTPClientError(message, cause) {
		    message = message === VOID ? '' : message;
		    cause = cause === VOID ? null : cause;
		    Exception_init_$Init$_0(message, cause, this);
		    captureStack(this, HTTPClientError);
		  }
		  function HTTPClientResponse(statusCode, body) {
		    body = body === VOID ? null : body;
		    this.z3h_1 = statusCode;
		    this.a3i_1 = body;
		  }
		  protoOf(HTTPClientResponse).toString = function () {
		    return 'HTTPClientResponse(statusCode=' + this.z3h_1 + ', body=' + this.a3i_1 + ')';
		  };
		  protoOf(HTTPClientResponse).hashCode = function () {
		    var result = this.z3h_1;
		    result = imul(result, 31) + (this.a3i_1 == null ? 0 : getStringHashCode(this.a3i_1)) | 0;
		    return result;
		  };
		  protoOf(HTTPClientResponse).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof HTTPClientResponse))
		      return false;
		    var tmp0_other_with_cast = other instanceof HTTPClientResponse ? other : THROW_CCE();
		    if (!(this.z3h_1 === tmp0_other_with_cast.z3h_1))
		      return false;
		    if (!(this.a3i_1 == tmp0_other_with_cast.a3i_1))
		      return false;
		    return true;
		  };
		  function CSError_0(from) {
		    var tmp;
		    try {
		      var tmp0_safe_receiver = from.a3i_1;
		      var tmp_0;
		      if (tmp0_safe_receiver == null) {
		        tmp_0 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        return get_httpMiddlewareSerializer().d11(Companion_getInstance_24().b13(), tmp0_safe_receiver);
		      }
		      tmp = tmp_0;
		    } catch ($p) {
		      if ($p instanceof Exception) {
		        return null;
		      } else {
		        throw $p;
		      }
		    }
		    return tmp;
		  }
		  function RTCStats() {
		    RTCStats_instance = this;
		    RtcStatsEndpoints.call(this);
		  }
		  protoOf(RTCStats).q3g = function () {
		    return '/prod/logging/nexmo_client_js_stats';
		  };
		  var RTCStats_instance;
		  function RTCStats_getInstance() {
		    if (RTCStats_instance == null)
		      new RTCStats();
		    return RTCStats_instance;
		  }
		  function RtcStatsEndpoints() {
		  }
		  function mediaActionMiddleware(store, media, logger) {
		    // Inline function 'kotlin.also' call
		    var this_0 = mediaActionMiddleware$lambda(logger, store, media);
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.middlewares.media.mediaActionMiddleware.<anonymous>' call
		    media.b3f(new mediaActionMiddleware$2$1(store));
		    return this_0;
		  }
		  function callConversationUpdate(store, cid, rtcId) {
		    var tmp = new GetConversationRequest(cid);
		    store.g1g(new Action_0(tmp, new ActionMeta(VOID, VOID, callConversationUpdate$lambda(rtcId, store))));
		  }
		  function dispatchStats($this, rtcStats, conversationId, conversationName, legId) {
		    var sessionState = $this.c3i_1.i2v(getKClass(SessionReducer));
		    var apiKey = sessionState.a35_1.r1().f2m();
		    var applicationId = sessionState.g35_1;
		    if (apiKey == null || applicationId == null) {
		      return Unit_instance;
		    }
		    var tmp = Companion_instance_155.d3i(rtcStats);
		    var tmp_0 = conversationId == null ? '' : conversationId;
		    $this.c3i_1.g1g(Action_init_$Create$(new RTCStatsReportRequest(new RTCUpdateStatsReport(rtcStats.e3i_1, rtcStats.f3i_1, rtcStats.g3i_1, rtcStats.h3i_1, rtcStats.i3i_1, rtcStats.j3i_1, rtcStats.k3i_1, rtcStats.l3i_1, rtcStats.m3i_1, tmp, legId, apiKey, applicationId, tmp_0, conversationName == null ? '' : conversationName))));
		  }
		  function mediaActionMiddleware$2$1($store) {
		    this.c3i_1 = $store;
		  }
		  protoOf(mediaActionMiddleware$2$1).d3g = function (id, rtcStats) {
		    this.c3i_1.g1g(Action_init_$Create$(new RTCStatsUpdate(id, rtcStats)));
		    var callState = this.c3i_1.i2v(getKClass(CallReducer));
		    var tmp0_safe_receiver = callState.p36_1.u1(id);
		    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e36_1;
		    var member = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.r1();
		    var tmp;
		    if (member instanceof Joined) {
		      tmp = true;
		    } else {
		      tmp = member instanceof Invited;
		    }
		    if (tmp) {
		      dispatchStats(this, rtcStats, ((!(member == null) ? isInterface(member, CoreMemberStateWithCid) : false) ? member : THROW_CCE()).m26(), member.n3i(), id);
		    } else {
		      dispatchStats(this, rtcStats, null, null, id);
		    }
		  };
		  protoOf(mediaActionMiddleware$2$1).f3g = function (id, error) {
		    this.c3i_1.g1g(Action_init_$Create$(new MediaErrorEvent(id, error)));
		  };
		  protoOf(mediaActionMiddleware$2$1).e3g = function (id, state) {
		    this.c3i_1.g1g(Action_init_$Create$(new MediaConnectionStateUpdate(id, state)));
		  };
		  function mediaActionMiddleware$lambda$lambda$lambda() {
		    return '';
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_0($action, $store) {
		    return function (result) {
		      var tmp0_safe_receiver = $action.e3e_1.h3e_1;
		      if (tmp0_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        $store.g1g(Action_init_$Create$(new CallbackAction(tmp0_safe_receiver, result)));
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_1($media) {
		    return function (legId, error) {
		      var tmp0_safe_receiver = $media.c3f();
		      if (tmp0_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        if (error == null)
		          ;
		        else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          tmp0_safe_receiver.f3g(legId, error);
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda($invokeMediaErrorDelegate, $legId) {
		    return function (it) {
		      $invokeMediaErrorDelegate($legId, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_0($invokeMediaErrorDelegate, $legId) {
		    return function (it) {
		      $invokeMediaErrorDelegate($legId, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_1($invokeMediaErrorDelegate, $legId) {
		    return function (it) {
		      $invokeMediaErrorDelegate($legId, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda($dispatchActionMetaCallback, $callback, $store, $action, $offer, $media, $configState, $invokeMediaErrorDelegate) {
		    return function (response) {
		      if (response instanceof Exception) {
		        $dispatchActionMetaCallback(response);
		      } else {
		        var leg = response instanceof PostLeg ? response : THROW_CCE();
		        var legId = leg.s1z_1;
		        var remoteSdp = leg.t1z_1;
		        $callback(legId);
		        $store.g1g(Action_init_$Create$(new CallCreate(legId, new AppChannelEndpoint($action.d3e_1.k38_1), CallDirection_outbound_getInstance(), $action.d3e_1.l38_1)));
		        $store.g1g(Action_init_$Create$(new MediaOffer(legId, $offer)));
		        $media.f3f(legId, remoteSdp, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda($invokeMediaErrorDelegate, legId));
		        if ($configState.c38_1) {
		          $media.k3f(legId, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_0($invokeMediaErrorDelegate, legId));
		        }
		        if ($configState.a38_1) {
		          $media.j3f(legId, 1000, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_1($invokeMediaErrorDelegate, legId));
		        }
		        $store.g1g(Action_init_$Create$(new TimeoutAction(new CallMemberMediaTimeout(legId), 10000)));
		        $dispatchActionMetaCallback(legId);
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_2($dispatchActionMetaCallback, $store, $action, $media, $configState, $invokeMediaErrorDelegate) {
		    return function (error, offer, callback) {
		      var tmp_0;
		      if (error instanceof Exception) {
		        tmp_0 = true;
		      } else {
		        tmp_0 = offer == null;
		      }
		      if (tmp_0) {
		        $dispatchActionMetaCallback(error == null ? new NoOfferFound() : error);
		      } else {
		        var tmp_1 = new PostLegRequest(offer);
		        $store.g1g(new Action_0(tmp_1, new ActionMeta(VOID, VOID, mediaActionMiddleware$lambda$lambda$lambda$lambda($dispatchActionMetaCallback, callback, $store, $action, offer, $media, $configState, $invokeMediaErrorDelegate))));
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_2($invokeMediaErrorDelegate, $legId) {
		    return function (it) {
		      $invokeMediaErrorDelegate($legId, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_3($invokeMediaErrorDelegate, $legId) {
		    return function (it) {
		      $invokeMediaErrorDelegate($legId, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda_0($dispatchActionMetaCallback, $store, $legId, $action, $offer, $configState, $media, $invokeMediaErrorDelegate) {
		    return function (response) {
		      if (response instanceof Exception) {
		        $dispatchActionMetaCallback(response);
		      } else {
		        $store.g1g(Action_init_$Create$(new CallCreate($legId, $action.d3e_1.v38_1, CallDirection_inbound_getInstance(), null, new MemberJoinInfo($action.d3e_1.t38_1, $action.d3e_1.u38_1))));
		        $store.g1g(Action_init_$Create$(new MediaAnswer($legId, $offer)));
		        if ($configState.c38_1) {
		          $media.k3f($legId, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_2($invokeMediaErrorDelegate, $legId));
		        }
		        if ($configState.a38_1) {
		          $media.j3f($legId, 1000, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_3($invokeMediaErrorDelegate, $legId));
		        }
		        $dispatchActionMetaCallback($legId);
		        var mediaState = $media.m3f($legId);
		        if (!mediaState.equals(MediaConnectionState_New_getInstance())) {
		          var tmp0_safe_receiver = $media.c3f();
		          if (tmp0_safe_receiver == null)
		            ;
		          else {
		            tmp0_safe_receiver.e3g($legId, mediaState);
		          }
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_3($dispatchActionMetaCallback, $store, $action, $legId, $offer, $configState, $media, $invokeMediaErrorDelegate) {
		    return function (error, answer) {
		      var tmp_0;
		      if (error instanceof Exception) {
		        tmp_0 = true;
		      } else {
		        tmp_0 = answer == null;
		      }
		      if (tmp_0) {
		        $dispatchActionMetaCallback(error == null ? new NoAnswerFound() : error);
		      } else {
		        var tmp_1 = new RTCAnswerRequest($action.d3e_1.t38_1, $action.d3e_1.u38_1, $legId, answer);
		        $store.g1g(new Action_0(tmp_1, new ActionMeta(VOID, VOID, mediaActionMiddleware$lambda$lambda$lambda$lambda_0($dispatchActionMetaCallback, $store, $legId, $action, $offer, $configState, $media, $invokeMediaErrorDelegate))));
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_4($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.p38_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_4($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.p38_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_5($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.p38_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda$lambda_1($dispatchActionMetaCallback, $configState, $media, $action, $invokeMediaErrorDelegate) {
		    return function (response) {
		      if (response instanceof Exception) {
		        $dispatchActionMetaCallback(response);
		      } else {
		        if ($configState.a38_1) {
		          $media.j3f($action.d3e_1.p38_1, 1000, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_4($invokeMediaErrorDelegate, $action));
		        }
		        if ($configState.c38_1) {
		          $media.k3f($action.d3e_1.p38_1, mediaActionMiddleware$lambda$lambda$lambda$lambda$lambda_5($invokeMediaErrorDelegate, $action));
		        }
		        $dispatchActionMetaCallback($action.d3e_1.p38_1);
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_5($dispatchActionMetaCallback, $action, $store, $configState, $media, $invokeMediaErrorDelegate) {
		    return function (error, offer, callback) {
		      var tmp_0;
		      if (error instanceof Exception) {
		        tmp_0 = true;
		      } else {
		        tmp_0 = offer == null;
		      }
		      if (tmp_0) {
		        $dispatchActionMetaCallback(error == null ? new NoOfferFound() : error);
		      } else {
		        callback($action.d3e_1.p38_1);
		        var tmp_1 = new RTCReconnectRequest($action.d3e_1.r38_1, $action.d3e_1.q38_1, offer, $action.d3e_1.p38_1);
		        $store.g1g(new Action_0(tmp_1, new ActionMeta(VOID, $action.d3e_1.p38_1, mediaActionMiddleware$lambda$lambda$lambda$lambda_1($dispatchActionMetaCallback, $configState, $media, $action, $invokeMediaErrorDelegate))));
		      }
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_6($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.o2b_1.v2b_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_7($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.o38_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda$lambda_8($invokeMediaErrorDelegate, $action) {
		    return function (it) {
		      $invokeMediaErrorDelegate($action.d3e_1.i2l_1, it);
		      return Unit_instance;
		    };
		  }
		  function mediaActionMiddleware$lambda$lambda($logger, $next, $store, $media) {
		    return function (action) {
		      v_0($logger, action, mediaActionMiddleware$lambda$lambda$lambda);
		      // Inline function 'kotlin.also' call
		      var this_0 = $next(action);
		      // Inline function 'kotlin.contracts.contract' call
		      $l$block_0: {
		        // Inline function 'com.vonage.clientcore.core.middlewares.media.mediaActionMiddleware.<anonymous>.<anonymous>.<anonymous>' call
		        var dispatchActionMetaCallback = mediaActionMiddleware$lambda$lambda$lambda_0(action, $store);
		        var invokeMediaErrorDelegate = mediaActionMiddleware$lambda$lambda$lambda_1($media);
		        var tmp0_subject = action.d3e_1;
		        if (tmp0_subject instanceof SetupOutboundCall) {
		          var configState = $store.i2v(getKClass(ConfigReducer));
		          $media.d3f(mediaActionMiddleware$lambda$lambda$lambda_2(dispatchActionMetaCallback, $store, action, $media, configState, invokeMediaErrorDelegate));
		        } else {
		          if (tmp0_subject instanceof SetupInboundCall) {
		            var configState_0 = $store.i2v(getKClass(ConfigReducer));
		            var offer = action.d3e_1.w38_1;
		            var legId = action.d3e_1.s38_1;
		            $media.e3f(legId, offer, mediaActionMiddleware$lambda$lambda$lambda_3(dispatchActionMetaCallback, $store, action, legId, offer, configState_0, $media, invokeMediaErrorDelegate));
		          } else {
		            if (tmp0_subject instanceof CallReconnect) {
		              var configState_1 = $store.i2v(getKClass(ConfigReducer));
		              $media.g3f(action.d3e_1.p38_1, mediaActionMiddleware$lambda$lambda$lambda_4(invokeMediaErrorDelegate, action));
		              $media.d3f(mediaActionMiddleware$lambda$lambda$lambda_5(dispatchActionMetaCallback, action, $store, configState_1, $media, invokeMediaErrorDelegate));
		            } else {
		              if (tmp0_subject instanceof MemberJoinedEvent) {
		                callConversationUpdate($store, action.d3e_1.a2b_1, action.d3e_1.y2a_1.j2b_1.c25_1);
		              } else {
		                if (tmp0_subject instanceof RTCTransferEvent) {
		                  callConversationUpdate($store, action.d3e_1.h29_1, action.d3e_1.f29_1.p29_1.c25_1);
		                } else {
		                  if (tmp0_subject instanceof RTCAnswerEvent) {
		                    $media.f3f(action.d3e_1.o2b_1.v2b_1, action.d3e_1.o2b_1.w2b_1, mediaActionMiddleware$lambda$lambda$lambda_6(invokeMediaErrorDelegate, action));
		                  } else {
		                    if (tmp0_subject instanceof CallCleanup) {
		                      $media.g3f(action.d3e_1.o38_1, mediaActionMiddleware$lambda$lambda$lambda_7(invokeMediaErrorDelegate, action));
		                    } else {
		                      if (tmp0_subject instanceof MediaDisable) {
		                        $media.g3f(action.d3e_1.i2l_1, mediaActionMiddleware$lambda$lambda$lambda_8(invokeMediaErrorDelegate, action));
		                      } else {
		                        if (tmp0_subject instanceof Mute) {
		                          $media.h3f(action.d3e_1.j2l_1, dispatchActionMetaCallback);
		                        } else {
		                          if (tmp0_subject instanceof Unmute) {
		                            $media.i3f(action.d3e_1.k2l_1, dispatchActionMetaCallback);
		                          } else {
		                            if (tmp0_subject instanceof EnableNoiseSuppression) {
		                              $media.k3f(action.d3e_1.p3i_1, dispatchActionMetaCallback);
		                            } else {
		                              if (tmp0_subject instanceof DisableNoiseSuppression) {
		                                $media.l3f(action.d3e_1.o3i_1, dispatchActionMetaCallback);
		                              } else {
		                                if (tmp0_subject instanceof MediaConnectionStateUpdate) {
		                                  var state = $store.i2v(getKClass(CallReducer));
		                                  var tmp1_elvis_lhs = state.p36_1.u1(action.d3e_1.s2l_1);
		                                  var tmp;
		                                  if (tmp1_elvis_lhs == null) {
		                                    break $l$block_0;
		                                  } else {
		                                    tmp = tmp1_elvis_lhs;
		                                  }
		                                  var call = tmp;
		                                  var autoReconnectMedia = $store.i2v(getKClass(ConfigReducer)).b38_1;
		                                  if (!action.d3e_1.t2l_1.equals(MediaConnectionState_Disconnected_getInstance())) {
		                                    break $l$block_0;
		                                  }
		                                  if (autoReconnectMedia) {
		                                    $store.g1g(Action_init_$Create$(new TimeoutAction(new CallReconnectionRetry(call.d36_1), 3000)));
		                                  } else {
		                                    $store.g1g(Action_init_$Create$(new CallReconnectFailure(call.d36_1)));
		                                  }
		                                } else {
		                                  if (tmp0_subject instanceof CallReconnectFailure) {
		                                    $store.g1g(Action_init_$Create$(new CallCleanup(action.d3e_1.z38_1)));
		                                  }
		                                }
		                              }
		                            }
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		      return this_0;
		    };
		  }
		  function mediaActionMiddleware$lambda($logger, $store, $media) {
		    return function (next) {
		      return mediaActionMiddleware$lambda$lambda($logger, next, $store, $media);
		    };
		  }
		  function callConversationUpdate$lambda($rtcId, $store) {
		    return function (res) {
		      if (res instanceof GetConversation) {
		        var tmp0_safe_receiver = $rtcId;
		        if (tmp0_safe_receiver == null)
		          ;
		        else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          $store.g1g(Action_init_$Create$(new CallConversationUpdate(tmp0_safe_receiver, res.q1i_1)));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  var MediaConnectionState_Unknown_instance;
		  var MediaConnectionState_New_instance;
		  var MediaConnectionState_Connecting_instance;
		  var MediaConnectionState_Connected_instance;
		  var MediaConnectionState_Disconnected_instance;
		  var MediaConnectionState_Failed_instance;
		  var MediaConnectionState_Closed_instance;
		  var MediaConnectionState_entriesInitialized;
		  function MediaConnectionState_initEntries() {
		    if (MediaConnectionState_entriesInitialized)
		      return Unit_instance;
		    MediaConnectionState_entriesInitialized = true;
		    MediaConnectionState_Unknown_instance = new MediaConnectionState('Unknown', 0);
		    MediaConnectionState_New_instance = new MediaConnectionState('New', 1);
		    MediaConnectionState_Connecting_instance = new MediaConnectionState('Connecting', 2);
		    MediaConnectionState_Connected_instance = new MediaConnectionState('Connected', 3);
		    MediaConnectionState_Disconnected_instance = new MediaConnectionState('Disconnected', 4);
		    MediaConnectionState_Failed_instance = new MediaConnectionState('Failed', 5);
		    MediaConnectionState_Closed_instance = new MediaConnectionState('Closed', 6);
		  }
		  function MediaConnectionState(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function MediaConnectionState_Unknown_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Unknown_instance;
		  }
		  function MediaConnectionState_New_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_New_instance;
		  }
		  function MediaConnectionState_Connecting_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Connecting_instance;
		  }
		  function MediaConnectionState_Connected_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Connected_instance;
		  }
		  function MediaConnectionState_Disconnected_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Disconnected_instance;
		  }
		  function MediaConnectionState_Failed_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Failed_instance;
		  }
		  function MediaConnectionState_Closed_getInstance() {
		    MediaConnectionState_initEntries();
		    return MediaConnectionState_Closed_instance;
		  }
		  function SocketConfig(query, path, forceNew, transports, reconnection, reconnectionAttempts, reconnectionDelay, randomizationFactor) {
		    forceNew = forceNew === VOID ? true : forceNew;
		    var tmp;
		    if (transports === VOID) {
		      // Inline function 'kotlin.arrayOf' call
		      // Inline function 'kotlin.js.unsafeCast' call
		      // Inline function 'kotlin.js.asDynamic' call
		      tmp = ['websocket'];
		    } else {
		      tmp = transports;
		    }
		    transports = tmp;
		    reconnection = reconnection === VOID ? true : reconnection;
		    reconnectionAttempts = reconnectionAttempts === VOID ? 5 : reconnectionAttempts;
		    reconnectionDelay = reconnectionDelay === VOID ? 5 : reconnectionDelay;
		    randomizationFactor = randomizationFactor === VOID ? 0.75 : randomizationFactor;
		    this.q3i_1 = query;
		    this.r3i_1 = path;
		    this.s3i_1 = forceNew;
		    this.t3i_1 = transports;
		    this.u3i_1 = reconnection;
		    this.v3i_1 = reconnectionAttempts;
		    this.w3i_1 = reconnectionDelay;
		    this.x3i_1 = randomizationFactor;
		  }
		  protoOf(SocketConfig).toString = function () {
		    return 'SocketConfig(query=' + this.q3i_1 + ', path=' + this.r3i_1 + ', forceNew=' + this.s3i_1 + ', transports=' + toString(this.t3i_1) + ', reconnection=' + this.u3i_1 + ', reconnectionAttempts=' + toString(this.v3i_1) + ', reconnectionDelay=' + toString(this.w3i_1) + ', randomizationFactor=' + toString(this.x3i_1) + ')';
		  };
		  protoOf(SocketConfig).hashCode = function () {
		    var result = getStringHashCode(this.q3i_1);
		    result = imul(result, 31) + getStringHashCode(this.r3i_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.s3i_1) | 0;
		    result = imul(result, 31) + hashCode(this.t3i_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.u3i_1) | 0;
		    result = imul(result, 31) + hashCode(this.v3i_1) | 0;
		    result = imul(result, 31) + hashCode(this.w3i_1) | 0;
		    result = imul(result, 31) + hashCode(this.x3i_1) | 0;
		    return result;
		  };
		  protoOf(SocketConfig).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SocketConfig))
		      return false;
		    var tmp0_other_with_cast = other instanceof SocketConfig ? other : THROW_CCE();
		    if (!(this.q3i_1 === tmp0_other_with_cast.q3i_1))
		      return false;
		    if (!(this.r3i_1 === tmp0_other_with_cast.r3i_1))
		      return false;
		    if (!(this.s3i_1 === tmp0_other_with_cast.s3i_1))
		      return false;
		    if (!equals(this.t3i_1, tmp0_other_with_cast.t3i_1))
		      return false;
		    if (!(this.u3i_1 === tmp0_other_with_cast.u3i_1))
		      return false;
		    if (!equals(this.v3i_1, tmp0_other_with_cast.v3i_1))
		      return false;
		    if (!equals(this.w3i_1, tmp0_other_with_cast.w3i_1))
		      return false;
		    if (!equals(this.x3i_1, tmp0_other_with_cast.x3i_1))
		      return false;
		    return true;
		  };
		  function SocketConnectionMiddleware(store, ws, logger) {
		    // Inline function 'kotlin.also' call
		    var this_0 = SocketConnectionMiddleware$lambda(logger, store, ws);
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.middlewares.ws.SocketConnectionMiddleware.<anonymous>' call
		    ws.s3e(new SocketConnectionMiddleware$2$1(store));
		    return this_0;
		  }
		  function SocketConnectionMiddleware$2$1($store) {
		    this.y3i_1 = $store;
		  }
		  protoOf(SocketConnectionMiddleware$2$1).z3f = function (event) {
		    this.y3i_1.g1g(Action_init_$Create$(event));
		  };
		  protoOf(SocketConnectionMiddleware$2$1).a3g = function (type, reason, timestamp, retryNumber) {
		    this.y3i_1.g1g(Action_init_$Create$(new SocketStatus(type, reason, timestamp, retryNumber)));
		  };
		  function SocketConnectionMiddleware$lambda$lambda$lambda() {
		    return '';
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_0(_name_for_destructuring_parameter_0__wldtmu) {
		    // Inline function 'kotlin.collections.component1' call
		    var key = _name_for_destructuring_parameter_0__wldtmu.q1();
		    // Inline function 'kotlin.collections.component2' call
		    var value = _name_for_destructuring_parameter_0__wldtmu.r1();
		    return key + '=' + value;
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_1($host, $path) {
		    return function () {
		      return 'SocketConnect host null, login ignored ' + $host + ', ' + $path;
		    };
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_2($host, $path) {
		    return function () {
		      return 'SocketConnect path null, login ignored ' + $host + ', ' + $path;
		    };
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_3($store, $action) {
		    return function () {
		      $store.g1g(Action_init_$Create$(new SessionTimerEvent($action)));
		      return Unit_instance;
		    };
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_4($store, $a, $action) {
		    return function () {
		      $store.g1g(new Action_0($a.g2l_1, $action.e3e_1));
		      return Unit_instance;
		    };
		  }
		  function SocketConnectionMiddleware$lambda$lambda$lambda_5($e) {
		    return function () {
		      return 'ERROR --> ' + $e.toString();
		    };
		  }
		  function SocketConnectionMiddleware$lambda$lambda($logger, $store, $ws, $next) {
		    return function (action) {
		      v_0($logger, action, SocketConnectionMiddleware$lambda$lambda$lambda);
		      var state = $store.i2v(getKClass(ConfigReducer));
		      var tmp;
		      try {
		        var a = action.d3e_1;
		        var tmp_0;
		        if (a instanceof SocketConnect) {
		          var host = state.s37_1;
		          var path = state.t37_1;
		          var token = a.z2m_1;
		          var sessionId = a.a2n_1;
		          var queryParams = mapOf([to('session_version', '0.0.3'), to('token', token), to('SDK_version', BuildKonfig_instance.u1d_1), to('SDK_name', state.z37_1), to('acknowledge_events', 'true'), to('session_id', sessionId), to('OS_family', state.x37_1), to('OS_revision', state.y37_1)]);
		          // Inline function 'kotlin.collections.filterValues' call
		          var result = LinkedHashMap_init_$Create$();
		          // Inline function 'kotlin.collections.iterator' call
		          var tmp0_iterator = queryParams.x1().i();
		          while (tmp0_iterator.j()) {
		            var entry = tmp0_iterator.k();
		            // Inline function 'com.vonage.clientcore.core.middlewares.ws.SocketConnectionMiddleware.<anonymous>.<anonymous>.<anonymous>' call
		            if (!(entry.r1() == null)) {
		              result.b2(entry.q1(), entry.r1());
		            }
		          }
		          var tmp_1 = result.x1();
		          var query = joinToString(tmp_1, '&', VOID, VOID, VOID, VOID, SocketConnectionMiddleware$lambda$lambda$lambda_0);
		          var tmp_2;
		          if (token === '') {
		            $store.g1g(Action_init_$Create$(SocketConnectEmptyTokenError_instance));
		            tmp_2 = Unit_instance;
		          } else if (host == null) {
		            $logger.t36(VOID, SocketConnectionMiddleware$lambda$lambda$lambda_1(host, path));
		            tmp_2 = Unit_instance;
		          } else if (path == null) {
		            $logger.t36(VOID, SocketConnectionMiddleware$lambda$lambda$lambda_2(host, path));
		            tmp_2 = Unit_instance;
		          } else {
		            var config = new SocketConfig(query, path);
		            $ws.u3e(host, path, config.v3i_1, config.w3i_1, config.x3i_1, token, sessionId, query);
		            $ws.y3e(5000, SocketConnectionMiddleware$lambda$lambda$lambda_3($store, action));
		            tmp_2 = Unit_instance;
		          }
		          tmp_0 = tmp_2;
		        } else {
		          if (a instanceof SocketSetSessionId) {
		            $ws.x3e(a.l2n_1);
		            tmp_0 = Unit_instance;
		          } else {
		            if (a instanceof SocketSetSession) {
		              $ws.w3e(a.f2n_1, a.g2n_1);
		              tmp_0 = Unit_instance;
		            } else {
		              if (a instanceof SocketDisconnect) {
		                $ws.v3e();
		                $store.g1g(Action_init_$Create$(new SocketStatus(SocketConnectionStatus_Disconnected_getInstance(), SocketConnectionFailedReason_ClientDisconnected_getInstance(), generateTimeStamp(), null)));
		                tmp_0 = Unit_instance;
		              } else {
		                if (a instanceof TimeoutAction) {
		                  $ws.y3e(a.h2l_1, SocketConnectionMiddleware$lambda$lambda$lambda_4($store, a, action));
		                  tmp_0 = Unit_instance;
		                } else {
		                  if (a instanceof SessionTimerEvent) {
		                    var tmp_3;
		                    var tmp_4 = $store.i2v(getKClass(SessionReducer)).a35_1;
		                    if (tmp_4 instanceof Pending) {
		                      $ws.v3e();
		                      tmp_3 = Unit_instance;
		                    }
		                    tmp_0 = tmp_3;
		                  } else {
		                    tmp_0 = Unit_instance;
		                  }
		                }
		              }
		            }
		          }
		        }
		        tmp = tmp_0;
		      } catch ($p) {
		        var tmp_5;
		        if ($p instanceof Exception) {
		          var e = $p;
		          $logger.c3e(VOID, SocketConnectionMiddleware$lambda$lambda$lambda_5(e));
		          $store.g1g(Action_init_$Create$(new ErrorReport(e, action)));
		          tmp_5 = Unit_instance;
		        } else {
		          throw $p;
		        }
		        tmp = tmp_5;
		      }
		      return $next(action);
		    };
		  }
		  function SocketConnectionMiddleware$lambda($logger, $store, $ws) {
		    return function (next) {
		      return SocketConnectionMiddleware$lambda$lambda($logger, $store, $ws, next);
		    };
		  }
		  function SocketEmitMiddleware(store, ws, logger) {
		    return SocketEmitMiddleware$lambda(logger, ws, store);
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda() {
		    return '';
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda$lambda($response) {
		    return function () {
		      return 'RESPONSE\n ' + $response;
		    };
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda$lambda_0() {
		    return 'Request Error';
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda$lambda_1() {
		    return 'Response Error';
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda_0($logger, $store, $action) {
		    return function (error, response) {
		      $logger.x3d(VOID, SocketEmitMiddleware$lambda$lambda$lambda$lambda(response));
		      if (!(error == null)) {
		        $logger.c3e(VOID, SocketEmitMiddleware$lambda$lambda$lambda$lambda_0);
		        $store.g1g(Action_init_$Create$(new ErrorReport(error, $action)));
		      } else if (response == null) {
		        $logger.c3e(VOID, SocketEmitMiddleware$lambda$lambda$lambda$lambda_1);
		        $store.g1g(Action_init_$Create$(new ErrorReport(Exception_init_$Create$('INVALID RESPONSE'), $action)));
		      }
		      return Unit_instance;
		    };
		  }
		  function SocketEmitMiddleware$lambda$lambda$lambda_1() {
		    return 'Error in emitting over websocket';
		  }
		  function SocketEmitMiddleware$lambda$lambda($logger, $ws, $store, $next) {
		    return function (action) {
		      v_0($logger, action, SocketEmitMiddleware$lambda$lambda$lambda);
		      var tmp_0 = action.d3e_1;
		      if (!isInterface(tmp_0, SocketEmitAction)) ; else {
		        var callback = SocketEmitMiddleware$lambda$lambda$lambda_0($logger, $store, action);
		        var tmp_1;
		        try {
		          var msg = mapOf([to('tid', action.e3e_1.f3e_1), to('body', action.d3e_1.e2n())]);
		          $ws.t3e(action.d3e_1.b2n(), msg, callback);
		          tmp_1 = Unit_instance;
		        } catch ($p) {
		          var tmp_2;
		          if ($p instanceof Exception) {
		            var e = $p;
		            $logger.c3e(VOID, SocketEmitMiddleware$lambda$lambda$lambda_1);
		            $store.g1g(Action_init_$Create$(new ErrorReport(e, action)));
		            tmp_2 = Unit_instance;
		          } else {
		            throw $p;
		          }
		          tmp_1 = tmp_2;
		        }
		      }
		      return $next(action);
		    };
		  }
		  function SocketEmitMiddleware$lambda($logger, $ws, $store) {
		    return function (next) {
		      return SocketEmitMiddleware$lambda$lambda($logger, $ws, $store, next);
		    };
		  }
		  function get_decoder() {
		    _init_properties_SocketEventParseMiddleware_kt__3leo2q();
		    return decoder;
		  }
		  var decoder;
		  function socketEventParseMiddleware(store, logger) {
		    _init_properties_SocketEventParseMiddleware_kt__3leo2q();
		    return socketEventParseMiddleware$lambda(logger);
		  }
		  function IgnoredSerializerException(type, message) {
		    message = message === VOID ? "Serialization for event type '" + type + "' is not supported or intentionally skipped." : message;
		    Exception_init_$Init$_1(message, this);
		    captureStack(this, IgnoredSerializerException);
		    this.z3i_1 = type;
		    this.a3j_1 = message;
		  }
		  protoOf(IgnoredSerializerException).k8 = function () {
		    return this.a3j_1;
		  };
		  protoOf(IgnoredSerializerException).toString = function () {
		    return 'IgnoredSerializerException(type=' + this.z3i_1 + ', message=' + this.a3j_1 + ')';
		  };
		  protoOf(IgnoredSerializerException).hashCode = function () {
		    var result = getStringHashCode(this.z3i_1);
		    result = imul(result, 31) + getStringHashCode(this.a3j_1) | 0;
		    return result;
		  };
		  protoOf(IgnoredSerializerException).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof IgnoredSerializerException))
		      return false;
		    var tmp0_other_with_cast = other instanceof IgnoredSerializerException ? other : THROW_CCE();
		    if (!(this.z3i_1 === tmp0_other_with_cast.z3i_1))
		      return false;
		    if (!(this.a3j_1 === tmp0_other_with_cast.a3j_1))
		      return false;
		    return true;
		  };
		  function decoder$lambda($this$Json) {
		    _init_properties_SocketEventParseMiddleware_kt__3leo2q();
		    $this$Json.y11_1 = true;
		    return Unit_instance;
		  }
		  function socketEventParseMiddleware$lambda$lambda$lambda() {
		    _init_properties_SocketEventParseMiddleware_kt__3leo2q();
		    return '';
		  }
		  function socketEventParseMiddleware$lambda$lambda$lambda_0($e) {
		    return function () {
		      return $e.a3j_1;
		    };
		  }
		  function socketEventParseMiddleware$lambda$lambda$lambda_1($e) {
		    return function () {
		      return 'Socket Parsing error: ' + $e.toString();
		    };
		  }
		  function socketEventParseMiddleware$lambda$lambda$lambda_2($newAction) {
		    return function () {
		      return 'SOCKET DECODE - ' + toString($newAction.d3e_1);
		    };
		  }
		  function socketEventParseMiddleware$lambda$lambda($logger, $next) {
		    return function (action) {
		      v_0($logger, action, socketEventParseMiddleware$lambda$lambda$lambda);
		      var tmp;
		      if (action.d3e_1 instanceof UnknownSocketEvent) {
		        var tmp_0;
		        try {
		          tmp_0 = get_decoder().d11(Companion_instance_126.b13(), action.d3e_1.y2l_1);
		        } catch ($p) {
		          var tmp_1;
		          if ($p instanceof IgnoredSerializerException) {
		            var e = $p;
		            $logger.x3d(VOID, socketEventParseMiddleware$lambda$lambda$lambda_0(e));
		            tmp_1 = null;
		          } else {
		            if ($p instanceof Exception) {
		              var e_0 = $p;
		              $logger.c3e(VOID, socketEventParseMiddleware$lambda$lambda$lambda_1(e_0));
		              tmp_1 = null;
		            } else {
		              throw $p;
		            }
		          }
		          tmp_0 = tmp_1;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = null;
		      }
		      var result = tmp;
		      var tmp_2;
		      if (result == null) {
		        tmp_2 = $next(action);
		      } else {
		        var newAction = new Action_0(result, action.e3e_1.b3j());
		        d_0($logger, newAction, socketEventParseMiddleware$lambda$lambda$lambda_2(newAction));
		        tmp_2 = $next(newAction);
		      }
		      return tmp_2;
		    };
		  }
		  function socketEventParseMiddleware$lambda($logger) {
		    return function (next) {
		      return socketEventParseMiddleware$lambda$lambda($logger, next);
		    };
		  }
		  var properties_initialized_SocketEventParseMiddleware_kt_itdrwg;
		  function _init_properties_SocketEventParseMiddleware_kt__3leo2q() {
		    if (!properties_initialized_SocketEventParseMiddleware_kt_itdrwg) {
		      properties_initialized_SocketEventParseMiddleware_kt_itdrwg = true;
		      decoder = Json(VOID, decoder$lambda);
		    }
		  }
		  function Logout(version) {
		    version = version === VOID ? '' : version;
		    WSEndPoints.call(this);
		    this.c2n_1 = version;
		  }
		  protoOf(Logout).d2n = function () {
		    return 'session:logout';
		  };
		  protoOf(Logout).toString = function () {
		    return 'Logout(version=' + this.c2n_1 + ')';
		  };
		  protoOf(Logout).hashCode = function () {
		    return getStringHashCode(this.c2n_1);
		  };
		  protoOf(Logout).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Logout))
		      return false;
		    var tmp0_other_with_cast = other instanceof Logout ? other : THROW_CCE();
		    if (!(this.c2n_1 === tmp0_other_with_cast.c2n_1))
		      return false;
		    return true;
		  };
		  function WSEndPoints() {
		  }
		  function cleanupReducers(_this__u8e3s4, filteredLegId, filteredConversationId) {
		    filteredLegId = filteredLegId === VOID ? null : filteredLegId;
		    filteredConversationId = filteredConversationId === VOID ? null : filteredConversationId;
		    // Inline function 'kotlin.run' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filterTo' call
		    var this_0 = _this__u8e3s4.i2v(getKClass(InviteReducer)).n37_1;
		    var destination = LinkedHashMap_init_$Create$();
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this_0.x1().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>' call
		      var tmp;
		      if (filteredLegId == null) {
		        tmp = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>.<anonymous>' call
		        tmp = !(element.r1().v36_1 === filteredLegId);
		      }
		      var tmp1_elvis_lhs = tmp;
		      if (tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs) {
		        destination.b2(element.q1(), element.r1());
		      }
		    }
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_0 = destination.x1().i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>' call
		      if (element_0.r1().b37_1) {
		        _this__u8e3s4.g1g(Action_init_$Create$(new InviteCleanup(element_0.q1())));
		      }
		    }
		    // Inline function 'kotlin.run' call
		    // Inline function 'kotlin.contracts.contract' call
		    var $this$run = _this__u8e3s4.i2v(getKClass(CallReducer));
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.filter' call
		    // Inline function 'kotlin.collections.filterTo' call
		    var this_1 = $this$run.q36_1;
		    var destination_0 = LinkedHashMap_init_$Create$();
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_1 = this_1.x1().i();
		    while (tmp0_iterator_1.j()) {
		      var element_1 = tmp0_iterator_1.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var conversationId = element_1.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var callId = element_1.r1();
		      var tmp_0;
		      var tmp_1;
		      if (filteredLegId == null) {
		        tmp_1 = null;
		      } else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>.<anonymous>' call
		        tmp_1 = !(callId === filteredLegId);
		      }
		      var tmp1_elvis_lhs_0 = tmp_1;
		      if (tmp1_elvis_lhs_0 == null ? true : tmp1_elvis_lhs_0) {
		        var tmp_2;
		        if (filteredConversationId == null) {
		          tmp_2 = null;
		        } else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>.<anonymous>' call
		          tmp_2 = !(filteredConversationId === conversationId);
		        }
		        var tmp3_elvis_lhs = tmp_2;
		        tmp_0 = tmp3_elvis_lhs == null ? true : tmp3_elvis_lhs;
		      } else {
		        tmp_0 = false;
		      }
		      if (tmp_0) {
		        destination_0.b2(element_1.q1(), element_1.r1());
		      }
		    }
		    var tmp0_iterator_2 = destination_0.w1().i();
		    while (tmp0_iterator_2.j()) {
		      var element_2 = tmp0_iterator_2.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.cleanupReducers.<anonymous>.<anonymous>' call
		      // Inline function 'kotlin.let' call
		      var tmp0_safe_receiver = $this$run.p36_1.u1(element_2);
		      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f36_1;
		      // Inline function 'kotlin.contracts.contract' call
		      if ((tmp1_safe_receiver == null ? null : tmp1_safe_receiver.r1())instanceof Completed) {
		        _this__u8e3s4.g1g(Action_init_$Create$(new CallCleanup(element_2)));
		      }
		    }
		  }
		  function SetConfig(wsHost, wsPath, httpHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression) {
		    this.c3j_1 = wsHost;
		    this.d3j_1 = wsPath;
		    this.e3j_1 = httpHost;
		    this.f3j_1 = enableWsInvites;
		    this.g3j_1 = osFamily;
		    this.h3j_1 = osRevision;
		    this.i3j_1 = sdkName;
		    this.j3j_1 = rtcStatsTelemetry;
		    this.k3j_1 = autoReconnectMedia;
		    this.l3j_1 = enableNoiseSuppression;
		  }
		  protoOf(SetConfig).toString = function () {
		    return 'SetConfig(wsHost=' + this.c3j_1 + ', wsPath=' + this.d3j_1 + ', httpHost=' + this.e3j_1 + ', enableWsInvites=' + this.f3j_1 + ', osFamily=' + this.g3j_1 + ', osRevision=' + this.h3j_1 + ', sdkName=' + this.i3j_1 + ', rtcStatsTelemetry=' + this.j3j_1 + ', autoReconnectMedia=' + this.k3j_1 + ', enableNoiseSuppression=' + this.l3j_1 + ')';
		  };
		  protoOf(SetConfig).hashCode = function () {
		    var result = getStringHashCode(this.c3j_1);
		    result = imul(result, 31) + getStringHashCode(this.d3j_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.e3j_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.f3j_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.g3j_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.h3j_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.i3j_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.j3j_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.k3j_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.l3j_1) | 0;
		    return result;
		  };
		  protoOf(SetConfig).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SetConfig))
		      return false;
		    var tmp0_other_with_cast = other instanceof SetConfig ? other : THROW_CCE();
		    if (!(this.c3j_1 === tmp0_other_with_cast.c3j_1))
		      return false;
		    if (!(this.d3j_1 === tmp0_other_with_cast.d3j_1))
		      return false;
		    if (!(this.e3j_1 === tmp0_other_with_cast.e3j_1))
		      return false;
		    if (!(this.f3j_1 === tmp0_other_with_cast.f3j_1))
		      return false;
		    if (!(this.g3j_1 === tmp0_other_with_cast.g3j_1))
		      return false;
		    if (!(this.h3j_1 === tmp0_other_with_cast.h3j_1))
		      return false;
		    if (!(this.i3j_1 === tmp0_other_with_cast.i3j_1))
		      return false;
		    if (!(this.j3j_1 === tmp0_other_with_cast.j3j_1))
		      return false;
		    if (!(this.k3j_1 === tmp0_other_with_cast.k3j_1))
		      return false;
		    if (!(this.l3j_1 === tmp0_other_with_cast.l3j_1))
		      return false;
		    return true;
		  };
		  function ConfigReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.o3j_1.toString();
		    };
		  }
		  function ConfigReducer(logger, state) {
		    state = state === VOID ? new ConfigState() : state;
		    Reducer_0.call(this, logger);
		    this.o3j_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, ConfigReducer$lambda(this));
		    }
		  }
		  protoOf(ConfigReducer).p3j = function (_set____db54di) {
		    this.o3j_1 = _set____db54di;
		  };
		  protoOf(ConfigReducer).q3j = function (_set____db54di) {
		    return this.p3j(_set____db54di instanceof ConfigState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(ConfigReducer).r3j = function () {
		    return this.o3j_1;
		  };
		  protoOf(ConfigReducer).s3j = function () {
		    return this.o3j_1.t3j();
		  };
		  protoOf(ConfigReducer).u3j = function (action, state) {
		    var tmp;
		    if (action.d3e_1 instanceof SetConfig) {
		      tmp = state.v3j(action.d3e_1);
		    } else {
		      tmp = null;
		    }
		    return tmp;
		  };
		  protoOf(ConfigReducer).w3j = function (action, state) {
		    return this.u3j(action, state instanceof ConfigState ? state : THROW_CCE());
		  };
		  function ConfigState(wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression) {
		    wsHost = wsHost === VOID ? null : wsHost;
		    wsPath = wsPath === VOID ? null : wsPath;
		    httpHost = httpHost === VOID ? null : httpHost;
		    rtcStatsHost = rtcStatsHost === VOID ? 'https://hlg.tokbox.com' : rtcStatsHost;
		    enableWsInvites = enableWsInvites === VOID ? true : enableWsInvites;
		    osFamily = osFamily === VOID ? null : osFamily;
		    osRevision = osRevision === VOID ? null : osRevision;
		    sdkName = sdkName === VOID ? null : sdkName;
		    rtcStatsTelemetry = rtcStatsTelemetry === VOID ? true : rtcStatsTelemetry;
		    autoReconnectMedia = autoReconnectMedia === VOID ? true : autoReconnectMedia;
		    enableNoiseSuppression = enableNoiseSuppression === VOID ? false : enableNoiseSuppression;
		    this.s37_1 = wsHost;
		    this.t37_1 = wsPath;
		    this.u37_1 = httpHost;
		    this.v37_1 = rtcStatsHost;
		    this.w37_1 = enableWsInvites;
		    this.x37_1 = osFamily;
		    this.y37_1 = osRevision;
		    this.z37_1 = sdkName;
		    this.a38_1 = rtcStatsTelemetry;
		    this.b38_1 = autoReconnectMedia;
		    this.c38_1 = enableNoiseSuppression;
		  }
		  protoOf(ConfigState).v3j = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.ConfigState.update.<anonymous>' call
		    this.u37_1 = action.e3j_1;
		    this.s37_1 = action.c3j_1;
		    this.t37_1 = action.d3j_1;
		    this.w37_1 = action.f3j_1;
		    this.x37_1 = action.g3j_1;
		    this.y37_1 = action.h3j_1;
		    this.z37_1 = action.i3j_1;
		    this.a38_1 = action.j3j_1;
		    this.b38_1 = action.k3j_1;
		    this.c38_1 = action.l3j_1;
		    return this;
		  };
		  protoOf(ConfigState).a3k = function (wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression) {
		    return new ConfigState(wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression);
		  };
		  protoOf(ConfigState).t3j = function (wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression, $super) {
		    wsHost = wsHost === VOID ? this.s37_1 : wsHost;
		    wsPath = wsPath === VOID ? this.t37_1 : wsPath;
		    httpHost = httpHost === VOID ? this.u37_1 : httpHost;
		    rtcStatsHost = rtcStatsHost === VOID ? this.v37_1 : rtcStatsHost;
		    enableWsInvites = enableWsInvites === VOID ? this.w37_1 : enableWsInvites;
		    osFamily = osFamily === VOID ? this.x37_1 : osFamily;
		    osRevision = osRevision === VOID ? this.y37_1 : osRevision;
		    sdkName = sdkName === VOID ? this.z37_1 : sdkName;
		    rtcStatsTelemetry = rtcStatsTelemetry === VOID ? this.a38_1 : rtcStatsTelemetry;
		    autoReconnectMedia = autoReconnectMedia === VOID ? this.b38_1 : autoReconnectMedia;
		    enableNoiseSuppression = enableNoiseSuppression === VOID ? this.c38_1 : enableNoiseSuppression;
		    return $super === VOID ? this.a3k(wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression) : $super.a3k.call(this, wsHost, wsPath, httpHost, rtcStatsHost, enableWsInvites, osFamily, osRevision, sdkName, rtcStatsTelemetry, autoReconnectMedia, enableNoiseSuppression);
		  };
		  protoOf(ConfigState).toString = function () {
		    return 'ConfigState(wsHost=' + this.s37_1 + ', wsPath=' + this.t37_1 + ', httpHost=' + this.u37_1 + ', rtcStatsHost=' + this.v37_1 + ', enableWsInvites=' + this.w37_1 + ', osFamily=' + this.x37_1 + ', osRevision=' + this.y37_1 + ', sdkName=' + this.z37_1 + ', rtcStatsTelemetry=' + this.a38_1 + ', autoReconnectMedia=' + this.b38_1 + ', enableNoiseSuppression=' + this.c38_1 + ')';
		  };
		  protoOf(ConfigState).hashCode = function () {
		    var result = this.s37_1 == null ? 0 : getStringHashCode(this.s37_1);
		    result = imul(result, 31) + (this.t37_1 == null ? 0 : getStringHashCode(this.t37_1)) | 0;
		    result = imul(result, 31) + (this.u37_1 == null ? 0 : getStringHashCode(this.u37_1)) | 0;
		    result = imul(result, 31) + (this.v37_1 == null ? 0 : getStringHashCode(this.v37_1)) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.w37_1) | 0;
		    result = imul(result, 31) + (this.x37_1 == null ? 0 : getStringHashCode(this.x37_1)) | 0;
		    result = imul(result, 31) + (this.y37_1 == null ? 0 : getStringHashCode(this.y37_1)) | 0;
		    result = imul(result, 31) + (this.z37_1 == null ? 0 : getStringHashCode(this.z37_1)) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.a38_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.b38_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.c38_1) | 0;
		    return result;
		  };
		  protoOf(ConfigState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ConfigState))
		      return false;
		    var tmp0_other_with_cast = other instanceof ConfigState ? other : THROW_CCE();
		    if (!(this.s37_1 == tmp0_other_with_cast.s37_1))
		      return false;
		    if (!(this.t37_1 == tmp0_other_with_cast.t37_1))
		      return false;
		    if (!(this.u37_1 == tmp0_other_with_cast.u37_1))
		      return false;
		    if (!(this.v37_1 == tmp0_other_with_cast.v37_1))
		      return false;
		    if (!(this.w37_1 === tmp0_other_with_cast.w37_1))
		      return false;
		    if (!(this.x37_1 == tmp0_other_with_cast.x37_1))
		      return false;
		    if (!(this.y37_1 == tmp0_other_with_cast.y37_1))
		      return false;
		    if (!(this.z37_1 == tmp0_other_with_cast.z37_1))
		      return false;
		    if (!(this.a38_1 === tmp0_other_with_cast.a38_1))
		      return false;
		    if (!(this.b38_1 === tmp0_other_with_cast.b38_1))
		      return false;
		    if (!(this.c38_1 === tmp0_other_with_cast.c38_1))
		      return false;
		    return true;
		  };
		  function modify(_this__u8e3s4, id, fn) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.modify.<anonymous>' call
		    var tmp0_safe_receiver = _this__u8e3s4.b3k().u1(id);
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.apply' call
		      // Inline function 'kotlin.contracts.contract' call
		      fn(tmp0_safe_receiver);
		    }
		    _this__u8e3s4.c3k(id);
		    return _this__u8e3s4;
		  }
		  function new_0(_this__u8e3s4, id, fn) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.new.<anonymous>' call
		    // Inline function 'kotlin.let' call
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp0_safe_receiver = fn(_this__u8e3s4);
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.also' call
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.reducers.new.<anonymous>.<anonymous>' call
		      // Inline function 'kotlin.collections.set' call
		      _this__u8e3s4.b3k().b2(id, tmp0_safe_receiver);
		      _this__u8e3s4.c3k(id);
		    }
		    return _this__u8e3s4;
		  }
		  function RemoteEventReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.f3k_1.toString();
		    };
		  }
		  function RemoteEventReducer(logger, state) {
		    state = state === VOID ? new RemoteEventState() : state;
		    Reducer_0.call(this, logger);
		    this.f3k_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, RemoteEventReducer$lambda(this));
		    }
		  }
		  protoOf(RemoteEventReducer).g3k = function (_set____db54di) {
		    this.f3k_1 = _set____db54di;
		  };
		  protoOf(RemoteEventReducer).q3j = function (_set____db54di) {
		    return this.g3k(_set____db54di instanceof RemoteEventState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(RemoteEventReducer).r3j = function () {
		    return this.f3k_1;
		  };
		  protoOf(RemoteEventReducer).s3j = function () {
		    return this.f3k_1;
		  };
		  protoOf(RemoteEventReducer).h3k = function (action, state) {
		    var tmp0_subject = action.d3e_1;
		    var tmp;
		    if (isInterface(tmp0_subject, SocketEvent)) {
		      tmp = state.j3k(action.d3e_1);
		    } else {
		      if (tmp0_subject instanceof BufferedSocketEvent) {
		        tmp = state.i3k(action.d3e_1);
		      } else {
		        tmp = null;
		      }
		    }
		    return tmp;
		  };
		  protoOf(RemoteEventReducer).w3j = function (action, state) {
		    return this.h3k(action, state instanceof RemoteEventState ? state : THROW_CCE());
		  };
		  function RemoteEventState(buffers, lastModified) {
		    var tmp;
		    if (buffers === VOID) {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      tmp = LinkedHashMap_init_$Create$();
		    } else {
		      tmp = buffers;
		    }
		    buffers = tmp;
		    lastModified = lastModified === VOID ? null : lastModified;
		    this.j2v_1 = buffers;
		    this.k2v_1 = lastModified;
		  }
		  protoOf(RemoteEventState).j3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.RemoteEventState.update.<anonymous>' call
		    // Inline function 'kotlin.collections.getOrPut' call
		    var this_0 = this.j2v_1;
		    var tmp0_elvis_lhs = action.m26();
		    var key = tmp0_elvis_lhs == null ? 'default' : tmp0_elvis_lhs;
		    var value = this_0.u1(key);
		    var tmp;
		    if (value == null) {
		      // Inline function 'com.vonage.clientcore.core.reducers.RemoteEventState.update.<anonymous>.<anonymous>' call
		      var answer = new EventBuffer();
		      this_0.b2(key, answer);
		      tmp = answer;
		    } else {
		      tmp = value;
		    }
		    var buffer = tmp;
		    buffer.n2v_1 = action;
		    var tmp_0 = this;
		    var tmp1_elvis_lhs = action.m26();
		    tmp_0.k2v_1 = tmp1_elvis_lhs == null ? 'default' : tmp1_elvis_lhs;
		    var tmp2_elvis_lhs = action.l26();
		    if ((tmp2_elvis_lhs == null ? -1 : tmp2_elvis_lhs) > buffer.l2v_1) {
		      var tmp_1 = buffer;
		      var tmp3_elvis_lhs = action.l26();
		      tmp_1.l2v_1 = tmp3_elvis_lhs == null ? buffer.l2v_1 : tmp3_elvis_lhs;
		    }
		    if (buffer.l2v_1 > buffer.m2v_1) {
		      buffer.m2v_1 = buffer.l2v_1;
		    }
		    return this;
		  };
		  protoOf(RemoteEventState).i3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.RemoteEventState.update.<anonymous>' call
		    // Inline function 'kotlin.collections.getOrPut' call
		    var this_0 = this.j2v_1;
		    var key = action.l3k_1;
		    var value = this_0.u1(key);
		    var tmp;
		    if (value == null) {
		      // Inline function 'com.vonage.clientcore.core.reducers.RemoteEventState.update.<anonymous>.<anonymous>' call
		      var answer = new EventBuffer();
		      this_0.b2(key, answer);
		      tmp = answer;
		    } else {
		      tmp = value;
		    }
		    var buffer = tmp;
		    if (action.m3k_1 > buffer.m2v_1) {
		      buffer.m2v_1 = action.m3k_1;
		      buffer.o2v_1 = action.k3k_1;
		      this.k2v_1 = action.l3k_1;
		    }
		    return this;
		  };
		  protoOf(RemoteEventState).toString = function () {
		    return 'RemoteEventState(buffers=' + toString(this.j2v_1) + ', lastModified=' + this.k2v_1 + ')';
		  };
		  protoOf(RemoteEventState).hashCode = function () {
		    var result = hashCode(this.j2v_1);
		    result = imul(result, 31) + (this.k2v_1 == null ? 0 : getStringHashCode(this.k2v_1)) | 0;
		    return result;
		  };
		  protoOf(RemoteEventState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RemoteEventState))
		      return false;
		    var tmp0_other_with_cast = other instanceof RemoteEventState ? other : THROW_CCE();
		    if (!equals(this.j2v_1, tmp0_other_with_cast.j2v_1))
		      return false;
		    if (!(this.k2v_1 == tmp0_other_with_cast.k2v_1))
		      return false;
		    return true;
		  };
		  function SessionReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.p3k_1.toString();
		    };
		  }
		  function SessionReducer(logger, state) {
		    state = state === VOID ? new SessionState() : state;
		    Reducer_0.call(this, logger);
		    this.p3k_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, SessionReducer$lambda(this));
		    }
		  }
		  protoOf(SessionReducer).q3k = function (_set____db54di) {
		    this.p3k_1 = _set____db54di;
		  };
		  protoOf(SessionReducer).q3j = function (_set____db54di) {
		    return this.q3k(_set____db54di instanceof SessionState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(SessionReducer).r3j = function () {
		    return this.p3k_1;
		  };
		  protoOf(SessionReducer).s3j = function () {
		    return this.p3k_1.r3k();
		  };
		  protoOf(SessionReducer).s3k = function (action, state) {
		    var tmp0_subject = action.d3e_1;
		    var tmp;
		    if (tmp0_subject instanceof SocketStatus) {
		      tmp = state.h3l(action.d3e_1);
		    } else {
		      if (tmp0_subject instanceof SocketConnect) {
		        tmp = state.g3l(action.d3e_1, action.e3e_1.f3e_1);
		      } else {
		        if (tmp0_subject instanceof SocketConnectEmptyTokenError) {
		          tmp = state.f3l(action.d3e_1, action.e3e_1.f3e_1);
		        } else {
		          if (tmp0_subject instanceof SessionSuccessEvent) {
		            tmp = state.e3l(action.d3e_1);
		          } else {
		            if (tmp0_subject instanceof DeleteSession) {
		              tmp = state.d3l(action.d3e_1);
		            } else {
		              if (tmp0_subject instanceof SocketSetSession) {
		                tmp = state.c3l(action.d3e_1);
		              } else {
		                if (tmp0_subject instanceof SessionTimerEvent) {
		                  tmp = state.b3l(action.d3e_1);
		                } else {
		                  if (tmp0_subject instanceof SessionInvalidTokenEvent) {
		                    tmp = state.a3l(action.d3e_1);
		                  } else {
		                    if (tmp0_subject instanceof SessionInvalidEvent) {
		                      tmp = state.z3k(action.d3e_1);
		                    } else {
		                      if (tmp0_subject instanceof SessionExpiredTokenEvent) {
		                        tmp = state.y3k(action.d3e_1);
		                      } else {
		                        if (tmp0_subject instanceof SessionMaxOpenEvent) {
		                          tmp = state.x3k(action.d3e_1);
		                        } else {
		                          if (tmp0_subject instanceof AuthorizationErrorEvent) {
		                            tmp = state.w3k(action.d3e_1);
		                          } else {
		                            if (tmp0_subject instanceof MemberInvitedEvent) {
		                              tmp = state.v3k(action.d3e_1);
		                            } else {
		                              if (tmp0_subject instanceof MemberJoinedEvent) {
		                                tmp = state.u3k(action.d3e_1);
		                              } else {
		                                if (tmp0_subject instanceof MetricsSuccessfullySent) {
		                                  tmp = state.t3k(action.d3e_1);
		                                } else {
		                                  tmp = null;
		                                }
		                              }
		                            }
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(SessionReducer).w3j = function (action, state) {
		    return this.s3k(action, state instanceof SessionState ? state : THROW_CCE());
		  };
		  function SessionState(sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId) {
		    sessionStatus = sessionStatus === VOID ? new Resolved(None_getInstance()) : sessionStatus;
		    connectionStatus = connectionStatus === VOID ? new SocketConnectionStatusWrapper(SocketConnectionStatus_Disconnected_getInstance(), null) : connectionStatus;
		    timeOfFirstRetry = timeOfFirstRetry === VOID ? null : timeOfFirstRetry;
		    retryNumber = retryNumber === VOID ? null : retryNumber;
		    reason = reason === VOID ? null : reason;
		    token = token === VOID ? null : token;
		    applicationId = applicationId === VOID ? null : applicationId;
		    this.a35_1 = sessionStatus;
		    this.b35_1 = connectionStatus;
		    this.c35_1 = timeOfFirstRetry;
		    this.d35_1 = retryNumber;
		    this.e35_1 = reason;
		    this.f35_1 = token;
		    this.g35_1 = applicationId;
		  }
		  protoOf(SessionState).toString = function () {
		    return toMaskedString(this, mapOf([to('sessionStatus', toString(this.a35_1)), to('connectionStatus', this.b35_1.toString()), to('timeOfFirstRetry', toString_0(this.c35_1)), to('retryNumber', toString_0(this.d35_1)), to('reason', toString_0(this.e35_1)), to('token', toString_0(this.f35_1)), to('applicationId', toString_0(this.g35_1))]));
		  };
		  protoOf(SessionState).g3l = function (action, uuid) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toPending(this.a35_1, new Active('', new SessionUser('', ''), null, ''), uuid);
		    this.f35_1 = action.z2m_1;
		    return this;
		  };
		  protoOf(SessionState).f3l = function (action, uuid) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toPending(this.a35_1, None_getInstance(), uuid);
		    this.a35_1 = toFailed(this.a35_1, new SessionEmptyTokenError());
		    return this;
		  };
		  protoOf(SessionState).t3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.c35_1 = action.k2n_1;
		    this.d35_1 = action.j2n_1;
		    return this;
		  };
		  protoOf(SessionState).h3l = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    if (action.r2n_1.equals(SocketConnectionStatus_Disconnected_getInstance())) {
		      var tmp0_subject = this.a35_1;
		      if (tmp0_subject instanceof Pending) {
		        if (!equals(action.s2n_1, SocketConnectionFailedReason_ClientDisconnected_getInstance())) {
		          this.a35_1 = toFailed(this.a35_1, new SessionSocketTransportError());
		        }
		      } else {
		        if (tmp0_subject instanceof Resolved) {
		          var tmp;
		          var tmp1_safe_receiver = this.a35_1.r1().l26();
		          if ((tmp1_safe_receiver == null ? null : equals(tmp1_safe_receiver, '')) === true) {
		            tmp = true;
		          } else {
		            tmp = this.a35_1.r1().l26() == null;
		          }
		          if (!tmp) {
		            if (this.b35_1.h2n_1.equals(SocketConnectionStatus_Reconnecting_getInstance())) {
		              this.a35_1 = new Resolved(new Inactive(null, null, SessionErrorReason_TransportClosed_getInstance()));
		            }
		            if (this.b35_1.h2n_1.equals(SocketConnectionStatus_Connected_getInstance())) {
		              var tmp2_subject = action.s2n_1;
		              switch (tmp2_subject == null ? -1 : tmp2_subject.e2_1) {
		                case 0:
		                  this.a35_1 = new Resolved(new Inactive(null, null, SessionErrorReason_TokenExpired_getInstance()));
		                  break;
		                case 3:
		                  this.a35_1 = new Resolved(new Inactive(null, null, SessionErrorReason_PingTimeout_getInstance()));
		                  break;
		                case 2:
		                  this.a35_1 = new Resolved(new Inactive(null, null, SessionErrorReason_TransportClosed_getInstance()));
		                  break;
		              }
		            }
		          } else {
		            if (action.r2n_1.equals(SocketConnectionStatus_Disconnected_getInstance())) {
		              if (equals(action.s2n_1, SocketConnectionFailedReason_ClientDisconnected_getInstance())) {
		                this.e35_1 = SocketConnectionFailedReason_ClientDisconnected_getInstance();
		              }
		            }
		          }
		        }
		      }
		    } else if (action.r2n_1.equals(SocketConnectionStatus_Reconnecting_getInstance())) {
		      this.b35_1 = new SocketConnectionStatusWrapper(SocketConnectionStatus_Reconnecting_getInstance(), generateTimeStamp());
		      this.d35_1 = action.u2n_1;
		      if (this.c35_1 == null) {
		        this.c35_1 = action.t2n_1;
		      }
		    }
		    this.b35_1 = new SocketConnectionStatusWrapper(action.r2n_1, generateTimeStamp());
		    return this;
		  };
		  protoOf(SessionState).e3l = function (event) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.e35_1 = null;
		    this.a35_1 = toResolved(this.a35_1, new Active(event.j2a_1.r2a_1, new SessionUser(event.j2a_1.s2a_1, event.j2a_1.t2a_1), VOID, event.j2a_1.u2a_1));
		    return this;
		  };
		  protoOf(SessionState).b3l = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    var tmp;
		    var tmp_0 = this.a35_1;
		    if (tmp_0 instanceof Pending) {
		      tmp = this.a35_1.m37() === action.v2n_1.e3e_1.f3e_1;
		    } else {
		      tmp = false;
		    }
		    if (tmp) {
		      this.a35_1 = toFailed(this.a35_1, new SessionTimeoutError());
		    }
		    return this;
		  };
		  protoOf(SessionState).z3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toFailed(this.a35_1, new SessionInvalidError());
		    return this;
		  };
		  protoOf(SessionState).a3l = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toFailed(this.a35_1, new SessionInvalidTokenError());
		    return this;
		  };
		  protoOf(SessionState).w3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toFailed(this.a35_1, new AuthorizationError());
		    return this;
		  };
		  protoOf(SessionState).y3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toFailed(this.a35_1, new SessionExpiredTokenError());
		    return this;
		  };
		  protoOf(SessionState).x3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.a35_1 = toFailed(this.a35_1, new SessionMaxOpenSessions());
		    return this;
		  };
		  protoOf(SessionState).d3l = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.f35_1 = null;
		    this.a35_1 = new Resolved(None_getInstance());
		    return this;
		  };
		  protoOf(SessionState).c3l = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.f35_1 = action.g2n_1;
		    return this;
		  };
		  protoOf(SessionState).v3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.g35_1 = action.f2c_1;
		    return this;
		  };
		  protoOf(SessionState).u3k = function (action) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.SessionState.update.<anonymous>' call
		    this.g35_1 = action.e2b_1;
		    return this;
		  };
		  protoOf(SessionState).i3l = function (sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId) {
		    return new SessionState(sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId);
		  };
		  protoOf(SessionState).r3k = function (sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId, $super) {
		    sessionStatus = sessionStatus === VOID ? this.a35_1 : sessionStatus;
		    connectionStatus = connectionStatus === VOID ? this.b35_1 : connectionStatus;
		    timeOfFirstRetry = timeOfFirstRetry === VOID ? this.c35_1 : timeOfFirstRetry;
		    retryNumber = retryNumber === VOID ? this.d35_1 : retryNumber;
		    reason = reason === VOID ? this.e35_1 : reason;
		    token = token === VOID ? this.f35_1 : token;
		    applicationId = applicationId === VOID ? this.g35_1 : applicationId;
		    return $super === VOID ? this.i3l(sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId) : $super.i3l.call(this, sessionStatus, connectionStatus, timeOfFirstRetry, retryNumber, reason, token, applicationId);
		  };
		  protoOf(SessionState).hashCode = function () {
		    var result = hashCode(this.a35_1);
		    result = imul(result, 31) + this.b35_1.hashCode() | 0;
		    result = imul(result, 31) + (this.c35_1 == null ? 0 : hashCode(this.c35_1)) | 0;
		    result = imul(result, 31) + (this.d35_1 == null ? 0 : this.d35_1) | 0;
		    result = imul(result, 31) + (this.e35_1 == null ? 0 : this.e35_1.hashCode()) | 0;
		    result = imul(result, 31) + (this.f35_1 == null ? 0 : getStringHashCode(this.f35_1)) | 0;
		    result = imul(result, 31) + (this.g35_1 == null ? 0 : getStringHashCode(this.g35_1)) | 0;
		    return result;
		  };
		  protoOf(SessionState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionState))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionState ? other : THROW_CCE();
		    if (!equals(this.a35_1, tmp0_other_with_cast.a35_1))
		      return false;
		    if (!this.b35_1.equals(tmp0_other_with_cast.b35_1))
		      return false;
		    if (!equals(this.c35_1, tmp0_other_with_cast.c35_1))
		      return false;
		    if (!(this.d35_1 == tmp0_other_with_cast.d35_1))
		      return false;
		    if (!equals(this.e35_1, tmp0_other_with_cast.e35_1))
		      return false;
		    if (!(this.f35_1 == tmp0_other_with_cast.f35_1))
		      return false;
		    if (!(this.g35_1 == tmp0_other_with_cast.g35_1))
		      return false;
		    return true;
		  };
		  function SessionUser(id, name) {
		    this.f2t_1 = id;
		    this.g2t_1 = name;
		  }
		  protoOf(SessionUser).toString = function () {
		    return 'SessionUser(id=' + this.f2t_1 + ', name=' + this.g2t_1 + ')';
		  };
		  protoOf(SessionUser).hashCode = function () {
		    var result = getStringHashCode(this.f2t_1);
		    result = imul(result, 31) + getStringHashCode(this.g2t_1) | 0;
		    return result;
		  };
		  protoOf(SessionUser).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof SessionUser))
		      return false;
		    var tmp0_other_with_cast = other instanceof SessionUser ? other : THROW_CCE();
		    if (!(this.f2t_1 === tmp0_other_with_cast.f2t_1))
		      return false;
		    if (!(this.g2t_1 === tmp0_other_with_cast.g2t_1))
		      return false;
		    return true;
		  };
		  function Call_0(isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState) {
		    isReconnect = isReconnect === VOID ? false : isReconnect;
		    customData = customData === VOID ? null : customData;
		    memberState = memberState === VOID ? new Resolved(None_instance_1) : memberState;
		    legState = legState === VOID ? new Resolved(None_getInstance_0()) : legState;
		    localMedia = localMedia === VOID ? new MediaTransport() : localMedia;
		    callConnectivityState = callConnectivityState === VOID ? New_instance : callConnectivityState;
		    mediaState = mediaState === VOID ? MediaConnectionState_New_getInstance() : mediaState;
		    this.a36_1 = isReconnect;
		    this.b36_1 = from;
		    this.c36_1 = customData;
		    this.d36_1 = id;
		    this.e36_1 = memberState;
		    this.f36_1 = legState;
		    this.g36_1 = localMedia;
		    this.h36_1 = callConnectivityState;
		    this.i36_1 = mediaState;
		  }
		  protoOf(Call_0).j3l = function (isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState) {
		    return new Call_0(isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState);
		  };
		  protoOf(Call_0).d38 = function (isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState, $super) {
		    isReconnect = isReconnect === VOID ? this.a36_1 : isReconnect;
		    from = from === VOID ? this.b36_1 : from;
		    customData = customData === VOID ? this.c36_1 : customData;
		    id = id === VOID ? this.d36_1 : id;
		    memberState = memberState === VOID ? this.e36_1 : memberState;
		    legState = legState === VOID ? this.f36_1 : legState;
		    localMedia = localMedia === VOID ? this.g36_1 : localMedia;
		    callConnectivityState = callConnectivityState === VOID ? this.h36_1 : callConnectivityState;
		    mediaState = mediaState === VOID ? this.i36_1 : mediaState;
		    return $super === VOID ? this.j3l(isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState) : $super.j3l.call(this, isReconnect, from, customData, id, memberState, legState, localMedia, callConnectivityState, mediaState);
		  };
		  protoOf(Call_0).toString = function () {
		    return 'Call(isReconnect=' + this.a36_1 + ', from=' + toString(this.b36_1) + ', customData=' + toString_0(this.c36_1) + ', id=' + this.d36_1 + ', memberState=' + toString(this.e36_1) + ', legState=' + toString(this.f36_1) + ', localMedia=' + this.g36_1.toString() + ', callConnectivityState=' + toString(this.h36_1) + ', mediaState=' + this.i36_1.toString() + ')';
		  };
		  protoOf(Call_0).hashCode = function () {
		    var result = getBooleanHashCode(this.a36_1);
		    result = imul(result, 31) + hashCode(this.b36_1) | 0;
		    result = imul(result, 31) + (this.c36_1 == null ? 0 : hashCode(this.c36_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.d36_1) | 0;
		    result = imul(result, 31) + hashCode(this.e36_1) | 0;
		    result = imul(result, 31) + hashCode(this.f36_1) | 0;
		    result = imul(result, 31) + this.g36_1.hashCode() | 0;
		    result = imul(result, 31) + hashCode(this.h36_1) | 0;
		    result = imul(result, 31) + this.i36_1.hashCode() | 0;
		    return result;
		  };
		  protoOf(Call_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Call_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof Call_0 ? other : THROW_CCE();
		    if (!(this.a36_1 === tmp0_other_with_cast.a36_1))
		      return false;
		    if (!equals(this.b36_1, tmp0_other_with_cast.b36_1))
		      return false;
		    if (!equals(this.c36_1, tmp0_other_with_cast.c36_1))
		      return false;
		    if (!(this.d36_1 === tmp0_other_with_cast.d36_1))
		      return false;
		    if (!equals(this.e36_1, tmp0_other_with_cast.e36_1))
		      return false;
		    if (!equals(this.f36_1, tmp0_other_with_cast.f36_1))
		      return false;
		    if (!this.g36_1.equals(tmp0_other_with_cast.g36_1))
		      return false;
		    if (!equals(this.h36_1, tmp0_other_with_cast.h36_1))
		      return false;
		    if (!this.i36_1.equals(tmp0_other_with_cast.i36_1))
		      return false;
		    return true;
		  };
		  var CallDirection_outbound_instance;
		  var CallDirection_inbound_instance;
		  var CallDirection_entriesInitialized;
		  function CallDirection_initEntries() {
		    if (CallDirection_entriesInitialized)
		      return Unit_instance;
		    CallDirection_entriesInitialized = true;
		    CallDirection_outbound_instance = new CallDirection('outbound', 0);
		    CallDirection_inbound_instance = new CallDirection('inbound', 1);
		  }
		  function CallDirection(name, ordinal) {
		    Enum.call(this, name, ordinal);
		  }
		  function CallDirection_outbound_getInstance() {
		    CallDirection_initEntries();
		    return CallDirection_outbound_instance;
		  }
		  function CallDirection_inbound_getInstance() {
		    CallDirection_initEntries();
		    return CallDirection_inbound_instance;
		  }
		  function New() {
		  }
		  var New_instance;
		  function Connected() {
		  }
		  var Connected_instance;
		  function Disconnected() {
		  }
		  var Disconnected_instance;
		  function Reconnecting(retryCount) {
		    retryCount = retryCount === VOID ? 0 : retryCount;
		    this.d37_1 = retryCount;
		  }
		  protoOf(Reconnecting).toString = function () {
		    return 'Reconnecting(retryCount=' + this.d37_1 + ')';
		  };
		  protoOf(Reconnecting).hashCode = function () {
		    return this.d37_1;
		  };
		  protoOf(Reconnecting).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Reconnecting))
		      return false;
		    var tmp0_other_with_cast = other instanceof Reconnecting ? other : THROW_CCE();
		    if (!(this.d37_1 === tmp0_other_with_cast.d37_1))
		      return false;
		    return true;
		  };
		  function CallReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.m3l_1.toString();
		    };
		  }
		  function CallReducer(logger, state) {
		    state = state === VOID ? new CallState() : state;
		    Reducer_0.call(this, logger);
		    this.m3l_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, CallReducer$lambda(this));
		    }
		  }
		  protoOf(CallReducer).n3l = function (_set____db54di) {
		    this.m3l_1 = _set____db54di;
		  };
		  protoOf(CallReducer).q3j = function (_set____db54di) {
		    return this.n3l(_set____db54di instanceof CallState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(CallReducer).r3j = function () {
		    return this.m3l_1;
		  };
		  protoOf(CallReducer).s3j = function () {
		    return this.m3l_1;
		  };
		  protoOf(CallReducer).o3l = function (action, state) {
		    var tmp0_subject = action.d3e_1;
		    var tmp;
		    if (tmp0_subject instanceof ErrorReport) {
		      var tmp1_elvis_lhs = action.e3e_1.g3e_1;
		      tmp = state.q3m(action.d3e_1, tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs);
		    } else {
		      if (tmp0_subject instanceof SessionSuccessEvent) {
		        tmp = state.e3l(action.d3e_1);
		      } else {
		        if (isInterface(tmp0_subject, MediaEvent)) {
		          var callId = action.d3e_1.l26();
		          var tmp2_subject = action.d3e_1;
		          var tmp_0;
		          if (tmp2_subject instanceof MediaOffer) {
		            tmp_0 = state.p3m(action.d3e_1, callId);
		          } else {
		            if (tmp2_subject instanceof MediaAnswer) {
		              tmp_0 = state.o3m(action.d3e_1, callId);
		            } else {
		              if (tmp2_subject instanceof MediaDisable) {
		                tmp_0 = state.n3m(action.d3e_1, callId);
		              } else {
		                if (tmp2_subject instanceof MediaConnectionStateUpdate) {
		                  tmp_0 = state.m3m(action.d3e_1, callId);
		                } else {
		                  if (tmp2_subject instanceof CallReconnectionRetry) {
		                    tmp_0 = state.l3m(action.d3e_1, callId);
		                  } else {
		                    tmp_0 = null;
		                  }
		                }
		              }
		            }
		          }
		          tmp = tmp_0;
		        } else {
		          if (isInterface(tmp0_subject, CallEvent)) {
		            var tmp3_subject = action.d3e_1;
		            var tmp_1;
		            if (tmp3_subject instanceof CallMemberMediaTimeout) {
		              tmp_1 = state.k3m(action.d3e_1, action.d3e_1.g39_1);
		            } else {
		              if (tmp3_subject instanceof CallKnockingRequestFailure) {
		                tmp_1 = state.j3m(action.d3e_1, action.d3e_1.m38_1);
		              } else {
		                if (tmp3_subject instanceof CallCreate) {
		                  tmp_1 = state.i3m(action.d3e_1, action.d3e_1.b39_1);
		                } else {
		                  if (tmp3_subject instanceof CallReconnect) {
		                    tmp_1 = state.h3m(action.d3e_1, action.d3e_1.p38_1);
		                  } else {
		                    if (tmp3_subject instanceof CallReconnectSuccess) {
		                      tmp_1 = state.g3m(action.d3e_1, action.d3e_1.y38_1);
		                    } else {
		                      if (tmp3_subject instanceof CallReconnectFailure) {
		                        tmp_1 = state.f3m(action.d3e_1, action.d3e_1.z38_1);
		                      } else {
		                        if (tmp3_subject instanceof CallCleanup) {
		                          tmp_1 = state.e3m(action.d3e_1, action.d3e_1.o38_1);
		                        } else {
		                          if (tmp3_subject instanceof CallConversationUpdate) {
		                            tmp_1 = state.d3m(action.d3e_1, action.d3e_1.j39_1);
		                          } else {
		                            tmp_1 = null;
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		            tmp = tmp_1;
		          } else {
		            if (isInterface(tmp0_subject, SocketEvent)) {
		              var tmp4_subject = action.d3e_1;
		              var tmp_2;
		              if (tmp4_subject instanceof MemberInvitedEvent) {
		                var tmp5_safe_receiver = action.d3e_1.z2b_1.w29_1.c25_1;
		                var tmp_3;
		                if (tmp5_safe_receiver == null) {
		                  tmp_3 = null;
		                } else {
		                  // Inline function 'kotlin.let' call
		                  // Inline function 'kotlin.contracts.contract' call
		                  // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                  tmp_3 = state.c3m(action.d3e_1, tmp5_safe_receiver);
		                }
		                tmp_2 = tmp_3;
		              } else {
		                if (tmp4_subject instanceof MemberMediaEvent) {
		                  var tmp6_safe_receiver = action.d3e_1.k2c_1.r2c_1.c25_1;
		                  var tmp_4;
		                  if (tmp6_safe_receiver == null) {
		                    tmp_4 = null;
		                  } else {
		                    // Inline function 'kotlin.let' call
		                    // Inline function 'kotlin.contracts.contract' call
		                    // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                    tmp_4 = state.b3m(action.d3e_1, tmp6_safe_receiver);
		                  }
		                  tmp_2 = tmp_4;
		                } else {
		                  if (tmp4_subject instanceof MemberLeftEvent) {
		                    var tmp7_safe_receiver = action.d3e_1.u2c_1.e2d_1.c25_1;
		                    var tmp_5;
		                    if (tmp7_safe_receiver == null) {
		                      tmp_5 = null;
		                    } else {
		                      // Inline function 'kotlin.let' call
		                      // Inline function 'kotlin.contracts.contract' call
		                      // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                      tmp_5 = state.a3m(action.d3e_1, tmp7_safe_receiver);
		                    }
		                    tmp_2 = tmp_5;
		                  } else {
		                    if (tmp4_subject instanceof MemberJoinedEvent) {
		                      var tmp8_safe_receiver = action.d3e_1.y2a_1.j2b_1.c25_1;
		                      var tmp_6;
		                      if (tmp8_safe_receiver == null) {
		                        tmp_6 = null;
		                      } else {
		                        // Inline function 'kotlin.let' call
		                        // Inline function 'kotlin.contracts.contract' call
		                        // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                        tmp_6 = state.z3l(action.d3e_1, tmp8_safe_receiver);
		                      }
		                      tmp_2 = tmp_6;
		                    } else {
		                      if (tmp4_subject instanceof RTCAnswerEvent) {
		                        // Inline function 'kotlin.let' call
		                        // Inline function 'kotlin.contracts.contract' call
		                        // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                        var it = action.d3e_1.o2b_1.v2b_1;
		                        tmp_2 = state.y3l(action.d3e_1, it);
		                      } else {
		                        if (tmp4_subject instanceof RTCHangupEvent) {
		                          var tmp9_safe_receiver = action.d3e_1.y28_1.z25_1.c25_1;
		                          var tmp_7;
		                          if (tmp9_safe_receiver == null) {
		                            tmp_7 = null;
		                          } else {
		                            // Inline function 'kotlin.let' call
		                            // Inline function 'kotlin.contracts.contract' call
		                            // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                            tmp_7 = state.x3l(action.d3e_1, tmp9_safe_receiver);
		                          }
		                          tmp_2 = tmp_7;
		                        } else {
		                          if (tmp4_subject instanceof RTCTransferEvent) {
		                            var tmp10_safe_receiver = action.d3e_1.f29_1.p29_1.c25_1;
		                            var tmp_8;
		                            if (tmp10_safe_receiver == null) {
		                              tmp_8 = null;
		                            } else {
		                              // Inline function 'kotlin.let' call
		                              // Inline function 'kotlin.contracts.contract' call
		                              // Inline function 'com.vonage.clientcore.core.reducers.call.CallReducer.reduce.<anonymous>' call
		                              tmp_8 = state.w3l(action.d3e_1, tmp10_safe_receiver);
		                            }
		                            tmp_2 = tmp_8;
		                          } else {
		                            tmp_2 = null;
		                          }
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		              tmp = tmp_2;
		            } else {
		              if (isInterface(tmp0_subject, ApiRequest)) {
		                var tmp11_elvis_lhs = action.e3e_1.g3e_1;
		                var callId_0 = tmp11_elvis_lhs == null ? '' : tmp11_elvis_lhs;
		                var tmp12_subject = action.d3e_1;
		                var tmp_9;
		                if (tmp12_subject instanceof AppKnockingRequest) {
		                  tmp_9 = state.v3l(action.d3e_1, callId_0, action.e3e_1.f3e_1);
		                } else {
		                  if (tmp12_subject instanceof MemberKickRequest) {
		                    tmp_9 = state.u3l(action.d3e_1, callId_0, action.e3e_1.f3e_1);
		                  } else {
		                    if (tmp12_subject instanceof MemberJoinRequest) {
		                      tmp_9 = state.t3l(action.d3e_1, callId_0, action.e3e_1.f3e_1);
		                    } else {
		                      tmp_9 = null;
		                    }
		                  }
		                }
		                tmp = tmp_9;
		              } else {
		                if (isInterface(tmp0_subject, ApiResponse)) {
		                  var tmp13_elvis_lhs = action.e3e_1.g3e_1;
		                  var callId_1 = tmp13_elvis_lhs == null ? '' : tmp13_elvis_lhs;
		                  var tmp14_subject = action.d3e_1;
		                  var tmp_10;
		                  if (tmp14_subject instanceof AppKnocking) {
		                    tmp_10 = state.s3l(action.d3e_1, callId_1);
		                  } else {
		                    if (tmp14_subject instanceof RTCReconnect) {
		                      tmp_10 = state.r3l(action.d3e_1, callId_1);
		                    } else {
		                      if (tmp14_subject instanceof DeletedKnocker) {
		                        tmp_10 = state.q3l(action.d3e_1, callId_1);
		                      } else {
		                        if (tmp14_subject instanceof MemberLeft) {
		                          tmp_10 = state.p3l(action.d3e_1, callId_1);
		                        } else {
		                          tmp_10 = null;
		                        }
		                      }
		                    }
		                  }
		                  tmp = tmp_10;
		                } else {
		                  tmp = null;
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(CallReducer).w3j = function (action, state) {
		    return this.o3l(action, state instanceof CallState ? state : THROW_CCE());
		  };
		  function CallState$update$lambda($action, this$0) {
		    return function ($this$modify) {
		      if ($action.u2c_1.d2d_1.t1w_1 === this$0.r36_1) {
		        var tmp_1;
		        var tmp_2 = $this$modify.e36_1.r1();
		        if (isInterface(tmp_2, CoreMemberStateWithCid)) {
		          var tmp_3 = $this$modify.e36_1.r1();
		          tmp_1 = (isInterface(tmp_3, CoreMemberStateWithCid) ? tmp_3 : THROW_CCE()).m26() === $action.w2c_1;
		        } else {
		          tmp_1 = false;
		        }
		        if (tmp_1) {
		          var tmp_4 = $this$modify;
		          var tmp_5 = $this$modify.e36_1;
		          var tmp0_safe_receiver = $action.u2c_1.f2d_1;
		          tmp_4.e36_1 = toResolved(tmp_5, new Left($action.w2c_1, $action.u2c_1.c2d_1, '', tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k2d_1));
		        }
		      }
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_0($action, $id) {
		    return function ($this$new) {
		      // Inline function 'kotlin.also' call
		      var tmp0_customData = $action.e39_1;
		      var tmp1_id = $action.b39_1;
		      var tmp2_from = $action.c39_1;
		      var this_0 = new Call_0(VOID, tmp2_from, tmp0_customData, tmp1_id);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>.<anonymous>' call
		      var tmp = this_0;
		      var tmp_0;
		      switch ($action.d39_1.e2_1) {
		        case 1:
		          tmp_0 = toResolved(this_0.f36_1, new Started($action.b39_1));
		          break;
		        case 0:
		          tmp_0 = toResolved(this_0.f36_1, new Prewarm($action.b39_1));
		          break;
		        default:
		          noWhenBranchMatchedException();
		          break;
		      }
		      tmp.f36_1 = tmp_0;
		      var tmp1_safe_receiver = $action.f39_1;
		      if (tmp1_safe_receiver == null)
		        ;
		      else {
		        // Inline function 'kotlin.let' call
		        // Inline function 'kotlin.contracts.contract' call
		        this_0.e36_1 = toResolved(this_0.e36_1, new Joined(tmp1_safe_receiver.h39_1, tmp1_safe_receiver.i39_1));
		        var this_1 = $this$new.q36_1;
		        var key = tmp1_safe_receiver.h39_1;
		        var value = $id;
		        this_1.b2(key, value);
		      }
		      return this_0;
		    };
		  }
		  function CallState$update$lambda_1($action) {
		    return function ($this$modify) {
		      var tmp_0 = $this$modify.e36_1.r1();
		      if (isInterface(tmp_0, CoreMemberStateWithCid)) {
		        var tmp_1 = $this$modify.e36_1.r1();
		        (isInterface(tmp_1, CoreMemberStateWithCid) ? tmp_1 : THROW_CCE()).r3m($action.k39_1);
		      }
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_2($action, $requestId, $$this$apply, $callId) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toPending($this$modify.e36_1, new Joined($action.x1k_1, $action.y1k_1), $requestId);
		      var this_0 = $$this$apply.q36_1;
		      var key = $action.x1k_1;
		      var value = $callId;
		      this_0.b2(key, value);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_3($event, $newMemberId, $$this$apply, $callId) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = new Resolved(new Joined($event.h29_1, $newMemberId));
		      $$this$apply.q36_1.c2($event.f29_1.o29_1);
		      var this_0 = $$this$apply.q36_1;
		      var key = $event.h29_1;
		      var value = $callId;
		      this_0.b2(key, value);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_4($this$modify) {
		    if ($this$modify.i36_1.equals(MediaConnectionState_Closed_getInstance()))
		      return Unit_instance;
		    var tmp = $this$modify;
		    var tmp_0;
		    if ($this$modify.i36_1.equals(MediaConnectionState_New_getInstance())) {
		      tmp_0 = MediaConnectionState_Failed_getInstance();
		    } else {
		      var tmp_1 = $this$modify.e36_1.r1();
		      if (!(tmp_1 instanceof Joined)) {
		        tmp_0 = MediaConnectionState_Failed_getInstance();
		      } else {
		        tmp_0 = $this$modify.i36_1;
		      }
		    }
		    tmp.i36_1 = tmp_0;
		    return Unit_instance;
		  }
		  function CallState$update$lambda_5($event) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toFailed($this$modify.e36_1, $event.n38_1);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_6($event) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = new Resolved(new Joined($event.a2b_1, $event.y2a_1.h2b_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_7($requestId) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toPending($this$modify.e36_1, new Knocking('placeholder'), $requestId);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_8($response) {
		    return function ($this$modify) {
		      var tmp_0 = $this$modify.e36_1.r1();
		      if (tmp_0 instanceof Knocking) {
		        $this$modify.e36_1 = toResolved($this$modify.e36_1, new Knocking($response.b21_1));
		      }
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_9($this$modify) {
		    // Inline function 'kotlin.TODO' call
		    throw new NotImplementedError();
		  }
		  function CallState$update$lambda_10($response) {
		    return function ($this$modify) {
		      $this$modify.f36_1 = toResolved($this$modify.f36_1, new Started($response.e21_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_11($action, $requestId) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toPending($this$modify.e36_1, new Left($action.j1k_1, $action.k1k_1), $requestId);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_12($action) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toResolved($this$modify.e36_1, new Left($action.k1u_1, $action.l1u_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_13($callId, $action) {
		    return function ($this$modify) {
		      $this$modify.f36_1 = new Resolved(new Completed($callId, $action.y28_1.b26_1));
		      $this$modify.h36_1 = Disconnected_instance;
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_14($action) {
		    return function ($this$modify) {
		      $this$modify.e36_1 = toFailed($this$modify.e36_1, $action.i1g_1);
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_15($offer) {
		    return function ($this$modify) {
		      $this$modify.g36_1 = $this$modify.g36_1.v3a(new Offer($offer.v2l_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_16($offer) {
		    return function ($this$modify) {
		      $this$modify.g36_1 = $this$modify.g36_1.v3a(new Answer($offer.x2l_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_17($this$modify) {
		    $this$modify.g36_1 = $this$modify.g36_1.v3a(VOID, VOID, false);
		    return Unit_instance;
		  }
		  function CallState$update$lambda_18($action) {
		    return function ($this$modify) {
		      $this$modify.g36_1 = $this$modify.g36_1.v3a(VOID, new Answer($action.o2b_1.w2b_1));
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_19($action) {
		    return function ($this$modify) {
		      $this$modify.i36_1 = $action.t2l_1;
		      var tmp_0 = $this$modify.h36_1;
		      if (tmp_0 instanceof Disconnected) {
		        return Unit_instance;
		      }
		      var tmp_1 = $this$modify;
		      switch ($this$modify.i36_1.e2_1) {
		        case 3:
		          tmp_1.h36_1 = Connected_instance;
		          break;
		        case 4:
		          tmp_1.h36_1 = new Reconnecting();
		          break;
		        default:
		          tmp_1.h36_1 = $this$modify.h36_1;
		          break;
		      }
		      return Unit_instance;
		    };
		  }
		  function CallState$update$lambda_20($action, $id) {
		    return function ($this$new) {
		      // Inline function 'kotlin.also' call
		      var tmp0_from = new AppChannelEndpoint($action.q38_1);
		      var tmp1_memberState = new Resolved(new Joined($action.r38_1, $action.q38_1));
		      var this_0 = new Call_0(true, tmp0_from, null, $id, tmp1_memberState);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>.<anonymous>' call
		      // Inline function 'kotlin.collections.set' call
		      var this_1 = $this$new.q36_1;
		      var key = $action.r38_1;
		      var value = $id;
		      this_1.b2(key, value);
		      return this_0;
		    };
		  }
		  function CallState$update$lambda_21($this$modify) {
		    $this$modify.a36_1 = true;
		    return Unit_instance;
		  }
		  function CallState$update$lambda_22($this$modify) {
		    var tmp = $this$modify.h36_1;
		    var tmp0_safe_receiver = tmp instanceof Reconnecting ? tmp : null;
		    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d37_1;
		    var tmp_0;
		    if (tmp1_elvis_lhs == null) {
		      return Unit_instance;
		    } else {
		      tmp_0 = tmp1_elvis_lhs;
		    }
		    var currentRetryCount = tmp_0;
		    $this$modify.h36_1 = new Reconnecting(currentRetryCount + 1 | 0);
		    return Unit_instance;
		  }
		  function CallState$update$lambda_23($this$modify) {
		    $this$modify.a36_1 = false;
		    return Unit_instance;
		  }
		  function CallState$update$lambda_24($this$modify) {
		    $this$modify.a36_1 = false;
		    $this$modify.h36_1 = Disconnected_instance;
		    return Unit_instance;
		  }
		  function CallState(calls, conversationIdToCallId, currentUserId) {
		    var tmp;
		    if (calls === VOID) {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      tmp = LinkedHashMap_init_$Create$();
		    } else {
		      tmp = calls;
		    }
		    calls = tmp;
		    var tmp_0;
		    if (conversationIdToCallId === VOID) {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      tmp_0 = LinkedHashMap_init_$Create$();
		    } else {
		      tmp_0 = conversationIdToCallId;
		    }
		    conversationIdToCallId = tmp_0;
		    currentUserId = currentUserId === VOID ? null : currentUserId;
		    this.p36_1 = calls;
		    this.q36_1 = conversationIdToCallId;
		    this.r36_1 = currentUserId;
		    this.s36_1 = null;
		  }
		  protoOf(CallState).b3k = function () {
		    return this.p36_1;
		  };
		  protoOf(CallState).c3k = function (_set____db54di) {
		    this.s36_1 = _set____db54di;
		  };
		  protoOf(CallState).toString = function () {
		    var tmp = 'CallState(currentUserId=' + this.r36_1 + ',lastModified=' + this.s36_1 + ',conversationIdToCallId=' + toString(this.q36_1) + ',';
		    // Inline function 'kotlin.collections.map' call
		    var this_0 = this.p36_1;
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(this_0.l());
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this_0.x1().i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.toString.<anonymous>' call
		      var tmp$ret$1 = item.q1() + ':' + item.r1().toString() + '\n';
		      destination.d(tmp$ret$1);
		    }
		    return tmp + ('\ncallInfo:' + toString(destination) + ')');
		  };
		  protoOf(CallState).e3l = function (event) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    this.r36_1 = event.j2a_1.s2a_1;
		    this.s36_1 = null;
		    return this;
		  };
		  protoOf(CallState).a3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda(action, this));
		  };
		  protoOf(CallState).i3m = function (action, id) {
		    return new_0(this, id, CallState$update$lambda_0(action, id));
		  };
		  protoOf(CallState).e3m = function (action, callId) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    // Inline function 'kotlin.collections.forEach' call
		    // Inline function 'kotlin.collections.filterValues' call
		    var this_0 = this.q36_1;
		    var result = LinkedHashMap_init_$Create$();
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this_0.x1().i();
		    while (tmp0_iterator.j()) {
		      var entry = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>.<anonymous>' call
		      if (entry.r1() === callId) {
		        result.b2(entry.q1(), entry.r1());
		      }
		    }
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator_0 = result.x1().i();
		    while (tmp0_iterator_0.j()) {
		      var element = tmp0_iterator_0.k();
		      // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>.<anonymous>' call
		      this.q36_1.c2(element.q1());
		    }
		    this.p36_1.c2(callId);
		    return this;
		  };
		  protoOf(CallState).d3m = function (action, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    modify(this, id, CallState$update$lambda_1(action));
		    return this;
		  };
		  protoOf(CallState).t3l = function (action, callId, requestId) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    modify(this, callId, CallState$update$lambda_2(action, requestId, this, callId));
		    return this;
		  };
		  protoOf(CallState).w3l = function (event, callId) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    var tmp0_safe_receiver = event.i29_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      // Inline function 'kotlin.let' call
		      // Inline function 'kotlin.contracts.contract' call
		      modify(this, callId, CallState$update$lambda_3(event, tmp0_safe_receiver, this, callId));
		    }
		    return this;
		  };
		  protoOf(CallState).k3m = function (event, id) {
		    return modify(this, id, CallState$update$lambda_4);
		  };
		  protoOf(CallState).j3m = function (event, id) {
		    return modify(this, id, CallState$update$lambda_5(event));
		  };
		  protoOf(CallState).b3m = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    if (event.n2c_1 == this.r36_1) {
		      // Inline function 'kotlin.collections.set' call
		      var this_0 = this.q36_1;
		      var key = event.m2c_1;
		      this_0.b2(key, id);
		    }
		    return this;
		  };
		  protoOf(CallState).z3l = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    if (event.y2a_1.i2b_1.t1w_1 === this.r36_1) {
		      // Inline function 'kotlin.collections.set' call
		      var this_0 = this.q36_1;
		      var key = event.a2b_1;
		      this_0.b2(key, id);
		    }
		    modify(this, id, CallState$update$lambda_6(event));
		    return this;
		  };
		  protoOf(CallState).c3m = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.CallState.update.<anonymous>' call
		    if (event.z2b_1.u29_1.t1w_1 === this.r36_1) {
		      // Inline function 'kotlin.collections.set' call
		      var this_0 = this.q36_1;
		      var key = event.b2c_1;
		      this_0.b2(key, id);
		    }
		    return this;
		  };
		  protoOf(CallState).v3l = function (action, id, requestId) {
		    return modify(this, id, CallState$update$lambda_7(requestId));
		  };
		  protoOf(CallState).s3l = function (response, id) {
		    return modify(this, id, CallState$update$lambda_8(response));
		  };
		  protoOf(CallState).q3l = function (response, id) {
		    return modify(this, id, CallState$update$lambda_9);
		  };
		  protoOf(CallState).r3l = function (response, callId) {
		    return modify(this, callId, CallState$update$lambda_10(response));
		  };
		  protoOf(CallState).u3l = function (action, id, requestId) {
		    return modify(this, id, CallState$update$lambda_11(action, requestId));
		  };
		  protoOf(CallState).p3l = function (action, id) {
		    return modify(this, id, CallState$update$lambda_12(action));
		  };
		  protoOf(CallState).x3l = function (action, callId) {
		    return modify(this, callId, CallState$update$lambda_13(callId, action));
		  };
		  protoOf(CallState).q3m = function (action, callId) {
		    return modify(this, callId, CallState$update$lambda_14(action));
		  };
		  protoOf(CallState).p3m = function (offer, callId) {
		    return modify(this, callId, CallState$update$lambda_15(offer));
		  };
		  protoOf(CallState).o3m = function (offer, callId) {
		    return modify(this, callId, CallState$update$lambda_16(offer));
		  };
		  protoOf(CallState).n3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda_17);
		  };
		  protoOf(CallState).y3l = function (action, id) {
		    return modify(this, id, CallState$update$lambda_18(action));
		  };
		  protoOf(CallState).m3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda_19(action));
		  };
		  protoOf(CallState).h3m = function (action, id) {
		    var tmp;
		    if (this.p36_1.u1(id) == null) {
		      tmp = new_0(this, id, CallState$update$lambda_20(action, id));
		    } else {
		      tmp = modify(this, id, CallState$update$lambda_21);
		    }
		    return tmp;
		  };
		  protoOf(CallState).l3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda_22);
		  };
		  protoOf(CallState).g3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda_23);
		  };
		  protoOf(CallState).f3m = function (action, id) {
		    return modify(this, id, CallState$update$lambda_24);
		  };
		  protoOf(CallState).hashCode = function () {
		    var result = hashCode(this.p36_1);
		    result = imul(result, 31) + hashCode(this.q36_1) | 0;
		    result = imul(result, 31) + (this.r36_1 == null ? 0 : getStringHashCode(this.r36_1)) | 0;
		    return result;
		  };
		  protoOf(CallState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof CallState))
		      return false;
		    var tmp0_other_with_cast = other instanceof CallState ? other : THROW_CCE();
		    if (!equals(this.p36_1, tmp0_other_with_cast.p36_1))
		      return false;
		    if (!equals(this.q36_1, tmp0_other_with_cast.q36_1))
		      return false;
		    if (!(this.r36_1 == tmp0_other_with_cast.r36_1))
		      return false;
		    return true;
		  };
		  function None_1() {
		  }
		  var None_instance_1;
		  function Knocking(id) {
		    this.j38_1 = id;
		  }
		  protoOf(Knocking).toString = function () {
		    return 'Knocking(id=' + this.j38_1 + ')';
		  };
		  protoOf(Knocking).hashCode = function () {
		    return getStringHashCode(this.j38_1);
		  };
		  protoOf(Knocking).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Knocking))
		      return false;
		    var tmp0_other_with_cast = other instanceof Knocking ? other : THROW_CCE();
		    if (!(this.j38_1 === tmp0_other_with_cast.j38_1))
		      return false;
		    return true;
		  };
		  function Invited() {
		  }
		  function Joined(cid, mid, conversationName) {
		    conversationName = conversationName === VOID ? null : conversationName;
		    this.j36_1 = cid;
		    this.k36_1 = mid;
		    this.l36_1 = conversationName;
		  }
		  protoOf(Joined).m26 = function () {
		    return this.j36_1;
		  };
		  protoOf(Joined).r3m = function (_set____db54di) {
		    this.l36_1 = _set____db54di;
		  };
		  protoOf(Joined).n3i = function () {
		    return this.l36_1;
		  };
		  protoOf(Joined).toString = function () {
		    return 'Joined(cid=' + this.j36_1 + ', mid=' + this.k36_1 + ', conversationName=' + this.l36_1 + ')';
		  };
		  protoOf(Joined).hashCode = function () {
		    var result = getStringHashCode(this.j36_1);
		    result = imul(result, 31) + getStringHashCode(this.k36_1) | 0;
		    result = imul(result, 31) + (this.l36_1 == null ? 0 : getStringHashCode(this.l36_1)) | 0;
		    return result;
		  };
		  protoOf(Joined).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Joined))
		      return false;
		    var tmp0_other_with_cast = other instanceof Joined ? other : THROW_CCE();
		    if (!(this.j36_1 === tmp0_other_with_cast.j36_1))
		      return false;
		    if (!(this.k36_1 === tmp0_other_with_cast.k36_1))
		      return false;
		    if (!(this.l36_1 == tmp0_other_with_cast.l36_1))
		      return false;
		    return true;
		  };
		  function Left(cid, mid, conversationName, reasonCode) {
		    conversationName = conversationName === VOID ? null : conversationName;
		    reasonCode = reasonCode === VOID ? null : reasonCode;
		    this.i37_1 = cid;
		    this.j37_1 = mid;
		    this.k37_1 = conversationName;
		    this.l37_1 = reasonCode;
		  }
		  protoOf(Left).m26 = function () {
		    return this.i37_1;
		  };
		  protoOf(Left).r3m = function (_set____db54di) {
		    this.k37_1 = _set____db54di;
		  };
		  protoOf(Left).n3i = function () {
		    return this.k37_1;
		  };
		  protoOf(Left).toString = function () {
		    return 'Left(cid=' + this.i37_1 + ', mid=' + this.j37_1 + ', conversationName=' + this.k37_1 + ', reasonCode=' + this.l37_1 + ')';
		  };
		  protoOf(Left).hashCode = function () {
		    var result = getStringHashCode(this.i37_1);
		    result = imul(result, 31) + getStringHashCode(this.j37_1) | 0;
		    result = imul(result, 31) + (this.k37_1 == null ? 0 : getStringHashCode(this.k37_1)) | 0;
		    result = imul(result, 31) + (this.l37_1 == null ? 0 : getStringHashCode(this.l37_1)) | 0;
		    return result;
		  };
		  protoOf(Left).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Left))
		      return false;
		    var tmp0_other_with_cast = other instanceof Left ? other : THROW_CCE();
		    if (!(this.i37_1 === tmp0_other_with_cast.i37_1))
		      return false;
		    if (!(this.j37_1 === tmp0_other_with_cast.j37_1))
		      return false;
		    if (!(this.k37_1 == tmp0_other_with_cast.k37_1))
		      return false;
		    if (!(this.l37_1 == tmp0_other_with_cast.l37_1))
		      return false;
		    return true;
		  };
		  function CoreMemberStateWithCid() {
		  }
		  function Invite_0(from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code) {
		    memberState = memberState === VOID ? new Resolved(None_instance_1) : memberState;
		    hangupReceived = hangupReceived === VOID ? false : hangupReceived;
		    FS_SIP_Code = FS_SIP_Code === VOID ? 0 : FS_SIP_Code;
		    this.u36_1 = from;
		    this.v36_1 = rtcId;
		    this.w36_1 = memberId;
		    this.x36_1 = conversationId;
		    this.y36_1 = offer;
		    this.z36_1 = memberState;
		    this.a37_1 = isSocketInvite;
		    this.b37_1 = hangupReceived;
		    this.c37_1 = FS_SIP_Code;
		  }
		  protoOf(Invite_0).s3m = function (from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code) {
		    return new Invite_0(from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code);
		  };
		  protoOf(Invite_0).q37 = function (from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code, $super) {
		    from = from === VOID ? this.u36_1 : from;
		    rtcId = rtcId === VOID ? this.v36_1 : rtcId;
		    memberId = memberId === VOID ? this.w36_1 : memberId;
		    conversationId = conversationId === VOID ? this.x36_1 : conversationId;
		    offer = offer === VOID ? this.y36_1 : offer;
		    memberState = memberState === VOID ? this.z36_1 : memberState;
		    isSocketInvite = isSocketInvite === VOID ? this.a37_1 : isSocketInvite;
		    hangupReceived = hangupReceived === VOID ? this.b37_1 : hangupReceived;
		    FS_SIP_Code = FS_SIP_Code === VOID ? this.c37_1 : FS_SIP_Code;
		    return $super === VOID ? this.s3m(from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code) : $super.s3m.call(this, from, rtcId, memberId, conversationId, offer, memberState, isSocketInvite, hangupReceived, FS_SIP_Code);
		  };
		  protoOf(Invite_0).toString = function () {
		    return 'Invite(from=' + toString(this.u36_1) + ', rtcId=' + this.v36_1 + ', memberId=' + this.w36_1 + ', conversationId=' + this.x36_1 + ', offer=' + this.y36_1 + ', memberState=' + toString(this.z36_1) + ', isSocketInvite=' + this.a37_1 + ', hangupReceived=' + this.b37_1 + ', FS_SIP_Code=' + this.c37_1 + ')';
		  };
		  protoOf(Invite_0).hashCode = function () {
		    var result = hashCode(this.u36_1);
		    result = imul(result, 31) + getStringHashCode(this.v36_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.w36_1) | 0;
		    result = imul(result, 31) + getStringHashCode(this.x36_1) | 0;
		    result = imul(result, 31) + (this.y36_1 == null ? 0 : getStringHashCode(this.y36_1)) | 0;
		    result = imul(result, 31) + hashCode(this.z36_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.a37_1) | 0;
		    result = imul(result, 31) + getBooleanHashCode(this.b37_1) | 0;
		    result = imul(result, 31) + this.c37_1 | 0;
		    return result;
		  };
		  protoOf(Invite_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Invite_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof Invite_0 ? other : THROW_CCE();
		    if (!equals(this.u36_1, tmp0_other_with_cast.u36_1))
		      return false;
		    if (!(this.v36_1 === tmp0_other_with_cast.v36_1))
		      return false;
		    if (!(this.w36_1 === tmp0_other_with_cast.w36_1))
		      return false;
		    if (!(this.x36_1 === tmp0_other_with_cast.x36_1))
		      return false;
		    if (!(this.y36_1 == tmp0_other_with_cast.y36_1))
		      return false;
		    if (!equals(this.z36_1, tmp0_other_with_cast.z36_1))
		      return false;
		    if (!(this.a37_1 === tmp0_other_with_cast.a37_1))
		      return false;
		    if (!(this.b37_1 === tmp0_other_with_cast.b37_1))
		      return false;
		    if (!(this.c37_1 === tmp0_other_with_cast.c37_1))
		      return false;
		    return true;
		  };
		  function InviteReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.v3m_1.toString();
		    };
		  }
		  function InviteReducer(logger, state) {
		    state = state === VOID ? new InviteState() : state;
		    Reducer_0.call(this, logger);
		    this.v3m_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, InviteReducer$lambda(this));
		    }
		  }
		  protoOf(InviteReducer).w3m = function (_set____db54di) {
		    this.v3m_1 = _set____db54di;
		  };
		  protoOf(InviteReducer).q3j = function (_set____db54di) {
		    return this.w3m(_set____db54di instanceof InviteState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(InviteReducer).r3j = function () {
		    return this.v3m_1;
		  };
		  protoOf(InviteReducer).s3j = function () {
		    return this.v3m_1.x3m();
		  };
		  protoOf(InviteReducer).y3m = function (action, state) {
		    var tmp0_subject = action.d3e_1;
		    var tmp;
		    if (tmp0_subject instanceof ErrorReport) {
		      var tmp1_elvis_lhs = action.e3e_1.g3e_1;
		      tmp = state.q3m(action.d3e_1, tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs);
		    } else {
		      if (tmp0_subject instanceof SessionSuccessEvent) {
		        tmp = state.e3l(action.d3e_1);
		      } else {
		        if (tmp0_subject instanceof MemberInvitedEvent) {
		          var tmp2_safe_receiver = action.d3e_1.z2b_1.w29_1.c25_1;
		          var tmp_0;
		          if (tmp2_safe_receiver == null) {
		            tmp_0 = null;
		          } else {
		            // Inline function 'kotlin.let' call
		            // Inline function 'kotlin.contracts.contract' call
		            // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		            tmp_0 = state.c3m(action.d3e_1, tmp2_safe_receiver);
		          }
		          tmp = tmp_0;
		        } else {
		          if (tmp0_subject instanceof PushMemberInvitedEvent) {
		            var tmp3_safe_receiver = action.d3e_1.b2a_1.w29_1.c25_1;
		            var tmp_1;
		            if (tmp3_safe_receiver == null) {
		              tmp_1 = null;
		            } else {
		              // Inline function 'kotlin.let' call
		              // Inline function 'kotlin.contracts.contract' call
		              // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		              tmp_1 = state.c3n(action.d3e_1, tmp3_safe_receiver);
		            }
		            tmp = tmp_1;
		          } else {
		            if (tmp0_subject instanceof MemberJoinedEvent) {
		              var tmp4_safe_receiver = action.d3e_1.y2a_1.j2b_1.c25_1;
		              var tmp_2;
		              if (tmp4_safe_receiver == null) {
		                tmp_2 = null;
		              } else {
		                // Inline function 'kotlin.let' call
		                // Inline function 'kotlin.contracts.contract' call
		                // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		                tmp_2 = state.z3l(action.d3e_1, tmp4_safe_receiver);
		              }
		              tmp = tmp_2;
		            } else {
		              if (tmp0_subject instanceof MemberLeftEvent) {
		                var tmp5_safe_receiver = action.d3e_1.u2c_1.e2d_1.c25_1;
		                var tmp_3;
		                if (tmp5_safe_receiver == null) {
		                  tmp_3 = null;
		                } else {
		                  // Inline function 'kotlin.let' call
		                  // Inline function 'kotlin.contracts.contract' call
		                  // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		                  tmp_3 = state.a3m(action.d3e_1, tmp5_safe_receiver);
		                }
		                tmp = tmp_3;
		              } else {
		                if (tmp0_subject instanceof RTCHangupEvent) {
		                  var tmp6_safe_receiver = action.d3e_1.y28_1.z25_1.c25_1;
		                  var tmp_4;
		                  if (tmp6_safe_receiver == null) {
		                    tmp_4 = null;
		                  } else {
		                    // Inline function 'kotlin.let' call
		                    // Inline function 'kotlin.contracts.contract' call
		                    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		                    tmp_4 = state.x3l(action.d3e_1, tmp6_safe_receiver);
		                  }
		                  tmp = tmp_4;
		                } else {
		                  if (tmp0_subject instanceof InviteCleanup) {
		                    // Inline function 'kotlin.let' call
		                    // Inline function 'kotlin.contracts.contract' call
		                    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteReducer.reduce.<anonymous>' call
		                    state.b3n(action.d3e_1, action.d3e_1.l39_1);
		                    tmp = null;
		                  } else {
		                    if (tmp0_subject instanceof InviteReconcile) {
		                      tmp = state.a3n(action.d3e_1, action.d3e_1.a39_1);
		                    } else {
		                      if (isInterface(tmp0_subject, ApiRequest)) {
		                        var tmp7_elvis_lhs = action.e3e_1.g3e_1;
		                        var callId = tmp7_elvis_lhs == null ? '' : tmp7_elvis_lhs;
		                        var tmp8_subject = action.d3e_1;
		                        var tmp_5;
		                        if (tmp8_subject instanceof MemberKickRequest) {
		                          tmp_5 = state.u3l(action.d3e_1, callId, action.e3e_1.f3e_1);
		                        } else {
		                          if (tmp8_subject instanceof MemberJoinRequest) {
		                            tmp_5 = state.t3l(action.d3e_1, callId, action.e3e_1.f3e_1);
		                          } else {
		                            tmp_5 = null;
		                          }
		                        }
		                        tmp = tmp_5;
		                      } else {
		                        if (isInterface(tmp0_subject, ApiResponse)) {
		                          var tmp9_elvis_lhs = action.e3e_1.g3e_1;
		                          var callId_0 = tmp9_elvis_lhs == null ? '' : tmp9_elvis_lhs;
		                          var tmp_6;
		                          if (action.d3e_1 instanceof GetConversation) {
		                            tmp_6 = state.z3m(action.d3e_1, callId_0);
		                          } else {
		                            tmp_6 = null;
		                          }
		                          tmp = tmp_6;
		                        } else {
		                          tmp = null;
		                        }
		                      }
		                    }
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  };
		  protoOf(InviteReducer).w3j = function (action, state) {
		    return this.y3m(action, state instanceof InviteState ? state : THROW_CCE());
		  };
		  function InviteState$update$lambda($sdp, $from, $id, $event) {
		    return function ($this$new) {
		      var remoteDescription = new Offer($sdp);
		      return new Invite_0($from, $id, $event.z2b_1.t29_1, $event.z2b_1.s29_1.k3a_1, remoteDescription.s3a_1, VOID, true);
		    };
		  }
		  function InviteState$update$lambda_0($sdp, $from, $id, $event) {
		    return function ($this$new) {
		      var remoteDescription = new Offer($sdp);
		      var tmp0_safe_receiver = $this$new.n37_1.u1($id);
		      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.a37_1;
		      return new Invite_0($from, $id, $event.b2a_1.t29_1, $event.f2a_1, remoteDescription.s3a_1, VOID, tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
		    };
		  }
		  function InviteState$update$lambda_1($event) {
		    return function ($this$modify) {
		      $this$modify.z36_1 = toResolved($this$modify.z36_1, new Joined($event.a2b_1, $event.y2a_1.h2b_1));
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_2($action, $requestId) {
		    return function ($this$modify) {
		      $this$modify.z36_1 = toPending($this$modify.z36_1, new Joined($action.x1k_1, $action.y1k_1), $requestId);
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_3($event, this$0) {
		    return function ($this$modify) {
		      if ($event.u2c_1.d2d_1.t1w_1 === this$0.o37_1 && equals($this$modify.z36_1.r1(), None_instance_1)) {
		        var tmp_0 = $this$modify;
		        var tmp_1 = $this$modify.z36_1;
		        var tmp0_safe_receiver = $event.u2c_1.f2d_1;
		        tmp_0.z36_1 = toResolved(tmp_1, new Left($event.w2c_1, $event.u2c_1.c2d_1, VOID, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k2d_1));
		      }
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_4($event) {
		    return function ($this$modify) {
		      $this$modify.b37_1 = true;
		      $this$modify.c37_1 = $event.y28_1.b26_1.h37_1;
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_5($action, $requestId) {
		    return function ($this$modify) {
		      $this$modify.z36_1 = toPending($this$modify.z36_1, new Left($action.j1k_1, $action.k1k_1), $requestId);
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_6($this$modify) {
		    $this$modify.b37_1 = true;
		    $this$modify.z36_1 = new Resolved(new Left($this$modify.x36_1, $this$modify.w36_1, ''));
		    return Unit_instance;
		  }
		  function InviteState$update$lambda_7($action) {
		    return function ($this$modify) {
		      var tmp_0;
		      var tmp_1 = $this$modify.z36_1;
		      if (tmp_1 instanceof Pending) {
		        tmp_0 = $this$modify.z36_1.m37() === $action.j1g_1.e3e_1.f3e_1;
		      } else {
		        tmp_0 = false;
		      }
		      if (tmp_0) {
		        $this$modify.z36_1 = toFailed($this$modify.z36_1, $action.i1g_1);
		      }
		      var tmp_3;
		      var tmp_4;
		      var tmp_5;
		      var tmp_6 = $action.j1g_1.d3e_1;
		      if (tmp_6 instanceof GetConversationRequest) {
		        var tmp_7 = $action.i1g_1;
		        tmp_5 = tmp_7 instanceof CSError;
		      } else {
		        tmp_5 = false;
		      }
		      if (tmp_5) {
		        tmp_4 = $action.i1g_1.k1p_1 === 'conversation:error:not-found';
		      } else {
		        tmp_4 = false;
		      }
		      if (tmp_4) {
		        tmp_3 = equals($this$modify.z36_1.r1(), None_instance_1);
		      } else {
		        tmp_3 = false;
		      }
		      if (tmp_3) {
		        $this$modify.z36_1 = new Resolved(new Left($this$modify.x36_1, $this$modify.w36_1, ''));
		        $this$modify.b37_1 = true;
		      }
		      return Unit_instance;
		    };
		  }
		  function InviteState$update$lambda_8($action) {
		    return function ($this$modify) {
		      if (equals($action.t1i_1, ConversationState_INACTIVE_getInstance()) && equals($this$modify.z36_1.r1(), None_instance_1)) {
		        $this$modify.z36_1 = new Resolved(new Left($this$modify.x36_1, $this$modify.w36_1, ''));
		        $this$modify.b37_1 = true;
		      }
		      return Unit_instance;
		    };
		  }
		  function InviteState(invites, currentUserId) {
		    var tmp;
		    if (invites === VOID) {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      tmp = LinkedHashMap_init_$Create$();
		    } else {
		      tmp = invites;
		    }
		    invites = tmp;
		    currentUserId = currentUserId === VOID ? null : currentUserId;
		    this.n37_1 = invites;
		    this.o37_1 = currentUserId;
		    this.p37_1 = null;
		  }
		  protoOf(InviteState).b3k = function () {
		    return this.n37_1;
		  };
		  protoOf(InviteState).c3k = function (_set____db54di) {
		    this.p37_1 = _set____db54di;
		  };
		  protoOf(InviteState).e3l = function (event) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>' call
		    this.o37_1 = event.j2a_1.s2a_1;
		    this.p37_1 = null;
		    return this;
		  };
		  protoOf(InviteState).c3m = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    $l$block_0: {
		      // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>' call
		      var tmp0_elvis_lhs = event.z2b_1.y29_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        break $l$block_0;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var sdp = tmp;
		      var tmp1_elvis_lhs = event.z2b_1.w29_1.g25_1;
		      var tmp_0;
		      if (tmp1_elvis_lhs == null) {
		        break $l$block_0;
		      } else {
		        tmp_0 = tmp1_elvis_lhs;
		      }
		      var from = tmp_0;
		      // Inline function 'kotlin.takeIf' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_1;
		      // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>.<anonymous>' call
		      var tmp_2;
		      var tmp0_safe_receiver = event.z2b_1.v29_1.d3b_1;
		      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.y3a_1) === true) {
		        tmp_2 = event.z2b_1.u29_1.t1w_1 === this.o37_1;
		      } else {
		        tmp_2 = false;
		      }
		      if (tmp_2) {
		        tmp_1 = this;
		      } else {
		        tmp_1 = null;
		      }
		      var tmp2_safe_receiver = tmp_1;
		      if (tmp2_safe_receiver == null)
		        ;
		      else {
		        new_0(tmp2_safe_receiver, id, InviteState$update$lambda(sdp, from, id, event));
		      }
		    }
		    return this;
		  };
		  protoOf(InviteState).c3n = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    $l$block_0: {
		      // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>' call
		      var tmp0_elvis_lhs = event.b2a_1.y29_1;
		      var tmp;
		      if (tmp0_elvis_lhs == null) {
		        break $l$block_0;
		      } else {
		        tmp = tmp0_elvis_lhs;
		      }
		      var sdp = tmp;
		      var tmp1_elvis_lhs = event.b2a_1.w29_1.g25_1;
		      var tmp_0;
		      if (tmp1_elvis_lhs == null) {
		        break $l$block_0;
		      } else {
		        tmp_0 = tmp1_elvis_lhs;
		      }
		      var from = tmp_0;
		      // Inline function 'kotlin.takeIf' call
		      // Inline function 'kotlin.contracts.contract' call
		      var tmp_1;
		      // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>.<anonymous>' call
		      var tmp0_safe_receiver = event.b2a_1.v29_1.d3b_1;
		      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.y3a_1) === true) {
		        tmp_1 = this;
		      } else {
		        tmp_1 = null;
		      }
		      var tmp2_safe_receiver = tmp_1;
		      if (tmp2_safe_receiver == null)
		        ;
		      else {
		        new_0(tmp2_safe_receiver, id, InviteState$update$lambda_0(sdp, from, id, event));
		      }
		    }
		    return this;
		  };
		  protoOf(InviteState).z3l = function (event, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>' call
		    // Inline function 'kotlin.takeIf' call
		    // Inline function 'kotlin.contracts.contract' call
		    var tmp;
		    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>.<anonymous>' call
		    if (event.y2a_1.i2b_1.t1w_1 === this.o37_1) {
		      tmp = this;
		    } else {
		      tmp = null;
		    }
		    var tmp0_safe_receiver = tmp;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      modify(tmp0_safe_receiver, id, InviteState$update$lambda_1(event));
		    }
		    return this;
		  };
		  protoOf(InviteState).t3l = function (action, id, requestId) {
		    return modify(this, id, InviteState$update$lambda_2(action, requestId));
		  };
		  protoOf(InviteState).a3m = function (event, id) {
		    return modify(this, id, InviteState$update$lambda_3(event, this));
		  };
		  protoOf(InviteState).x3l = function (event, id) {
		    return modify(this, id, InviteState$update$lambda_4(event));
		  };
		  protoOf(InviteState).u3l = function (action, id, requestId) {
		    return modify(this, id, InviteState$update$lambda_5(action, requestId));
		  };
		  protoOf(InviteState).a3n = function (action, id) {
		    return modify(this, id, InviteState$update$lambda_6);
		  };
		  protoOf(InviteState).b3n = function (action, id) {
		    // Inline function 'kotlin.apply' call
		    // Inline function 'kotlin.contracts.contract' call
		    // Inline function 'com.vonage.clientcore.core.reducers.call.InviteState.update.<anonymous>' call
		    this.n37_1.c2(id);
		    return this;
		  };
		  protoOf(InviteState).q3m = function (action, callId) {
		    return modify(this, callId, InviteState$update$lambda_7(action));
		  };
		  protoOf(InviteState).z3m = function (action, callId) {
		    return modify(this, callId, InviteState$update$lambda_8(action));
		  };
		  protoOf(InviteState).d3n = function (invites, currentUserId) {
		    return new InviteState(invites, currentUserId);
		  };
		  protoOf(InviteState).x3m = function (invites, currentUserId, $super) {
		    invites = invites === VOID ? this.n37_1 : invites;
		    currentUserId = currentUserId === VOID ? this.o37_1 : currentUserId;
		    return $super === VOID ? this.d3n(invites, currentUserId) : $super.d3n.call(this, invites, currentUserId);
		  };
		  protoOf(InviteState).toString = function () {
		    return 'InviteState(invites=' + toString(this.n37_1) + ', currentUserId=' + this.o37_1 + ')';
		  };
		  protoOf(InviteState).hashCode = function () {
		    var result = hashCode(this.n37_1);
		    result = imul(result, 31) + (this.o37_1 == null ? 0 : getStringHashCode(this.o37_1)) | 0;
		    return result;
		  };
		  protoOf(InviteState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof InviteState))
		      return false;
		    var tmp0_other_with_cast = other instanceof InviteState ? other : THROW_CCE();
		    if (!equals(this.n37_1, tmp0_other_with_cast.n37_1))
		      return false;
		    if (!(this.o37_1 == tmp0_other_with_cast.o37_1))
		      return false;
		    return true;
		  };
		  function MediaEventReducer$lambda(this$0) {
		    return function () {
		      return 'STATE INIT: ' + this$0.g3n_1.toString();
		    };
		  }
		  function MediaEventReducer(logger, state) {
		    state = state === VOID ? new MediaEventState() : state;
		    Reducer_0.call(this, logger);
		    this.g3n_1 = state;
		    if (logger == null)
		      ;
		    else {
		      logger.v3d(VOID, MediaEventReducer$lambda(this));
		    }
		  }
		  protoOf(MediaEventReducer).h3n = function (_set____db54di) {
		    this.g3n_1 = _set____db54di;
		  };
		  protoOf(MediaEventReducer).q3j = function (_set____db54di) {
		    return this.h3n(_set____db54di instanceof MediaEventState ? _set____db54di : THROW_CCE());
		  };
		  protoOf(MediaEventReducer).r3j = function () {
		    return this.g3n_1;
		  };
		  protoOf(MediaEventReducer).s3j = function () {
		    return this.g3n_1.i3n();
		  };
		  protoOf(MediaEventReducer).j3n = function (action, state) {
		    var tmp0_subject = action.d3e_1;
		    var tmp;
		    if (tmp0_subject instanceof RTCStatsUpdate) {
		      tmp = state.l3n(action.d3e_1, action.d3e_1.q2l_1);
		    } else {
		      if (tmp0_subject instanceof MediaErrorEvent) {
		        tmp = state.k3n(action.d3e_1, action.d3e_1.o2l_1);
		      } else {
		        tmp = null;
		      }
		    }
		    return tmp;
		  };
		  protoOf(MediaEventReducer).w3j = function (action, state) {
		    return this.j3n(action, state instanceof MediaEventState ? state : THROW_CCE());
		  };
		  function MediaEventState$update$lambda($action) {
		    return function ($this$new) {
		      return $action;
		    };
		  }
		  function MediaEventState$update$lambda_0($action) {
		    return function ($this$new) {
		      return $action;
		    };
		  }
		  function MediaEventState(mediaEvents) {
		    var tmp;
		    if (mediaEvents === VOID) {
		      // Inline function 'kotlin.collections.mutableMapOf' call
		      tmp = LinkedHashMap_init_$Create$();
		    } else {
		      tmp = mediaEvents;
		    }
		    mediaEvents = tmp;
		    this.h38_1 = mediaEvents;
		    this.i38_1 = null;
		  }
		  protoOf(MediaEventState).b3k = function () {
		    return this.h38_1;
		  };
		  protoOf(MediaEventState).c3k = function (_set____db54di) {
		    this.i38_1 = _set____db54di;
		  };
		  protoOf(MediaEventState).l3n = function (action, callId) {
		    return new_0(this, callId, MediaEventState$update$lambda(action));
		  };
		  protoOf(MediaEventState).k3n = function (action, callId) {
		    return new_0(this, callId, MediaEventState$update$lambda_0(action));
		  };
		  protoOf(MediaEventState).m3n = function (mediaEvents) {
		    return new MediaEventState(mediaEvents);
		  };
		  protoOf(MediaEventState).i3n = function (mediaEvents, $super) {
		    mediaEvents = mediaEvents === VOID ? this.h38_1 : mediaEvents;
		    return $super === VOID ? this.m3n(mediaEvents) : $super.m3n.call(this, mediaEvents);
		  };
		  protoOf(MediaEventState).toString = function () {
		    return 'MediaEventState(mediaEvents=' + toString(this.h38_1) + ')';
		  };
		  protoOf(MediaEventState).hashCode = function () {
		    return hashCode(this.h38_1);
		  };
		  protoOf(MediaEventState).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof MediaEventState))
		      return false;
		    var tmp0_other_with_cast = other instanceof MediaEventState ? other : THROW_CCE();
		    if (!equals(this.h38_1, tmp0_other_with_cast.h38_1))
		      return false;
		    return true;
		  };
		  function RTCStats_0(audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter) {
		    this.e3i_1 = audioRecvPackets;
		    this.f3i_1 = audioRecvPacketsLost;
		    this.g3i_1 = audioRecvBytes;
		    this.h3i_1 = audioRecvJitter;
		    this.i3i_1 = audioSentPackets;
		    this.j3i_1 = audioSentBytes;
		    this.k3i_1 = audioSentPacketsLost;
		    this.l3i_1 = audioRtt;
		    this.m3i_1 = audioSentJitter;
		  }
		  protoOf(RTCStats_0).toString = function () {
		    return 'RTCStats(audioRecvPackets=' + this.e3i_1.toString() + ', audioRecvPacketsLost=' + this.f3i_1 + ', audioRecvBytes=' + this.g3i_1.toString() + ', audioRecvJitter=' + this.h3i_1 + ', audioSentPackets=' + this.i3i_1.toString() + ', audioSentBytes=' + this.j3i_1.toString() + ', audioSentPacketsLost=' + this.k3i_1 + ', audioRtt=' + this.l3i_1 + ', audioSentJitter=' + this.m3i_1 + ')';
		  };
		  protoOf(RTCStats_0).hashCode = function () {
		    var result = this.e3i_1.hashCode();
		    result = imul(result, 31) + this.f3i_1 | 0;
		    result = imul(result, 31) + this.g3i_1.hashCode() | 0;
		    result = imul(result, 31) + getNumberHashCode(this.h3i_1) | 0;
		    result = imul(result, 31) + this.i3i_1.hashCode() | 0;
		    result = imul(result, 31) + this.j3i_1.hashCode() | 0;
		    result = imul(result, 31) + this.k3i_1 | 0;
		    result = imul(result, 31) + getNumberHashCode(this.l3i_1) | 0;
		    result = imul(result, 31) + getNumberHashCode(this.m3i_1) | 0;
		    return result;
		  };
		  protoOf(RTCStats_0).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof RTCStats_0))
		      return false;
		    var tmp0_other_with_cast = other instanceof RTCStats_0 ? other : THROW_CCE();
		    if (!this.e3i_1.equals(tmp0_other_with_cast.e3i_1))
		      return false;
		    if (!(this.f3i_1 === tmp0_other_with_cast.f3i_1))
		      return false;
		    if (!this.g3i_1.equals(tmp0_other_with_cast.g3i_1))
		      return false;
		    if (!equals(this.h3i_1, tmp0_other_with_cast.h3i_1))
		      return false;
		    if (!this.i3i_1.equals(tmp0_other_with_cast.i3i_1))
		      return false;
		    if (!this.j3i_1.equals(tmp0_other_with_cast.j3i_1))
		      return false;
		    if (!(this.k3i_1 === tmp0_other_with_cast.k3i_1))
		      return false;
		    if (!equals(this.l3i_1, tmp0_other_with_cast.l3i_1))
		      return false;
		    if (!equals(this.m3i_1, tmp0_other_with_cast.m3i_1))
		      return false;
		    return true;
		  };
		  function Companion_152() {
		    this.n3n_1 = 'default';
		  }
		  function EventBuffer(localCounter, remoteCounter, localHead, remoteHead) {
		    localCounter = localCounter === VOID ? 0 : localCounter;
		    remoteCounter = remoteCounter === VOID ? 0 : remoteCounter;
		    localHead = localHead === VOID ? null : localHead;
		    remoteHead = remoteHead === VOID ? null : remoteHead;
		    this.l2v_1 = localCounter;
		    this.m2v_1 = remoteCounter;
		    this.n2v_1 = localHead;
		    this.o2v_1 = remoteHead;
		  }
		  protoOf(EventBuffer).toString = function () {
		    return 'EventBuffer(localCounter=' + this.l2v_1 + ', remoteCounter=' + this.m2v_1 + ', localHead=' + toString_0(this.n2v_1) + ', remoteHead=' + toString_0(this.o2v_1) + ')';
		  };
		  protoOf(EventBuffer).hashCode = function () {
		    var result = this.l2v_1;
		    result = imul(result, 31) + this.m2v_1 | 0;
		    result = imul(result, 31) + (this.n2v_1 == null ? 0 : hashCode(this.n2v_1)) | 0;
		    result = imul(result, 31) + (this.o2v_1 == null ? 0 : hashCode(this.o2v_1)) | 0;
		    return result;
		  };
		  protoOf(EventBuffer).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof EventBuffer))
		      return false;
		    var tmp0_other_with_cast = other instanceof EventBuffer ? other : THROW_CCE();
		    if (!(this.l2v_1 === tmp0_other_with_cast.l2v_1))
		      return false;
		    if (!(this.m2v_1 === tmp0_other_with_cast.m2v_1))
		      return false;
		    if (!equals(this.n2v_1, tmp0_other_with_cast.n2v_1))
		      return false;
		    if (!equals(this.o2v_1, tmp0_other_with_cast.o2v_1))
		      return false;
		    return true;
		  };
		  function get_UnitAction() {
		    _init_properties_Action_kt__mgyt1y();
		    return UnitAction;
		  }
		  var UnitAction;
		  function Action_init_$Init$(body, $this) {
		    Action_0.call($this, body, new ActionMeta());
		    return $this;
		  }
		  function Action_init_$Create$(body) {
		    return Action_init_$Init$(body, objectCreate(protoOf(Action_0)));
		  }
		  function Companion_153() {
		  }
		  protoOf(Companion_153).b3i = function (e, src) {
		    return new Action_0(new ErrorReport(e, src), src.e3e_1.b3j());
		  };
		  var Companion_instance_154;
		  function Action_0(body, meta) {
		    meta = meta === VOID ? new ActionMeta() : meta;
		    this.d3e_1 = body;
		    this.e3e_1 = meta;
		  }
		  function UnitActionable() {
		  }
		  var UnitActionable_instance;
		  function ActionMeta(uuid, entityId, callback) {
		    uuid = uuid === VOID ? generateUUID() : uuid;
		    entityId = entityId === VOID ? null : entityId;
		    callback = callback === VOID ? null : callback;
		    this.f3e_1 = uuid;
		    this.g3e_1 = entityId;
		    this.h3e_1 = callback;
		  }
		  protoOf(ActionMeta).o3n = function (uuid, entityId, callback) {
		    return new ActionMeta(uuid, entityId, callback);
		  };
		  protoOf(ActionMeta).b3j = function (uuid, entityId, callback, $super) {
		    uuid = uuid === VOID ? this.f3e_1 : uuid;
		    entityId = entityId === VOID ? this.g3e_1 : entityId;
		    callback = callback === VOID ? this.h3e_1 : callback;
		    return $super === VOID ? this.o3n(uuid, entityId, callback) : $super.o3n.call(this, uuid, entityId, callback);
		  };
		  protoOf(ActionMeta).toString = function () {
		    return 'ActionMeta(uuid=' + this.f3e_1 + ', entityId=' + this.g3e_1 + ', callback=' + toString_0(this.h3e_1) + ')';
		  };
		  protoOf(ActionMeta).hashCode = function () {
		    var result = getStringHashCode(this.f3e_1);
		    result = imul(result, 31) + (this.g3e_1 == null ? 0 : getStringHashCode(this.g3e_1)) | 0;
		    result = imul(result, 31) + (this.h3e_1 == null ? 0 : hashCode(this.h3e_1)) | 0;
		    return result;
		  };
		  protoOf(ActionMeta).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof ActionMeta))
		      return false;
		    var tmp0_other_with_cast = other instanceof ActionMeta ? other : THROW_CCE();
		    if (!(this.f3e_1 === tmp0_other_with_cast.f3e_1))
		      return false;
		    if (!(this.g3e_1 == tmp0_other_with_cast.g3e_1))
		      return false;
		    if (!equals(this.h3e_1, tmp0_other_with_cast.h3e_1))
		      return false;
		    return true;
		  };
		  var properties_initialized_Action_kt_vlp01k;
		  function _init_properties_Action_kt__mgyt1y() {
		    if (!properties_initialized_Action_kt_vlp01k) {
		      properties_initialized_Action_kt_vlp01k = true;
		      UnitAction = Action_init_$Create$(UnitActionable_instance);
		    }
		  }
		  function compose(d) {
		    return compose$lambda(d);
		  }
		  function compose$lambda($d) {
		    return function (it) {
		      // Inline function 'kotlin.collections.fold' call
		      var accumulator = it;
		      var tmp0_iterator = filterNotNull(reversed($d)).i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'com.vonage.clientcore.redux.compose.<anonymous>.<anonymous>' call
		        accumulator = element(accumulator);
		      }
		      return accumulator;
		    };
		  }
		  function Reducer$lambda() {
		    return 'Reducer created';
		  }
		  function Reducer$processAction$lambda(this$0) {
		    return function () {
		      var tmp0_elvis_lhs = getKClassFromExpression(this$0).s8();
		      return tmp0_elvis_lhs == null ? 'reducer' : tmp0_elvis_lhs;
		    };
		  }
		  function Reducer$processAction$lambda_0(this$0) {
		    return function () {
		      return 'NEW STATE ' + toString_0(this$0.r3j()) + ' - subscribers: ' + this$0.y3j_1.l();
		    };
		  }
		  function Reducer_0(logger, subscribers) {
		    var tmp;
		    if (subscribers === VOID) {
		      // Inline function 'kotlin.collections.mutableListOf' call
		      tmp = ArrayList_init_$Create$_0();
		    } else {
		      tmp = subscribers;
		    }
		    subscribers = tmp;
		    this.x3j_1 = logger;
		    this.y3j_1 = subscribers;
		    var tmp0_safe_receiver = this.x3j_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      tmp0_safe_receiver.v3d(VOID, Reducer$lambda);
		    }
		  }
		  protoOf(Reducer_0).z3j = function (action) {
		    var tmp0_safe_receiver = this.x3j_1;
		    if (tmp0_safe_receiver == null)
		      ;
		    else {
		      v_0(tmp0_safe_receiver, action, Reducer$processAction$lambda(this));
		    }
		    if (equals(action, get_UnitAction()))
		      return false;
		    var current = this.s3j();
		    var new_0 = this.w3j(action, current);
		    var hasChanged = new_0 == null ? false : current === new_0 ? true : equals(current, new_0);
		    this.q3j(new_0 == null ? this.r3j() : new_0);
		    if (hasChanged) {
		      var tmp2_safe_receiver = this.x3j_1;
		      if (tmp2_safe_receiver == null)
		        ;
		      else {
		        d_0(tmp2_safe_receiver, action, Reducer$processAction$lambda_0(this));
		      }
		    }
		    return hasChanged;
		  };
		  function Store$middleware$lambda(_anonymous_parameter_0__qggqh8) {
		    return Store$middleware$lambda$lambda;
		  }
		  function Store$middleware$lambda$lambda(a) {
		    return a;
		  }
		  function Store$subscribe$lambda($reducer, $sub) {
		    return function () {
		      $reducer.y3j_1.y1($sub);
		      return Unit_instance;
		    };
		  }
		  function Store$dispatch$lambda(this$0) {
		    return function (a) {
		      // Inline function 'kotlin.collections.fold' call
		      var this_0 = this$0.x1e_1.w1();
		      // Inline function 'kotlin.collections.mutableListOf' call
		      var accumulator = ArrayList_init_$Create$_0();
		      var tmp0_iterator = this_0.i();
		      while (tmp0_iterator.j()) {
		        var element = tmp0_iterator.k();
		        // Inline function 'com.vonage.clientcore.redux.Store.dispatch.<anonymous>.<anonymous>' call
		        var subs = accumulator;
		        if (element.z3j(a)) {
		          subs.x(element.y3j_1);
		        }
		        accumulator = subs;
		      }
		      var tmp0_iterator_0 = accumulator.i();
		      while (tmp0_iterator_0.j()) {
		        var element_0 = tmp0_iterator_0.k();
		        // Inline function 'com.vonage.clientcore.redux.Store.dispatch.<anonymous>.<anonymous>' call
		        element_0.p3n_1();
		      }
		      return a;
		    };
		  }
		  function Store_0() {
		    var tmp = this;
		    // Inline function 'kotlin.collections.mutableMapOf' call
		    tmp.x1e_1 = LinkedHashMap_init_$Create$();
		    var tmp_0 = this;
		    tmp_0.y1e_1 = Store$middleware$lambda;
		  }
		  protoOf(Store_0).z1e = function (fn) {
		    this.y1e_1 = fn(this);
		  };
		  protoOf(Store_0).c1f = function (reducers) {
		    var tmp = this;
		    // Inline function 'kotlin.collections.fold' call
		    // Inline function 'kotlin.collections.mutableMapOf' call
		    var accumulator = LinkedHashMap_init_$Create$();
		    var tmp0_iterator = reducers.i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.redux.Store.setReducers.<anonymous>' call
		      var map = accumulator;
		      // Inline function 'kotlin.collections.set' call
		      var key = getKClassFromExpression(element);
		      map.b2(key, element);
		      accumulator = map;
		    }
		    tmp.x1e_1 = accumulator;
		  };
		  protoOf(Store_0).p2v = function (key, listener) {
		    var reducer = cast(key, this.x1e_1.u1(key));
		    var sub = listener();
		    reducer.y3j_1.d(sub);
		    return Store$subscribe$lambda(reducer, sub);
		  };
		  protoOf(Store_0).g1g = function (action) {
		    var tmp = this.y1e_1;
		    tmp(Store$dispatch$lambda(this))(action);
		  };
		  protoOf(Store_0).i2v = function (key) {
		    return cast(key, this.x1e_1.u1(key)).r3j();
		  };
		  function StoredSubscription(callback) {
		    this.p3n_1 = callback;
		  }
		  function getQueryParameter(_this__u8e3s4, parameter) {
		    var query = substringAfter(_this__u8e3s4, '?');
		    var queryParams = split(query, ['&']);
		    var tmp0_iterator = queryParams.i();
		    while (tmp0_iterator.j()) {
		      var param = tmp0_iterator.k();
		      var pair = split(param, ['=']);
		      if (pair.l() === 2 && pair.m(0) === parameter) {
		        return pair.m(1);
		      }
		    }
		    return null;
		  }
		  function toMaskedString(_this__u8e3s4, properties) {
		    var tmp = getKClassFromExpression(_this__u8e3s4).s8();
		    // Inline function 'kotlin.collections.map' call
		    var this_0 = maskTokenProperty(properties);
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(this_0.l());
		    // Inline function 'kotlin.collections.iterator' call
		    var tmp0_iterator = this_0.x1().i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.utils.toMaskedString.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var key = item.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var value = item.r1();
		      var tmp$ret$3 = key + '=' + value;
		      destination.d(tmp$ret$3);
		    }
		    return '' + tmp + '(' + joinToString(destination, ', ') + ')';
		  }
		  function maskAuthHeader(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.mapValues' call
		    // Inline function 'kotlin.collections.mapValuesTo' call
		    var destination = LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.l()));
		    // Inline function 'kotlin.collections.associateByTo' call
		    var tmp0_iterator = _this__u8e3s4.x1().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
		      var tmp = element.q1();
		      // Inline function 'com.vonage.clientcore.utils.maskAuthHeader.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var key = element.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var value = element.r1();
		      var tmp_0;
		      if (key === 'Authorization' && startsWith(value, 'bearer ', true)) {
		        tmp_0 = 'Bearer <token>';
		      } else {
		        tmp_0 = value;
		      }
		      var tmp$ret$3 = tmp_0;
		      destination.b2(tmp, tmp$ret$3);
		    }
		    return destination;
		  }
		  function maskTokenProperty(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.mapValues' call
		    // Inline function 'kotlin.collections.mapValuesTo' call
		    var destination = LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.l()));
		    // Inline function 'kotlin.collections.associateByTo' call
		    var tmp0_iterator = _this__u8e3s4.x1().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
		      var tmp = element.q1();
		      // Inline function 'com.vonage.clientcore.utils.maskTokenProperty.<anonymous>' call
		      // Inline function 'kotlin.collections.component1' call
		      var key = element.q1();
		      // Inline function 'kotlin.collections.component2' call
		      var value = element.r1();
		      var tmp_0;
		      if (key === 'token' && !(value === 'null')) {
		        tmp_0 = '<token>';
		      } else {
		        tmp_0 = value;
		      }
		      var tmp$ret$3 = tmp_0;
		      destination.b2(tmp, tmp$ret$3);
		    }
		    return destination;
		  }
		  function toJsonElement(_this__u8e3s4) {
		    var tmp;
		    if (isNumber(_this__u8e3s4)) {
		      tmp = JsonPrimitive_1(_this__u8e3s4);
		    } else {
		      if (!(_this__u8e3s4 == null) ? typeof _this__u8e3s4 === 'boolean' : false) {
		        tmp = JsonPrimitive_0(_this__u8e3s4);
		      } else {
		        if (!(_this__u8e3s4 == null) ? typeof _this__u8e3s4 === 'string' : false) {
		          tmp = JsonPrimitive(_this__u8e3s4);
		        } else {
		          if (!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) {
		            tmp = toJsonArray(_this__u8e3s4);
		          } else {
		            if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtList) : false) {
		              tmp = toJsonArray_0(_this__u8e3s4);
		            } else {
		              if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, KtMap) : false) {
		                tmp = toJsonObject(_this__u8e3s4);
		              } else {
		                if (_this__u8e3s4 instanceof JsonElement) {
		                  tmp = _this__u8e3s4;
		                } else {
		                  if (_this__u8e3s4 instanceof Serializable) {
		                    // Inline function 'kotlinx.serialization.json.encodeToJsonElement' call
		                    var this_0 = Default_getInstance();
		                    // Inline function 'kotlinx.serialization.serializer' call
		                    var this_1 = this_0.wj();
		                    // Inline function 'kotlinx.serialization.internal.cast' call
		                    var this_2 = serializer(this_1, createKType(getKClass(Serializable), arrayOf([]), false));
		                    var tmp$ret$1 = isInterface(this_2, KSerializer) ? this_2 : THROW_CCE();
		                    tmp = this_0.e11(tmp$ret$1, _this__u8e3s4);
		                  } else {
		                    tmp = JsonNull_getInstance();
		                  }
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    return tmp;
		  }
		  function toJsonArray(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.map' call
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(_this__u8e3s4.length);
		    var inductionVariable = 0;
		    var last = _this__u8e3s4.length;
		    while (inductionVariable < last) {
		      var item = _this__u8e3s4[inductionVariable];
		      inductionVariable = inductionVariable + 1 | 0;
		      // Inline function 'com.vonage.clientcore.utils.toJsonArray.<anonymous>' call
		      var tmp$ret$0 = toJsonElement(item);
		      destination.d(tmp$ret$0);
		    }
		    return new JsonArray(destination);
		  }
		  function toJsonArray_0(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.map' call
		    // Inline function 'kotlin.collections.mapTo' call
		    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
		    var tmp0_iterator = _this__u8e3s4.i();
		    while (tmp0_iterator.j()) {
		      var item = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.utils.toJsonArray.<anonymous>' call
		      var tmp$ret$0 = toJsonElement(item);
		      destination.d(tmp$ret$0);
		    }
		    return new JsonArray(destination);
		  }
		  function toJsonObject(_this__u8e3s4) {
		    // Inline function 'kotlin.collections.mapValues' call
		    // Inline function 'kotlin.collections.mapKeys' call
		    // Inline function 'kotlin.collections.mapKeysTo' call
		    var destination = LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.l()));
		    // Inline function 'kotlin.collections.associateByTo' call
		    var tmp0_iterator = _this__u8e3s4.x1().i();
		    while (tmp0_iterator.j()) {
		      var element = tmp0_iterator.k();
		      // Inline function 'com.vonage.clientcore.utils.toJsonObject.<anonymous>' call
		      var tmp = toString_0(element.q1());
		      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
		      var tmp$ret$1 = element.r1();
		      destination.b2(tmp, tmp$ret$1);
		    }
		    // Inline function 'kotlin.collections.mapValuesTo' call
		    var destination_0 = LinkedHashMap_init_$Create$_0(mapCapacity(destination.l()));
		    // Inline function 'kotlin.collections.associateByTo' call
		    var tmp0_iterator_0 = destination.x1().i();
		    while (tmp0_iterator_0.j()) {
		      var element_0 = tmp0_iterator_0.k();
		      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
		      var tmp_0 = element_0.q1();
		      // Inline function 'com.vonage.clientcore.utils.toJsonObject.<anonymous>' call
		      var tmp$ret$6 = toJsonElement(element_0.r1());
		      destination_0.b2(tmp_0, tmp$ret$6);
		    }
		    return new JsonObject(destination_0);
		  }
		  function Companion_154() {
		  }
		  protoOf(Companion_154).d3i = function (stats) {
		    var jitterTime = stats.h3i_1;
		    var recvPkts = stats.e3i_1;
		    var lostPkts = stats.f3i_1;
		    var average = 100.0;
		    var packetLoss = 0.0;
		    var rValue;
		    // Inline function 'kotlin.Long.plus' call
		    if (recvPkts.m2(toLong(lostPkts)).v(new Long(0, 0)) > 0) {
		      // Inline function 'kotlin.Long.plus' call
		      packetLoss = 100.0 * (lostPkts / recvPkts.m2(toLong(lostPkts)).c3());
		    }
		    var effectiveLatency = average + jitterTime * 2 + 10;
		    var tmp;
		    if (effectiveLatency < 160) {
		      tmp = 93.2 - effectiveLatency / 40;
		    } else {
		      tmp = 93.2 - (effectiveLatency - 120) / 10;
		    }
		    rValue = tmp;
		    rValue = rValue - packetLoss * 2.5;
		    if (rValue < 1) {
		      rValue = 1.0;
		    }
		    return 1 + 0.035 * rValue + 7.0E-6 * rValue * (rValue - 60) * (100 - rValue);
		  };
		  var Companion_instance_155;
		  function None_2() {
		    Option.call(this);
		  }
		  function Some(value) {
		    Option.call(this);
		    this.e1y_1 = value;
		  }
		  protoOf(Some).toString = function () {
		    return 'Some(value=' + toString_0(this.e1y_1) + ')';
		  };
		  protoOf(Some).hashCode = function () {
		    return this.e1y_1 == null ? 0 : hashCode(this.e1y_1);
		  };
		  protoOf(Some).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Some))
		      return false;
		    var tmp0_other_with_cast = other instanceof Some ? other : THROW_CCE();
		    if (!equals(this.e1y_1, tmp0_other_with_cast.e1y_1))
		      return false;
		    return true;
		  };
		  function Companion_155() {
		  }
		  protoOf(Companion_155).q3n = function (typeSerial0) {
		    return new OptionSerializer(typeSerial0);
		  };
		  protoOf(Companion_155).pr = function (typeParamsSerializers) {
		    return this.q3n(typeParamsSerializers[0]);
		  };
		  var Companion_instance_156;
		  function Companion_getInstance_157() {
		    return Companion_instance_156;
		  }
		  function Option() {
		  }
		  protoOf(Option).n1s = function () {
		    var tmp;
		    if (this instanceof None_2) {
		      tmp = null;
		    } else {
		      if (this instanceof Some) {
		        tmp = this.e1y_1;
		      } else {
		        noWhenBranchMatchedException();
		      }
		    }
		    return tmp;
		  };
		  protoOf(Option).a34 = function (value) {
		    var tmp;
		    if (this instanceof None_2) {
		      tmp = false;
		    } else {
		      if (this instanceof Some) {
		        tmp = equals(this.e1y_1, value);
		      } else {
		        noWhenBranchMatchedException();
		      }
		    }
		    return tmp;
		  };
		  protoOf(Option).b34 = function (f) {
		    var tmp;
		    if (this instanceof None_2) {
		      tmp = new None_2();
		    } else {
		      if (this instanceof Some) {
		        var tmp1_safe_receiver = this.e1y_1;
		        var tmp_0;
		        if (tmp1_safe_receiver == null) {
		          tmp_0 = null;
		        } else {
		          // Inline function 'kotlin.let' call
		          // Inline function 'kotlin.contracts.contract' call
		          // Inline function 'com.vonage.clientcore.utils.Option.mapNotNull.<anonymous>' call
		          tmp_0 = new Some(f(tmp1_safe_receiver));
		        }
		        var tmp2_elvis_lhs = tmp_0;
		        tmp = tmp2_elvis_lhs == null ? some(null) : tmp2_elvis_lhs;
		      } else {
		        noWhenBranchMatchedException();
		      }
		    }
		    return tmp;
		  };
		  protoOf(Option).equals = function (other) {
		    var tmp;
		    if (other instanceof None_2) {
		      tmp = this instanceof None_2;
		    } else {
		      if (other instanceof Some) {
		        var tmp_0;
		        if (this instanceof Some) {
		          tmp_0 = equals(this.e1y_1, other.e1y_1);
		        } else {
		          tmp_0 = false;
		        }
		        tmp = tmp_0;
		      } else {
		        tmp = false;
		      }
		    }
		    return tmp;
		  };
		  protoOf(Option).hashCode = function () {
		    var tmp;
		    if (this instanceof None_2) {
		      tmp = 0;
		    } else {
		      if (this instanceof Some) {
		        // Inline function 'kotlin.hashCode' call
		        var tmp0_safe_receiver = this.e1y_1;
		        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
		        tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
		      } else {
		        noWhenBranchMatchedException();
		      }
		    }
		    return tmp;
		  };
		  function none() {
		    return new None_2();
		  }
		  function some(value) {
		    return new Some(value);
		  }
		  function getSessionUserOrError(_this__u8e3s4, callback) {
		    var sessionState = _this__u8e3s4.i2v(getKClass(SessionReducer));
		    var s = sessionState.a35_1.r1();
		    var tmp;
		    if (s instanceof Active) {
		      tmp = s.h2m_1;
		    } else {
		      // Inline function 'kotlin.let' call
		      invokeCallbackWithError(new SessionNoActiveSessionError(), callback);
		      // Inline function 'kotlin.contracts.contract' call
		      // Inline function 'com.vonage.clientcore.utils.getSessionUserOrError.<anonymous>' call
		      tmp = null;
		    }
		    return tmp;
		  }
		  function getSessionUserOrError_0(_this__u8e3s4, callback) {
		    return getSessionUserOrError(_this__u8e3s4, getSessionUserOrError$lambda(callback));
		  }
		  function getSessionUserOrError$lambda($callback) {
		    return function (exception, _anonymous_parameter_1__qggqgd) {
		      $callback(exception);
		      return Unit_instance;
		    };
		  }
		  function Pending(value, future, requestId) {
		    StateTransition.call(this);
		    this.r3n_1 = value;
		    this.s3n_1 = future;
		    this.t3n_1 = requestId;
		  }
		  protoOf(Pending).r1 = function () {
		    return this.r3n_1;
		  };
		  protoOf(Pending).m37 = function () {
		    return this.t3n_1;
		  };
		  protoOf(Pending).toString = function () {
		    return 'Pending(value=' + toString_0(this.r3n_1) + ', future=' + toString_0(this.s3n_1) + ', requestId=' + this.t3n_1 + ')';
		  };
		  protoOf(Pending).hashCode = function () {
		    var result = this.r3n_1 == null ? 0 : hashCode(this.r3n_1);
		    result = imul(result, 31) + (this.s3n_1 == null ? 0 : hashCode(this.s3n_1)) | 0;
		    result = imul(result, 31) + getStringHashCode(this.t3n_1) | 0;
		    return result;
		  };
		  protoOf(Pending).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Pending))
		      return false;
		    var tmp0_other_with_cast = other instanceof Pending ? other : THROW_CCE();
		    if (!equals(this.r3n_1, tmp0_other_with_cast.r3n_1))
		      return false;
		    if (!equals(this.s3n_1, tmp0_other_with_cast.s3n_1))
		      return false;
		    if (!(this.t3n_1 === tmp0_other_with_cast.t3n_1))
		      return false;
		    return true;
		  };
		  function Resolved(value, requestId) {
		    requestId = requestId === VOID ? null : requestId;
		    StateTransition.call(this);
		    this.u3n_1 = value;
		    this.v3n_1 = requestId;
		  }
		  protoOf(Resolved).r1 = function () {
		    return this.u3n_1;
		  };
		  protoOf(Resolved).m37 = function () {
		    return this.v3n_1;
		  };
		  protoOf(Resolved).toString = function () {
		    return 'Resolved(value=' + toString_0(this.u3n_1) + ', requestId=' + this.v3n_1 + ')';
		  };
		  protoOf(Resolved).hashCode = function () {
		    var result = this.u3n_1 == null ? 0 : hashCode(this.u3n_1);
		    result = imul(result, 31) + (this.v3n_1 == null ? 0 : getStringHashCode(this.v3n_1)) | 0;
		    return result;
		  };
		  protoOf(Resolved).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Resolved))
		      return false;
		    var tmp0_other_with_cast = other instanceof Resolved ? other : THROW_CCE();
		    if (!equals(this.u3n_1, tmp0_other_with_cast.u3n_1))
		      return false;
		    if (!(this.v3n_1 == tmp0_other_with_cast.v3n_1))
		      return false;
		    return true;
		  };
		  function Failed(error, value, requestId) {
		    requestId = requestId === VOID ? null : requestId;
		    StateTransition.call(this);
		    this.k35_1 = error;
		    this.l35_1 = value;
		    this.m35_1 = requestId;
		  }
		  protoOf(Failed).r1 = function () {
		    return this.l35_1;
		  };
		  protoOf(Failed).m37 = function () {
		    return this.m35_1;
		  };
		  protoOf(Failed).toString = function () {
		    return 'Failed(error=' + this.k35_1.toString() + ', value=' + toString_0(this.l35_1) + ', requestId=' + this.m35_1 + ')';
		  };
		  protoOf(Failed).hashCode = function () {
		    var result = this.k35_1.hashCode();
		    result = imul(result, 31) + (this.l35_1 == null ? 0 : hashCode(this.l35_1)) | 0;
		    result = imul(result, 31) + (this.m35_1 == null ? 0 : getStringHashCode(this.m35_1)) | 0;
		    return result;
		  };
		  protoOf(Failed).equals = function (other) {
		    if (this === other)
		      return true;
		    if (!(other instanceof Failed))
		      return false;
		    var tmp0_other_with_cast = other instanceof Failed ? other : THROW_CCE();
		    if (!this.k35_1.equals(tmp0_other_with_cast.k35_1))
		      return false;
		    if (!equals(this.l35_1, tmp0_other_with_cast.l35_1))
		      return false;
		    if (!(this.m35_1 == tmp0_other_with_cast.m35_1))
		      return false;
		    return true;
		  };
		  function StateTransition() {
		  }
		  function toResolved(_this__u8e3s4, value) {
		    return new Resolved(value, _this__u8e3s4.m37());
		  }
		  function toPending(_this__u8e3s4, future, requestId) {
		    return new Pending(_this__u8e3s4.r1(), future, requestId);
		  }
		  function toFailed(_this__u8e3s4, err) {
		    var tmp;
		    if (_this__u8e3s4 instanceof Pending) {
		      tmp = new Failed(new Pair(_this__u8e3s4.s3n_1, err), _this__u8e3s4.r1(), _this__u8e3s4.t3n_1);
		    } else {
		      if (_this__u8e3s4 instanceof Resolved) {
		        tmp = _this__u8e3s4;
		      } else {
		        if (_this__u8e3s4 instanceof Failed) {
		          tmp = _this__u8e3s4;
		        } else {
		          noWhenBranchMatchedException();
		        }
		      }
		    }
		    return tmp;
		  }
		  function generateUUID() {
		    return uuidToken(8) + '-' + uuidToken(4) + '-' + uuidToken(4) + '-' + uuidToken(4) + '-' + uuidToken(12);
		  }
		  function uuidToken(len) {
		    var chars = listOf([new Char(_Char___init__impl__6a9atx(97)), new Char(_Char___init__impl__6a9atx(98)), new Char(_Char___init__impl__6a9atx(99)), new Char(_Char___init__impl__6a9atx(100)), new Char(_Char___init__impl__6a9atx(101)), new Char(_Char___init__impl__6a9atx(102))]);
		    var res = '';
		    var inductionVariable = 1;
		    if (inductionVariable <= len)
		      do {
		        var i = inductionVariable;
		        inductionVariable = inductionVariable + 1 | 0;
		        // Inline function 'kotlin.ranges.random' call
		        var this_0 = numberRangeToNumber(0, 15);
		        var n = random(this_0, Default_getInstance_0());
		        var c = n < 10 ? n : chars.m(n - 10 | 0);
		        res = res + toString(c);
		      }
		       while (!(i === len));
		    return res;
		  }
		  function generateTimeStamp() {
		    var tmp = Date.now();
		    return isNumber(tmp) ? tmp : THROW_CCE();
		  }
		  //region block: post-declaration
		  protoOf(CoreClientImpl).x1d = getConversationEvents$default;
		  protoOf(CoreClientImpl).y1d = sendMessageEvent$default;
		  protoOf(UpdateSessionRequest).s1g = queryParams;
		  protoOf(UpdateSessionRequest).t1g = isSanitized;
		  protoOf($serializer).hr = typeParametersSerializers;
		  protoOf($serializer_0).hr = typeParametersSerializers;
		  protoOf($serializer_1).hr = typeParametersSerializers;
		  protoOf(MetricsWsReconnectionTimeReq).s1g = queryParams;
		  protoOf(MetricsWsReconnectionTimeReq).t1g = isSanitized;
		  protoOf($serializer_2).hr = typeParametersSerializers;
		  protoOf(GetLegRequest).s1g = queryParams;
		  protoOf(GetLegRequest).q1g = encode;
		  protoOf(GetLegRequest).t1g = isSanitized;
		  protoOf($serializer_3).hr = typeParametersSerializers;
		  protoOf(GetConversationRequest).s1g = queryParams;
		  protoOf(GetConversationRequest).q1g = encode;
		  protoOf(GetConversationRequest).t1g = isSanitized;
		  protoOf($serializer_4).hr = typeParametersSerializers;
		  protoOf($serializer_5).hr = typeParametersSerializers;
		  protoOf(GetConversationLegsRequest).q1g = encode;
		  protoOf(GetConversationLegsRequest).t1g = isSanitized;
		  protoOf($serializer_6).hr = typeParametersSerializers;
		  protoOf($serializer_7).hr = typeParametersSerializers;
		  protoOf($serializer_8).hr = typeParametersSerializers;
		  protoOf($serializer_9).hr = typeParametersSerializers;
		  protoOf(AppKnockingRequest).s1g = queryParams;
		  protoOf(AppKnockingRequest).t1g = isSanitized;
		  protoOf(MemberKickRequest).t1g = isSanitized;
		  protoOf($serializer_10).hr = typeParametersSerializers;
		  protoOf($serializer_11).hr = typeParametersSerializers;
		  protoOf(MemberJoinRequest).s1g = queryParams;
		  protoOf(MemberJoinRequest).t1g = isSanitized;
		  protoOf(DeleteKnockerRequest).s1g = queryParams;
		  protoOf(DeleteKnockerRequest).t1g = isSanitized;
		  protoOf($serializer_12).hr = typeParametersSerializers;
		  protoOf($serializer_13).hr = typeParametersSerializers;
		  protoOf(LegMuteRequest).s1g = queryParams;
		  protoOf(LegMuteRequest).t1g = isSanitized;
		  protoOf($serializer_14).hr = typeParametersSerializers;
		  protoOf($serializer_15).hr = typeParametersSerializers;
		  protoOf(LegUnmuteRequest).s1g = queryParams;
		  protoOf(LegUnmuteRequest).t1g = isSanitized;
		  protoOf($serializer_16).hr = typeParametersSerializers;
		  protoOf($serializer_17).hr = typeParametersSerializers;
		  protoOf(LegEarmuffEnableRequest).s1g = queryParams;
		  protoOf(LegEarmuffEnableRequest).t1g = isSanitized;
		  protoOf($serializer_18).hr = typeParametersSerializers;
		  protoOf($serializer_19).hr = typeParametersSerializers;
		  protoOf(LegEarmuffDisableRequest).s1g = queryParams;
		  protoOf(LegEarmuffDisableRequest).t1g = isSanitized;
		  protoOf($serializer_20).hr = typeParametersSerializers;
		  protoOf($serializer_21).hr = typeParametersSerializers;
		  protoOf(LegDTMFRequest).s1g = queryParams;
		  protoOf(LegDTMFRequest).t1g = isSanitized;
		  protoOf($serializer_22).hr = typeParametersSerializers;
		  protoOf($serializer_23).hr = typeParametersSerializers;
		  protoOf(AudioSayRequest).s1g = queryParams;
		  protoOf(AudioSayRequest).t1g = isSanitized;
		  protoOf($serializer_24).hr = typeParametersSerializers;
		  protoOf($serializer_25).hr = typeParametersSerializers;
		  defineProp(protoOf(CSError), 'message', function () {
		    return this.k8();
		  });
		  protoOf(GetMyMemberRequest).s1g = queryParams;
		  protoOf(GetMyMemberRequest).q1g = encode;
		  protoOf(GetMyMemberRequest).t1g = isSanitized;
		  protoOf($serializer_26).hr = typeParametersSerializers;
		  protoOf($serializer_27).hr = typeParametersSerializers;
		  protoOf($serializer_28).hr = typeParametersSerializers;
		  protoOf($serializer_29).hr = typeParametersSerializers;
		  protoOf(PostConversationEventRequest).s1g = queryParams;
		  protoOf($serializer_30).hr = typeParametersSerializers;
		  protoOf(UpdateEventStateRequestBody).t1g = isSanitized_0;
		  protoOf($serializer_31).hr = typeParametersSerializers;
		  protoOf(CreateConversationRequest).s1g = queryParams;
		  protoOf($serializer_32).hr = typeParametersSerializers;
		  protoOf($serializer_33).hr = typeParametersSerializers;
		  protoOf($serializer_34).hr = typeParametersSerializers;
		  protoOf(UpdateConversationRequest).s1g = queryParams;
		  protoOf($serializer_35).hr = typeParametersSerializers;
		  protoOf($serializer_36).hr = typeParametersSerializers;
		  protoOf($serializer_37).hr = typeParametersSerializers;
		  protoOf(ConversationJoinRequest).s1g = queryParams;
		  protoOf(ConversationJoinRequest).t1g = isSanitized;
		  protoOf($serializer_38).hr = typeParametersSerializers;
		  protoOf($serializer_39).hr = typeParametersSerializers;
		  protoOf($serializer_40).hr = typeParametersSerializers;
		  protoOf($serializer_41).hr = typeParametersSerializers;
		  protoOf($serializer_42).hr = typeParametersSerializers;
		  protoOf($serializer_43).hr = typeParametersSerializers;
		  protoOf(ConversationInviteRequest).s1g = queryParams;
		  protoOf(ConversationInviteRequest).t1g = isSanitized;
		  protoOf($serializer_44).hr = typeParametersSerializers;
		  protoOf(ConversationDeleteRequest).s1g = queryParams;
		  protoOf(ConversationDeleteRequest).t1g = isSanitized;
		  protoOf(GetUserConversationsRequest).q1g = encode;
		  protoOf(GetUserConversationsRequest).t1g = isSanitized;
		  protoOf($serializer_45).hr = typeParametersSerializers;
		  protoOf($serializer_46).hr = typeParametersSerializers;
		  protoOf(GetConversationEventsRequest).q1g = encode;
		  protoOf(GetConversationEventsRequest).t1g = isSanitized;
		  protoOf($serializer_47).hr = typeParametersSerializers;
		  protoOf($serializer_48).hr = typeParametersSerializers;
		  protoOf(GetConversationMembersRequest).q1g = encode;
		  protoOf(GetConversationMembersRequest).t1g = isSanitized;
		  protoOf($serializer_49).hr = typeParametersSerializers;
		  protoOf($serializer_50).hr = typeParametersSerializers;
		  protoOf(GetConversationMemberRequest).s1g = queryParams;
		  protoOf(GetConversationMemberRequest).q1g = encode;
		  protoOf(GetConversationMemberRequest).t1g = isSanitized;
		  protoOf($serializer_51).hr = typeParametersSerializers;
		  protoOf($serializer_52).hr = typeParametersSerializers;
		  protoOf(DeleteConversationEventRequest).q1g = encode;
		  protoOf(DeleteConversationEventRequest).t1g = isSanitized;
		  protoOf($serializer_53).hr = typeParametersSerializers;
		  protoOf($serializer_54).hr = typeParametersSerializers;
		  protoOf($serializer_55).hr = typeParametersSerializers;
		  protoOf($serializer_56).hr = typeParametersSerializers;
		  protoOf(GetUserRequest).s1g = queryParams;
		  protoOf(GetUserRequest).q1g = encode;
		  protoOf(GetUserRequest).t1g = isSanitized;
		  protoOf($serializer_57).hr = typeParametersSerializers;
		  protoOf(RTCStatsReportRequest).s1g = queryParams;
		  protoOf(RTCStatsReportRequest).t1g = isSanitized;
		  protoOf($serializer_58).hr = typeParametersSerializers;
		  protoOf($serializer_59).hr = typeParametersSerializers;
		  protoOf($serializer_60).hr = typeParametersSerializers;
		  protoOf(PostLegRequest).s1g = queryParams;
		  protoOf(PostLegRequest).t1g = isSanitized;
		  protoOf($serializer_61).hr = typeParametersSerializers;
		  protoOf($serializer_62).hr = typeParametersSerializers;
		  protoOf($serializer_63).hr = typeParametersSerializers;
		  protoOf(RTCAnswerRequest).s1g = queryParams;
		  protoOf(RTCAnswerRequest).t1g = isSanitized;
		  protoOf($serializer_64).hr = typeParametersSerializers;
		  protoOf($serializer_65).hr = typeParametersSerializers;
		  protoOf($serializer_66).hr = typeParametersSerializers;
		  protoOf(RTCReconnectRequest).s1g = queryParams;
		  protoOf(RTCReconnectRequest).t1g = isSanitized;
		  protoOf($serializer_67).hr = typeParametersSerializers;
		  protoOf($serializer_68).hr = typeParametersSerializers;
		  protoOf($serializer_69).hr = typeParametersSerializers;
		  protoOf($serializer_70).hr = typeParametersSerializers;
		  protoOf($serializer_71).hr = typeParametersSerializers;
		  protoOf($serializer_72).hr = typeParametersSerializers;
		  protoOf($serializer_73).hr = typeParametersSerializers;
		  protoOf($serializer_74).hr = typeParametersSerializers;
		  protoOf($serializer_75).hr = typeParametersSerializers;
		  protoOf($serializer_76).hr = typeParametersSerializers;
		  protoOf($serializer_77).hr = typeParametersSerializers;
		  protoOf($serializer_78).hr = typeParametersSerializers;
		  protoOf($serializer_79).hr = typeParametersSerializers;
		  protoOf(CSConversationEventJsonBody).t1g = isSanitized_0;
		  protoOf($serializer_80).hr = typeParametersSerializers;
		  protoOf($serializer_81).hr = typeParametersSerializers;
		  protoOf($serializer_82).hr = typeParametersSerializers;
		  protoOf($serializer_83).hr = typeParametersSerializers;
		  protoOf($serializer_84).hr = typeParametersSerializers;
		  protoOf($serializer_85).hr = typeParametersSerializers;
		  protoOf($serializer_86).hr = typeParametersSerializers;
		  protoOf($serializer_87).hr = typeParametersSerializers;
		  protoOf($serializer_88).hr = typeParametersSerializers;
		  protoOf($serializer_89).hr = typeParametersSerializers;
		  protoOf($serializer_90).hr = typeParametersSerializers;
		  protoOf($serializer_91).hr = typeParametersSerializers;
		  protoOf($serializer_92).hr = typeParametersSerializers;
		  protoOf($serializer_93).hr = typeParametersSerializers;
		  protoOf($serializer_94).hr = typeParametersSerializers;
		  protoOf($serializer_95).hr = typeParametersSerializers;
		  protoOf($serializer_96).hr = typeParametersSerializers;
		  protoOf($serializer_97).hr = typeParametersSerializers;
		  protoOf($serializer_98).hr = typeParametersSerializers;
		  protoOf($serializer_99).hr = typeParametersSerializers;
		  protoOf($serializer_100).hr = typeParametersSerializers;
		  protoOf($serializer_101).hr = typeParametersSerializers;
		  protoOf($serializer_102).hr = typeParametersSerializers;
		  protoOf($serializer_103).hr = typeParametersSerializers;
		  protoOf($serializer_104).hr = typeParametersSerializers;
		  protoOf($serializer_105).hr = typeParametersSerializers;
		  protoOf($serializer_106).hr = typeParametersSerializers;
		  protoOf($serializer_107).hr = typeParametersSerializers;
		  protoOf($serializer_108).hr = typeParametersSerializers;
		  protoOf($serializer_109).hr = typeParametersSerializers;
		  protoOf($serializer_110).hr = typeParametersSerializers;
		  protoOf($serializer_111).hr = typeParametersSerializers;
		  protoOf($serializer_112).hr = typeParametersSerializers;
		  protoOf($serializer_113).hr = typeParametersSerializers;
		  protoOf($serializer_114).hr = typeParametersSerializers;
		  protoOf($serializer_115).hr = typeParametersSerializers;
		  protoOf($serializer_116).hr = typeParametersSerializers;
		  protoOf($serializer_117).hr = typeParametersSerializers;
		  protoOf($serializer_118).hr = typeParametersSerializers;
		  protoOf($serializer_119).hr = typeParametersSerializers;
		  protoOf($serializer_120).hr = typeParametersSerializers;
		  protoOf($serializer_121).hr = typeParametersSerializers;
		  protoOf($serializer_122).hr = typeParametersSerializers;
		  protoOf($serializer_123).hr = typeParametersSerializers;
		  protoOf($serializer_124).hr = typeParametersSerializers;
		  protoOf($serializer_125).hr = typeParametersSerializers;
		  protoOf($serializer_126).hr = typeParametersSerializers;
		  protoOf($serializer_127).hr = typeParametersSerializers;
		  protoOf($serializer_128).hr = typeParametersSerializers;
		  protoOf($serializer_129).hr = typeParametersSerializers;
		  protoOf($serializer_130).hr = typeParametersSerializers;
		  protoOf($serializer_131).hr = typeParametersSerializers;
		  protoOf($serializer_132).hr = typeParametersSerializers;
		  protoOf($serializer_133).hr = typeParametersSerializers;
		  protoOf($serializer_134).hr = typeParametersSerializers;
		  protoOf($serializer_135).hr = typeParametersSerializers;
		  protoOf($serializer_136).hr = typeParametersSerializers;
		  protoOf($serializer_137).hr = typeParametersSerializers;
		  protoOf($serializer_138).hr = typeParametersSerializers;
		  protoOf($serializer_139).hr = typeParametersSerializers;
		  protoOf(CustomBody).t1g = isSanitized_0;
		  protoOf(TemplateBody).t1g = isSanitized_0;
		  protoOf($serializer_140).hr = typeParametersSerializers;
		  protoOf($serializer_141).hr = typeParametersSerializers;
		  protoOf($serializer_142).hr = typeParametersSerializers;
		  protoOf($serializer_143).hr = typeParametersSerializers;
		  protoOf($serializer_144).hr = typeParametersSerializers;
		  protoOf($serializer_145).hr = typeParametersSerializers;
		  defineProp(protoOf(SessionError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionError), 'cause', function () {
		    return this.l8();
		  });
		  defineProp(protoOf(SessionConnectError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionNoActiveSessionError), 'message', function () {
		    return this.k8();
		  });
		  protoOf(DeleteSession).e2n = encode_0;
		  protoOf($serializer_146).hr = typeParametersSerializers;
		  protoOf($serializer_147).hr = typeParametersSerializers;
		  protoOf($serializer_148).hr = typeParametersSerializers;
		  protoOf($serializer_149).hr = typeParametersSerializers;
		  protoOf($serializer_150).hr = typeParametersSerializers;
		  defineProp(protoOf(SessionEmptyTokenError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionSocketTransportError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionTimeoutError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionInvalidError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionInvalidTokenError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(AuthorizationError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionExpiredTokenError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(SessionMaxOpenSessions), 'message', function () {
		    return this.k8();
		  });
		  protoOf($serializer_151).hr = typeParametersSerializers;
		  protoOf($serializer_152).hr = typeParametersSerializers;
		  protoOf($serializer_153).hr = typeParametersSerializers;
		  protoOf(ChatAPIImpl$1).j2s = onRTCHangup;
		  protoOf(ChatAPIImpl$1).k2s = onRTCTransfer;
		  protoOf(ChatAPIImpl$1).l2s = onLegStatusUpdate;
		  protoOf(ChatAPIImpl$1).m2s = onAudioSay;
		  protoOf(ChatAPIImpl$1).n2s = onAudioMuteUpdate;
		  protoOf(ChatAPIImpl$1).o2s = onAudioEarmuffUpdate;
		  protoOf(ChatAPIImpl$1).p2s = onAudioDTMFUpdate;
		  protoOf(ChatAPIImpl).x1d = getConversationEvents$default;
		  protoOf(ChatAPIImpl).y1d = sendMessageEvent$default;
		  defineProp(protoOf(InternalError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(InternalError), 'cause', function () {
		    return this.l8();
		  });
		  defineProp(protoOf(MediaClientError), 'message', function () {
		    return this.k8();
		  });
		  defineProp(protoOf(MediaClientError), 'cause', function () {
		    return this.l8();
		  });
		  protoOf($serializer_154).hr = typeParametersSerializers;
		  protoOf($serializer_155).hr = typeParametersSerializers;
		  protoOf($serializer_156).hr = typeParametersSerializers;
		  protoOf($serializer_157).hr = typeParametersSerializers;
		  protoOf($serializer_158).hr = typeParametersSerializers;
		  protoOf($serializer_159).hr = typeParametersSerializers;
		  protoOf($serializer_160).hr = typeParametersSerializers;
		  protoOf($serializer_161).hr = typeParametersSerializers;
		  protoOf($serializer_162).hr = typeParametersSerializers;
		  protoOf(VoiceAPIImpl$1).m2s = onAudioSay;
		  protoOf(VoiceAPIImpl$1).i2s = onConversationEvent;
		  protoOf($serializer_163).hr = typeParametersSerializers;
		  protoOf($serializer_164).hr = typeParametersSerializers;
		  protoOf($serializer_165).hr = typeParametersSerializers;
		  protoOf($serializer_166).hr = typeParametersSerializers;
		  protoOf($serializer_167).hr = typeParametersSerializers;
		  protoOf($serializer_168).hr = typeParametersSerializers;
		  protoOf($serializer_169).hr = typeParametersSerializers;
		  protoOf($serializer_170).hr = typeParametersSerializers;
		  protoOf($serializer_171).hr = typeParametersSerializers;
		  protoOf($serializer_172).hr = typeParametersSerializers;
		  protoOf($serializer_173).hr = typeParametersSerializers;
		  protoOf($serializer_174).hr = typeParametersSerializers;
		  protoOf($serializer_175).hr = typeParametersSerializers;
		  protoOf(LoggerAdapter).n3d = v;
		  protoOf(LoggerAdapter).o3d = d;
		  protoOf(LoggerAdapter).p3d = i;
		  protoOf(LoggerAdapter).q3d = w;
		  protoOf(LoggerAdapter).r3d = e;
		  protoOf(LoggerAdapter).s3d = e_0;
		  protoOf(HTTPClientLogger).p3e = clear;
		  protoOf(ChatAPILogger).x1d = getConversationEvents$default;
		  protoOf(ChatAPILogger).y1d = sendMessageEvent$default;
		  defineProp(protoOf(IgnoredSerializerException), 'message', function () {
		    return this.k8();
		  });
		  //endregion
		  //region block: init
		  BuildKonfig_instance = new BuildKonfig();
		  Companion_instance_75 = new Companion_74();
		  Companion_instance_77 = new Companion_76();
		  Companion_instance_78 = new Companion_77();
		  Companion_instance_79 = new Companion_78();
		  Companion_instance_80 = new Companion_79();
		  Companion_instance_81 = new Companion_80();
		  Companion_instance_83 = new Companion_82();
		  Companion_instance_84 = new Companion_83();
		  Companion_instance_86 = new Companion_85();
		  Companion_instance_87 = new Companion_86();
		  Companion_instance_88 = new Companion_87();
		  Companion_instance_89 = new Companion_88();
		  Companion_instance_90 = new Companion_89();
		  Companion_instance_91 = new Companion_90();
		  Companion_instance_92 = new Companion_91();
		  Companion_instance_93 = new Companion_92();
		  Companion_instance_95 = new Companion_94();
		  Companion_instance_96 = new Companion_95();
		  Companion_instance_97 = new Companion_96();
		  Companion_instance_98 = new Companion_97();
		  Companion_instance_99 = new Companion_98();
		  Companion_instance_101 = new Companion_100();
		  Companion_instance_102 = new Companion_101();
		  Companion_instance_103 = new Companion_102();
		  Companion_instance_104 = new Companion_103();
		  Companion_instance_105 = new Companion_104();
		  Companion_instance_106 = new Companion_105();
		  Companion_instance_107 = new Companion_106();
		  Companion_instance_108 = new Companion_107();
		  Companion_instance_109 = new Companion_108();
		  Companion_instance_110 = new Companion_109();
		  Companion_instance_111 = new Companion_110();
		  Companion_instance_112 = new Companion_111();
		  Companion_instance_113 = new Companion_112();
		  Companion_instance_114 = new Companion_113();
		  Companion_instance_115 = new Companion_114();
		  Companion_instance_116 = new Companion_115();
		  Companion_instance_117 = new Companion_116();
		  Companion_instance_118 = new Companion_117();
		  Companion_instance_119 = new Companion_118();
		  Companion_instance_120 = new Companion_119();
		  Companion_instance_124 = new Companion_123();
		  Companion_instance_125 = new Companion_124();
		  DeleteSession_instance = new DeleteSession();
		  SocketDisconnect_instance = new SocketDisconnect();
		  Companion_instance_126 = new Companion_125();
		  SocketConnectEmptyTokenError_instance = new SocketConnectEmptyTokenError();
		  Companion_instance_127 = new Companion_126();
		  Companion_instance_128 = new Companion_127();
		  Companion_instance_129 = new Companion_128();
		  Companion_instance_130 = new Companion_129();
		  Companion_instance_131 = new Companion_130();
		  Companion_instance_132 = new Companion_131();
		  Companion_instance_133 = new Companion_132();
		  Companion_instance_134 = new Companion_133();
		  new Companion_134();
		  Companion_instance_139 = new Companion_138();
		  Companion_instance_140 = new Companion_139();
		  System_instance = new System();
		  Companion_instance_142 = new Companion_141();
		  Companion_instance_143 = new Companion_142();
		  New_instance = new New();
		  Connected_instance = new Connected();
		  Disconnected_instance = new Disconnected();
		  None_instance_1 = new None_1();
		  new Companion_152();
		  Companion_instance_154 = new Companion_153();
		  UnitActionable_instance = new UnitActionable();
		  Companion_instance_155 = new Companion_154();
		  Companion_instance_156 = new Companion_155();
		  //endregion
		  //region block: exports
		  _.$_$ = _.$_$ || {};
		  _.$_$.a = UnknownSocketEvent;
		  _.$_$.b = CreateAnswerError;
		  _.$_$.c = CreateOfferError;
		  _.$_$.d = PeerConnectionNotFound;
		  _.$_$.e = ProcessAnswerError;
		  _.$_$.f = TrackNotFound;
		  _.$_$.g = VonageError;
		  _.$_$.h = CreateConversationParameters;
		  _.$_$.i = CustomConversationEvent;
		  _.$_$.j = EmbeddedInfo;
		  _.$_$.k = EphemeralConversationEvent;
		  _.$_$.l = EventDeleteConversationEvent;
		  _.$_$.m = GetCallLegsParameters;
		  _.$_$.n = GetConversationEventsParameters;
		  _.$_$.o = GetConversationMembersParameters;
		  _.$_$.p = GetConversationsParameters;
		  _.$_$.q = MemberInvitedConversationEvent;
		  _.$_$.r = MemberJoinedConversationEvent;
		  _.$_$.s = MemberLeftConversationEvent;
		  _.$_$.t = MessageAudioEvent;
		  _.$_$.u = MessageCustomEvent;
		  _.$_$.v = MessageDeliveredEvent;
		  _.$_$.w = MessageFileEvent;
		  _.$_$.x = MessageImageEvent;
		  _.$_$.y = Location;
		  _.$_$.z = MessageLocationEvent;
		  _.$_$.a1 = MessageRejectedEvent;
		  _.$_$.b1 = MessageSeenEvent;
		  _.$_$.c1 = MessageSubmittedEvent;
		  _.$_$.d1 = TemplateObject_0;
		  _.$_$.e1 = WhatsappObject_0;
		  _.$_$.f1 = MessageTemplateEvent;
		  _.$_$.g1 = MessageTextEvent;
		  _.$_$.h1 = MessageUndeliverableEvent;
		  _.$_$.i1 = MessageVCardEvent;
		  _.$_$.j1 = MessageVideoEvent;
		  _.$_$.k1 = PersistentConversationEvent;
		  _.$_$.l1 = UpdateConversationParameters;
		  _.$_$.m1 = valueOf_1;
		  _.$_$.n1 = VoiceClientListener;
		  _.$_$.o1 = LoggerAdapter;
		  _.$_$.p1 = createVonageLogger;
		  _.$_$.q1 = clear;
		  _.$_$.r1 = HTTPClientError;
		  _.$_$.s1 = HTTPClientResponse;
		  _.$_$.t1 = HTTPClient;
		  _.$_$.u1 = RTCStats_0;
		  _.$_$.v1 = SetConfig;
		  _.$_$.w1 = Builder;
		  _.$_$.x1 = none;
		  _.$_$.y1 = some;
		  _.$_$.z1 = SocketConnectionFailedReason_ClientDisconnected_getInstance;
		  _.$_$.a2 = SocketConnectionFailedReason_ClientNetworkError_getInstance;
		  _.$_$.b2 = SocketConnectionFailedReason_PingTimeout_getInstance;
		  _.$_$.c2 = SocketConnectionFailedReason_ServerDisconnected_getInstance;
		  _.$_$.d2 = SocketConnectionStatus_Connected_getInstance;
		  _.$_$.e2 = SocketConnectionStatus_Disconnected_getInstance;
		  _.$_$.f2 = SocketConnectionStatus_Reconnecting_getInstance;
		  _.$_$.g2 = OrderBy_CREATED_getInstance;
		  _.$_$.h2 = OrderBy_CUSTOM_SORT_KEY_getInstance;
		  _.$_$.i2 = PresentingOrder_ASC_getInstance;
		  _.$_$.j2 = PresentingOrder_DESC_getInstance;
		  _.$_$.k2 = ClientConfigRegion_AP_getInstance;
		  _.$_$.l2 = ClientConfigRegion_EU_getInstance;
		  _.$_$.m2 = ClientConfigRegion_US_getInstance;
		  _.$_$.n2 = MediaConnectionState_Closed_getInstance;
		  _.$_$.o2 = MediaConnectionState_Connected_getInstance;
		  _.$_$.p2 = MediaConnectionState_Connecting_getInstance;
		  _.$_$.q2 = MediaConnectionState_Disconnected_getInstance;
		  _.$_$.r2 = MediaConnectionState_Failed_getInstance;
		  _.$_$.s2 = MediaConnectionState_New_getInstance;
		  _.$_$.t2 = MediaConnectionState_Unknown_getInstance;
		  _.$_$.u2 = System_instance;
		  _.$_$.v2 = DefaultConfig_getInstance;
		  _.$_$.w2 = Companion_getInstance_153;
		  _.$_$.x2 = Companion_instance_156;
		  //endregion
		  return _;
		}));

		
} (clientsdkClientcore));
	return clientsdkClientcoreExports;
}

(function (module, exports) {
	(function (root, factory) {
	  factory(module.exports, requireKotlinKotlinStdlib(), requireClientsdkClientcore());
	}(globalThis, function (_, kotlin_kotlin, kotlin_com_vonage_rtc_clientcore) {
	  //region block: imports
	  var imul = Math.imul;
	  var protoOf = kotlin_kotlin.$_$.a8;
	  var THROW_CCE = kotlin_kotlin.$_$.y9;
	  var initMetadataForObject = kotlin_kotlin.$_$.e7;
	  var Unit_instance = kotlin_kotlin.$_$.w3;
	  var initMetadataForClass = kotlin_kotlin.$_$.z6;
	  var VoiceClientListener = kotlin_com_vonage_rtc_clientcore.$_$.n1;
	  var VOID = kotlin_kotlin.$_$.f;
	  var Builder = kotlin_com_vonage_rtc_clientcore.$_$.w1;
	  var DefaultConfig_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.v2;
	  var LoggerAdapter = kotlin_com_vonage_rtc_clientcore.$_$.o1;
	  var defineProp = kotlin_kotlin.$_$.q6;
	  var noWhenBranchMatchedException = kotlin_kotlin.$_$.ta;
	  var THROW_IAE = kotlin_kotlin.$_$.z9;
	  var Enum = kotlin_kotlin.$_$.r9;
	  var collectionSizeOrDefault = kotlin_kotlin.$_$.m4;
	  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.h;
	  var copyToArray = kotlin_kotlin.$_$.z4;
	  var initMetadataForInterface = kotlin_kotlin.$_$.c7;
	  var System_instance = kotlin_com_vonage_rtc_clientcore.$_$.u2;
	  var equals = kotlin_kotlin.$_$.r6;
	  var EmbeddedInfo = kotlin_com_vonage_rtc_clientcore.$_$.j;
	  var EphemeralConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.k;
	  var PersistentConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.k1;
	  var isInterface = kotlin_kotlin.$_$.m7;
	  var MessageSeenEvent = kotlin_com_vonage_rtc_clientcore.$_$.b1;
	  var MessageUndeliverableEvent = kotlin_com_vonage_rtc_clientcore.$_$.h1;
	  var MessageSubmittedEvent = kotlin_com_vonage_rtc_clientcore.$_$.c1;
	  var MessageRejectedEvent = kotlin_com_vonage_rtc_clientcore.$_$.a1;
	  var MessageDeliveredEvent = kotlin_com_vonage_rtc_clientcore.$_$.v;
	  var EventDeleteConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.l;
	  var CustomConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.i;
	  var MessageLocationEvent = kotlin_com_vonage_rtc_clientcore.$_$.z;
	  var MessageTemplateEvent = kotlin_com_vonage_rtc_clientcore.$_$.f1;
	  var MessageVCardEvent = kotlin_com_vonage_rtc_clientcore.$_$.i1;
	  var MessageFileEvent = kotlin_com_vonage_rtc_clientcore.$_$.w;
	  var MessageAudioEvent = kotlin_com_vonage_rtc_clientcore.$_$.t;
	  var MessageVideoEvent = kotlin_com_vonage_rtc_clientcore.$_$.j1;
	  var MessageImageEvent = kotlin_com_vonage_rtc_clientcore.$_$.x;
	  var MessageCustomEvent = kotlin_com_vonage_rtc_clientcore.$_$.u;
	  var MessageTextEvent = kotlin_com_vonage_rtc_clientcore.$_$.g1;
	  var MemberLeftConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.s;
	  var MemberJoinedConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.r;
	  var MemberInvitedConversationEvent = kotlin_com_vonage_rtc_clientcore.$_$.q;
	  var mapCapacity = kotlin_kotlin.$_$.s5;
	  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.q;
	  var PresentingOrder_ASC_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.i2;
	  var PresentingOrder_DESC_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.j2;
	  var OrderBy_CREATED_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.g2;
	  var OrderBy_CUSTOM_SORT_KEY_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.h2;
	  var extendThrowable = kotlin_kotlin.$_$.s6;
	  var captureStack = kotlin_kotlin.$_$.l6;
	  var CreateOfferError = kotlin_com_vonage_rtc_clientcore.$_$.c;
	  var CreateAnswerError = kotlin_com_vonage_rtc_clientcore.$_$.b;
	  var ProcessAnswerError = kotlin_com_vonage_rtc_clientcore.$_$.e;
	  var TrackNotFound = kotlin_com_vonage_rtc_clientcore.$_$.f;
	  var PeerConnectionNotFound = kotlin_com_vonage_rtc_clientcore.$_$.d;
	  var getStringHashCode = kotlin_kotlin.$_$.x6;
	  var VonageError = kotlin_com_vonage_rtc_clientcore.$_$.g;
	  var newThrowable = kotlin_kotlin.$_$.t7;
	  var toString = kotlin_kotlin.$_$.e8;
	  var Location = kotlin_com_vonage_rtc_clientcore.$_$.y;
	  var toList = kotlin_kotlin.$_$.d6;
	  var TemplateObject = kotlin_com_vonage_rtc_clientcore.$_$.d1;
	  var WhatsappObject = kotlin_com_vonage_rtc_clientcore.$_$.e1;
	  var Pair = kotlin_kotlin.$_$.w9;
	  var ClientConfigRegion_AP_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.k2;
	  var ClientConfigRegion_EU_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.l2;
	  var ClientConfigRegion_US_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.m2;
	  var SetConfig = kotlin_com_vonage_rtc_clientcore.$_$.v1;
	  var Companion_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.w2;
	  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.i;
	  var addAll = kotlin_kotlin.$_$.k4;
	  var createVonageLogger = kotlin_com_vonage_rtc_clientcore.$_$.p1;
	  var emptyList = kotlin_kotlin.$_$.b5;
	  var valueOf = kotlin_com_vonage_rtc_clientcore.$_$.m1;
	  var emptyMap = kotlin_kotlin.$_$.c5;
	  var Exception = kotlin_kotlin.$_$.s9;
	  var HTTPClientError = kotlin_com_vonage_rtc_clientcore.$_$.r1;
	  var toString_0 = kotlin_kotlin.$_$.xa;
	  var hashCode = kotlin_kotlin.$_$.y6;
	  var getNumberHashCode = kotlin_kotlin.$_$.v6;
	  var initMetadataForCompanion = kotlin_kotlin.$_$.a7;
	  var numberToLong = kotlin_kotlin.$_$.y7;
	  var numberToInt = kotlin_kotlin.$_$.x7;
	  var numberToDouble = kotlin_kotlin.$_$.w7;
	  var RTCStats = kotlin_com_vonage_rtc_clientcore.$_$.u1;
	  var MediaConnectionState_New_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.s2;
	  var MediaConnectionState_Connecting_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.p2;
	  var MediaConnectionState_Connected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.o2;
	  var MediaConnectionState_Disconnected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.q2;
	  var MediaConnectionState_Closed_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.n2;
	  var MediaConnectionState_Failed_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.r2;
	  var MediaConnectionState_Unknown_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.t2;
	  var HTTPClientResponse = kotlin_com_vonage_rtc_clientcore.$_$.s1;
	  var clear = kotlin_com_vonage_rtc_clientcore.$_$.q1;
	  var HTTPClient = kotlin_com_vonage_rtc_clientcore.$_$.t1;
	  var Exception_init_$Create$ = kotlin_kotlin.$_$.y;
	  var UnknownSocketEvent = kotlin_com_vonage_rtc_clientcore.$_$.a;
	  var SocketConnectionStatus_Connected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.d2;
	  var SocketConnectionStatus_Reconnecting_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.f2;
	  var SocketConnectionStatus_Disconnected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.e2;
	  var SocketConnectionFailedReason_ServerDisconnected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.c2;
	  var SocketConnectionFailedReason_ClientDisconnected_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.z1;
	  var SocketConnectionFailedReason_ClientNetworkError_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.a2;
	  var SocketConnectionFailedReason_PingTimeout_getInstance = kotlin_com_vonage_rtc_clientcore.$_$.b2;
	  var some = kotlin_com_vonage_rtc_clientcore.$_$.y1;
	  var none = kotlin_com_vonage_rtc_clientcore.$_$.x1;
	  var CreateConversationParameters = kotlin_com_vonage_rtc_clientcore.$_$.h;
	  var Companion_instance = kotlin_com_vonage_rtc_clientcore.$_$.x2;
	  var UpdateConversationParameters = kotlin_com_vonage_rtc_clientcore.$_$.l1;
	  var GetConversationsParameters = kotlin_com_vonage_rtc_clientcore.$_$.p;
	  var GetConversationEventsParameters = kotlin_com_vonage_rtc_clientcore.$_$.n;
	  var GetConversationMembersParameters = kotlin_com_vonage_rtc_clientcore.$_$.o;
	  var GetCallLegsParameters = kotlin_com_vonage_rtc_clientcore.$_$.m;
	  var to = kotlin_kotlin.$_$.ya;
	  var toMap = kotlin_kotlin.$_$.e6;
	  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.r;
	  var KtMap = kotlin_kotlin.$_$.f4;
	  var json = kotlin_kotlin.$_$.r7;
	  //endregion
	  //region block: pre-declaration
	  initMetadataForObject(VoiceChannelTypeObject, 'VoiceChannelTypeObject');
	  initMetadataForClass(CombinedClientJS$1);
	  initMetadataForClass(CombinedClientJS$2, VOID, VOID, VOID, [VoiceClientListener]);
	  initMetadataForClass(CombinedClientJS$3);
	  function setConfig(config) {
	    this.core.f1g(new SetConfig(getWebsocketUrl(config), getWebsocketPath(config), getApiUrl(config), true, 'js', 'Generic JS Navigator', '@vonage/client-sdk', getRtcStatsTelemetry(config), getAutoReconnectMedia(config), getNoiseSuppression(config)));
	  }
	  function createSession(token, sessionId) {
	    return new Promise(ICoreClientJS$createSession$lambda(this, token, sessionId));
	  }
	  function deleteSession() {
	    return new Promise(ICoreClientJS$deleteSession$lambda(this));
	  }
	  function refreshSession(token) {
	    return new Promise(ICoreClientJS$refreshSession$lambda(this, token));
	  }
	  function getConversation(conversationIdOrName) {
	    return new Promise(ICoreClientJS$getConversation$lambda(this, conversationIdOrName));
	  }
	  function getUser(userIdOrName) {
	    return new Promise(ICoreClientJS$getUser$lambda(this, userIdOrName));
	  }
	  initMetadataForInterface(ICoreClientJS, 'ICoreClientJS');
	  function createConversation(parameters) {
	    return new Promise(IChatClientJS$createConversation$lambda(this, parameters));
	  }
	  function joinConversation(cid) {
	    return new Promise(IChatClientJS$joinConversation$lambda(this, cid));
	  }
	  function inviteToConversation(cid, username) {
	    return new Promise(IChatClientJS$inviteToConversation$lambda(this, cid, username));
	  }
	  function leaveConversation(cid) {
	    return new Promise(IChatClientJS$leaveConversation$lambda(this, cid));
	  }
	  function deleteConversation(cid) {
	    return new Promise(IChatClientJS$deleteConversation$lambda(this, cid));
	  }
	  function getConversations(parameters) {
	    return new Promise(IChatClientJS$getConversations$lambda(this, parameters));
	  }
	  function getConversationMembers(cid, parameters) {
	    return new Promise(IChatClientJS$getConversationMembers$lambda(this, cid, parameters));
	  }
	  function getConversationEvents(cid, parameters) {
	    return new Promise(IChatClientJS$getConversationEvents$lambda(this, cid, parameters));
	  }
	  function getConversationMember(cid, mid) {
	    return new Promise(IChatClientJS$getConversationMember$lambda(this, cid, mid));
	  }
	  function sendMessageTextEvent(cid, text) {
	    return new Promise(IChatClientJS$sendMessageTextEvent$lambda(this, cid, text));
	  }
	  function sendMessageCustomEvent(cid, customData) {
	    return new Promise(IChatClientJS$sendMessageCustomEvent$lambda(this, cid, customData));
	  }
	  function sendMessageImageEvent(cid, imageURL) {
	    return new Promise(IChatClientJS$sendMessageImageEvent$lambda(this, cid, imageURL));
	  }
	  function sendMessageVideoEvent(cid, videoURL) {
	    return new Promise(IChatClientJS$sendMessageVideoEvent$lambda(this, cid, videoURL));
	  }
	  function sendMessageFileEvent(cid, fileURL) {
	    return new Promise(IChatClientJS$sendMessageFileEvent$lambda(this, cid, fileURL));
	  }
	  function sendMessageAudioEvent(cid, audioURL) {
	    return new Promise(IChatClientJS$sendMessageAudioEvent$lambda(this, cid, audioURL));
	  }
	  function sendMessageVCardEvent(cid, vCardURL) {
	    return new Promise(IChatClientJS$sendMessageVCardEvent$lambda(this, cid, vCardURL));
	  }
	  function sendMessageLocationEvent(cid, location) {
	    return new Promise(IChatClientJS$sendMessageLocationEvent$lambda(this, cid, location));
	  }
	  function sendMessageTemplateEvent(cid, templateObject, whatsappObject) {
	    return new Promise(IChatClientJS$sendMessageTemplateEvent$lambda(this, cid, templateObject, whatsappObject));
	  }
	  function sendEphemeralEvent(cid, customData) {
	    return new Promise(IChatClientJS$sendEphemeralEvent$lambda(this, cid, customData));
	  }
	  function sendCustomEvent(cid, eventType, customData) {
	    return new Promise(IChatClientJS$sendCustomEvent$lambda(this, cid, eventType, customData));
	  }
	  function deleteEvent(id, conversationId) {
	    return new Promise(IChatClientJS$deleteEvent$lambda(this, id, conversationId));
	  }
	  function sendMessageSeenEvent(id, conversationId) {
	    return new Promise(IChatClientJS$sendMessageSeenEvent$lambda(this, id, conversationId));
	  }
	  function updateConversation(conversationId, parameters) {
	    return new Promise(IChatClientJS$updateConversation$lambda(this, conversationId, parameters));
	  }
	  initMetadataForInterface(IChatClientJS, 'IChatClientJS', VOID, VOID, [ICoreClientJS]);
	  function getPeerConnection(id) {
	    return this.media.getPeerConnection(id);
	  }
	  function getAudioOutputElement() {
	    return this.media.getAudioOutputElement();
	  }
	  function serverCall(context) {
	    var tmp0_safe_receiver = get_jsonNullable(context);
	    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toMap_0(tmp0_safe_receiver);
	    var tmp;
	    if (tmp1_elvis_lhs == null) {
	      // Inline function 'kotlin.collections.mapOf' call
	      tmp = emptyMap();
	    } else {
	      tmp = tmp1_elvis_lhs;
	    }
	    var typedContext = tmp;
	    return new Promise(IVoiceClientJS$serverCall$lambda(this, typedContext));
	  }
	  function reconnectCall(legId) {
	    return new Promise(IVoiceClientJS$reconnectCall$lambda(this, legId));
	  }
	  function getLeg(legId) {
	    return new Promise(IVoiceClientJS$getLeg$lambda(this, legId));
	  }
	  function getCallLegs(callId, parameters) {
	    return new Promise(IVoiceClientJS$getCallLegs$lambda(this, callId, parameters));
	  }
	  function answer(callId) {
	    return new Promise(IVoiceClientJS$answer$lambda(this, callId));
	  }
	  function reject(callId) {
	    return new Promise(IVoiceClientJS$reject$lambda(this, callId));
	  }
	  function hangup(callId, reasonText, reasonCode) {
	    return new Promise(IVoiceClientJS$hangup$lambda(this, callId, reasonText, reasonCode));
	  }
	  function say(callId, params) {
	    return new Promise(IVoiceClientJS$say$lambda(this, callId, params));
	  }
	  function mute(callId) {
	    return new Promise(IVoiceClientJS$mute$lambda(this, callId));
	  }
	  function unmute(callId) {
	    return new Promise(IVoiceClientJS$unmute$lambda(this, callId));
	  }
	  function enableEarmuff(callId) {
	    return new Promise(IVoiceClientJS$enableEarmuff$lambda(this, callId));
	  }
	  function disableEarmuff(callId) {
	    return new Promise(IVoiceClientJS$disableEarmuff$lambda(this, callId));
	  }
	  function sendDTMF(callId, digits) {
	    return new Promise(IVoiceClientJS$sendDTMF$lambda(this, callId, digits));
	  }
	  initMetadataForInterface(IVoiceClientJS, 'IVoiceClientJS', VOID, VOID, [ICoreClientJS]);
	  initMetadataForClass(CombinedClientJS, 'CombinedClientJS', VOID, VOID, [IChatClientJS, IVoiceClientJS]);
	  initMetadataForClass(EventStateTypeJS, 'EventStateTypeJS', VOID, Enum);
	  initMetadataForClass(EventStateJS, 'EventStateJS');
	  initMetadataForClass(EventsPageJS, 'EventsPageJS');
	  initMetadataForInterface(FromJS, 'FromJS');
	  initMetadataForClass(EmbeddedInfoJS, 'EmbeddedInfoJS', VOID, VOID, [FromJS]);
	  initMetadataForObject(SystemJS, 'SystemJS', VOID, VOID, [FromJS]);
	  initMetadataForInterface(ConversationEventJS, 'ConversationEventJS');
	  initMetadataForInterface(NonPersistentConversationEventJS, 'NonPersistentConversationEventJS', VOID, VOID, [ConversationEventJS]);
	  initMetadataForInterface(PersistentConversationEventJS, 'PersistentConversationEventJS', VOID, VOID, [ConversationEventJS]);
	  initMetadataForInterface(MemberEventJS, 'MemberEventJS');
	  initMetadataForClass(MemberEventBodyJS, 'MemberEventBodyJS');
	  initMetadataForClass(MemberInvitedEventJS, 'MemberInvitedEventJS', VOID, VOID, [MemberEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MemberJoinedEventJS, 'MemberJoinedEventJS', VOID, VOID, [MemberEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MemberLeftEventJS, 'MemberLeftEventJS', VOID, VOID, [MemberEventJS, PersistentConversationEventJS]);
	  initMetadataForInterface(JSONBodyEventJS, 'JSONBodyEventJS');
	  initMetadataForClass(CustomConversationEventJS, 'CustomConversationEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(EphemeralConversationEventJS, 'EphemeralConversationEventJS', VOID, VOID, [NonPersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(EventStateBodyJS, 'EventStateBodyJS');
	  initMetadataForClass(EventDeleteConversationEventJS, 'EventDeleteConversationEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(MessageDeliveredEventJS, 'MessageDeliveredEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(MessageRejectedEventJS, 'MessageRejectedEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(MessageUndeliverableEventJS, 'MessageUndeliverableEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(MessageSubmittedEventJS, 'MessageSubmittedEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForClass(MessageSeenEventJS, 'MessageSeenEventJS', VOID, VOID, [PersistentConversationEventJS, JSONBodyEventJS]);
	  initMetadataForInterface(MessageEventJS, 'MessageEventJS');
	  initMetadataForInterface(MessageEventBodyJS, 'MessageEventBodyJS');
	  initMetadataForClass(MessageTextEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageTextEventJS, 'MessageTextEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageCustomEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageCustomEventJS, 'MessageCustomEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageAudioEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageAudioEventJS, 'MessageAudioEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageVideoEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageVideoEventJS, 'MessageVideoEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageImageEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageImageEventJS, 'MessageImageEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageFileEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageFileEventJS, 'MessageFileEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageVCardEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(MessageVCardEventJS, 'MessageVCardEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageLocationEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(Location_0, 'Location');
	  initMetadataForClass(MessageLocationEventJS, 'MessageLocationEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(MessageTemplateEventBody, 'Body', VOID, VOID, [MessageEventBodyJS]);
	  initMetadataForClass(TemplateObject_0, 'TemplateObject');
	  initMetadataForClass(WhatsappObject_0, 'WhatsappObject');
	  initMetadataForClass(MessageTemplateEventJS, 'MessageTemplateEventJS', VOID, VOID, [MessageEventJS, PersistentConversationEventJS]);
	  initMetadataForClass(PresentingOrderJS, 'PresentingOrderJS', VOID, Enum);
	  initMetadataForClass(OrderByJS, 'OrderByJS', VOID, Enum);
	  initMetadataForClass(Properties, 'Properties');
	  initMetadataForClass(ConversationJS, 'ConversationJS');
	  initMetadataForObject(ConversationStateJS, 'ConversationStateJS');
	  initMetadataForClass(ConversationTimestampJS, 'ConversationTimestampJS');
	  initMetadataForClass(ConversationsPageJS, 'ConversationsPageJS');
	  initMetadataForClass(MemberJS, 'MemberJS');
	  initMetadataForObject(MemberStateJSObj, 'MemberStateJSObj');
	  initMetadataForClass(MemberTimestampJS, 'MemberTimestampJS');
	  initMetadataForClass(MembersPageJS, 'MembersPageJS');
	  initMetadataForClass(UserJS, 'UserJS');
	  initMetadataForClass(UserTimestampJS, 'UserTimestampJS');
	  initMetadataForClass(UserChannelsJS, 'UserChannelsJS');
	  initMetadataForClass(MemberChannelJS, 'MemberChannelJS');
	  initMetadataForClass(ChannelJS, 'ChannelJS');
	  initMetadataForClass(LegChannelJS, 'LegChannelJS');
	  initMetadataForClass(MediaStateJS, 'MediaStateJS');
	  initMetadataForClass(LegJS, 'LegJS');
	  initMetadataForClass(LegsPageJS, 'LegsPageJS');
	  initMetadataForObject(ChannelTypeObj, 'ChannelTypeObj');
	  initMetadataForObject(CSErrorCodesJS, 'CSErrorCodesJS');
	  initMetadataForObject(SessionErrorCodesJS, 'SessionErrorCodesJS');
	  initMetadataForClass(VonageErrorJS, 'VonageErrorJS', VOID, Error);
	  initMetadataForObject(VonageErrorTypeJsObject, 'VonageErrorTypeJsObject');
	  initMetadataForClass(MediaClientErrorJS, 'MediaClientErrorJS');
	  initMetadataForClass(PeerConnectionNotFoundJS, 'PeerConnectionNotFoundJS', VOID, MediaClientErrorJS);
	  initMetadataForClass(TrackNotFoundJS, 'TrackNotFoundJS', VOID, MediaClientErrorJS);
	  initMetadataForClass(ProcessAnswerErrorJS, 'ProcessAnswerErrorJS', VOID, MediaClientErrorJS);
	  initMetadataForClass(CreateAnswerErrorJS, 'CreateAnswerErrorJS', CreateAnswerErrorJS, MediaClientErrorJS);
	  initMetadataForClass(CreateOfferErrorJS, 'CreateOfferErrorJS', CreateOfferErrorJS, MediaClientErrorJS);
	  initMetadataForClass(CoreClientConfigRegionJS, 'CoreClientConfigRegionJS', VOID, Enum);
	  initMetadataForClass(CoreClientConfigJS, 'CoreClientConfigJS', CoreClientConfigJS);
	  initMetadataForClass(TopicJS, 'TopicJS');
	  initMetadataForClass(Topics, 'Topics', VOID, Enum);
	  initMetadataForClass(LoggingLevelJS, 'LoggingLevelJS', VOID, Enum);
	  initMetadataForObject(SessionErrorReasonJsObject, 'SessionErrorReasonJsObject');
	  initMetadataForClass(createVonageLoggerJS$1);
	  initMetadataForObject(LegStatusJSObject, 'LegStatusJSObject');
	  initMetadataForObject(CallDisconnectReasonJSObject, 'CallDisconnectReasonJSObject');
	  initMetadataForObject(HangupReasonJSObject, 'HangupReasonJSObject');
	  initMetadataForClass(VoiceInviteFromInfoJS, 'VoiceInviteFromInfoJS');
	  initMetadataForClass(HttpClientErrorJS, 'HttpClientErrorJS', HttpClientErrorJS, Error);
	  initMetadataForClass(HttpClientResponseJS, 'HttpClientResponseJS');
	  initMetadataForObject(CancelReasonJSObject, 'CancelReasonJSObject');
	  initMetadataForClass(RTCQualityJS, 'RTCQualityJS');
	  initMetadataForCompanion(Companion);
	  initMetadataForClass(RTCStatsJS, 'RTCStatsJS');
	  initMetadataForClass(HttpClientJSAdapter$1, VOID, VOID, VOID, [HTTPClient]);
	  initMetadataForClass(SocketClientJSAdapter$adapter$1);
	  initMetadataForClass(SocketClientJSAdapter$1);
	  initMetadataForClass(MediaClientJSAdapter$adapter$1);
	  initMetadataForClass(MediaClientJSAdapter$1);
	  initMetadataForClass(OptionJS, 'OptionJS');
	  initMetadataForClass(None, 'None', None, OptionJS);
	  initMetadataForClass(Some, 'Some', VOID, OptionJS);
	  initMetadataForCompanion(Companion_0);
	  //endregion
	  function VoiceChannelTypeObject() {
	    this.app = 'app';
	    this.phone = 'phone';
	    this.sip = 'sip';
	    this.websocket = 'websocket';
	  }
	  protoOf(VoiceChannelTypeObject).w3n = function () {
	    return this.app;
	  };
	  protoOf(VoiceChannelTypeObject).x3n = function () {
	    return this.phone;
	  };
	  protoOf(VoiceChannelTypeObject).y3n = function () {
	    return this.sip;
	  };
	  protoOf(VoiceChannelTypeObject).z3n = function () {
	    return this.websocket;
	  };
	  protoOf(VoiceChannelTypeObject).toString = function () {
	    return 'VoiceChannelTypeObject';
	  };
	  protoOf(VoiceChannelTypeObject).hashCode = function () {
	    return -1025446930;
	  };
	  protoOf(VoiceChannelTypeObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof VoiceChannelTypeObject))
	      return false;
	    other instanceof VoiceChannelTypeObject || THROW_CCE();
	    return true;
	  };
	  var VoiceChannelTypeObject_instance;
	  function VoiceChannelTypeObject_getInstance() {
	    return VoiceChannelTypeObject_instance;
	  }
	  function CombinedClientJS$1(this$0) {
	    this.a3o_1 = this$0;
	  }
	  protoOf(CombinedClientJS$1).h35 = function () {
	    var tmp0_safe_receiver = this.a3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.reconnecting();
	    }
	  };
	  protoOf(CombinedClientJS$1).i35 = function () {
	    var tmp0_safe_receiver = this.a3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.reconnection();
	    }
	  };
	  protoOf(CombinedClientJS$1).j35 = function (reason) {
	    var tmp0_safe_receiver = this.a3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.sessionError(map_11(reason));
	    }
	  };
	  function CombinedClientJS$2(this$0) {
	    this.d3o_1 = this$0;
	  }
	  protoOf(CombinedClientJS$2).n35 = function (callId, from, channelType) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callInvite(callId, from, map(channelType));
	    }
	  };
	  protoOf(CombinedClientJS$2).o35 = function (callId, reason) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callInviteCancel(callId, map_15(reason));
	    }
	  };
	  protoOf(CombinedClientJS$2).p35 = function (callId, conversationId) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callTransfer(callId, conversationId);
	    }
	  };
	  protoOf(CombinedClientJS$2).q35 = function (callId, legId, isMuted) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.mute(callId, legId, isMuted);
	    }
	  };
	  protoOf(CombinedClientJS$2).r35 = function (callId, legId, earmuffStatus) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.earmuff(callId, legId, earmuffStatus);
	    }
	  };
	  protoOf(CombinedClientJS$2).s35 = function (callId, legId, digits) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.dtmf(callId, legId, digits);
	    }
	  };
	  protoOf(CombinedClientJS$2).t35 = function (callId, callQuality, reason) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callHangup(callId, map_16(callQuality), map_14(reason));
	    }
	  };
	  protoOf(CombinedClientJS$2).u35 = function (callId, legId, status) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.legStatusUpdate(callId, legId, map_12(status));
	    }
	  };
	  protoOf(CombinedClientJS$2).v35 = function (callId) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callMediaReconnecting(callId);
	    }
	  };
	  protoOf(CombinedClientJS$2).w35 = function (callId) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callMediaReconnection(callId);
	    }
	  };
	  protoOf(CombinedClientJS$2).x35 = function (callId, reason) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callMediaDisconnect(callId, map_13(reason));
	    }
	  };
	  protoOf(CombinedClientJS$2).y35 = function (rtcStats, legId) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.rtcStatsUpdate(Companion_instance_0.e3o(rtcStats), legId);
	    }
	  };
	  protoOf(CombinedClientJS$2).z35 = function (callId, error) {
	    var tmp0_safe_receiver = this.d3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.callMediaError(callId, new VonageErrorJS(error));
	    }
	  };
	  function CombinedClientJS$3(this$0) {
	    this.f3o_1 = this$0;
	  }
	  protoOf(CombinedClientJS$3).i2s = function (event) {
	    var tmp0_safe_receiver = this.f3o_1.emitter;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.conversationEvent(map_1(event));
	    }
	  };
	  function CombinedClientJS(config, http, socket, media) {
	    this.b3o_1 = media;
	    var tmp = this;
	    var tmp_0 = new Builder();
	    var tmp0_safe_receiver = config.loggingLevel;
	    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getLoggingLevel(tmp0_safe_receiver);
	    var tmp_1 = tmp1_elvis_lhs == null ? DefaultConfig_getInstance().e2u_1 : tmp1_elvis_lhs;
	    var tmp_2 = map_10(config.customLoggers);
	    var tmp2_elvis_lhs = config.disableInternalLogger;
	    tmp.c3o_1 = tmp_0.s1e(new LoggerAdapter(tmp_1, tmp_2, tmp2_elvis_lhs == null ? false : tmp2_elvis_lhs)).t1e(HttpClientJSAdapter(http)).u1e(SocketClientJSAdapter(socket)).v1e(MediaClientJSAdapter(this.b3o_1));
	    this.emitter = null;
	    this.c3o_1.v1d(new CombinedClientJS$1(this));
	    this.c3o_1.z1d(new CombinedClientJS$2(this));
	    this.c3o_1.w1d(new CombinedClientJS$3(this));
	  }
	  protoOf(CombinedClientJS).g3o = function () {
	    return this.b3o_1;
	  };
	  protoOf(CombinedClientJS).h3o = function () {
	    return this.c3o_1;
	  };
	  protoOf(CombinedClientJS).i3o = function (_set____db54di) {
	    this.emitter = _set____db54di;
	  };
	  protoOf(CombinedClientJS).j3o = function () {
	    return this.emitter;
	  };
	  function map(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = VoiceChannelTypeObject_instance.app;
	        break;
	      case 1:
	        tmp = VoiceChannelTypeObject_instance.phone;
	        break;
	      case 2:
	        tmp = VoiceChannelTypeObject_instance.sip;
	        break;
	      case 3:
	        tmp = VoiceChannelTypeObject_instance.websocket;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  var EventStateTypeJS_SEEN_instance;
	  var EventStateTypeJS_DELIVERED_instance;
	  var EventStateTypeJS_SUBMITTED_instance;
	  var EventStateTypeJS_REJECTED_instance;
	  var EventStateTypeJS_UNDELIVERABLE_instance;
	  var EventStateTypeJS_NONE_instance;
	  function values() {
	    return [EventStateTypeJS_SEEN_getInstance(), EventStateTypeJS_DELIVERED_getInstance(), EventStateTypeJS_SUBMITTED_getInstance(), EventStateTypeJS_REJECTED_getInstance(), EventStateTypeJS_UNDELIVERABLE_getInstance(), EventStateTypeJS_NONE_getInstance()];
	  }
	  function valueOf_0(value) {
	    switch (value) {
	      case 'SEEN':
	        return EventStateTypeJS_SEEN_getInstance();
	      case 'DELIVERED':
	        return EventStateTypeJS_DELIVERED_getInstance();
	      case 'SUBMITTED':
	        return EventStateTypeJS_SUBMITTED_getInstance();
	      case 'REJECTED':
	        return EventStateTypeJS_REJECTED_getInstance();
	      case 'UNDELIVERABLE':
	        return EventStateTypeJS_UNDELIVERABLE_getInstance();
	      case 'NONE':
	        return EventStateTypeJS_NONE_getInstance();
	      default:
	        EventStateTypeJS_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var EventStateTypeJS_entriesInitialized;
	  function EventStateTypeJS_initEntries() {
	    if (EventStateTypeJS_entriesInitialized)
	      return Unit_instance;
	    EventStateTypeJS_entriesInitialized = true;
	    EventStateTypeJS_SEEN_instance = new EventStateTypeJS('SEEN', 0);
	    EventStateTypeJS_DELIVERED_instance = new EventStateTypeJS('DELIVERED', 1);
	    EventStateTypeJS_SUBMITTED_instance = new EventStateTypeJS('SUBMITTED', 2);
	    EventStateTypeJS_REJECTED_instance = new EventStateTypeJS('REJECTED', 3);
	    EventStateTypeJS_UNDELIVERABLE_instance = new EventStateTypeJS('UNDELIVERABLE', 4);
	    EventStateTypeJS_NONE_instance = new EventStateTypeJS('NONE', 5);
	  }
	  function EventStateTypeJS(name, ordinal) {
	    Enum.call(this, name, ordinal);
	  }
	  function EventStateJS(eventState) {
	    var tmp = this;
	    tmp.seen = eventState == null ? null : eventState.e2x_1;
	    var tmp_0 = this;
	    tmp_0.delivered = eventState == null ? null : eventState.f2x_1;
	    var tmp_1 = this;
	    tmp_1.submitted = eventState == null ? null : eventState.g2x_1;
	    var tmp_2 = this;
	    tmp_2.rejected = eventState == null ? null : eventState.h2x_1;
	    var tmp_3 = this;
	    tmp_3.undeliverable = eventState == null ? null : eventState.i2x_1;
	    var tmp_4 = this;
	    var tmp1_safe_receiver = eventState == null ? null : eventState.j2x_1;
	    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.d2_1;
	    var tmp_5;
	    if (tmp2_safe_receiver == null) {
	      tmp_5 = null;
	    } else {
	      // Inline function 'kotlin.text.lowercase' call
	      // Inline function 'kotlin.js.asDynamic' call
	      tmp_5 = tmp2_safe_receiver.toLowerCase();
	    }
	    var tmp3_elvis_lhs = tmp_5;
	    tmp_4.current = tmp3_elvis_lhs == null ? 'none' : tmp3_elvis_lhs;
	  }
	  protoOf(EventStateJS).m3o = function () {
	    return this.seen;
	  };
	  protoOf(EventStateJS).n3o = function () {
	    return this.delivered;
	  };
	  protoOf(EventStateJS).o3o = function () {
	    return this.submitted;
	  };
	  protoOf(EventStateJS).p3o = function () {
	    return this.rejected;
	  };
	  protoOf(EventStateJS).q3o = function () {
	    return this.undeliverable;
	  };
	  protoOf(EventStateJS).r3o = function () {
	    return this.current;
	  };
	  function EventsPageJS(eventsPage) {
	    var tmp = this;
	    // Inline function 'kotlin.collections.toTypedArray' call
	    // Inline function 'kotlin.collections.map' call
	    var this_0 = eventsPage.k2x_1;
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
	    var tmp0_iterator = this_0.i();
	    while (tmp0_iterator.j()) {
	      var item = tmp0_iterator.k();
	      // Inline function 'vonage.EventsPageJS.events.<anonymous>' call
	      var tmp$ret$0 = map_2(item);
	      destination.d(tmp$ret$0);
	    }
	    tmp.events = copyToArray(destination);
	    this.previousCursor = eventsPage.l2x_1;
	    this.nextCursor = eventsPage.m2x_1;
	  }
	  protoOf(EventsPageJS).s3o = function () {
	    return this.events;
	  };
	  protoOf(EventsPageJS).t3o = function () {
	    return this.previousCursor;
	  };
	  protoOf(EventsPageJS).u3o = function () {
	    return this.nextCursor;
	  };
	  function FromJS() {
	  }
	  function EmbeddedInfoJS(embeddedInfo) {
	    this.kind = 'embeddedInfo';
	    this.memberId = embeddedInfo.n2x_1;
	    this.user = new UserJS(embeddedInfo.o2x_1);
	  }
	  protoOf(EmbeddedInfoJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(EmbeddedInfoJS).v3o = function () {
	    return this.memberId;
	  };
	  protoOf(EmbeddedInfoJS).d2m = function () {
	    return this.user;
	  };
	  function SystemJS() {
	    this.kind = 'system';
	  }
	  protoOf(SystemJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(SystemJS).toString = function () {
	    return 'SystemJS';
	  };
	  protoOf(SystemJS).hashCode = function () {
	    return 668363068;
	  };
	  protoOf(SystemJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof SystemJS))
	      return false;
	    other instanceof SystemJS || THROW_CCE();
	    return true;
	  };
	  var SystemJS_instance;
	  function SystemJS_getInstance() {
	    return SystemJS_instance;
	  }
	  function ConversationEventJS() {
	  }
	  function NonPersistentConversationEventJS() {
	  }
	  function PersistentConversationEventJS() {
	  }
	  function MemberEventJS() {
	  }
	  function MemberEventBodyJS(body) {
	    this.memberId = body.q2x_1;
	    this.user = new UserJS(body.p2x_1);
	    this.channel = new ChannelJS(body.r2x_1);
	  }
	  protoOf(MemberEventBodyJS).v3o = function () {
	    return this.memberId;
	  };
	  protoOf(MemberEventBodyJS).d2m = function () {
	    return this.user;
	  };
	  protoOf(MemberEventBodyJS).w3o = function () {
	    return this.channel;
	  };
	  function MemberInvitedEventJS(event) {
	    this.kind = 'member:invited';
	    this.id = event.s2x_1;
	    this.timestamp = event.t2x_1;
	    this.conversationId = event.u2x_1;
	    this.from = map_0(event.v2x_1);
	    this.body = new MemberEventBodyJS(event.w2x_1);
	  }
	  protoOf(MemberInvitedEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MemberInvitedEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MemberInvitedEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MemberInvitedEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MemberInvitedEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MemberInvitedEventJS).y3o = function () {
	    return this.body;
	  };
	  function MemberJoinedEventJS(event) {
	    this.kind = 'member:joined';
	    this.id = event.x2x_1;
	    this.timestamp = event.y2x_1;
	    this.conversationId = event.z2x_1;
	    this.from = map_0(event.a2y_1);
	    this.body = new MemberEventBodyJS(event.b2y_1);
	  }
	  protoOf(MemberJoinedEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MemberJoinedEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MemberJoinedEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MemberJoinedEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MemberJoinedEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MemberJoinedEventJS).y3o = function () {
	    return this.body;
	  };
	  function MemberLeftEventJS(event) {
	    this.kind = 'member:left';
	    this.id = event.c2y_1;
	    this.timestamp = event.d2y_1;
	    this.conversationId = event.e2y_1;
	    this.from = map_0(event.f2y_1);
	    this.body = new MemberEventBodyJS(event.g2y_1);
	  }
	  protoOf(MemberLeftEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MemberLeftEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MemberLeftEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MemberLeftEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MemberLeftEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MemberLeftEventJS).y3o = function () {
	    return this.body;
	  };
	  function JSONBodyEventJS() {
	  }
	  function CustomConversationEventJS(event) {
	    this.kind = 'custom';
	    this.id = event.h2y_1;
	    this.timestamp = event.i2y_1;
	    this.conversationId = event.j2y_1;
	    this.from = map_0(event.k2y_1);
	    this.eventType = event.m2y_1;
	    this.body = parseCustomJson(event.l2y_1);
	  }
	  protoOf(CustomConversationEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(CustomConversationEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(CustomConversationEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(CustomConversationEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(CustomConversationEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(CustomConversationEventJS).z3o = function () {
	    return this.eventType;
	  };
	  protoOf(CustomConversationEventJS).y3o = function () {
	    return this.body;
	  };
	  function EphemeralConversationEventJS(event) {
	    this.kind = 'ephemeral';
	    this.timestamp = event.n2y_1;
	    this.conversationId = event.o2y_1;
	    this.from = map_0(event.p2y_1);
	    this.body = parseCustomJson(event.q2y_1);
	  }
	  protoOf(EphemeralConversationEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(EphemeralConversationEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(EphemeralConversationEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(EphemeralConversationEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(EphemeralConversationEventJS).y3o = function () {
	    return this.body;
	  };
	  function EventStateBodyJS(stateBody) {
	    this.eventId = stateBody.r2y_1;
	  }
	  protoOf(EventStateBodyJS).a3p = function () {
	    return this.eventId;
	  };
	  function EventDeleteConversationEventJS(event) {
	    this.kind = 'event:delete';
	    this.id = event.s2y_1;
	    this.timestamp = event.t2y_1;
	    this.conversationId = event.u2y_1;
	    this.from = map_0(event.v2y_1);
	    this.body = new EventStateBodyJS(event.w2y_1);
	  }
	  protoOf(EventDeleteConversationEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(EventDeleteConversationEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(EventDeleteConversationEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(EventDeleteConversationEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(EventDeleteConversationEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(EventDeleteConversationEventJS).y3o = function () {
	    return this.body;
	  };
	  function MessageDeliveredEventJS(event) {
	    this.kind = 'message:delivered';
	    this.id = event.x2y_1;
	    this.timestamp = event.y2y_1;
	    this.conversationId = event.z2y_1;
	    this.from = map_0(event.a2z_1);
	    this.body = new EventStateBodyJS(event.b2z_1);
	  }
	  protoOf(MessageDeliveredEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageDeliveredEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageDeliveredEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageDeliveredEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageDeliveredEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageDeliveredEventJS).y3o = function () {
	    return this.body;
	  };
	  function MessageRejectedEventJS(event) {
	    this.kind = 'message:rejected';
	    this.id = event.c2z_1;
	    this.timestamp = event.d2z_1;
	    this.conversationId = event.e2z_1;
	    this.from = map_0(event.f2z_1);
	    this.body = new EventStateBodyJS(event.g2z_1);
	  }
	  protoOf(MessageRejectedEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageRejectedEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageRejectedEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageRejectedEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageRejectedEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageRejectedEventJS).y3o = function () {
	    return this.body;
	  };
	  function MessageUndeliverableEventJS(event) {
	    this.kind = 'message:undeliverable';
	    this.id = event.h2z_1;
	    this.timestamp = event.i2z_1;
	    this.conversationId = event.j2z_1;
	    this.from = map_0(event.k2z_1);
	    this.body = new EventStateBodyJS(event.l2z_1);
	  }
	  protoOf(MessageUndeliverableEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageUndeliverableEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageUndeliverableEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageUndeliverableEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageUndeliverableEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageUndeliverableEventJS).y3o = function () {
	    return this.body;
	  };
	  function MessageSubmittedEventJS(event) {
	    this.kind = 'message:submitted';
	    this.id = event.m2z_1;
	    this.timestamp = event.n2z_1;
	    this.conversationId = event.o2z_1;
	    this.from = map_0(event.p2z_1);
	    this.body = new EventStateBodyJS(event.q2z_1);
	  }
	  protoOf(MessageSubmittedEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageSubmittedEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageSubmittedEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageSubmittedEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageSubmittedEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageSubmittedEventJS).y3o = function () {
	    return this.body;
	  };
	  function MessageSeenEventJS(event) {
	    this.kind = 'message:seen';
	    this.id = event.r2z_1;
	    this.timestamp = event.s2z_1;
	    this.conversationId = event.t2z_1;
	    this.from = map_0(event.u2z_1);
	    this.body = new EventStateBodyJS(event.v2z_1);
	  }
	  protoOf(MessageSeenEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageSeenEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageSeenEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageSeenEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageSeenEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageSeenEventJS).y3o = function () {
	    return this.body;
	  };
	  function map_0(_this__u8e3s4) {
	    var tmp;
	    if (_this__u8e3s4 instanceof EmbeddedInfo) {
	      tmp = new EmbeddedInfoJS(_this__u8e3s4);
	    } else {
	      if (equals(_this__u8e3s4, System_instance)) {
	        tmp = SystemJS_instance;
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  }
	  function map_1(_this__u8e3s4) {
	    var tmp;
	    if (isInterface(_this__u8e3s4, PersistentConversationEvent)) {
	      tmp = map_2(_this__u8e3s4);
	    } else {
	      if (_this__u8e3s4 instanceof EphemeralConversationEvent) {
	        tmp = new EphemeralConversationEventJS(_this__u8e3s4);
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  }
	  function map_2(_this__u8e3s4) {
	    var tmp;
	    if (_this__u8e3s4 instanceof MemberInvitedConversationEvent) {
	      tmp = new MemberInvitedEventJS(_this__u8e3s4);
	    } else {
	      if (_this__u8e3s4 instanceof MemberJoinedConversationEvent) {
	        tmp = new MemberJoinedEventJS(_this__u8e3s4);
	      } else {
	        if (_this__u8e3s4 instanceof MemberLeftConversationEvent) {
	          tmp = new MemberLeftEventJS(_this__u8e3s4);
	        } else {
	          if (_this__u8e3s4 instanceof MessageTextEvent) {
	            tmp = new MessageTextEventJS(_this__u8e3s4);
	          } else {
	            if (_this__u8e3s4 instanceof MessageCustomEvent) {
	              tmp = new MessageCustomEventJS(_this__u8e3s4);
	            } else {
	              if (_this__u8e3s4 instanceof MessageImageEvent) {
	                tmp = new MessageImageEventJS(_this__u8e3s4);
	              } else {
	                if (_this__u8e3s4 instanceof MessageVideoEvent) {
	                  tmp = new MessageVideoEventJS(_this__u8e3s4);
	                } else {
	                  if (_this__u8e3s4 instanceof MessageAudioEvent) {
	                    tmp = new MessageAudioEventJS(_this__u8e3s4);
	                  } else {
	                    if (_this__u8e3s4 instanceof MessageFileEvent) {
	                      tmp = new MessageFileEventJS(_this__u8e3s4);
	                    } else {
	                      if (_this__u8e3s4 instanceof MessageVCardEvent) {
	                        tmp = new MessageVCardEventJS(_this__u8e3s4);
	                      } else {
	                        if (_this__u8e3s4 instanceof MessageTemplateEvent) {
	                          tmp = new MessageTemplateEventJS(_this__u8e3s4);
	                        } else {
	                          if (_this__u8e3s4 instanceof MessageLocationEvent) {
	                            tmp = new MessageLocationEventJS(_this__u8e3s4);
	                          } else {
	                            if (_this__u8e3s4 instanceof CustomConversationEvent) {
	                              tmp = new CustomConversationEventJS(_this__u8e3s4);
	                            } else {
	                              if (_this__u8e3s4 instanceof EventDeleteConversationEvent) {
	                                tmp = new EventDeleteConversationEventJS(_this__u8e3s4);
	                              } else {
	                                if (_this__u8e3s4 instanceof MessageDeliveredEvent) {
	                                  tmp = new MessageDeliveredEventJS(_this__u8e3s4);
	                                } else {
	                                  if (_this__u8e3s4 instanceof MessageRejectedEvent) {
	                                    tmp = new MessageRejectedEventJS(_this__u8e3s4);
	                                  } else {
	                                    if (_this__u8e3s4 instanceof MessageSubmittedEvent) {
	                                      tmp = new MessageSubmittedEventJS(_this__u8e3s4);
	                                    } else {
	                                      if (_this__u8e3s4 instanceof MessageUndeliverableEvent) {
	                                        tmp = new MessageUndeliverableEventJS(_this__u8e3s4);
	                                      } else {
	                                        if (_this__u8e3s4 instanceof MessageSeenEvent) {
	                                          tmp = new MessageSeenEventJS(_this__u8e3s4);
	                                        } else {
	                                          noWhenBranchMatchedException();
	                                        }
	                                      }
	                                    }
	                                  }
	                                }
	                              }
	                            }
	                          }
	                        }
	                      }
	                    }
	                  }
	                }
	              }
	            }
	          }
	        }
	      }
	    }
	    return tmp;
	  }
	  function EventStateTypeJS_SEEN_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_SEEN_instance;
	  }
	  function EventStateTypeJS_DELIVERED_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_DELIVERED_instance;
	  }
	  function EventStateTypeJS_SUBMITTED_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_SUBMITTED_instance;
	  }
	  function EventStateTypeJS_REJECTED_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_REJECTED_instance;
	  }
	  function EventStateTypeJS_UNDELIVERABLE_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_UNDELIVERABLE_instance;
	  }
	  function EventStateTypeJS_NONE_getInstance() {
	    EventStateTypeJS_initEntries();
	    return EventStateTypeJS_NONE_instance;
	  }
	  function MessageEventJS() {
	  }
	  function MessageEventBodyJS() {
	  }
	  function MessageTextEventBody(body) {
	    this.text = body.f31_1;
	    this.deleted = body.g31_1;
	  }
	  protoOf(MessageTextEventBody).b3p = function () {
	    return this.text;
	  };
	  protoOf(MessageTextEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageTextEventJS(event) {
	    this.kind = 'message:text';
	    this.id = event.j31_1;
	    this.timestamp = event.h31_1;
	    this.conversationId = event.i31_1;
	    this.from = map_0(event.k31_1);
	    this.body = new MessageTextEventBody(event.l31_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.m31_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageTextEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageTextEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageTextEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageTextEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageTextEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageTextEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageTextEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageTextEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageCustomEventBody(body) {
	    this.customData = parseCustomJson(body.n31_1);
	    this.deleted = body.o31_1;
	  }
	  protoOf(MessageCustomEventBody).e3p = function () {
	    return this.customData;
	  };
	  protoOf(MessageCustomEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageCustomEventJS(event) {
	    this.kind = 'message:custom';
	    this.id = event.r31_1;
	    this.timestamp = event.p31_1;
	    this.conversationId = event.q31_1;
	    this.from = map_0(event.s31_1);
	    this.body = new MessageCustomEventBody(event.t31_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.u31_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageCustomEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageCustomEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageCustomEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageCustomEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageCustomEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageCustomEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageCustomEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageCustomEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageAudioEventBody(body) {
	    this.audioUrl = body.l32_1;
	    this.deleted = body.m32_1;
	  }
	  protoOf(MessageAudioEventBody).f3p = function () {
	    return this.audioUrl;
	  };
	  protoOf(MessageAudioEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageAudioEventJS(event) {
	    this.kind = 'message:audio';
	    this.id = event.p32_1;
	    this.timestamp = event.n32_1;
	    this.conversationId = event.o32_1;
	    this.from = map_0(event.q32_1);
	    this.body = new MessageAudioEventBody(event.r32_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.s32_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageAudioEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageAudioEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageAudioEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageAudioEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageAudioEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageAudioEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageAudioEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageAudioEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageVideoEventBody(body) {
	    this.videoUrl = body.d32_1;
	    this.deleted = body.e32_1;
	  }
	  protoOf(MessageVideoEventBody).g3p = function () {
	    return this.videoUrl;
	  };
	  protoOf(MessageVideoEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageVideoEventJS(event) {
	    this.kind = 'message:video';
	    this.id = event.h32_1;
	    this.timestamp = event.f32_1;
	    this.conversationId = event.g32_1;
	    this.from = map_0(event.i32_1);
	    this.body = new MessageVideoEventBody(event.j32_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.k32_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageVideoEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageVideoEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageVideoEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageVideoEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageVideoEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageVideoEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageVideoEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageVideoEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageImageEventBody(body) {
	    this.imageUrl = body.v31_1;
	    this.deleted = body.w31_1;
	  }
	  protoOf(MessageImageEventBody).h3p = function () {
	    return this.imageUrl;
	  };
	  protoOf(MessageImageEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageImageEventJS(event) {
	    this.kind = 'message:image';
	    this.id = event.z31_1;
	    this.timestamp = event.x31_1;
	    this.conversationId = event.y31_1;
	    this.from = map_0(event.a32_1);
	    this.body = new MessageImageEventBody(event.b32_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.c32_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageImageEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageImageEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageImageEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageImageEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageImageEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageImageEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageImageEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageImageEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageFileEventBody(body) {
	    this.fileUrl = body.t32_1;
	    this.deleted = body.u32_1;
	  }
	  protoOf(MessageFileEventBody).i3p = function () {
	    return this.fileUrl;
	  };
	  protoOf(MessageFileEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageFileEventJS(event) {
	    this.kind = 'message:file';
	    this.id = event.x32_1;
	    this.timestamp = event.v32_1;
	    this.conversationId = event.w32_1;
	    this.from = map_0(event.y32_1);
	    this.body = new MessageFileEventBody(event.z32_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.a33_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageFileEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageFileEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageFileEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageFileEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageFileEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageFileEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageFileEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageFileEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageVCardEventBody(body) {
	    this.vcardUrl = body.b33_1;
	    this.deleted = body.c33_1;
	  }
	  protoOf(MessageVCardEventBody).j3p = function () {
	    return this.vcardUrl;
	  };
	  protoOf(MessageVCardEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function MessageVCardEventJS(event) {
	    this.kind = 'message:vcard';
	    this.id = event.f33_1;
	    this.timestamp = event.d33_1;
	    this.conversationId = event.e33_1;
	    this.from = map_0(event.g33_1);
	    this.body = new MessageVCardEventBody(event.h33_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.i33_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageVCardEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageVCardEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageVCardEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageVCardEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageVCardEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageVCardEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageVCardEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageVCardEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageLocationEventBody(body) {
	    this.location = new Location_0(body.s33_1);
	    this.deleted = body.t33_1;
	  }
	  protoOf(MessageLocationEventBody).k3p = function () {
	    return this.location;
	  };
	  protoOf(MessageLocationEventBody).c3p = function () {
	    return this.deleted;
	  };
	  function Location_0(location) {
	    this.longitude = location.a2l_1;
	    this.latitude = location.b2l_1;
	    this.name = location.c2l_1;
	    this.address = location.d2l_1;
	  }
	  protoOf(Location_0).l3p = function () {
	    return this.longitude;
	  };
	  protoOf(Location_0).m3p = function () {
	    return this.latitude;
	  };
	  protoOf(Location_0).f2 = function () {
	    return this.name;
	  };
	  protoOf(Location_0).n3p = function () {
	    return this.address;
	  };
	  function MessageLocationEventJS(event) {
	    this.kind = 'message:location';
	    this.id = event.w33_1;
	    this.timestamp = event.u33_1;
	    this.conversationId = event.v33_1;
	    this.from = map_0(event.x33_1);
	    this.body = new MessageLocationEventBody(event.y33_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.z33_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageLocationEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatuses = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	  }
	  protoOf(MessageLocationEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageLocationEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageLocationEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageLocationEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageLocationEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageLocationEventJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageLocationEventJS).d3p = function () {
	    return this.memberStatuses;
	  };
	  function MessageTemplateEventBody(body) {
	    this.body = body;
	    this.template = new TemplateObject_0(this.body.j33_1);
	    this.whatsapp = new WhatsappObject_0(this.body.k33_1);
	    this.deleted = this.body.l33_1;
	  }
	  protoOf(MessageTemplateEventBody).y3o = function () {
	    return this.body;
	  };
	  protoOf(MessageTemplateEventBody).o3p = function () {
	    return this.template;
	  };
	  protoOf(MessageTemplateEventBody).p3p = function () {
	    return this.whatsapp;
	  };
	  protoOf(MessageTemplateEventBody).c3p = function () {
	    return this.deleted;
	  };
	  protoOf(MessageTemplateEventBody).o8 = function () {
	    return this.body;
	  };
	  protoOf(MessageTemplateEventBody).q3p = function (body) {
	    return new MessageTemplateEventBody(body);
	  };
	  protoOf(MessageTemplateEventBody).copy = function (body, $super) {
	    body = body === VOID ? this.body : body;
	    return this.q3p(body);
	  };
	  protoOf(MessageTemplateEventBody).toString = function () {
	    return 'Body(body=' + this.body.toString() + ')';
	  };
	  protoOf(MessageTemplateEventBody).hashCode = function () {
	    return this.body.hashCode();
	  };
	  protoOf(MessageTemplateEventBody).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof MessageTemplateEventBody))
	      return false;
	    var tmp0_other_with_cast = other instanceof MessageTemplateEventBody ? other : THROW_CCE();
	    if (!this.body.equals(tmp0_other_with_cast.body))
	      return false;
	    return true;
	  };
	  function TemplateObject_0(template) {
	    this.name = template.s2k_1;
	    var tmp = this;
	    var tmp0_safe_receiver = template.t2k_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_0 = copyToArray(tmp0_safe_receiver);
	    }
	    tmp.parameters = tmp_0;
	  }
	  protoOf(TemplateObject_0).f2 = function () {
	    return this.name;
	  };
	  protoOf(TemplateObject_0).r3p = function () {
	    return this.parameters;
	  };
	  function WhatsappObject_0(whatsapp) {
	    this.policy = whatsapp.w2k_1;
	    this.locale = whatsapp.x2k_1;
	  }
	  protoOf(WhatsappObject_0).s3p = function () {
	    return this.policy;
	  };
	  protoOf(WhatsappObject_0).t3p = function () {
	    return this.locale;
	  };
	  function MessageTemplateEventJS(event) {
	    this.kind = 'message:template';
	    this.id = event.o33_1;
	    this.timestamp = event.m33_1;
	    this.conversationId = event.n33_1;
	    this.from = map_0(event.p33_1);
	    var tmp = this;
	    var tmp0_safe_receiver = event.r33_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.mapValues' call
	      // Inline function 'kotlin.collections.mapValuesTo' call
	      var destination = LinkedHashMap_init_$Create$(mapCapacity(tmp0_safe_receiver.l()));
	      // Inline function 'kotlin.collections.associateByTo' call
	      var tmp0_iterator = tmp0_safe_receiver.x1().i();
	      while (tmp0_iterator.j()) {
	        var element = tmp0_iterator.k();
	        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
	        var tmp_1 = element.q1();
	        // Inline function 'vonage.MessageTemplateEventJS.memberStatuses.<anonymous>' call
	        var tmp$ret$1 = new EventStateJS(element.r1());
	        destination.b2(tmp_1, tmp$ret$1);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    tmp.memberStatus = tmp1_safe_receiver == null ? null : toJsObject(tmp1_safe_receiver);
	    this.body = new MessageTemplateEventBody(event.q33_1);
	  }
	  protoOf(MessageTemplateEventJS).oh = function () {
	    return this.kind;
	  };
	  protoOf(MessageTemplateEventJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MessageTemplateEventJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(MessageTemplateEventJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(MessageTemplateEventJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MessageTemplateEventJS).u3p = function () {
	    return this.memberStatus;
	  };
	  protoOf(MessageTemplateEventJS).y3o = function () {
	    return this.body;
	  };
	  var PresentingOrderJS_ASC_instance;
	  var PresentingOrderJS_DESC_instance;
	  function values_0() {
	    return [PresentingOrderJS_ASC_getInstance(), PresentingOrderJS_DESC_getInstance()];
	  }
	  function valueOf_1(value) {
	    switch (value) {
	      case 'ASC':
	        return PresentingOrderJS_ASC_getInstance();
	      case 'DESC':
	        return PresentingOrderJS_DESC_getInstance();
	      default:
	        PresentingOrderJS_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var PresentingOrderJS_entriesInitialized;
	  function PresentingOrderJS_initEntries() {
	    if (PresentingOrderJS_entriesInitialized)
	      return Unit_instance;
	    PresentingOrderJS_entriesInitialized = true;
	    PresentingOrderJS_ASC_instance = new PresentingOrderJS('ASC', 0, PresentingOrder_ASC_getInstance());
	    PresentingOrderJS_DESC_instance = new PresentingOrderJS('DESC', 1, PresentingOrder_DESC_getInstance());
	  }
	  function PresentingOrderJS(name, ordinal, corePresentingOrder) {
	    Enum.call(this, name, ordinal);
	    this.corePresentingOrder = corePresentingOrder;
	  }
	  protoOf(PresentingOrderJS).x3p = function () {
	    return this.corePresentingOrder;
	  };
	  var OrderByJS_CREATED_instance;
	  var OrderByJS_CUSTOM_SORT_KEY_instance;
	  function values_1() {
	    return [OrderByJS_CREATED_getInstance(), OrderByJS_CUSTOM_SORT_KEY_getInstance()];
	  }
	  function valueOf_2(value) {
	    switch (value) {
	      case 'CREATED':
	        return OrderByJS_CREATED_getInstance();
	      case 'CUSTOM_SORT_KEY':
	        return OrderByJS_CUSTOM_SORT_KEY_getInstance();
	      default:
	        OrderByJS_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var OrderByJS_entriesInitialized;
	  function OrderByJS_initEntries() {
	    if (OrderByJS_entriesInitialized)
	      return Unit_instance;
	    OrderByJS_entriesInitialized = true;
	    OrderByJS_CREATED_instance = new OrderByJS('CREATED', 0, OrderBy_CREATED_getInstance());
	    OrderByJS_CUSTOM_SORT_KEY_instance = new OrderByJS('CUSTOM_SORT_KEY', 1, OrderBy_CUSTOM_SORT_KEY_getInstance());
	  }
	  function OrderByJS(name, ordinal, coreOrderBy) {
	    Enum.call(this, name, ordinal);
	    this.coreOrderBy = coreOrderBy;
	  }
	  protoOf(OrderByJS).a3q = function () {
	    return this.coreOrderBy;
	  };
	  function Properties(properties) {
	    var tmp = this;
	    tmp.ttl = properties == null ? null : properties.k2w_1;
	    var tmp_0 = this;
	    tmp_0.customSortKey = properties == null ? null : properties.l2w_1;
	    var tmp_1 = this;
	    var tmp1_safe_receiver = properties == null ? null : properties.m2w_1;
	    var tmp_2;
	    if (tmp1_safe_receiver == null) {
	      tmp_2 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.Properties.customData.<anonymous>' call
	      tmp_2 = parseCustomJson(tmp1_safe_receiver);
	    }
	    tmp_1.customData = tmp_2;
	  }
	  protoOf(Properties).b3q = function () {
	    return this.ttl;
	  };
	  protoOf(Properties).c3q = function () {
	    return this.customSortKey;
	  };
	  protoOf(Properties).e3p = function () {
	    return this.customData;
	  };
	  function ConversationJS(conversation) {
	    this.id = conversation.n2w_1;
	    this.name = conversation.o2w_1;
	    this.timestamp = new ConversationTimestampJS(conversation.p2w_1);
	    this.memberId = conversation.q2w_1;
	    var tmp = this;
	    var tmp0_safe_receiver = conversation.r2w_1;
	    tmp.memberState = tmp0_safe_receiver == null ? null : map_4(tmp0_safe_receiver);
	    this.displayName = conversation.s2w_1;
	    this.imageUrl = conversation.t2w_1;
	    var tmp_0 = this;
	    var tmp0_safe_receiver_0 = conversation.u2w_1;
	    tmp_0.state = tmp0_safe_receiver_0 == null ? null : map_3(tmp0_safe_receiver_0);
	    this.properties = new Properties(conversation.v2w_1);
	  }
	  protoOf(ConversationJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(ConversationJS).f2 = function () {
	    return this.name;
	  };
	  protoOf(ConversationJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(ConversationJS).v3o = function () {
	    return this.memberId;
	  };
	  protoOf(ConversationJS).d3q = function () {
	    return this.memberState;
	  };
	  protoOf(ConversationJS).e3q = function () {
	    return this.displayName;
	  };
	  protoOf(ConversationJS).h3p = function () {
	    return this.imageUrl;
	  };
	  protoOf(ConversationJS).r3j = function () {
	    return this.state;
	  };
	  protoOf(ConversationJS).f3q = function () {
	    return this.properties;
	  };
	  function ConversationStateJS() {
	    this.ACTIVE = 'ACTIVE';
	    this.INACTIVE = 'INACTIVE';
	    this.DELETED = 'DELETED';
	  }
	  protoOf(ConversationStateJS).g3q = function () {
	    return this.ACTIVE;
	  };
	  protoOf(ConversationStateJS).h3q = function () {
	    return this.INACTIVE;
	  };
	  protoOf(ConversationStateJS).i3q = function () {
	    return this.DELETED;
	  };
	  protoOf(ConversationStateJS).toString = function () {
	    return 'ConversationStateJS';
	  };
	  protoOf(ConversationStateJS).hashCode = function () {
	    return -1732999277;
	  };
	  protoOf(ConversationStateJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof ConversationStateJS))
	      return false;
	    other instanceof ConversationStateJS || THROW_CCE();
	    return true;
	  };
	  var ConversationStateJS_instance;
	  function ConversationStateJS_getInstance() {
	    return ConversationStateJS_instance;
	  }
	  function ConversationTimestampJS(conversationTimestamp) {
	    this.created = conversationTimestamp.y2w_1;
	    this.updated = conversationTimestamp.z2w_1;
	    this.destroyed = conversationTimestamp.a2x_1;
	  }
	  protoOf(ConversationTimestampJS).j3q = function () {
	    return this.created;
	  };
	  protoOf(ConversationTimestampJS).k3q = function () {
	    return this.updated;
	  };
	  protoOf(ConversationTimestampJS).l3q = function () {
	    return this.destroyed;
	  };
	  function ConversationsPageJS(conversationsPage) {
	    var tmp = this;
	    // Inline function 'kotlin.collections.toTypedArray' call
	    // Inline function 'kotlin.collections.map' call
	    var this_0 = conversationsPage.b2x_1;
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
	    var tmp0_iterator = this_0.i();
	    while (tmp0_iterator.j()) {
	      var item = tmp0_iterator.k();
	      // Inline function 'vonage.ConversationsPageJS.conversations.<anonymous>' call
	      var tmp$ret$0 = new ConversationJS(item);
	      destination.d(tmp$ret$0);
	    }
	    tmp.conversations = copyToArray(destination);
	    this.previousCursor = conversationsPage.c2x_1;
	    this.nextCursor = conversationsPage.d2x_1;
	  }
	  protoOf(ConversationsPageJS).m3q = function () {
	    return this.conversations;
	  };
	  protoOf(ConversationsPageJS).t3o = function () {
	    return this.previousCursor;
	  };
	  protoOf(ConversationsPageJS).u3o = function () {
	    return this.nextCursor;
	  };
	  function MemberJS(member) {
	    this.id = member.s30_1;
	    this.state = map_4(member.t30_1);
	    var tmp = this;
	    var tmp0_safe_receiver = member.u30_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.MemberJS.user.<anonymous>' call
	      tmp_0 = new UserJS(tmp0_safe_receiver);
	    }
	    tmp.user = tmp_0;
	    var tmp_1 = this;
	    var tmp0_safe_receiver_0 = member.v30_1;
	    var tmp_2;
	    if (tmp0_safe_receiver_0 == null) {
	      tmp_2 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.MemberJS.channel.<anonymous>' call
	      tmp_2 = new MemberChannelJS(tmp0_safe_receiver_0);
	    }
	    tmp_1.channel = tmp_2;
	    var tmp_3 = this;
	    var tmp0_safe_receiver_1 = member.w30_1;
	    var tmp_4;
	    if (tmp0_safe_receiver_1 == null) {
	      tmp_4 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.MemberJS.timestamp.<anonymous>' call
	      tmp_4 = new MemberTimestampJS(tmp0_safe_receiver_1);
	    }
	    tmp_3.timestamp = tmp_4;
	  }
	  protoOf(MemberJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(MemberJS).r3j = function () {
	    return this.state;
	  };
	  protoOf(MemberJS).d2m = function () {
	    return this.user;
	  };
	  protoOf(MemberJS).w3o = function () {
	    return this.channel;
	  };
	  protoOf(MemberJS).a2k = function () {
	    return this.timestamp;
	  };
	  function MemberStateJSObj() {
	    this.INVITED = 'INVITED';
	    this.JOINED = 'JOINED';
	    this.LEFT = 'LEFT';
	    this.UNKNOWN = 'UNKNOWN';
	  }
	  protoOf(MemberStateJSObj).n3q = function () {
	    return this.INVITED;
	  };
	  protoOf(MemberStateJSObj).o3q = function () {
	    return this.JOINED;
	  };
	  protoOf(MemberStateJSObj).p3q = function () {
	    return this.LEFT;
	  };
	  protoOf(MemberStateJSObj).q3q = function () {
	    return this.UNKNOWN;
	  };
	  protoOf(MemberStateJSObj).toString = function () {
	    return 'MemberStateJSObj';
	  };
	  protoOf(MemberStateJSObj).hashCode = function () {
	    return 92639419;
	  };
	  protoOf(MemberStateJSObj).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof MemberStateJSObj))
	      return false;
	    other instanceof MemberStateJSObj || THROW_CCE();
	    return true;
	  };
	  var MemberStateJSObj_instance;
	  function MemberStateJSObj_getInstance() {
	    return MemberStateJSObj_instance;
	  }
	  function MemberTimestampJS(memberTimestamp) {
	    this.invited = memberTimestamp.z30_1;
	    this.joined = memberTimestamp.a31_1;
	    this.left = memberTimestamp.b31_1;
	  }
	  protoOf(MemberTimestampJS).r3q = function () {
	    return this.invited;
	  };
	  protoOf(MemberTimestampJS).s3q = function () {
	    return this.joined;
	  };
	  protoOf(MemberTimestampJS).t3q = function () {
	    return this.left;
	  };
	  function MembersPageJS(membersPage) {
	    var tmp = this;
	    // Inline function 'kotlin.collections.toTypedArray' call
	    // Inline function 'kotlin.collections.map' call
	    var this_0 = membersPage.c31_1;
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
	    var tmp0_iterator = this_0.i();
	    while (tmp0_iterator.j()) {
	      var item = tmp0_iterator.k();
	      // Inline function 'vonage.MembersPageJS.members.<anonymous>' call
	      var tmp$ret$0 = new MemberJS(item);
	      destination.d(tmp$ret$0);
	    }
	    tmp.members = copyToArray(destination);
	    this.previousCursor = membersPage.d31_1;
	    this.nextCursor = membersPage.e31_1;
	  }
	  protoOf(MembersPageJS).u3q = function () {
	    return this.members;
	  };
	  protoOf(MembersPageJS).t3o = function () {
	    return this.previousCursor;
	  };
	  protoOf(MembersPageJS).u3o = function () {
	    return this.nextCursor;
	  };
	  function UserJS(user) {
	    this.id = user.f34_1;
	    this.name = user.g34_1;
	    this.displayName = user.h34_1;
	    var tmp = this;
	    var tmp0_safe_receiver = user.i34_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.UserJS.channels.<anonymous>' call
	      tmp_0 = new UserChannelsJS(tmp0_safe_receiver);
	    }
	    tmp.channels = tmp_0;
	    var tmp_1 = this;
	    var tmp0_safe_receiver_0 = user.j34_1;
	    var tmp_2;
	    if (tmp0_safe_receiver_0 == null) {
	      tmp_2 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.UserJS.timestamp.<anonymous>' call
	      tmp_2 = new UserTimestampJS(tmp0_safe_receiver_0);
	    }
	    tmp_1.timestamp = tmp_2;
	    this.imageUrl = user.k34_1;
	    var tmp_3 = this;
	    var tmp0_safe_receiver_1 = user.l34_1;
	    var tmp_4;
	    if (tmp0_safe_receiver_1 == null) {
	      tmp_4 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.UserJS.customData.<anonymous>' call
	      tmp_4 = parseCustomJson(tmp0_safe_receiver_1);
	    }
	    tmp_3.customData = tmp_4;
	  }
	  protoOf(UserJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(UserJS).f2 = function () {
	    return this.name;
	  };
	  protoOf(UserJS).e3q = function () {
	    return this.displayName;
	  };
	  protoOf(UserJS).v3q = function () {
	    return this.channels;
	  };
	  protoOf(UserJS).a2k = function () {
	    return this.timestamp;
	  };
	  protoOf(UserJS).h3p = function () {
	    return this.imageUrl;
	  };
	  protoOf(UserJS).e3p = function () {
	    return this.customData;
	  };
	  function UserTimestampJS(userTimestamp) {
	    this.created = userTimestamp.o34_1;
	    this.updated = userTimestamp.p34_1;
	    this.destroyed = userTimestamp.q34_1;
	  }
	  protoOf(UserTimestampJS).j3q = function () {
	    return this.created;
	  };
	  protoOf(UserTimestampJS).k3q = function () {
	    return this.updated;
	  };
	  protoOf(UserTimestampJS).l3q = function () {
	    return this.destroyed;
	  };
	  function UserChannelsJS(userChannels) {
	    var tmp = this;
	    var tmp0_safe_receiver = userChannels.j2u_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver, 10));
	      var tmp0_iterator = tmp0_safe_receiver.i();
	      while (tmp0_iterator.j()) {
	        var item = tmp0_iterator.k();
	        // Inline function 'vonage.UserChannelsJS.app.<anonymous>' call
	        var tmp$ret$0 = new ChannelJS(item);
	        destination.d(tmp$ret$0);
	      }
	      tmp_0 = destination;
	    }
	    var tmp1_safe_receiver = tmp_0;
	    var tmp_1;
	    if (tmp1_safe_receiver == null) {
	      tmp_1 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_1 = copyToArray(tmp1_safe_receiver);
	    }
	    tmp.app = tmp_1;
	    var tmp_2 = this;
	    var tmp0_safe_receiver_0 = userChannels.k2u_1;
	    var tmp_3;
	    if (tmp0_safe_receiver_0 == null) {
	      tmp_3 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_0, 10));
	      var tmp0_iterator_0 = tmp0_safe_receiver_0.i();
	      while (tmp0_iterator_0.j()) {
	        var item_0 = tmp0_iterator_0.k();
	        // Inline function 'vonage.UserChannelsJS.phone.<anonymous>' call
	        var tmp$ret$4 = new ChannelJS(item_0);
	        destination_0.d(tmp$ret$4);
	      }
	      tmp_3 = destination_0;
	    }
	    var tmp1_safe_receiver_0 = tmp_3;
	    var tmp_4;
	    if (tmp1_safe_receiver_0 == null) {
	      tmp_4 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_4 = copyToArray(tmp1_safe_receiver_0);
	    }
	    tmp_2.phone = tmp_4;
	    var tmp_5 = this;
	    var tmp0_safe_receiver_1 = userChannels.l2u_1;
	    var tmp_6;
	    if (tmp0_safe_receiver_1 == null) {
	      tmp_6 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_1, 10));
	      var tmp0_iterator_1 = tmp0_safe_receiver_1.i();
	      while (tmp0_iterator_1.j()) {
	        var item_1 = tmp0_iterator_1.k();
	        // Inline function 'vonage.UserChannelsJS.pstn.<anonymous>' call
	        var tmp$ret$8 = new ChannelJS(item_1);
	        destination_1.d(tmp$ret$8);
	      }
	      tmp_6 = destination_1;
	    }
	    var tmp1_safe_receiver_1 = tmp_6;
	    var tmp_7;
	    if (tmp1_safe_receiver_1 == null) {
	      tmp_7 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_7 = copyToArray(tmp1_safe_receiver_1);
	    }
	    tmp_5.pstn = tmp_7;
	    var tmp_8 = this;
	    var tmp0_safe_receiver_2 = userChannels.m2u_1;
	    var tmp_9;
	    if (tmp0_safe_receiver_2 == null) {
	      tmp_9 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_2 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_2, 10));
	      var tmp0_iterator_2 = tmp0_safe_receiver_2.i();
	      while (tmp0_iterator_2.j()) {
	        var item_2 = tmp0_iterator_2.k();
	        // Inline function 'vonage.UserChannelsJS.sip.<anonymous>' call
	        var tmp$ret$12 = new ChannelJS(item_2);
	        destination_2.d(tmp$ret$12);
	      }
	      tmp_9 = destination_2;
	    }
	    var tmp1_safe_receiver_2 = tmp_9;
	    var tmp_10;
	    if (tmp1_safe_receiver_2 == null) {
	      tmp_10 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_10 = copyToArray(tmp1_safe_receiver_2);
	    }
	    tmp_8.sip = tmp_10;
	    var tmp_11 = this;
	    var tmp0_safe_receiver_3 = userChannels.n2u_1;
	    var tmp_12;
	    if (tmp0_safe_receiver_3 == null) {
	      tmp_12 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_3 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_3, 10));
	      var tmp0_iterator_3 = tmp0_safe_receiver_3.i();
	      while (tmp0_iterator_3.j()) {
	        var item_3 = tmp0_iterator_3.k();
	        // Inline function 'vonage.UserChannelsJS.vbc.<anonymous>' call
	        var tmp$ret$16 = new ChannelJS(item_3);
	        destination_3.d(tmp$ret$16);
	      }
	      tmp_12 = destination_3;
	    }
	    var tmp1_safe_receiver_3 = tmp_12;
	    var tmp_13;
	    if (tmp1_safe_receiver_3 == null) {
	      tmp_13 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_13 = copyToArray(tmp1_safe_receiver_3);
	    }
	    tmp_11.vbc = tmp_13;
	    var tmp_14 = this;
	    var tmp0_safe_receiver_4 = userChannels.o2u_1;
	    var tmp_15;
	    if (tmp0_safe_receiver_4 == null) {
	      tmp_15 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_4 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_4, 10));
	      var tmp0_iterator_4 = tmp0_safe_receiver_4.i();
	      while (tmp0_iterator_4.j()) {
	        var item_4 = tmp0_iterator_4.k();
	        // Inline function 'vonage.UserChannelsJS.websocket.<anonymous>' call
	        var tmp$ret$20 = new ChannelJS(item_4);
	        destination_4.d(tmp$ret$20);
	      }
	      tmp_15 = destination_4;
	    }
	    var tmp1_safe_receiver_4 = tmp_15;
	    var tmp_16;
	    if (tmp1_safe_receiver_4 == null) {
	      tmp_16 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_16 = copyToArray(tmp1_safe_receiver_4);
	    }
	    tmp_14.websocket = tmp_16;
	    var tmp_17 = this;
	    var tmp0_safe_receiver_5 = userChannels.p2u_1;
	    var tmp_18;
	    if (tmp0_safe_receiver_5 == null) {
	      tmp_18 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_5 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_5, 10));
	      var tmp0_iterator_5 = tmp0_safe_receiver_5.i();
	      while (tmp0_iterator_5.j()) {
	        var item_5 = tmp0_iterator_5.k();
	        // Inline function 'vonage.UserChannelsJS.sms.<anonymous>' call
	        var tmp$ret$24 = new ChannelJS(item_5);
	        destination_5.d(tmp$ret$24);
	      }
	      tmp_18 = destination_5;
	    }
	    var tmp1_safe_receiver_5 = tmp_18;
	    var tmp_19;
	    if (tmp1_safe_receiver_5 == null) {
	      tmp_19 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_19 = copyToArray(tmp1_safe_receiver_5);
	    }
	    tmp_17.sms = tmp_19;
	    var tmp_20 = this;
	    var tmp0_safe_receiver_6 = userChannels.q2u_1;
	    var tmp_21;
	    if (tmp0_safe_receiver_6 == null) {
	      tmp_21 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_6 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_6, 10));
	      var tmp0_iterator_6 = tmp0_safe_receiver_6.i();
	      while (tmp0_iterator_6.j()) {
	        var item_6 = tmp0_iterator_6.k();
	        // Inline function 'vonage.UserChannelsJS.mms.<anonymous>' call
	        var tmp$ret$28 = new ChannelJS(item_6);
	        destination_6.d(tmp$ret$28);
	      }
	      tmp_21 = destination_6;
	    }
	    var tmp1_safe_receiver_6 = tmp_21;
	    var tmp_22;
	    if (tmp1_safe_receiver_6 == null) {
	      tmp_22 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_22 = copyToArray(tmp1_safe_receiver_6);
	    }
	    tmp_20.mms = tmp_22;
	    var tmp_23 = this;
	    var tmp0_safe_receiver_7 = userChannels.r2u_1;
	    var tmp_24;
	    if (tmp0_safe_receiver_7 == null) {
	      tmp_24 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_7 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_7, 10));
	      var tmp0_iterator_7 = tmp0_safe_receiver_7.i();
	      while (tmp0_iterator_7.j()) {
	        var item_7 = tmp0_iterator_7.k();
	        // Inline function 'vonage.UserChannelsJS.whatsapp.<anonymous>' call
	        var tmp$ret$32 = new ChannelJS(item_7);
	        destination_7.d(tmp$ret$32);
	      }
	      tmp_24 = destination_7;
	    }
	    var tmp1_safe_receiver_7 = tmp_24;
	    var tmp_25;
	    if (tmp1_safe_receiver_7 == null) {
	      tmp_25 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_25 = copyToArray(tmp1_safe_receiver_7);
	    }
	    tmp_23.whatsapp = tmp_25;
	    var tmp_26 = this;
	    var tmp0_safe_receiver_8 = userChannels.s2u_1;
	    var tmp_27;
	    if (tmp0_safe_receiver_8 == null) {
	      tmp_27 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_8 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_8, 10));
	      var tmp0_iterator_8 = tmp0_safe_receiver_8.i();
	      while (tmp0_iterator_8.j()) {
	        var item_8 = tmp0_iterator_8.k();
	        // Inline function 'vonage.UserChannelsJS.viber.<anonymous>' call
	        var tmp$ret$36 = new ChannelJS(item_8);
	        destination_8.d(tmp$ret$36);
	      }
	      tmp_27 = destination_8;
	    }
	    var tmp1_safe_receiver_8 = tmp_27;
	    var tmp_28;
	    if (tmp1_safe_receiver_8 == null) {
	      tmp_28 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_28 = copyToArray(tmp1_safe_receiver_8);
	    }
	    tmp_26.viber = tmp_28;
	    var tmp_29 = this;
	    var tmp0_safe_receiver_9 = userChannels.t2u_1;
	    var tmp_30;
	    if (tmp0_safe_receiver_9 == null) {
	      tmp_30 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination_9 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_safe_receiver_9, 10));
	      var tmp0_iterator_9 = tmp0_safe_receiver_9.i();
	      while (tmp0_iterator_9.j()) {
	        var item_9 = tmp0_iterator_9.k();
	        // Inline function 'vonage.UserChannelsJS.messenger.<anonymous>' call
	        var tmp$ret$40 = new ChannelJS(item_9);
	        destination_9.d(tmp$ret$40);
	      }
	      tmp_30 = destination_9;
	    }
	    var tmp1_safe_receiver_9 = tmp_30;
	    var tmp_31;
	    if (tmp1_safe_receiver_9 == null) {
	      tmp_31 = null;
	    } else {
	      // Inline function 'kotlin.collections.toTypedArray' call
	      tmp_31 = copyToArray(tmp1_safe_receiver_9);
	    }
	    tmp_29.messenger = tmp_31;
	  }
	  protoOf(UserChannelsJS).w3n = function () {
	    return this.app;
	  };
	  protoOf(UserChannelsJS).x3n = function () {
	    return this.phone;
	  };
	  protoOf(UserChannelsJS).w3q = function () {
	    return this.pstn;
	  };
	  protoOf(UserChannelsJS).y3n = function () {
	    return this.sip;
	  };
	  protoOf(UserChannelsJS).x3q = function () {
	    return this.vbc;
	  };
	  protoOf(UserChannelsJS).z3n = function () {
	    return this.websocket;
	  };
	  protoOf(UserChannelsJS).y3q = function () {
	    return this.sms;
	  };
	  protoOf(UserChannelsJS).z3q = function () {
	    return this.mms;
	  };
	  protoOf(UserChannelsJS).p3p = function () {
	    return this.whatsapp;
	  };
	  protoOf(UserChannelsJS).a3r = function () {
	    return this.viber;
	  };
	  protoOf(UserChannelsJS).b3r = function () {
	    return this.messenger;
	  };
	  function MemberChannelJS(memberChannel) {
	    this.type = map_5(memberChannel.w2v_1);
	    var tmp = this;
	    var tmp0_safe_receiver = memberChannel.x2v_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.MemberChannelJS.from.<anonymous>' call
	      tmp_0 = new ChannelJS(tmp0_safe_receiver);
	    }
	    tmp.from = tmp_0;
	    var tmp_1 = this;
	    var tmp0_safe_receiver_0 = memberChannel.y2v_1;
	    var tmp_2;
	    if (tmp0_safe_receiver_0 == null) {
	      tmp_2 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.MemberChannelJS.to.<anonymous>' call
	      tmp_2 = new ChannelJS(tmp0_safe_receiver_0);
	    }
	    tmp_1.to = tmp_2;
	  }
	  protoOf(MemberChannelJS).r37 = function () {
	    return this.type;
	  };
	  protoOf(MemberChannelJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(MemberChannelJS).c3r = function () {
	    return this.to;
	  };
	  function ChannelJS(channel) {
	    this.id = channel.s2v_1;
	    this.number = channel.t2v_1;
	  }
	  protoOf(ChannelJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(ChannelJS).d3r = function () {
	    return this.number;
	  };
	  function LegChannelJS(channel) {
	    this.type = channel.h2w_1;
	    this.user = channel.j2w_1;
	    this.number = channel.i2w_1;
	  }
	  protoOf(LegChannelJS).r37 = function () {
	    return this.type;
	  };
	  protoOf(LegChannelJS).d2m = function () {
	    return this.user;
	  };
	  protoOf(LegChannelJS).d3r = function () {
	    return this.number;
	  };
	  function MediaStateJS(mediaState) {
	    var tmp = this;
	    tmp.mute = mediaState == null ? null : mediaState.y2z_1;
	    var tmp_0 = this;
	    tmp_0.earmuff = mediaState == null ? null : mediaState.z2z_1;
	    var tmp_1 = this;
	    tmp_1.play_stream = mediaState == null ? null : mediaState.a30_1;
	    var tmp_2 = this;
	    tmp_2.recording = mediaState == null ? null : mediaState.c30_1;
	    var tmp_3 = this;
	    tmp_3.transcribing = mediaState == null ? null : mediaState.d30_1;
	    var tmp_4 = this;
	    tmp_4.tts = mediaState == null ? null : mediaState.b30_1;
	  }
	  protoOf(MediaStateJS).e3r = function () {
	    return this.mute;
	  };
	  protoOf(MediaStateJS).f3r = function () {
	    return this.earmuff;
	  };
	  protoOf(MediaStateJS).g3r = function () {
	    return this.play_stream;
	  };
	  protoOf(MediaStateJS).h3r = function () {
	    return this.recording;
	  };
	  protoOf(MediaStateJS).i3r = function () {
	    return this.transcribing;
	  };
	  protoOf(MediaStateJS).j3r = function () {
	    return this.tts;
	  };
	  function LegJS(leg) {
	    this.id = leg.f30_1;
	    this.type = leg.g30_1;
	    this.direction = leg.h30_1;
	    this.conversationId = leg.i30_1;
	    this.status = leg.j30_1;
	    this.startTime = leg.k30_1;
	    this.endTime = leg.l30_1;
	    this.from = new LegChannelJS(leg.m30_1);
	    this.to = new LegChannelJS(leg.n30_1);
	    var tmp = this;
	    var tmp0_safe_receiver = leg.o30_1;
	    var tmp_0;
	    if (tmp0_safe_receiver == null) {
	      tmp_0 = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.LegJS.mediaState.<anonymous>' call
	      tmp_0 = new MediaStateJS(tmp0_safe_receiver);
	    }
	    tmp.mediaState = tmp_0;
	  }
	  protoOf(LegJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(LegJS).r37 = function () {
	    return this.type;
	  };
	  protoOf(LegJS).k3r = function () {
	    return this.direction;
	  };
	  protoOf(LegJS).g2s = function () {
	    return this.conversationId;
	  };
	  protoOf(LegJS).l3r = function () {
	    return this.status;
	  };
	  protoOf(LegJS).m3r = function () {
	    return this.startTime;
	  };
	  protoOf(LegJS).n3r = function () {
	    return this.endTime;
	  };
	  protoOf(LegJS).x3o = function () {
	    return this.from;
	  };
	  protoOf(LegJS).c3r = function () {
	    return this.to;
	  };
	  protoOf(LegJS).o3r = function () {
	    return this.mediaState;
	  };
	  function LegsPageJS(legsPage) {
	    var tmp = this;
	    // Inline function 'kotlin.collections.toTypedArray' call
	    // Inline function 'kotlin.collections.map' call
	    var this_0 = legsPage.p30_1;
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
	    var tmp0_iterator = this_0.i();
	    while (tmp0_iterator.j()) {
	      var item = tmp0_iterator.k();
	      // Inline function 'vonage.LegsPageJS.legs.<anonymous>' call
	      var tmp$ret$0 = new LegJS(item);
	      destination.d(tmp$ret$0);
	    }
	    tmp.legs = copyToArray(destination);
	    this.previousCursor = legsPage.q30_1;
	    this.nextCursor = legsPage.r30_1;
	  }
	  protoOf(LegsPageJS).p3r = function () {
	    return this.legs;
	  };
	  protoOf(LegsPageJS).t3o = function () {
	    return this.previousCursor;
	  };
	  protoOf(LegsPageJS).u3o = function () {
	    return this.nextCursor;
	  };
	  function ChannelTypeObj() {
	    this.APP = 'APP';
	    this.PHONE = 'PHONE';
	    this.PSTN = 'PSTN';
	    this.SIP = 'SIP';
	    this.VBC = 'VBC';
	    this.WEBSOCKET = 'WEBSOCKET';
	    this.SMS = 'SMS';
	    this.MMS = 'MMS';
	    this.WHATSAPP = 'WHATSAPP';
	    this.VIBER = 'VIBER';
	    this.MESSENGER = 'MESSENGER';
	  }
	  protoOf(ChannelTypeObj).q3r = function () {
	    return this.APP;
	  };
	  protoOf(ChannelTypeObj).r3r = function () {
	    return this.PHONE;
	  };
	  protoOf(ChannelTypeObj).s3r = function () {
	    return this.PSTN;
	  };
	  protoOf(ChannelTypeObj).t3r = function () {
	    return this.SIP;
	  };
	  protoOf(ChannelTypeObj).u3r = function () {
	    return this.VBC;
	  };
	  protoOf(ChannelTypeObj).v3r = function () {
	    return this.WEBSOCKET;
	  };
	  protoOf(ChannelTypeObj).w3r = function () {
	    return this.SMS;
	  };
	  protoOf(ChannelTypeObj).x3r = function () {
	    return this.MMS;
	  };
	  protoOf(ChannelTypeObj).y3r = function () {
	    return this.WHATSAPP;
	  };
	  protoOf(ChannelTypeObj).z3r = function () {
	    return this.VIBER;
	  };
	  protoOf(ChannelTypeObj).a3s = function () {
	    return this.MESSENGER;
	  };
	  protoOf(ChannelTypeObj).toString = function () {
	    return 'ChannelTypeObj';
	  };
	  protoOf(ChannelTypeObj).hashCode = function () {
	    return 289615710;
	  };
	  protoOf(ChannelTypeObj).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof ChannelTypeObj))
	      return false;
	    other instanceof ChannelTypeObj || THROW_CCE();
	    return true;
	  };
	  var ChannelTypeObj_instance;
	  function ChannelTypeObj_getInstance() {
	    return ChannelTypeObj_instance;
	  }
	  function map_3(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = 'ACTIVE';
	        break;
	      case 1:
	        tmp = 'INACTIVE';
	        break;
	      case 2:
	        tmp = 'DELETED';
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function map_4(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = 'INVITED';
	        break;
	      case 1:
	        tmp = 'JOINED';
	        break;
	      case 2:
	        tmp = 'LEFT';
	        break;
	      case 3:
	        tmp = 'UNKNOWN';
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function map_5(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = ChannelTypeObj_instance.APP;
	        break;
	      case 1:
	        tmp = ChannelTypeObj_instance.PHONE;
	        break;
	      case 2:
	        tmp = ChannelTypeObj_instance.PSTN;
	        break;
	      case 3:
	        tmp = ChannelTypeObj_instance.SIP;
	        break;
	      case 4:
	        tmp = ChannelTypeObj_instance.VBC;
	        break;
	      case 5:
	        tmp = ChannelTypeObj_instance.WEBSOCKET;
	        break;
	      case 6:
	        tmp = ChannelTypeObj_instance.SMS;
	        break;
	      case 7:
	        tmp = ChannelTypeObj_instance.MMS;
	        break;
	      case 8:
	        tmp = ChannelTypeObj_instance.WHATSAPP;
	        break;
	      case 9:
	        tmp = ChannelTypeObj_instance.VIBER;
	        break;
	      case 10:
	        tmp = ChannelTypeObj_instance.MESSENGER;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function PresentingOrderJS_ASC_getInstance() {
	    PresentingOrderJS_initEntries();
	    return PresentingOrderJS_ASC_instance;
	  }
	  function PresentingOrderJS_DESC_getInstance() {
	    PresentingOrderJS_initEntries();
	    return PresentingOrderJS_DESC_instance;
	  }
	  function OrderByJS_CREATED_getInstance() {
	    OrderByJS_initEntries();
	    return OrderByJS_CREATED_instance;
	  }
	  function OrderByJS_CUSTOM_SORT_KEY_getInstance() {
	    OrderByJS_initEntries();
	    return OrderByJS_CUSTOM_SORT_KEY_instance;
	  }
	  function CSErrorCodesJS() {
	    this.CONVERSATION_DUPLICATE_NAME = 'conversation:error:duplicate-name';
	    this.MEMBER_ALREADY_JOINED = 'conversation:error:member-already-joined';
	    this.MEMBER_ALREADY_INVITED = 'conversation:error:member-already-invited';
	    this.CONVERSATION_NOT_FOUND = 'conversation:error:not-found';
	    this.MEMBER_NOT_FOUND = 'conversation:error:member-not-found';
	    this.USER_NOT_FOUND = 'user:error:not-found';
	    this.INVALID_CURSOR = 'paginator-builder:error:invalid-cursor';
	    this.VALIDATION_FAIL = 'http:error:validation-fail';
	    this.CONVERSATION_MAX_NUMBER_OF_MEMBERS = 'conversation:error:maximum-number-of-members';
	    this.CUSTOM_DATA_OVERALL_LIMIT_EXCEEDED = 'custom-data:error:max-data-sum-limit-exceeded';
	  }
	  protoOf(CSErrorCodesJS).b3s = function () {
	    return this.CONVERSATION_DUPLICATE_NAME;
	  };
	  protoOf(CSErrorCodesJS).c3s = function () {
	    return this.MEMBER_ALREADY_JOINED;
	  };
	  protoOf(CSErrorCodesJS).d3s = function () {
	    return this.MEMBER_ALREADY_INVITED;
	  };
	  protoOf(CSErrorCodesJS).e3s = function () {
	    return this.CONVERSATION_NOT_FOUND;
	  };
	  protoOf(CSErrorCodesJS).f3s = function () {
	    return this.MEMBER_NOT_FOUND;
	  };
	  protoOf(CSErrorCodesJS).g3s = function () {
	    return this.USER_NOT_FOUND;
	  };
	  protoOf(CSErrorCodesJS).h3s = function () {
	    return this.INVALID_CURSOR;
	  };
	  protoOf(CSErrorCodesJS).i3s = function () {
	    return this.VALIDATION_FAIL;
	  };
	  protoOf(CSErrorCodesJS).j3s = function () {
	    return this.CONVERSATION_MAX_NUMBER_OF_MEMBERS;
	  };
	  protoOf(CSErrorCodesJS).k3s = function () {
	    return this.CUSTOM_DATA_OVERALL_LIMIT_EXCEEDED;
	  };
	  var CSErrorCodesJS_instance;
	  function CSErrorCodesJS_getInstance() {
	    return CSErrorCodesJS_instance;
	  }
	  function SessionErrorCodesJS() {
	    this.EMPTY_TOKEN = 'session:error:empty-token';
	    this.FORCED_DISCONNECT = 'session:error:server-forced-disconnect';
	    this.TIMEOUT = 'session:error:timeout';
	    this.INTERNAL_FAILURE = 'session:error:internal-failure';
	    this.NO_ACTIVE_SESSION = 'session:error:no-active-session';
	    this.ALREADY_ACTIVE_SESSION = 'session:error:already-active-session';
	    this.INVALID_TOKEN = 'session:error:invalid-token';
	    this.EXPIRED_TOKEN = 'session:error:expired-token';
	    this.INVALID_USER = 'user:error:invalid-user';
	    this.AUTHORIZATION_ERROR = 'system:error:permission';
	    this.INVALID_SESSION = 'session:error:invalid-session';
	    this.MAX_OPEN_SESSIONS = 'session:error:max-open-sessions-permitted';
	    this.INVALID_SOCKET_TRANSPORT = 'session:error:websocket-transport-invalid';
	    this.CLIENT_DISCONNECT = 'session:disconnect:client-disconnect';
	    this.PING_TIMEOUT_DISCONNECT = 'session:disconnect:ping-timeout';
	    this.TRANSPORT_CLOSED_DISCONNECT = 'session:disconnect:websocket-transport-closed';
	  }
	  protoOf(SessionErrorCodesJS).l3s = function () {
	    return this.EMPTY_TOKEN;
	  };
	  protoOf(SessionErrorCodesJS).m3s = function () {
	    return this.FORCED_DISCONNECT;
	  };
	  protoOf(SessionErrorCodesJS).n3s = function () {
	    return this.TIMEOUT;
	  };
	  protoOf(SessionErrorCodesJS).o3s = function () {
	    return this.INTERNAL_FAILURE;
	  };
	  protoOf(SessionErrorCodesJS).p3s = function () {
	    return this.NO_ACTIVE_SESSION;
	  };
	  protoOf(SessionErrorCodesJS).q3s = function () {
	    return this.ALREADY_ACTIVE_SESSION;
	  };
	  protoOf(SessionErrorCodesJS).r3s = function () {
	    return this.INVALID_TOKEN;
	  };
	  protoOf(SessionErrorCodesJS).s3s = function () {
	    return this.EXPIRED_TOKEN;
	  };
	  protoOf(SessionErrorCodesJS).t3s = function () {
	    return this.INVALID_USER;
	  };
	  protoOf(SessionErrorCodesJS).u3s = function () {
	    return this.AUTHORIZATION_ERROR;
	  };
	  protoOf(SessionErrorCodesJS).v3s = function () {
	    return this.INVALID_SESSION;
	  };
	  protoOf(SessionErrorCodesJS).w3s = function () {
	    return this.MAX_OPEN_SESSIONS;
	  };
	  protoOf(SessionErrorCodesJS).x3s = function () {
	    return this.INVALID_SOCKET_TRANSPORT;
	  };
	  protoOf(SessionErrorCodesJS).y3s = function () {
	    return this.CLIENT_DISCONNECT;
	  };
	  protoOf(SessionErrorCodesJS).z3s = function () {
	    return this.PING_TIMEOUT_DISCONNECT;
	  };
	  protoOf(SessionErrorCodesJS).a3t = function () {
	    return this.TRANSPORT_CLOSED_DISCONNECT;
	  };
	  var SessionErrorCodesJS_instance;
	  function SessionErrorCodesJS_getInstance() {
	    return SessionErrorCodesJS_instance;
	  }
	  function VonageErrorJS(vonageError) {
	    extendThrowable(this, vonageError.message);
	    captureStack(this, VonageErrorJS);
	    this.type = map_6(vonageError.d2v_1);
	    this.code = vonageError.e2v_1;
	    this.kmpCause = vonageError.cause;
	  }
	  protoOf(VonageErrorJS).r37 = function () {
	    return this.type;
	  };
	  protoOf(VonageErrorJS).v2m = function () {
	    return this.code;
	  };
	  protoOf(VonageErrorJS).b3t = function () {
	    return this.kmpCause;
	  };
	  function VonageErrorTypeJsObject() {
	    this.CS_ERROR = 'CS_ERROR';
	    this.NETWORK_ERROR = 'NETWORK_ERROR';
	    this.SESSION_ERROR = 'SESSION_ERROR';
	    this.INTERNAL_ERROR = 'INTERNAL_ERROR';
	    this.UNKNOWN_ERROR = 'UNKNOWN_ERROR';
	  }
	  protoOf(VonageErrorTypeJsObject).c3t = function () {
	    return this.CS_ERROR;
	  };
	  protoOf(VonageErrorTypeJsObject).d3t = function () {
	    return this.NETWORK_ERROR;
	  };
	  protoOf(VonageErrorTypeJsObject).e3t = function () {
	    return this.SESSION_ERROR;
	  };
	  protoOf(VonageErrorTypeJsObject).f3t = function () {
	    return this.INTERNAL_ERROR;
	  };
	  protoOf(VonageErrorTypeJsObject).g3t = function () {
	    return this.UNKNOWN_ERROR;
	  };
	  protoOf(VonageErrorTypeJsObject).toString = function () {
	    return 'VonageErrorTypeJsObject';
	  };
	  protoOf(VonageErrorTypeJsObject).hashCode = function () {
	    return 1253724284;
	  };
	  protoOf(VonageErrorTypeJsObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof VonageErrorTypeJsObject))
	      return false;
	    other instanceof VonageErrorTypeJsObject || THROW_CCE();
	    return true;
	  };
	  var VonageErrorTypeJsObject_instance;
	  function VonageErrorTypeJsObject_getInstance() {
	    return VonageErrorTypeJsObject_instance;
	  }
	  function MediaClientErrorJS() {
	  }
	  protoOf(MediaClientErrorJS).h3t = function () {
	    var tmp;
	    if (this instanceof PeerConnectionNotFoundJS) {
	      tmp = new PeerConnectionNotFound(this.legId);
	    } else {
	      if (this instanceof TrackNotFoundJS) {
	        tmp = new TrackNotFound(this.legId);
	      } else {
	        if (this instanceof ProcessAnswerErrorJS) {
	          tmp = new ProcessAnswerError(this.legId, this.message);
	        } else {
	          if (this instanceof CreateAnswerErrorJS) {
	            tmp = new CreateAnswerError(this.message);
	          } else {
	            if (this instanceof CreateOfferErrorJS) {
	              tmp = new CreateOfferError(this.message);
	            } else {
	              noWhenBranchMatchedException();
	            }
	          }
	        }
	      }
	    }
	    return tmp;
	  };
	  function PeerConnectionNotFoundJS(legId) {
	    MediaClientErrorJS.call(this);
	    this.legId = legId;
	  }
	  protoOf(PeerConnectionNotFoundJS).i3t = function () {
	    return this.legId;
	  };
	  protoOf(PeerConnectionNotFoundJS).o8 = function () {
	    return this.legId;
	  };
	  protoOf(PeerConnectionNotFoundJS).j3t = function (legId) {
	    return new PeerConnectionNotFoundJS(legId);
	  };
	  protoOf(PeerConnectionNotFoundJS).copy = function (legId, $super) {
	    legId = legId === VOID ? this.legId : legId;
	    return this.j3t(legId);
	  };
	  protoOf(PeerConnectionNotFoundJS).toString = function () {
	    return 'PeerConnectionNotFoundJS(legId=' + this.legId + ')';
	  };
	  protoOf(PeerConnectionNotFoundJS).hashCode = function () {
	    return getStringHashCode(this.legId);
	  };
	  protoOf(PeerConnectionNotFoundJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof PeerConnectionNotFoundJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof PeerConnectionNotFoundJS ? other : THROW_CCE();
	    if (!(this.legId === tmp0_other_with_cast.legId))
	      return false;
	    return true;
	  };
	  function TrackNotFoundJS(legId) {
	    MediaClientErrorJS.call(this);
	    this.legId = legId;
	  }
	  protoOf(TrackNotFoundJS).i3t = function () {
	    return this.legId;
	  };
	  protoOf(TrackNotFoundJS).o8 = function () {
	    return this.legId;
	  };
	  protoOf(TrackNotFoundJS).j3t = function (legId) {
	    return new TrackNotFoundJS(legId);
	  };
	  protoOf(TrackNotFoundJS).copy = function (legId, $super) {
	    legId = legId === VOID ? this.legId : legId;
	    return this.j3t(legId);
	  };
	  protoOf(TrackNotFoundJS).toString = function () {
	    return 'TrackNotFoundJS(legId=' + this.legId + ')';
	  };
	  protoOf(TrackNotFoundJS).hashCode = function () {
	    return getStringHashCode(this.legId);
	  };
	  protoOf(TrackNotFoundJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof TrackNotFoundJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof TrackNotFoundJS ? other : THROW_CCE();
	    if (!(this.legId === tmp0_other_with_cast.legId))
	      return false;
	    return true;
	  };
	  function ProcessAnswerErrorJS(legId, message) {
	    message = message === VOID ? null : message;
	    MediaClientErrorJS.call(this);
	    this.legId = legId;
	    this.message = message;
	  }
	  protoOf(ProcessAnswerErrorJS).i3t = function () {
	    return this.legId;
	  };
	  protoOf(ProcessAnswerErrorJS).k8 = function () {
	    return this.message;
	  };
	  protoOf(ProcessAnswerErrorJS).o8 = function () {
	    return this.legId;
	  };
	  protoOf(ProcessAnswerErrorJS).p8 = function () {
	    return this.message;
	  };
	  protoOf(ProcessAnswerErrorJS).k3t = function (legId, message) {
	    return new ProcessAnswerErrorJS(legId, message);
	  };
	  protoOf(ProcessAnswerErrorJS).copy = function (legId, message, $super) {
	    legId = legId === VOID ? this.legId : legId;
	    message = message === VOID ? this.message : message;
	    return this.k3t(legId, message);
	  };
	  protoOf(ProcessAnswerErrorJS).toString = function () {
	    return 'ProcessAnswerErrorJS(legId=' + this.legId + ', message=' + this.message + ')';
	  };
	  protoOf(ProcessAnswerErrorJS).hashCode = function () {
	    var result = getStringHashCode(this.legId);
	    result = imul(result, 31) + (this.message == null ? 0 : getStringHashCode(this.message)) | 0;
	    return result;
	  };
	  protoOf(ProcessAnswerErrorJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof ProcessAnswerErrorJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof ProcessAnswerErrorJS ? other : THROW_CCE();
	    if (!(this.legId === tmp0_other_with_cast.legId))
	      return false;
	    if (!(this.message == tmp0_other_with_cast.message))
	      return false;
	    return true;
	  };
	  function CreateAnswerErrorJS(message) {
	    message = message === VOID ? null : message;
	    MediaClientErrorJS.call(this);
	    this.message = message;
	  }
	  protoOf(CreateAnswerErrorJS).k8 = function () {
	    return this.message;
	  };
	  protoOf(CreateAnswerErrorJS).o8 = function () {
	    return this.message;
	  };
	  protoOf(CreateAnswerErrorJS).l3t = function (message) {
	    return new CreateAnswerErrorJS(message);
	  };
	  protoOf(CreateAnswerErrorJS).copy = function (message, $super) {
	    message = message === VOID ? this.message : message;
	    return this.l3t(message);
	  };
	  protoOf(CreateAnswerErrorJS).toString = function () {
	    return 'CreateAnswerErrorJS(message=' + this.message + ')';
	  };
	  protoOf(CreateAnswerErrorJS).hashCode = function () {
	    return this.message == null ? 0 : getStringHashCode(this.message);
	  };
	  protoOf(CreateAnswerErrorJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof CreateAnswerErrorJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof CreateAnswerErrorJS ? other : THROW_CCE();
	    if (!(this.message == tmp0_other_with_cast.message))
	      return false;
	    return true;
	  };
	  function CreateOfferErrorJS(message) {
	    message = message === VOID ? null : message;
	    MediaClientErrorJS.call(this);
	    this.message = message;
	  }
	  protoOf(CreateOfferErrorJS).k8 = function () {
	    return this.message;
	  };
	  protoOf(CreateOfferErrorJS).o8 = function () {
	    return this.message;
	  };
	  protoOf(CreateOfferErrorJS).l3t = function (message) {
	    return new CreateOfferErrorJS(message);
	  };
	  protoOf(CreateOfferErrorJS).copy = function (message, $super) {
	    message = message === VOID ? this.message : message;
	    return this.l3t(message);
	  };
	  protoOf(CreateOfferErrorJS).toString = function () {
	    return 'CreateOfferErrorJS(message=' + this.message + ')';
	  };
	  protoOf(CreateOfferErrorJS).hashCode = function () {
	    return this.message == null ? 0 : getStringHashCode(this.message);
	  };
	  protoOf(CreateOfferErrorJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof CreateOfferErrorJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof CreateOfferErrorJS ? other : THROW_CCE();
	    if (!(this.message == tmp0_other_with_cast.message))
	      return false;
	    return true;
	  };
	  function map_6(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = 'CS_ERROR';
	        break;
	      case 3:
	        tmp = 'NETWORK_ERROR';
	        break;
	      case 1:
	        tmp = 'SESSION_ERROR';
	        break;
	      case 2:
	        tmp = 'INTERNAL_ERROR';
	        break;
	      case 4:
	        tmp = 'UNKNOWN_ERROR';
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function IChatClientJS$createConversation$lambda$lambda($resolve, $reject) {
	    return function (err, cid) {
	      var tmp;
	      if (cid == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(cid);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$createConversation$lambda(this$0, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_safe_receiver = $parameters;
	      var tmp_0 = tmp0_safe_receiver == null ? null : map_17(tmp0_safe_receiver);
	      tmp.k1f(tmp_0, IChatClientJS$createConversation$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$joinConversation$lambda$lambda($resolve, $reject) {
	    return function (err, mid) {
	      var tmp;
	      if (mid == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(mid);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$joinConversation$lambda(this$0, $cid) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.s1f($cid, IChatClientJS$joinConversation$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$inviteToConversation$lambda$lambda($resolve, $reject) {
	    return function (err, mid) {
	      var tmp;
	      if (mid == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(mid);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$inviteToConversation$lambda(this$0, $cid, $username) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.r1f($cid, $username, IChatClientJS$inviteToConversation$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$leaveConversation$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$leaveConversation$lambda(this$0, $cid) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.t1f($cid, IChatClientJS$leaveConversation$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$deleteConversation$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$deleteConversation$lambda(this$0, $cid) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.l1f($cid, IChatClientJS$deleteConversation$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversations$lambda$lambda($resolve, $reject) {
	    return function (err, page) {
	      var tmp;
	      if (page == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new ConversationsPageJS(page));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversations$lambda(this$0, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_safe_receiver = $parameters;
	      var tmp_0 = tmp0_safe_receiver == null ? null : map_19(tmp0_safe_receiver);
	      tmp.q1f(tmp_0, IChatClientJS$getConversations$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationMembers$lambda$lambda($resolve, $reject) {
	    return function (err, page) {
	      var tmp;
	      if (page == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new MembersPageJS(page));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationMembers$lambda(this$0, $cid, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_safe_receiver = $parameters;
	      var tmp_0 = tmp0_safe_receiver == null ? null : map_21(tmp0_safe_receiver);
	      tmp.p1f($cid, tmp_0, IChatClientJS$getConversationMembers$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationEvents$lambda$lambda($resolve, $reject) {
	    return function (err, page) {
	      var tmp;
	      if (page == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new EventsPageJS(page));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationEvents$lambda(this$0, $cid, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_safe_receiver = $parameters;
	      var tmp_0 = tmp0_safe_receiver == null ? null : map_20(tmp0_safe_receiver);
	      tmp.x1d($cid, tmp_0, VOID, VOID, IChatClientJS$getConversationEvents$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationMember$lambda$lambda($resolve, $reject) {
	    return function (err, member) {
	      var tmp;
	      if (member == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new MemberJS(member));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$getConversationMember$lambda(this$0, $cid, $mid) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.o1f($cid, $mid, IChatClientJS$getConversationMember$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageTextEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageTextEvent$lambda(this$0, $cid, $text) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.y1d($cid, $text, VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, IChatClientJS$sendMessageTextEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageCustomEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageCustomEvent$lambda(this$0, $cid, $customData) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.y1d($cid, VOID, VOID, VOID, VOID, VOID, VOID, $customData, VOID, VOID, IChatClientJS$sendMessageCustomEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageImageEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageImageEvent$lambda(this$0, $cid, $imageURL) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = toString($imageURL);
	      tmp.y1d($cid, VOID, tmp_0, VOID, VOID, VOID, VOID, VOID, VOID, VOID, IChatClientJS$sendMessageImageEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageVideoEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageVideoEvent$lambda(this$0, $cid, $videoURL) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = toString($videoURL);
	      tmp.y1d($cid, VOID, VOID, tmp_0, VOID, VOID, VOID, VOID, VOID, VOID, IChatClientJS$sendMessageVideoEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageFileEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageFileEvent$lambda(this$0, $cid, $fileURL) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = toString($fileURL);
	      tmp.y1d($cid, VOID, VOID, VOID, VOID, tmp_0, VOID, VOID, VOID, VOID, IChatClientJS$sendMessageFileEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageAudioEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageAudioEvent$lambda(this$0, $cid, $audioURL) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = toString($audioURL);
	      tmp.y1d($cid, VOID, VOID, VOID, tmp_0, VOID, VOID, VOID, VOID, VOID, IChatClientJS$sendMessageAudioEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageVCardEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageVCardEvent$lambda(this$0, $cid, $vCardURL) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = toString($vCardURL);
	      tmp.y1d($cid, VOID, VOID, VOID, VOID, VOID, tmp_0, VOID, VOID, VOID, IChatClientJS$sendMessageVCardEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageLocationEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageLocationEvent$lambda(this$0, $cid, $location) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_name = $location.name;
	      var tmp1_latitude = $location.latitude;
	      var tmp2_longitude = $location.longitude;
	      var tmp3_address = $location.address;
	      var tmp_0 = new Location(tmp2_longitude, tmp1_latitude, tmp0_name, tmp3_address);
	      tmp.y1d($cid, VOID, VOID, VOID, VOID, VOID, VOID, VOID, tmp_0, VOID, IChatClientJS$sendMessageLocationEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageTemplateEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageTemplateEvent$lambda(this$0, $cid, $templateObject, $whatsappObject) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = $templateObject.name;
	      var tmp0_safe_receiver = $templateObject.parameters;
	      var tmp_1 = new Pair(new TemplateObject(tmp_0, tmp0_safe_receiver == null ? null : toList(tmp0_safe_receiver)), new WhatsappObject($whatsappObject.policy, $whatsappObject.locale));
	      tmp.y1d($cid, VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, tmp_1, IChatClientJS$sendMessageTemplateEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendEphemeralEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendEphemeralEvent$lambda(this$0, $cid, $customData) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.v1f($cid, $customData, IChatClientJS$sendEphemeralEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendCustomEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendCustomEvent$lambda(this$0, $cid, $eventType, $customData) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.u1f($cid, $eventType, $customData, IChatClientJS$sendCustomEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$deleteEvent$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$deleteEvent$lambda(this$0, $id, $conversationId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.m1f($id, $conversationId, IChatClientJS$deleteEvent$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageSeenEvent$lambda$lambda($resolve, $reject) {
	    return function (err, timestamp) {
	      var tmp;
	      if (timestamp == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(timestamp);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$sendMessageSeenEvent$lambda(this$0, $id, $conversationId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.x1f($id, $conversationId, IChatClientJS$sendMessageSeenEvent$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$updateConversation$lambda$lambda($resolve, $reject) {
	    return function (err, cid) {
	      var tmp;
	      if (cid == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(cid);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS$updateConversation$lambda(this$0, $conversationId, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = map_18($parameters);
	      tmp.y1f($conversationId, tmp_0, IChatClientJS$updateConversation$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IChatClientJS() {
	  }
	  function get_DEFAULT_REGION() {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return DEFAULT_REGION;
	  }
	  var DEFAULT_REGION;
	  function get_DEFAULT_LOGGING_LEVEL() {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return DEFAULT_LOGGING_LEVEL;
	  }
	  var DEFAULT_LOGGING_LEVEL;
	  var CoreClientConfigRegionJS_AP_instance;
	  var CoreClientConfigRegionJS_EU_instance;
	  var CoreClientConfigRegionJS_US_instance;
	  function values_2() {
	    return [CoreClientConfigRegionJS_AP_getInstance(), CoreClientConfigRegionJS_EU_getInstance(), CoreClientConfigRegionJS_US_getInstance()];
	  }
	  function valueOf_3(value) {
	    switch (value) {
	      case 'AP':
	        return CoreClientConfigRegionJS_AP_getInstance();
	      case 'EU':
	        return CoreClientConfigRegionJS_EU_getInstance();
	      case 'US':
	        return CoreClientConfigRegionJS_US_getInstance();
	      default:
	        CoreClientConfigRegionJS_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var CoreClientConfigRegionJS_entriesInitialized;
	  function CoreClientConfigRegionJS_initEntries() {
	    if (CoreClientConfigRegionJS_entriesInitialized)
	      return Unit_instance;
	    CoreClientConfigRegionJS_entriesInitialized = true;
	    CoreClientConfigRegionJS_AP_instance = new CoreClientConfigRegionJS('AP', 0, ClientConfigRegion_AP_getInstance());
	    CoreClientConfigRegionJS_EU_instance = new CoreClientConfigRegionJS('EU', 1, ClientConfigRegion_EU_getInstance());
	    CoreClientConfigRegionJS_US_instance = new CoreClientConfigRegionJS('US', 2, ClientConfigRegion_US_getInstance());
	  }
	  function CoreClientConfigRegionJS(name, ordinal, coreRegion) {
	    Enum.call(this, name, ordinal);
	    this.coreRegion = coreRegion;
	  }
	  protoOf(CoreClientConfigRegionJS).o3t = function () {
	    return this.coreRegion;
	  };
	  function CoreClientConfigJS(region) {
	    region = region === VOID ? get_DEFAULT_REGION() : region;
	    this.region = region;
	    this.p3t_1 = this.region.coreRegion.h2u_1;
	    this.q3t_1 = this.region.coreRegion.i2u_1;
	    this.r3t_1 = '/v2/rtc';
	    this.s3t_1 = true;
	    this.t3t_1 = false;
	    this.u3t_1 = false;
	  }
	  protoOf(CoreClientConfigJS).v3t = function () {
	    return this.region;
	  };
	  protoOf(CoreClientConfigJS).w3t = function (_set____db54di) {
	    this.p3t_1 = _set____db54di;
	  };
	  protoOf(CoreClientConfigJS).x3t = function () {
	    return this.p3t_1;
	  };
	  protoOf(CoreClientConfigJS).y3t = function (_set____db54di) {
	    this.q3t_1 = _set____db54di;
	  };
	  protoOf(CoreClientConfigJS).z3t = function () {
	    return this.q3t_1;
	  };
	  protoOf(CoreClientConfigJS).a3u = function (_set____db54di) {
	    this.r3t_1 = _set____db54di;
	  };
	  protoOf(CoreClientConfigJS).b3u = function () {
	    return this.r3t_1;
	  };
	  protoOf(CoreClientConfigJS).c3u = function (_set____db54di) {
	    this.s3t_1 = _set____db54di;
	  };
	  protoOf(CoreClientConfigJS).d3u = function () {
	    return this.s3t_1;
	  };
	  protoOf(CoreClientConfigJS).e3u = function (_set____db54di) {
	    this.t3t_1 = _set____db54di;
	  };
	  protoOf(CoreClientConfigJS).f3u = function () {
	    return this.t3t_1;
	  };
	  protoOf(CoreClientConfigJS).g3u = function () {
	    return this.u3t_1;
	  };
	  function TopicJS(name, tag) {
	    this.name = name;
	    this.tag = tag;
	  }
	  protoOf(TopicJS).f2 = function () {
	    return this.name;
	  };
	  protoOf(TopicJS).h3u = function () {
	    return this.tag;
	  };
	  protoOf(TopicJS).o8 = function () {
	    return this.name;
	  };
	  protoOf(TopicJS).p8 = function () {
	    return this.tag;
	  };
	  protoOf(TopicJS).i3u = function (name, tag) {
	    return new TopicJS(name, tag);
	  };
	  protoOf(TopicJS).copy = function (name, tag, $super) {
	    name = name === VOID ? this.name : name;
	    tag = tag === VOID ? this.tag : tag;
	    return this.i3u(name, tag);
	  };
	  protoOf(TopicJS).toString = function () {
	    return 'TopicJS(name=' + this.name + ', tag=' + this.tag + ')';
	  };
	  protoOf(TopicJS).hashCode = function () {
	    var result = getStringHashCode(this.name);
	    result = imul(result, 31) + getStringHashCode(this.tag) | 0;
	    return result;
	  };
	  protoOf(TopicJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof TopicJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof TopicJS ? other : THROW_CCE();
	    if (!(this.name === tmp0_other_with_cast.name))
	      return false;
	    if (!(this.tag === tmp0_other_with_cast.tag))
	      return false;
	    return true;
	  };
	  var Topics_HTTP_instance;
	  var Topics_WS_instance;
	  var Topics_MEDIA_instance;
	  var Topics_API_instance;
	  var Topics_STORE_instance;
	  var Topics_REDUCER_instance;
	  var Topics_DEFAULT_instance;
	  function values_3() {
	    return [Topics_HTTP_getInstance(), Topics_WS_getInstance(), Topics_MEDIA_getInstance(), Topics_API_getInstance(), Topics_STORE_getInstance(), Topics_REDUCER_getInstance(), Topics_DEFAULT_getInstance()];
	  }
	  function valueOf_4(value) {
	    switch (value) {
	      case 'HTTP':
	        return Topics_HTTP_getInstance();
	      case 'WS':
	        return Topics_WS_getInstance();
	      case 'MEDIA':
	        return Topics_MEDIA_getInstance();
	      case 'API':
	        return Topics_API_getInstance();
	      case 'STORE':
	        return Topics_STORE_getInstance();
	      case 'REDUCER':
	        return Topics_REDUCER_getInstance();
	      case 'DEFAULT':
	        return Topics_DEFAULT_getInstance();
	      default:
	        Topics_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var Topics_entriesInitialized;
	  function Topics_initEntries() {
	    if (Topics_entriesInitialized)
	      return Unit_instance;
	    Topics_entriesInitialized = true;
	    Topics_HTTP_instance = new Topics('HTTP', 0);
	    Topics_WS_instance = new Topics('WS', 1);
	    Topics_MEDIA_instance = new Topics('MEDIA', 2);
	    Topics_API_instance = new Topics('API', 3);
	    Topics_STORE_instance = new Topics('STORE', 4);
	    Topics_REDUCER_instance = new Topics('REDUCER', 5);
	    Topics_DEFAULT_instance = new Topics('DEFAULT', 6);
	  }
	  function Topics(name, ordinal) {
	    Enum.call(this, name, ordinal);
	  }
	  function createVonageLoggerJS(name, minLogLevel, topics, onLog) {
	    minLogLevel = minLogLevel === VOID ? getLoggingLevelJS(DefaultConfig_getInstance().e2u_1) : minLogLevel;
	    var tmp;
	    if (topics === VOID) {
	      // Inline function 'kotlin.arrayOf' call
	      // Inline function 'kotlin.js.unsafeCast' call
	      // Inline function 'kotlin.js.asDynamic' call
	      tmp = [Topics_DEFAULT_getInstance()];
	    } else {
	      tmp = topics;
	    }
	    topics = tmp;
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return new createVonageLoggerJS$1(name, minLogLevel, topics, onLog);
	  }
	  var LoggingLevelJS_Verbose_instance;
	  var LoggingLevelJS_Debug_instance;
	  var LoggingLevelJS_Info_instance;
	  var LoggingLevelJS_Warn_instance;
	  var LoggingLevelJS_Error_instance;
	  var LoggingLevelJS_Assert_instance;
	  function values_4() {
	    return [LoggingLevelJS_Verbose_getInstance(), LoggingLevelJS_Debug_getInstance(), LoggingLevelJS_Info_getInstance(), LoggingLevelJS_Warn_getInstance(), LoggingLevelJS_Error_getInstance(), LoggingLevelJS_Assert_getInstance()];
	  }
	  function valueOf_5(value) {
	    switch (value) {
	      case 'Verbose':
	        return LoggingLevelJS_Verbose_getInstance();
	      case 'Debug':
	        return LoggingLevelJS_Debug_getInstance();
	      case 'Info':
	        return LoggingLevelJS_Info_getInstance();
	      case 'Warn':
	        return LoggingLevelJS_Warn_getInstance();
	      case 'Error':
	        return LoggingLevelJS_Error_getInstance();
	      case 'Assert':
	        return LoggingLevelJS_Assert_getInstance();
	      default:
	        LoggingLevelJS_initEntries();
	        THROW_IAE('No enum constant value.');
	        break;
	    }
	  }
	  var LoggingLevelJS_entriesInitialized;
	  function LoggingLevelJS_initEntries() {
	    if (LoggingLevelJS_entriesInitialized)
	      return Unit_instance;
	    LoggingLevelJS_entriesInitialized = true;
	    LoggingLevelJS_Verbose_instance = new LoggingLevelJS('Verbose', 0);
	    LoggingLevelJS_Debug_instance = new LoggingLevelJS('Debug', 1);
	    LoggingLevelJS_Info_instance = new LoggingLevelJS('Info', 2);
	    LoggingLevelJS_Warn_instance = new LoggingLevelJS('Warn', 3);
	    LoggingLevelJS_Error_instance = new LoggingLevelJS('Error', 4);
	    LoggingLevelJS_Assert_instance = new LoggingLevelJS('Assert', 5);
	  }
	  function LoggingLevelJS(name, ordinal) {
	    Enum.call(this, name, ordinal);
	  }
	  function SessionErrorReasonJsObject() {
	    this.EXPIRED_TOKEN = 'EXPIRED_TOKEN';
	    this.TRANSPORT_CLOSED = 'TRANSPORT_CLOSED';
	    this.PING_TIMEOUT = 'PING_TIMEOUT';
	  }
	  protoOf(SessionErrorReasonJsObject).s3s = function () {
	    return this.EXPIRED_TOKEN;
	  };
	  protoOf(SessionErrorReasonJsObject).n3u = function () {
	    return this.TRANSPORT_CLOSED;
	  };
	  protoOf(SessionErrorReasonJsObject).o3u = function () {
	    return this.PING_TIMEOUT;
	  };
	  protoOf(SessionErrorReasonJsObject).toString = function () {
	    return 'SessionErrorReasonJsObject';
	  };
	  protoOf(SessionErrorReasonJsObject).hashCode = function () {
	    return -1684002174;
	  };
	  protoOf(SessionErrorReasonJsObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof SessionErrorReasonJsObject))
	      return false;
	    other instanceof SessionErrorReasonJsObject || THROW_CCE();
	    return true;
	  };
	  var SessionErrorReasonJsObject_instance;
	  function SessionErrorReasonJsObject_getInstance() {
	    return SessionErrorReasonJsObject_instance;
	  }
	  function ICoreClientJS$createSession$lambda$lambda($resolve, $reject) {
	    return function (err, sessionId) {
	      var tmp;
	      if (sessionId == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(sessionId);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$createSession$lambda(this$0, $token, $sessionId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.z1f($token, $sessionId, ICoreClientJS$createSession$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$deleteSession$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$deleteSession$lambda(this$0) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.a1g(ICoreClientJS$deleteSession$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$refreshSession$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$refreshSession$lambda(this$0, $token) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.b1g($token, ICoreClientJS$refreshSession$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$getConversation$lambda$lambda($resolve, $reject) {
	    return function (err, conversation) {
	      var tmp;
	      if (conversation == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new ConversationJS(conversation));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$getConversation$lambda(this$0, $conversationIdOrName) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.d1g($conversationIdOrName, ICoreClientJS$getConversation$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$getUser$lambda$lambda($resolve, $reject) {
	    return function (err, user) {
	      var tmp;
	      if (user == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new UserJS(user));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS$getUser$lambda(this$0, $userIdOrName) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.e1g($userIdOrName, ICoreClientJS$getUser$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function ICoreClientJS() {
	  }
	  function map_7(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return new TopicJS(_this__u8e3s4.j3d_1, _this__u8e3s4.k3d_1);
	  }
	  function map_8(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = Companion_getInstance().h3c_1;
	        break;
	      case 1:
	        tmp = Companion_getInstance().i3c_1;
	        break;
	      case 2:
	        tmp = Companion_getInstance().j3c_1;
	        break;
	      case 3:
	        tmp = Companion_getInstance().k3c_1;
	        break;
	      case 4:
	        tmp = Companion_getInstance().l3c_1;
	        break;
	      case 5:
	        tmp = Companion_getInstance().m3c_1;
	        break;
	      case 6:
	        tmp = Companion_getInstance().n3c_1;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function map_9(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    // Inline function 'kotlin.js.unsafeCast' call
	    // Inline function 'kotlin.collections.flatMap' call
	    // Inline function 'kotlin.collections.flatMapTo' call
	    var destination = ArrayList_init_$Create$_0();
	    var inductionVariable = 0;
	    var last = _this__u8e3s4.length;
	    while (inductionVariable < last) {
	      var element = _this__u8e3s4[inductionVariable];
	      inductionVariable = inductionVariable + 1 | 0;
	      // Inline function 'vonage.map.<anonymous>' call
	      var list = map_8(element);
	      addAll(destination, list);
	    }
	    // Inline function 'kotlin.js.asDynamic' call
	    return destination;
	  }
	  function vonageLogger(logger) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp = logger.name;
	    var tmp0_safe_receiver = logger.minLogLevel;
	    var tmp_0 = tmp0_safe_receiver == null ? null : getLoggingLevel(tmp0_safe_receiver);
	    var tmp1_safe_receiver = logger.topics;
	    var tmp_1 = tmp1_safe_receiver == null ? null : map_9(tmp1_safe_receiver);
	    return createVonageLogger(tmp, tmp_0, tmp_1, vonageLogger$lambda(logger));
	  }
	  function map_10(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp;
	    if (_this__u8e3s4 == null) {
	      tmp = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination = ArrayList_init_$Create$(_this__u8e3s4.length);
	      var inductionVariable = 0;
	      var last = _this__u8e3s4.length;
	      while (inductionVariable < last) {
	        var item = _this__u8e3s4[inductionVariable];
	        inductionVariable = inductionVariable + 1 | 0;
	        // Inline function 'vonage.map.<anonymous>' call
	        var tmp$ret$0 = vonageLogger(item);
	        destination.d(tmp$ret$0);
	      }
	      tmp = destination;
	    }
	    var tmp1_elvis_lhs = tmp;
	    return tmp1_elvis_lhs == null ? emptyList() : tmp1_elvis_lhs;
	  }
	  function getWebsocketUrl(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp2_elvis_lhs = _this__u8e3s4.websocketUrl;
	    var tmp;
	    if (tmp2_elvis_lhs == null) {
	      var tmp0_safe_receiver = _this__u8e3s4.region;
	      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.coreRegion;
	      tmp = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.i2u_1;
	    } else {
	      tmp = tmp2_elvis_lhs;
	    }
	    var tmp3_elvis_lhs = tmp;
	    return tmp3_elvis_lhs == null ? DefaultConfig_getInstance().d2u_1.i2u_1 : tmp3_elvis_lhs;
	  }
	  function getApiUrl(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp2_elvis_lhs = _this__u8e3s4.apiUrl;
	    var tmp;
	    if (tmp2_elvis_lhs == null) {
	      var tmp0_safe_receiver = _this__u8e3s4.region;
	      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.coreRegion;
	      tmp = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h2u_1;
	    } else {
	      tmp = tmp2_elvis_lhs;
	    }
	    var tmp3_elvis_lhs = tmp;
	    return tmp3_elvis_lhs == null ? DefaultConfig_getInstance().d2u_1.h2u_1 : tmp3_elvis_lhs;
	  }
	  function getWebsocketPath(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp0_elvis_lhs = _this__u8e3s4.websocketPath;
	    return tmp0_elvis_lhs == null ? '/v2/rtc' : tmp0_elvis_lhs;
	  }
	  function getAutoReconnectMedia(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp0_elvis_lhs = _this__u8e3s4.autoReconnectMedia;
	    return tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs;
	  }
	  function getRtcStatsTelemetry(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp0_elvis_lhs = _this__u8e3s4.rtcStatsTelemetry;
	    return tmp0_elvis_lhs == null ? true : tmp0_elvis_lhs;
	  }
	  function getNoiseSuppression(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp0_elvis_lhs = _this__u8e3s4.noiseSuppression;
	    return tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs;
	  }
	  function getLoggingLevel(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return valueOf(_this__u8e3s4.d2_1);
	  }
	  function getLoggingLevelJS(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return valueOf_5(_this__u8e3s4.d2_1);
	  }
	  function map_11(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = 'EXPIRED_TOKEN';
	        break;
	      case 1:
	        tmp = 'TRANSPORT_CLOSED';
	        break;
	      case 2:
	        tmp = 'PING_TIMEOUT';
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function get_jsonNullable(_this__u8e3s4) {
	    _init_properties_ICoreClientJS_kt__j7s52i();
	    return _this__u8e3s4 == null ? null : equals(_this__u8e3s4, undefined) ? null : _this__u8e3s4;
	  }
	  function createVonageLoggerJS$1($name, $minLogLevel, $topics, $onLog) {
	    this.s3u_1 = $onLog;
	    this.p3u_1 = $name;
	    this.q3u_1 = $minLogLevel;
	    this.r3u_1 = $topics;
	  }
	  protoOf(createVonageLoggerJS$1).f2 = function () {
	    return this.p3u_1;
	  };
	  protoOf(createVonageLoggerJS$1).x3c = function () {
	    return this.q3u_1;
	  };
	  protoOf(createVonageLoggerJS$1).p3c = function () {
	    return this.r3u_1;
	  };
	  protoOf(createVonageLoggerJS$1).onLog = function (logLevel, topic, message) {
	    this.s3u_1(logLevel, topic, message);
	  };
	  function vonageLogger$lambda($logger) {
	    return function (logLevel, topic, message, _anonymous_parameter_3__qggqen) {
	      $logger.onLog(getLoggingLevelJS(logLevel).d2_1, map_7(topic), message);
	      return Unit_instance;
	    };
	  }
	  function CoreClientConfigRegionJS_AP_getInstance() {
	    CoreClientConfigRegionJS_initEntries();
	    return CoreClientConfigRegionJS_AP_instance;
	  }
	  function CoreClientConfigRegionJS_EU_getInstance() {
	    CoreClientConfigRegionJS_initEntries();
	    return CoreClientConfigRegionJS_EU_instance;
	  }
	  function CoreClientConfigRegionJS_US_getInstance() {
	    CoreClientConfigRegionJS_initEntries();
	    return CoreClientConfigRegionJS_US_instance;
	  }
	  function Topics_HTTP_getInstance() {
	    Topics_initEntries();
	    return Topics_HTTP_instance;
	  }
	  function Topics_WS_getInstance() {
	    Topics_initEntries();
	    return Topics_WS_instance;
	  }
	  function Topics_MEDIA_getInstance() {
	    Topics_initEntries();
	    return Topics_MEDIA_instance;
	  }
	  function Topics_API_getInstance() {
	    Topics_initEntries();
	    return Topics_API_instance;
	  }
	  function Topics_STORE_getInstance() {
	    Topics_initEntries();
	    return Topics_STORE_instance;
	  }
	  function Topics_REDUCER_getInstance() {
	    Topics_initEntries();
	    return Topics_REDUCER_instance;
	  }
	  function Topics_DEFAULT_getInstance() {
	    Topics_initEntries();
	    return Topics_DEFAULT_instance;
	  }
	  function LoggingLevelJS_Verbose_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Verbose_instance;
	  }
	  function LoggingLevelJS_Debug_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Debug_instance;
	  }
	  function LoggingLevelJS_Info_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Info_instance;
	  }
	  function LoggingLevelJS_Warn_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Warn_instance;
	  }
	  function LoggingLevelJS_Error_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Error_instance;
	  }
	  function LoggingLevelJS_Assert_getInstance() {
	    LoggingLevelJS_initEntries();
	    return LoggingLevelJS_Assert_instance;
	  }
	  var properties_initialized_ICoreClientJS_kt_ipn2no;
	  function _init_properties_ICoreClientJS_kt__j7s52i() {
	    if (!properties_initialized_ICoreClientJS_kt_ipn2no) {
	      properties_initialized_ICoreClientJS_kt_ipn2no = true;
	      DEFAULT_REGION = valueOf_3(DefaultConfig_getInstance().d2u_1.d2_1);
	      DEFAULT_LOGGING_LEVEL = getLoggingLevelJS(DefaultConfig_getInstance().e2u_1);
	    }
	  }
	  function LegStatusJSObject() {
	    this.RINGING = 'RINGING';
	    this.ANSWERED = 'ANSWERED';
	    this.COMPLETED = 'COMPLETED';
	  }
	  protoOf(LegStatusJSObject).t3u = function () {
	    return this.RINGING;
	  };
	  protoOf(LegStatusJSObject).u3u = function () {
	    return this.ANSWERED;
	  };
	  protoOf(LegStatusJSObject).v3u = function () {
	    return this.COMPLETED;
	  };
	  protoOf(LegStatusJSObject).toString = function () {
	    return 'LegStatusJSObject';
	  };
	  protoOf(LegStatusJSObject).hashCode = function () {
	    return 1394307204;
	  };
	  protoOf(LegStatusJSObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof LegStatusJSObject))
	      return false;
	    other instanceof LegStatusJSObject || THROW_CCE();
	    return true;
	  };
	  var LegStatusJSObject_instance;
	  function LegStatusJSObject_getInstance() {
	    return LegStatusJSObject_instance;
	  }
	  function CallDisconnectReasonJSObject() {
	    this.NetworkChange = 'networkChange';
	  }
	  protoOf(CallDisconnectReasonJSObject).w3u = function () {
	    return this.NetworkChange;
	  };
	  protoOf(CallDisconnectReasonJSObject).toString = function () {
	    return 'CallDisconnectReasonJSObject';
	  };
	  protoOf(CallDisconnectReasonJSObject).hashCode = function () {
	    return 1280862186;
	  };
	  protoOf(CallDisconnectReasonJSObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof CallDisconnectReasonJSObject))
	      return false;
	    other instanceof CallDisconnectReasonJSObject || THROW_CCE();
	    return true;
	  };
	  var CallDisconnectReasonJSObject_instance;
	  function CallDisconnectReasonJSObject_getInstance() {
	    return CallDisconnectReasonJSObject_instance;
	  }
	  function HangupReasonJSObject() {
	    this.REMOTE_HANGUP = 'REMOTE_HANGUP';
	    this.REMOTE_REJECT = 'REMOTE_REJECT';
	    this.REMOTE_NO_ANSWER_TIMEOUT = 'REMOTE_NO_ANSWER_TIMEOUT';
	    this.LOCAL_HANGUP = 'LOCAL_HANGUP';
	    this.MEDIA_TIMEOUT = 'MEDIA_TIMEOUT';
	  }
	  protoOf(HangupReasonJSObject).x3u = function () {
	    return this.REMOTE_HANGUP;
	  };
	  protoOf(HangupReasonJSObject).y3u = function () {
	    return this.REMOTE_REJECT;
	  };
	  protoOf(HangupReasonJSObject).z3u = function () {
	    return this.REMOTE_NO_ANSWER_TIMEOUT;
	  };
	  protoOf(HangupReasonJSObject).a3v = function () {
	    return this.LOCAL_HANGUP;
	  };
	  protoOf(HangupReasonJSObject).b3v = function () {
	    return this.MEDIA_TIMEOUT;
	  };
	  protoOf(HangupReasonJSObject).toString = function () {
	    return 'HangupReasonJSObject';
	  };
	  protoOf(HangupReasonJSObject).hashCode = function () {
	    return -1290686563;
	  };
	  protoOf(HangupReasonJSObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof HangupReasonJSObject))
	      return false;
	    other instanceof HangupReasonJSObject || THROW_CCE();
	    return true;
	  };
	  var HangupReasonJSObject_instance;
	  function HangupReasonJSObject_getInstance() {
	    return HangupReasonJSObject_instance;
	  }
	  function IVoiceClientJS$serverCall$lambda$lambda($resolve, $reject) {
	    return function (err, callId) {
	      var tmp;
	      if (callId == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(callId);
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$serverCall$lambda(this$0, $typedContext) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.a1e($typedContext, IVoiceClientJS$serverCall$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$reconnectCall$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$reconnectCall$lambda(this$0, $legId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.b1e($legId, IVoiceClientJS$reconnectCall$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$getLeg$lambda$lambda($resolve, $reject) {
	    return function (err, leg) {
	      var tmp;
	      if (leg == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new LegJS(leg));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$getLeg$lambda(this$0, $legId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.c1e($legId, IVoiceClientJS$getLeg$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$getCallLegs$lambda$lambda($resolve, $reject) {
	    return function (err, legsPage) {
	      var tmp;
	      if (legsPage == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $resolve(new LegsPageJS(legsPage));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp1_safe_receiver = err instanceof VonageError ? err : null;
	        var tmp_1;
	        if (tmp1_safe_receiver == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(new VonageErrorJS(tmp1_safe_receiver));
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $reject(err == null ? newThrowable() : err);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$getCallLegs$lambda(this$0, $callId, $parameters) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp0_safe_receiver = $parameters;
	      var tmp_0 = tmp0_safe_receiver == null ? null : map_22(tmp0_safe_receiver);
	      tmp.d1e($callId, tmp_0, IVoiceClientJS$getCallLegs$lambda$lambda(resolve, reject));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$answer$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$answer$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.f1e($callId, IVoiceClientJS$answer$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$reject$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$reject$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.e1e($callId, IVoiceClientJS$reject$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$hangup$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$hangup$lambda(this$0, $callId, $reasonText, $reasonCode) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.g1e($callId, $reasonText, $reasonCode, IVoiceClientJS$hangup$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$say$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$say$lambda(this$0, $callId, $params) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      var tmp_0 = $params.text;
	      var tmp0_elvis_lhs = get_jsonNullable($params.level);
	      var tmp_1 = tmp0_elvis_lhs == null ? 1 : tmp0_elvis_lhs;
	      var tmp1_elvis_lhs = get_jsonNullable($params.loop);
	      var tmp_2 = tmp1_elvis_lhs == null ? 1 : tmp1_elvis_lhs;
	      var tmp2_elvis_lhs = get_jsonNullable($params.queue);
	      var tmp_3 = tmp2_elvis_lhs == null ? true : tmp2_elvis_lhs;
	      var tmp3_elvis_lhs = get_jsonNullable($params.voiceName);
	      var tmp_4 = tmp3_elvis_lhs == null ? 'amy' : tmp3_elvis_lhs;
	      var tmp4_elvis_lhs = get_jsonNullable($params.ssml);
	      var tmp_5 = tmp4_elvis_lhs == null ? true : tmp4_elvis_lhs;
	      tmp.m1e($callId, tmp_0, tmp_1, tmp_2, tmp_3, tmp_4, tmp_5, IVoiceClientJS$say$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$mute$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$mute$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.h1e($callId, IVoiceClientJS$mute$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$unmute$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$unmute$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.i1e($callId, IVoiceClientJS$unmute$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$enableEarmuff$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$enableEarmuff$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.j1e($callId, IVoiceClientJS$enableEarmuff$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$disableEarmuff$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$disableEarmuff$lambda(this$0, $callId) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.k1e($callId, IVoiceClientJS$disableEarmuff$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$sendDTMF$lambda$lambda($reject, $resolve) {
	    return function (err) {
	      var tmp0_safe_receiver = err instanceof VonageError ? err : null;
	      var tmp;
	      if (tmp0_safe_receiver == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        $reject(new VonageErrorJS(tmp0_safe_receiver));
	        tmp = Unit_instance;
	      }
	      var tmp2_elvis_lhs = tmp;
	      var tmp_0;
	      if (tmp2_elvis_lhs == null) {
	        var tmp_1;
	        if (err == null) {
	          tmp_1 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          $reject(err);
	          tmp_1 = Unit_instance;
	        }
	        tmp_0 = tmp_1;
	      } else {
	        tmp_0 = tmp2_elvis_lhs;
	      }
	      if (tmp_0 == null) {
	        $resolve(null);
	      }
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS$sendDTMF$lambda(this$0, $callId, $digits) {
	    return function (resolve, reject) {
	      var tmp = this$0.core;
	      tmp.l1e($callId, $digits, IVoiceClientJS$sendDTMF$lambda$lambda(reject, resolve));
	      return Unit_instance;
	    };
	  }
	  function IVoiceClientJS() {
	  }
	  function VoiceInviteFromInfoJS(id, type) {
	    this.id = id;
	    this.type = type;
	  }
	  protoOf(VoiceInviteFromInfoJS).l26 = function () {
	    return this.id;
	  };
	  protoOf(VoiceInviteFromInfoJS).r37 = function () {
	    return this.type;
	  };
	  protoOf(VoiceInviteFromInfoJS).o8 = function () {
	    return this.id;
	  };
	  protoOf(VoiceInviteFromInfoJS).p8 = function () {
	    return this.type;
	  };
	  protoOf(VoiceInviteFromInfoJS).c3v = function (id, type) {
	    return new VoiceInviteFromInfoJS(id, type);
	  };
	  protoOf(VoiceInviteFromInfoJS).copy = function (id, type, $super) {
	    id = id === VOID ? this.id : id;
	    type = type === VOID ? this.type : type;
	    return this.c3v(id, type);
	  };
	  protoOf(VoiceInviteFromInfoJS).toString = function () {
	    return 'VoiceInviteFromInfoJS(id=' + this.id + ', type=' + this.type + ')';
	  };
	  protoOf(VoiceInviteFromInfoJS).hashCode = function () {
	    var result = this.id == null ? 0 : getStringHashCode(this.id);
	    result = imul(result, 31) + getStringHashCode(this.type) | 0;
	    return result;
	  };
	  protoOf(VoiceInviteFromInfoJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof VoiceInviteFromInfoJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof VoiceInviteFromInfoJS ? other : THROW_CCE();
	    if (!(this.id == tmp0_other_with_cast.id))
	      return false;
	    if (!(this.type === tmp0_other_with_cast.type))
	      return false;
	    return true;
	  };
	  function map_12(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 0:
	        tmp = LegStatusJSObject_instance.RINGING;
	        break;
	      case 1:
	        tmp = LegStatusJSObject_instance.ANSWERED;
	        break;
	      case 2:
	        tmp = LegStatusJSObject_instance.COMPLETED;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function map_13(_this__u8e3s4) {
	    var tmp;
	    if (_this__u8e3s4.e2_1 === 0) {
	      tmp = CallDisconnectReasonJSObject_instance.NetworkChange;
	    } else {
	      noWhenBranchMatchedException();
	    }
	    return tmp;
	  }
	  function map_14(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 1:
	        tmp = HangupReasonJSObject_instance.REMOTE_HANGUP;
	        break;
	      case 0:
	        tmp = HangupReasonJSObject_instance.REMOTE_REJECT;
	        break;
	      case 2:
	        tmp = HangupReasonJSObject_instance.REMOTE_NO_ANSWER_TIMEOUT;
	        break;
	      case 3:
	        tmp = HangupReasonJSObject_instance.LOCAL_HANGUP;
	        break;
	      case 4:
	        tmp = HangupReasonJSObject_instance.MEDIA_TIMEOUT;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function HttpClientErrorJS(message, cause) {
	    message = message === VOID ? null : message;
	    cause = cause === VOID ? null : cause;
	    extendThrowable(this);
	    captureStack(this, HttpClientErrorJS);
	    this.d3v_1 = message;
	    this.e3v_1 = cause;
	  }
	  protoOf(HttpClientErrorJS).k8 = function () {
	    return this.d3v_1;
	  };
	  protoOf(HttpClientErrorJS).l8 = function () {
	    return this.e3v_1;
	  };
	  protoOf(HttpClientErrorJS).f3v = function () {
	    var tmp0_elvis_lhs = this.d3v_1;
	    var tmp = tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs;
	    var tmp_0 = this.e3v_1;
	    return new HTTPClientError(tmp, tmp_0 instanceof Exception ? tmp_0 : null);
	  };
	  protoOf(HttpClientErrorJS).o8 = function () {
	    return this.d3v_1;
	  };
	  protoOf(HttpClientErrorJS).p8 = function () {
	    return this.e3v_1;
	  };
	  protoOf(HttpClientErrorJS).g3v = function (message, cause) {
	    return new HttpClientErrorJS(message, cause);
	  };
	  protoOf(HttpClientErrorJS).copy = function (message, cause, $super) {
	    message = message === VOID ? this.d3v_1 : message;
	    cause = cause === VOID ? this.e3v_1 : cause;
	    return this.g3v(message, cause);
	  };
	  protoOf(HttpClientErrorJS).toString = function () {
	    return 'HttpClientErrorJS(message=' + this.d3v_1 + ', cause=' + toString_0(this.e3v_1) + ')';
	  };
	  protoOf(HttpClientErrorJS).hashCode = function () {
	    var result = this.d3v_1 == null ? 0 : getStringHashCode(this.d3v_1);
	    result = imul(result, 31) + (this.e3v_1 == null ? 0 : hashCode(this.e3v_1)) | 0;
	    return result;
	  };
	  protoOf(HttpClientErrorJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof HttpClientErrorJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof HttpClientErrorJS ? other : THROW_CCE();
	    if (!(this.d3v_1 == tmp0_other_with_cast.d3v_1))
	      return false;
	    if (!equals(this.e3v_1, tmp0_other_with_cast.e3v_1))
	      return false;
	    return true;
	  };
	  function HttpClientResponseJS(statusCode, body) {
	    body = body === VOID ? null : body;
	    this.statusCode = statusCode;
	    this.body = body;
	  }
	  protoOf(HttpClientResponseJS).h3v = function () {
	    return this.statusCode;
	  };
	  protoOf(HttpClientResponseJS).y3o = function () {
	    return this.body;
	  };
	  protoOf(HttpClientResponseJS).o8 = function () {
	    return this.statusCode;
	  };
	  protoOf(HttpClientResponseJS).p8 = function () {
	    return this.body;
	  };
	  protoOf(HttpClientResponseJS).i3v = function (statusCode, body) {
	    return new HttpClientResponseJS(statusCode, body);
	  };
	  protoOf(HttpClientResponseJS).copy = function (statusCode, body, $super) {
	    statusCode = statusCode === VOID ? this.statusCode : statusCode;
	    body = body === VOID ? this.body : body;
	    return this.i3v(statusCode, body);
	  };
	  protoOf(HttpClientResponseJS).toString = function () {
	    return 'HttpClientResponseJS(statusCode=' + this.statusCode + ', body=' + this.body + ')';
	  };
	  protoOf(HttpClientResponseJS).hashCode = function () {
	    var result = this.statusCode;
	    result = imul(result, 31) + (this.body == null ? 0 : getStringHashCode(this.body)) | 0;
	    return result;
	  };
	  protoOf(HttpClientResponseJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof HttpClientResponseJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof HttpClientResponseJS ? other : THROW_CCE();
	    if (!(this.statusCode === tmp0_other_with_cast.statusCode))
	      return false;
	    if (!(this.body == tmp0_other_with_cast.body))
	      return false;
	    return true;
	  };
	  function get_SOCKET_CONNECTED() {
	    return SOCKET_CONNECTED;
	  }
	  var SOCKET_CONNECTED;
	  function get_SOCKET_RECONNECTING() {
	    return SOCKET_RECONNECTING;
	  }
	  var SOCKET_RECONNECTING;
	  function get_SOCKET_DISCONNECTED() {
	    return SOCKET_DISCONNECTED;
	  }
	  var SOCKET_DISCONNECTED;
	  function get_REASON_SERVER_DISCONNECTED() {
	    return REASON_SERVER_DISCONNECTED;
	  }
	  var REASON_SERVER_DISCONNECTED;
	  function get_REASON_CLIENT_DISCONNECTED() {
	    return REASON_CLIENT_DISCONNECTED;
	  }
	  var REASON_CLIENT_DISCONNECTED;
	  function get_REASON_CLIENT_NETWORK_ERROR() {
	    return REASON_CLIENT_NETWORK_ERROR;
	  }
	  var REASON_CLIENT_NETWORK_ERROR;
	  function get_REASON_PING_TIMEOUT() {
	    return REASON_PING_TIMEOUT;
	  }
	  var REASON_PING_TIMEOUT;
	  function CancelReasonJSObject() {
	    this.RemoteCancel = 'RemoteCancel';
	    this.AnsweredElsewhere = 'AnsweredElsewhere';
	    this.RejectedElsewhere = 'RejectedElsewhere';
	    this.RemoteTimeout = 'RemoteTimeout';
	  }
	  protoOf(CancelReasonJSObject).j3v = function () {
	    return this.RemoteCancel;
	  };
	  protoOf(CancelReasonJSObject).k3v = function () {
	    return this.AnsweredElsewhere;
	  };
	  protoOf(CancelReasonJSObject).l3v = function () {
	    return this.RejectedElsewhere;
	  };
	  protoOf(CancelReasonJSObject).m3v = function () {
	    return this.RemoteTimeout;
	  };
	  protoOf(CancelReasonJSObject).toString = function () {
	    return 'CancelReasonJSObject';
	  };
	  protoOf(CancelReasonJSObject).hashCode = function () {
	    return 1773502666;
	  };
	  protoOf(CancelReasonJSObject).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof CancelReasonJSObject))
	      return false;
	    other instanceof CancelReasonJSObject || THROW_CCE();
	    return true;
	  };
	  var CancelReasonJSObject_instance;
	  function CancelReasonJSObject_getInstance() {
	    return CancelReasonJSObject_instance;
	  }
	  function RTCQualityJS(mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc) {
	    this.mos_score = mos_score;
	    this.quality_percentage = quality_percentage;
	    this.jitter_min_var = jitter_min_var;
	    this.jitter_max_var = jitter_max_var;
	    this.jitter_loss_rate = jitter_loss_rate;
	    this.jitter_burst_rate = jitter_burst_rate;
	    this.flaw_total = flaw_total;
	    this.packet_cnt = packet_cnt;
	    this.packet_loss_perc = packet_loss_perc;
	  }
	  protoOf(RTCQualityJS).n3v = function () {
	    return this.mos_score;
	  };
	  protoOf(RTCQualityJS).o3v = function () {
	    return this.quality_percentage;
	  };
	  protoOf(RTCQualityJS).p3v = function () {
	    return this.jitter_min_var;
	  };
	  protoOf(RTCQualityJS).q3v = function () {
	    return this.jitter_max_var;
	  };
	  protoOf(RTCQualityJS).r3v = function () {
	    return this.jitter_loss_rate;
	  };
	  protoOf(RTCQualityJS).s3v = function () {
	    return this.jitter_burst_rate;
	  };
	  protoOf(RTCQualityJS).t3v = function () {
	    return this.flaw_total;
	  };
	  protoOf(RTCQualityJS).u3v = function () {
	    return this.packet_cnt;
	  };
	  protoOf(RTCQualityJS).v3v = function () {
	    return this.packet_loss_perc;
	  };
	  protoOf(RTCQualityJS).o8 = function () {
	    return this.mos_score;
	  };
	  protoOf(RTCQualityJS).p8 = function () {
	    return this.quality_percentage;
	  };
	  protoOf(RTCQualityJS).w3v = function () {
	    return this.jitter_min_var;
	  };
	  protoOf(RTCQualityJS).x3v = function () {
	    return this.jitter_max_var;
	  };
	  protoOf(RTCQualityJS).y3v = function () {
	    return this.jitter_loss_rate;
	  };
	  protoOf(RTCQualityJS).z3v = function () {
	    return this.jitter_burst_rate;
	  };
	  protoOf(RTCQualityJS).a3w = function () {
	    return this.flaw_total;
	  };
	  protoOf(RTCQualityJS).b3w = function () {
	    return this.packet_cnt;
	  };
	  protoOf(RTCQualityJS).c3w = function () {
	    return this.packet_loss_perc;
	  };
	  protoOf(RTCQualityJS).d3w = function (mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc) {
	    return new RTCQualityJS(mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc);
	  };
	  protoOf(RTCQualityJS).copy = function (mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc, $super) {
	    mos_score = mos_score === VOID ? this.mos_score : mos_score;
	    quality_percentage = quality_percentage === VOID ? this.quality_percentage : quality_percentage;
	    jitter_min_var = jitter_min_var === VOID ? this.jitter_min_var : jitter_min_var;
	    jitter_max_var = jitter_max_var === VOID ? this.jitter_max_var : jitter_max_var;
	    jitter_loss_rate = jitter_loss_rate === VOID ? this.jitter_loss_rate : jitter_loss_rate;
	    jitter_burst_rate = jitter_burst_rate === VOID ? this.jitter_burst_rate : jitter_burst_rate;
	    flaw_total = flaw_total === VOID ? this.flaw_total : flaw_total;
	    packet_cnt = packet_cnt === VOID ? this.packet_cnt : packet_cnt;
	    packet_loss_perc = packet_loss_perc === VOID ? this.packet_loss_perc : packet_loss_perc;
	    return this.d3w(mos_score, quality_percentage, jitter_min_var, jitter_max_var, jitter_loss_rate, jitter_burst_rate, flaw_total, packet_cnt, packet_loss_perc);
	  };
	  protoOf(RTCQualityJS).toString = function () {
	    return 'RTCQualityJS(mos_score=' + this.mos_score + ', quality_percentage=' + this.quality_percentage + ', jitter_min_var=' + this.jitter_min_var + ', jitter_max_var=' + this.jitter_max_var + ', jitter_loss_rate=' + this.jitter_loss_rate + ', jitter_burst_rate=' + this.jitter_burst_rate + ', flaw_total=' + this.flaw_total + ', packet_cnt=' + this.packet_cnt + ', packet_loss_perc=' + this.packet_loss_perc + ')';
	  };
	  protoOf(RTCQualityJS).hashCode = function () {
	    var result = getNumberHashCode(this.mos_score);
	    result = imul(result, 31) + getNumberHashCode(this.quality_percentage) | 0;
	    result = imul(result, 31) + getNumberHashCode(this.jitter_min_var) | 0;
	    result = imul(result, 31) + getNumberHashCode(this.jitter_max_var) | 0;
	    result = imul(result, 31) + getNumberHashCode(this.jitter_loss_rate) | 0;
	    result = imul(result, 31) + getNumberHashCode(this.jitter_burst_rate) | 0;
	    result = imul(result, 31) + this.flaw_total | 0;
	    result = imul(result, 31) + this.packet_cnt | 0;
	    result = imul(result, 31) + getNumberHashCode(this.packet_loss_perc) | 0;
	    return result;
	  };
	  protoOf(RTCQualityJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof RTCQualityJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof RTCQualityJS ? other : THROW_CCE();
	    if (!equals(this.mos_score, tmp0_other_with_cast.mos_score))
	      return false;
	    if (!equals(this.quality_percentage, tmp0_other_with_cast.quality_percentage))
	      return false;
	    if (!equals(this.jitter_min_var, tmp0_other_with_cast.jitter_min_var))
	      return false;
	    if (!equals(this.jitter_max_var, tmp0_other_with_cast.jitter_max_var))
	      return false;
	    if (!equals(this.jitter_loss_rate, tmp0_other_with_cast.jitter_loss_rate))
	      return false;
	    if (!equals(this.jitter_burst_rate, tmp0_other_with_cast.jitter_burst_rate))
	      return false;
	    if (!(this.flaw_total === tmp0_other_with_cast.flaw_total))
	      return false;
	    if (!(this.packet_cnt === tmp0_other_with_cast.packet_cnt))
	      return false;
	    if (!equals(this.packet_loss_perc, tmp0_other_with_cast.packet_loss_perc))
	      return false;
	    return true;
	  };
	  function Companion() {
	  }
	  protoOf(Companion).e3o = function (stats) {
	    return new RTCStatsJS(stats.e3i_1, stats.f3i_1, stats.g3i_1, stats.h3i_1, stats.i3i_1, stats.j3i_1, stats.k3i_1, stats.l3i_1, stats.m3i_1);
	  };
	  var Companion_instance_0;
	  function Companion_getInstance_0() {
	    return Companion_instance_0;
	  }
	  function RTCStatsJS(audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter) {
	    this.audioRecvPackets = audioRecvPackets;
	    this.audioRecvPacketsLost = audioRecvPacketsLost;
	    this.audioRecvBytes = audioRecvBytes;
	    this.audioRecvJitter = audioRecvJitter;
	    this.audioSentPackets = audioSentPackets;
	    this.audioSentBytes = audioSentBytes;
	    this.audioSentPacketsLost = audioSentPacketsLost;
	    this.audioRtt = audioRtt;
	    this.audioSentJitter = audioSentJitter;
	  }
	  protoOf(RTCStatsJS).e3w = function () {
	    return this.audioRecvPackets;
	  };
	  protoOf(RTCStatsJS).f3w = function () {
	    return this.audioRecvPacketsLost;
	  };
	  protoOf(RTCStatsJS).g3w = function () {
	    return this.audioRecvBytes;
	  };
	  protoOf(RTCStatsJS).h3w = function () {
	    return this.audioRecvJitter;
	  };
	  protoOf(RTCStatsJS).i3w = function () {
	    return this.audioSentPackets;
	  };
	  protoOf(RTCStatsJS).j3w = function () {
	    return this.audioSentBytes;
	  };
	  protoOf(RTCStatsJS).k3w = function () {
	    return this.audioSentPacketsLost;
	  };
	  protoOf(RTCStatsJS).l3w = function () {
	    return this.audioRtt;
	  };
	  protoOf(RTCStatsJS).m3w = function () {
	    return this.audioSentJitter;
	  };
	  protoOf(RTCStatsJS).n3w = function () {
	    return new RTCStats(numberToLong(this.audioRecvPackets), numberToInt(this.audioRecvPacketsLost), numberToLong(this.audioRecvBytes), numberToDouble(this.audioRecvJitter), numberToLong(this.audioSentPackets), numberToLong(this.audioSentBytes), numberToInt(this.audioSentPacketsLost), numberToDouble(this.audioRtt), numberToDouble(this.audioSentJitter));
	  };
	  protoOf(RTCStatsJS).o8 = function () {
	    return this.audioRecvPackets;
	  };
	  protoOf(RTCStatsJS).p8 = function () {
	    return this.audioRecvPacketsLost;
	  };
	  protoOf(RTCStatsJS).w3v = function () {
	    return this.audioRecvBytes;
	  };
	  protoOf(RTCStatsJS).x3v = function () {
	    return this.audioRecvJitter;
	  };
	  protoOf(RTCStatsJS).y3v = function () {
	    return this.audioSentPackets;
	  };
	  protoOf(RTCStatsJS).z3v = function () {
	    return this.audioSentBytes;
	  };
	  protoOf(RTCStatsJS).a3w = function () {
	    return this.audioSentPacketsLost;
	  };
	  protoOf(RTCStatsJS).b3w = function () {
	    return this.audioRtt;
	  };
	  protoOf(RTCStatsJS).c3w = function () {
	    return this.audioSentJitter;
	  };
	  protoOf(RTCStatsJS).o3w = function (audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter) {
	    return new RTCStatsJS(audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter);
	  };
	  protoOf(RTCStatsJS).copy = function (audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter, $super) {
	    audioRecvPackets = audioRecvPackets === VOID ? this.audioRecvPackets : audioRecvPackets;
	    audioRecvPacketsLost = audioRecvPacketsLost === VOID ? this.audioRecvPacketsLost : audioRecvPacketsLost;
	    audioRecvBytes = audioRecvBytes === VOID ? this.audioRecvBytes : audioRecvBytes;
	    audioRecvJitter = audioRecvJitter === VOID ? this.audioRecvJitter : audioRecvJitter;
	    audioSentPackets = audioSentPackets === VOID ? this.audioSentPackets : audioSentPackets;
	    audioSentBytes = audioSentBytes === VOID ? this.audioSentBytes : audioSentBytes;
	    audioSentPacketsLost = audioSentPacketsLost === VOID ? this.audioSentPacketsLost : audioSentPacketsLost;
	    audioRtt = audioRtt === VOID ? this.audioRtt : audioRtt;
	    audioSentJitter = audioSentJitter === VOID ? this.audioSentJitter : audioSentJitter;
	    return this.o3w(audioRecvPackets, audioRecvPacketsLost, audioRecvBytes, audioRecvJitter, audioSentPackets, audioSentBytes, audioSentPacketsLost, audioRtt, audioSentJitter);
	  };
	  protoOf(RTCStatsJS).toString = function () {
	    return 'RTCStatsJS(audioRecvPackets=' + toString(this.audioRecvPackets) + ', audioRecvPacketsLost=' + toString(this.audioRecvPacketsLost) + ', audioRecvBytes=' + toString(this.audioRecvBytes) + ', audioRecvJitter=' + toString(this.audioRecvJitter) + ', audioSentPackets=' + toString(this.audioSentPackets) + ', audioSentBytes=' + toString(this.audioSentBytes) + ', audioSentPacketsLost=' + toString(this.audioSentPacketsLost) + ', audioRtt=' + toString(this.audioRtt) + ', audioSentJitter=' + toString(this.audioSentJitter) + ')';
	  };
	  protoOf(RTCStatsJS).hashCode = function () {
	    var result = hashCode(this.audioRecvPackets);
	    result = imul(result, 31) + hashCode(this.audioRecvPacketsLost) | 0;
	    result = imul(result, 31) + hashCode(this.audioRecvBytes) | 0;
	    result = imul(result, 31) + hashCode(this.audioRecvJitter) | 0;
	    result = imul(result, 31) + hashCode(this.audioSentPackets) | 0;
	    result = imul(result, 31) + hashCode(this.audioSentBytes) | 0;
	    result = imul(result, 31) + hashCode(this.audioSentPacketsLost) | 0;
	    result = imul(result, 31) + hashCode(this.audioRtt) | 0;
	    result = imul(result, 31) + hashCode(this.audioSentJitter) | 0;
	    return result;
	  };
	  protoOf(RTCStatsJS).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof RTCStatsJS))
	      return false;
	    var tmp0_other_with_cast = other instanceof RTCStatsJS ? other : THROW_CCE();
	    if (!equals(this.audioRecvPackets, tmp0_other_with_cast.audioRecvPackets))
	      return false;
	    if (!equals(this.audioRecvPacketsLost, tmp0_other_with_cast.audioRecvPacketsLost))
	      return false;
	    if (!equals(this.audioRecvBytes, tmp0_other_with_cast.audioRecvBytes))
	      return false;
	    if (!equals(this.audioRecvJitter, tmp0_other_with_cast.audioRecvJitter))
	      return false;
	    if (!equals(this.audioSentPackets, tmp0_other_with_cast.audioSentPackets))
	      return false;
	    if (!equals(this.audioSentBytes, tmp0_other_with_cast.audioSentBytes))
	      return false;
	    if (!equals(this.audioSentPacketsLost, tmp0_other_with_cast.audioSentPacketsLost))
	      return false;
	    if (!equals(this.audioRtt, tmp0_other_with_cast.audioRtt))
	      return false;
	    if (!equals(this.audioSentJitter, tmp0_other_with_cast.audioSentJitter))
	      return false;
	    return true;
	  };
	  function HttpClientJSAdapter(js) {
	    return new HttpClientJSAdapter$1(js);
	  }
	  function map_15(_this__u8e3s4) {
	    var tmp;
	    switch (_this__u8e3s4.e2_1) {
	      case 2:
	        tmp = CancelReasonJSObject_instance.RemoteCancel;
	        break;
	      case 0:
	        tmp = CancelReasonJSObject_instance.AnsweredElsewhere;
	        break;
	      case 1:
	        tmp = CancelReasonJSObject_instance.RejectedElsewhere;
	        break;
	      case 3:
	        tmp = CancelReasonJSObject_instance.RemoteTimeout;
	        break;
	      default:
	        noWhenBranchMatchedException();
	        break;
	    }
	    return tmp;
	  }
	  function map_16(_this__u8e3s4) {
	    return new RTCQualityJS(_this__u8e3s4.g3b_1, _this__u8e3s4.h3b_1, _this__u8e3s4.i3b_1, _this__u8e3s4.j3b_1, _this__u8e3s4.k3b_1, _this__u8e3s4.l3b_1, _this__u8e3s4.m3b_1, _this__u8e3s4.n3b_1, _this__u8e3s4.o3b_1);
	  }
	  function SocketClientJSAdapter(js) {
	    var adapter = new SocketClientJSAdapter$adapter$1(js);
	    js.delegate = new SocketClientJSAdapter$1(adapter);
	    return adapter;
	  }
	  function MediaClientJSAdapter(js) {
	    var adapter = new MediaClientJSAdapter$adapter$1(js);
	    js.delegate = new MediaClientJSAdapter$1(adapter);
	    return adapter;
	  }
	  function coreConnectionState(_this__u8e3s4) {
	    switch (_this__u8e3s4) {
	      case 'new':
	      case 'checking':
	        return MediaConnectionState_New_getInstance();
	      case 'connecting':
	        return MediaConnectionState_Connecting_getInstance();
	      case 'connected':
	        return MediaConnectionState_Connected_getInstance();
	      case 'disconnected':
	        return MediaConnectionState_Disconnected_getInstance();
	      case 'closed':
	        return MediaConnectionState_Closed_getInstance();
	      case 'failed':
	        return MediaConnectionState_Failed_getInstance();
	      default:
	        return MediaConnectionState_Unknown_getInstance();
	    }
	  }
	  function HttpClientJSAdapter$o$request$lambda($callback) {
	    return function (err, response) {
	      if (err == null) {
	        var tmp_0;
	        if (response == null) {
	          tmp_0 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          // Inline function 'vonage.<no name provided>.request.<anonymous>.<anonymous>' call
	          tmp_0 = new HTTPClientResponse(response.statusCode, response.body);
	        }
	        $callback(null, tmp_0);
	      } else {
	        $callback(err.coreError, null);
	      }
	      return Unit_instance;
	    };
	  }
	  function HttpClientJSAdapter$1($js) {
	    this.p3w_1 = $js;
	  }
	  protoOf(HttpClientJSAdapter$1).o3e = function (verb, url, headers, body, callback) {
	    var tmp = verb.toString();
	    // Inline function 'kotlin.let' call
	    // Inline function 'kotlin.contracts.contract' call
	    // Inline function 'vonage.<no name provided>.request.<anonymous>' call
	    var tmp_0 = fromMap(JSON, headers);
	    this.p3w_1.request(tmp, url, tmp_0, body, HttpClientJSAdapter$o$request$lambda(callback));
	  };
	  function SocketClientJSAdapter$o$emit$lambda($callback) {
	    return function (err, response) {
	      var tmp;
	      if (err == null) {
	        tmp = null;
	      } else {
	        // Inline function 'kotlin.let' call
	        // Inline function 'kotlin.contracts.contract' call
	        // Inline function 'vonage.<no name provided>.emit.<anonymous>.<anonymous>' call
	        tmp = Exception_init_$Create$(err);
	      }
	      $callback(tmp, response);
	      return Unit_instance;
	    };
	  }
	  function SocketClientJSAdapter$adapter$1($js) {
	    this.r3w_1 = $js;
	    this.q3w_1 = null;
	  }
	  protoOf(SocketClientJSAdapter$adapter$1).s3e = function (_set____db54di) {
	    this.q3w_1 = _set____db54di;
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).t3e = function (type, msg, callback) {
	    var tmp;
	    if (msg == null) {
	      tmp = null;
	    } else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.<no name provided>.emit.<anonymous>' call
	      tmp = fromMap(JSON, msg);
	    }
	    var tmp_0 = tmp;
	    this.r3w_1.emit(type, tmp_0, SocketClientJSAdapter$o$emit$lambda(callback));
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).u3e = function (host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor, token, sessionId, query) {
	    this.r3w_1.connect(host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor, token, sessionId, query);
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).v3e = function () {
	    this.r3w_1.disconnect();
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).w3e = function (sessionId, token) {
	    this.r3w_1.setConnectParamsSocketConfig(sessionId, token);
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).x3e = function (sessionId) {
	    this.r3w_1.setSocketSessionId(sessionId);
	  };
	  protoOf(SocketClientJSAdapter$adapter$1).y3e = function (milliseconds, callback) {
	    this.r3w_1.startVerifyResponseTimer(milliseconds, callback);
	  };
	  function SocketClientJSAdapter$1($adapter) {
	    this.s3w_1 = $adapter;
	  }
	  protoOf(SocketClientJSAdapter$1).didReceiveNewSocketEvent = function (body) {
	    var tmp0_safe_receiver = this.s3w_1.q3w_1;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.z3f(new UnknownSocketEvent(body));
	    }
	  };
	  protoOf(SocketClientJSAdapter$1).didReceiveNewSocketConnectionStatusEvent = function (type, reason, timestamp, retryNumber) {
	    var tmp1_safe_receiver;
	    switch (type) {
	      case 'NXMCORE_SOCKET_CONNECTED':
	        tmp1_safe_receiver = SocketConnectionStatus_Connected_getInstance();
	        break;
	      case 'NXMCORE_SOCKET_RECONNECTING':
	        tmp1_safe_receiver = SocketConnectionStatus_Reconnecting_getInstance();
	        break;
	      case 'NXMCORE_SOCKET_DISCONNECTED':
	        tmp1_safe_receiver = SocketConnectionStatus_Disconnected_getInstance();
	        break;
	      default:
	        tmp1_safe_receiver = null;
	        break;
	    }
	    if (tmp1_safe_receiver == null)
	      ;
	    else {
	      // Inline function 'kotlin.let' call
	      // Inline function 'kotlin.contracts.contract' call
	      // Inline function 'vonage.<no name provided>.didReceiveNewSocketConnectionStatusEvent.<anonymous>' call
	      var it = tmp1_safe_receiver;
	      switch (reason) {
	        case 'NXMCORE_REASON_SERVER_DISCONNECTED':
	          var tmp1_safe_receiver_0 = this.s3w_1.q3w_1;
	          if (tmp1_safe_receiver_0 == null) ; else {
	            tmp1_safe_receiver_0.a3g(it, SocketConnectionFailedReason_ServerDisconnected_getInstance(), timestamp, retryNumber);
	          }
	          break;
	        case 'NXMCORE_REASON_CLIENT_DISCONNECTED':
	          var tmp2_safe_receiver = this.s3w_1.q3w_1;
	          if (tmp2_safe_receiver == null) ; else {
	            tmp2_safe_receiver.a3g(it, SocketConnectionFailedReason_ClientDisconnected_getInstance(), timestamp, retryNumber);
	          }
	          break;
	        case 'NXMCORE_CLIENT_NETWORK_ERROR':
	          var tmp3_safe_receiver = this.s3w_1.q3w_1;
	          if (tmp3_safe_receiver == null) ; else {
	            tmp3_safe_receiver.a3g(it, SocketConnectionFailedReason_ClientNetworkError_getInstance(), timestamp, retryNumber);
	          }
	          break;
	        case 'NXMCORE_REASON_PING_TIMEOUT':
	          var tmp4_safe_receiver = this.s3w_1.q3w_1;
	          if (tmp4_safe_receiver == null) ; else {
	            tmp4_safe_receiver.a3g(it, SocketConnectionFailedReason_PingTimeout_getInstance(), timestamp, retryNumber);
	          }
	          break;
	        default:
	          var tmp5_safe_receiver = this.s3w_1.q3w_1;
	          if (tmp5_safe_receiver == null) ; else {
	            tmp5_safe_receiver.a3g(it, null, timestamp, retryNumber);
	          }
	          break;
	      }
	    }
	  };
	  function MediaClientJSAdapter$o$processAnswer$lambda($closure) {
	    return function (it) {
	      $closure(it == null ? null : it.h3t());
	      return Unit_instance;
	    };
	  }
	  function MediaClientJSAdapter$o$disableMedia$lambda($closure) {
	    return function (it) {
	      $closure(it == null ? null : it.h3t());
	      return Unit_instance;
	    };
	  }
	  function MediaClientJSAdapter$o$mute$lambda($closure) {
	    return function (it) {
	      $closure(it == null ? null : it.h3t());
	      return Unit_instance;
	    };
	  }
	  function MediaClientJSAdapter$o$unmute$lambda($closure) {
	    return function (it) {
	      $closure(it == null ? null : it.h3t());
	      return Unit_instance;
	    };
	  }
	  function MediaClientJSAdapter$o$enableRtcStatsCollection$lambda($closure) {
	    return function (it) {
	      $closure(it == null ? null : it.h3t());
	      return Unit_instance;
	    };
	  }
	  function MediaClientJSAdapter$adapter$1($js) {
	    this.u3w_1 = $js;
	    this.t3w_1 = null;
	  }
	  protoOf(MediaClientJSAdapter$adapter$1).b3f = function (_set____db54di) {
	    this.t3w_1 = _set____db54di;
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).c3f = function () {
	    return this.t3w_1;
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).d3f = function (closure) {
	    this.u3w_1.enableMediaOutbound(closure);
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).v3w = function (rtcId, offerSDP, closure) {
	    this.u3w_1.enableMediaInbound(rtcId, offerSDP, closure);
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).e3f = function (rtcId, offerSDP, closure) {
	    return this.v3w(rtcId, offerSDP, closure);
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).f3f = function (id, sdp, closure) {
	    this.u3w_1.processAnswer(id, sdp, MediaClientJSAdapter$o$processAnswer$lambda(closure));
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).g3f = function (id, closure) {
	    this.u3w_1.disableMedia(id, MediaClientJSAdapter$o$disableMedia$lambda(closure));
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).h3f = function (id, closure) {
	    this.u3w_1.mute(id, MediaClientJSAdapter$o$mute$lambda(closure));
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).i3f = function (id, closure) {
	    this.u3w_1.unmute(id, MediaClientJSAdapter$o$unmute$lambda(closure));
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).k3f = function (id, closure) {
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).l3f = function (id, closure) {
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).j3f = function (id, interval, closure) {
	    this.u3w_1.enableRtcStatsCollection(id, interval, MediaClientJSAdapter$o$enableRtcStatsCollection$lambda(closure));
	  };
	  protoOf(MediaClientJSAdapter$adapter$1).m3f = function (id) {
	    return coreConnectionState(this.u3w_1.getMediaConnectionState(id));
	  };
	  function MediaClientJSAdapter$1($adapter) {
	    this.w3w_1 = $adapter;
	  }
	  protoOf(MediaClientJSAdapter$1).onRtcStats = function (id, rtcStats) {
	    var tmp0_safe_receiver = this.w3w_1.t3w_1;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.d3g(id, rtcStats.n3w());
	    }
	  };
	  protoOf(MediaClientJSAdapter$1).onConnectionChange = function (id, state) {
	    var tmp0_safe_receiver = this.w3w_1.t3w_1;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.e3g(id, coreConnectionState(state));
	    }
	  };
	  protoOf(MediaClientJSAdapter$1).onMediaError = function (id, error) {
	    var tmp0_safe_receiver = this.w3w_1.t3w_1;
	    if (tmp0_safe_receiver == null)
	      ;
	    else {
	      tmp0_safe_receiver.f3g(id, error.h3t());
	    }
	  };
	  function invoke(_this__u8e3s4, optionJS) {
	    var tmp;
	    if (optionJS instanceof None) {
	      tmp = none();
	    } else {
	      if (optionJS instanceof Some) {
	        tmp = some(optionJS.value);
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  }
	  function invoke_0(_this__u8e3s4, optionJS) {
	    var tmp;
	    if (optionJS instanceof None) {
	      tmp = none();
	    } else {
	      if (optionJS instanceof Some) {
	        tmp = some(numberToInt(optionJS.value));
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  }
	  function map_17(_this__u8e3s4) {
	    var tmp1_name = _this__u8e3s4.name;
	    var tmp2_displayName = _this__u8e3s4.displayName;
	    var tmp3_imageUrl = _this__u8e3s4.imageUrl;
	    var tmp0_safe_receiver = _this__u8e3s4.ttl;
	    var tmp4_ttl = tmp0_safe_receiver == null ? null : numberToInt(tmp0_safe_receiver);
	    var tmp5_customData = _this__u8e3s4.customData;
	    var tmp6_customSortKey = _this__u8e3s4.customSortKey;
	    return new CreateConversationParameters(tmp1_name, tmp2_displayName, tmp3_imageUrl, tmp4_ttl, tmp6_customSortKey, tmp5_customData);
	  }
	  function map_18(_this__u8e3s4) {
	    var tmp0_name = invoke(Companion_instance, _this__u8e3s4.name);
	    var tmp1_displayName = invoke(Companion_instance, _this__u8e3s4.displayName);
	    var tmp2_imageUrl = invoke(Companion_instance, _this__u8e3s4.imageUrl);
	    var tmp3_ttl = invoke_0(Companion_instance, _this__u8e3s4.ttl);
	    var tmp4_customData = invoke(Companion_instance, _this__u8e3s4.customData);
	    var tmp5_customSortKey = invoke(Companion_instance, _this__u8e3s4.customSortKey);
	    return new UpdateConversationParameters(tmp0_name, tmp1_displayName, tmp2_imageUrl, tmp3_ttl, tmp5_customSortKey, tmp4_customData);
	  }
	  function map_19(_this__u8e3s4) {
	    var tmp0_safe_receiver = _this__u8e3s4.order;
	    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.corePresentingOrder;
	    var tmp1_safe_receiver = _this__u8e3s4.pageSize;
	    var tmp_0 = tmp1_safe_receiver == null ? null : numberToInt(tmp1_safe_receiver);
	    var tmp_1 = _this__u8e3s4.cursor;
	    var tmp_2 = _this__u8e3s4.includeCustomData;
	    var tmp2_safe_receiver = _this__u8e3s4.orderBy;
	    return new GetConversationsParameters(tmp, tmp_0, tmp_1, tmp_2, tmp2_safe_receiver == null ? null : tmp2_safe_receiver.coreOrderBy);
	  }
	  function map_20(_this__u8e3s4) {
	    var tmp0_safe_receiver = _this__u8e3s4.order;
	    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.corePresentingOrder;
	    var tmp1_safe_receiver = _this__u8e3s4.pageSize;
	    var tmp_0 = tmp1_safe_receiver == null ? null : numberToInt(tmp1_safe_receiver);
	    var tmp_1 = _this__u8e3s4.cursor;
	    var tmp2_safe_receiver = _this__u8e3s4.eventFilter;
	    var tmp_2;
	    if (tmp2_safe_receiver == null) {
	      tmp_2 = null;
	    } else {
	      // Inline function 'kotlin.collections.map' call
	      // Inline function 'kotlin.collections.mapTo' call
	      var destination = ArrayList_init_$Create$(tmp2_safe_receiver.length);
	      var inductionVariable = 0;
	      var last = tmp2_safe_receiver.length;
	      while (inductionVariable < last) {
	        var item = tmp2_safe_receiver[inductionVariable];
	        inductionVariable = inductionVariable + 1 | 0;
	        // Inline function 'vonage.map.<anonymous>' call
	        destination.d(item);
	      }
	      tmp_2 = destination;
	    }
	    var tmp_3 = tmp_2;
	    var tmp_4 = _this__u8e3s4.includeDeletedEvents;
	    var tmp3_safe_receiver = _this__u8e3s4.startId;
	    return new GetConversationEventsParameters(tmp, tmp_0, tmp_1, tmp_3, tmp_4, tmp3_safe_receiver == null ? null : numberToInt(tmp3_safe_receiver));
	  }
	  function map_21(_this__u8e3s4) {
	    var tmp0_safe_receiver = _this__u8e3s4.order;
	    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.corePresentingOrder;
	    var tmp1_safe_receiver = _this__u8e3s4.pageSize;
	    return new GetConversationMembersParameters(tmp, tmp1_safe_receiver == null ? null : numberToInt(tmp1_safe_receiver), _this__u8e3s4.cursor);
	  }
	  function map_22(_this__u8e3s4) {
	    var tmp0_safe_receiver = _this__u8e3s4.order;
	    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.corePresentingOrder;
	    var tmp1_safe_receiver = _this__u8e3s4.pageSize;
	    return new GetCallLegsParameters(tmp, tmp1_safe_receiver == null ? null : numberToInt(tmp1_safe_receiver), _this__u8e3s4.cursor);
	  }
	  function entriesOf(jsObject) {
	    // Inline function 'kotlin.collections.map' call
	    var tmp = Object.entries;
	    var this_0 = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(jsObject);
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(this_0.length);
	    var inductionVariable = 0;
	    var last = this_0.length;
	    while (inductionVariable < last) {
	      var item = this_0[inductionVariable];
	      inductionVariable = inductionVariable + 1 | 0;
	      // Inline function 'vonage.utils.entriesOf.<anonymous>' call
	      var tmp_0 = item[0];
	      var tmp$ret$0 = to((!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : THROW_CCE(), item[1]);
	      destination.d(tmp$ret$0);
	    }
	    return destination;
	  }
	  function toMap_0(_this__u8e3s4) {
	    return toMap(entriesOf(_this__u8e3s4));
	  }
	  function fromMap(_this__u8e3s4, m) {
	    // Inline function 'kotlin.collections.toTypedArray' call
	    // Inline function 'kotlin.collections.map' call
	    // Inline function 'kotlin.apply' call
	    // Inline function 'kotlin.collections.mutableMapOf' call
	    var this_0 = LinkedHashMap_init_$Create$_0();
	    // Inline function 'kotlin.contracts.contract' call
	    // Inline function 'vonage.utils.fromMap.<anonymous>' call
	    // Inline function 'kotlin.collections.forEach' call
	    // Inline function 'kotlin.collections.iterator' call
	    var tmp0_iterator = m.x1().i();
	    while (tmp0_iterator.j()) {
	      var element = tmp0_iterator.k();
	      // Inline function 'vonage.utils.fromMap.<anonymous>.<anonymous>' call
	      // Inline function 'kotlin.collections.component1' call
	      var k = element.q1();
	      // Inline function 'kotlin.collections.component2' call
	      var v = element.r1();
	      if (!(k == null) ? typeof k === 'string' : false) {
	        // Inline function 'kotlin.collections.set' call
	        this_0.b2(k, v);
	      }
	    }
	    // Inline function 'kotlin.collections.mapTo' call
	    var destination = ArrayList_init_$Create$(this_0.l());
	    // Inline function 'kotlin.collections.iterator' call
	    var tmp0_iterator_0 = this_0.x1().i();
	    while (tmp0_iterator_0.j()) {
	      var item = tmp0_iterator_0.k();
	      // Inline function 'vonage.utils.fromMap.<anonymous>' call
	      var tmp = item.q1();
	      var tmp0_subject = item.r1();
	      var tmp_0;
	      var tmp_1;
	      var tmp_2;
	      if (!(tmp0_subject == null) ? typeof tmp0_subject === 'string' : false) {
	        tmp_2 = true;
	      } else {
	        tmp_2 = !(tmp0_subject == null) ? typeof tmp0_subject === 'boolean' : false;
	      }
	      if (tmp_2) {
	        tmp_1 = true;
	      } else {
	        tmp_1 = !(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false;
	      }
	      if (tmp_1) {
	        tmp_0 = item.r1();
	      } else {
	        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, KtMap) : false) {
	          var tmp_3;
	          try {
	            var tmp_4 = JSON;
	            var tmp_5 = item.r1();
	            tmp_3 = fromMap(tmp_4, (!(tmp_5 == null) ? isInterface(tmp_5, KtMap) : false) ? tmp_5 : THROW_CCE());
	          } catch ($p) {
	            var tmp_6;
	            if ($p instanceof Exception) {
	              tmp_6 = null;
	            } else {
	              throw $p;
	            }
	            tmp_3 = tmp_6;
	          }
	          tmp_0 = tmp_3;
	        } else {
	          tmp_0 = null;
	        }
	      }
	      var tmp$ret$6 = new Pair(tmp, tmp_0);
	      destination.d(tmp$ret$6);
	    }
	    var tmp$ret$9 = copyToArray(destination);
	    return json(tmp$ret$9.slice());
	  }
	  function parseCustomJson(value) {
	    var tmp = JSON.parse;
	    return ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(value);
	  }
	  function toJsObject(_this__u8e3s4) {
	    var jsObject = {};
	    // Inline function 'kotlin.collections.forEach' call
	    // Inline function 'kotlin.collections.iterator' call
	    var tmp0_iterator = _this__u8e3s4.x1().i();
	    while (tmp0_iterator.j()) {
	      var element = tmp0_iterator.k();
	      // Inline function 'vonage.utils.toJsObject.<anonymous>' call
	      // Inline function 'kotlin.collections.component1' call
	      var key = element.q1();
	      // Inline function 'kotlin.collections.component2' call
	      var value = element.r1();
	      jsObject[key] = value;
	    }
	    return jsObject;
	  }
	  function None() {
	    OptionJS.call(this);
	  }
	  function Some(value) {
	    OptionJS.call(this);
	    this.value = value;
	  }
	  protoOf(Some).r1 = function () {
	    return this.value;
	  };
	  protoOf(Some).o8 = function () {
	    return this.value;
	  };
	  protoOf(Some).x3w = function (value) {
	    return new Some(value);
	  };
	  protoOf(Some).copy = function (value, $super) {
	    value = value === VOID ? this.value : value;
	    return this.x3w(value);
	  };
	  protoOf(Some).toString = function () {
	    return 'Some(value=' + toString_0(this.value) + ')';
	  };
	  protoOf(Some).hashCode = function () {
	    return this.value == null ? 0 : hashCode(this.value);
	  };
	  protoOf(Some).equals = function (other) {
	    if (this === other)
	      return true;
	    if (!(other instanceof Some))
	      return false;
	    var tmp0_other_with_cast = other instanceof Some ? other : THROW_CCE();
	    if (!equals(this.value, tmp0_other_with_cast.value))
	      return false;
	    return true;
	  };
	  function Companion_0() {
	  }
	  protoOf(Companion_0).of = function (value) {
	    return value == null ? new None() : new Some(value);
	  };
	  var Companion_instance_1;
	  function Companion_getInstance_1() {
	    return Companion_instance_1;
	  }
	  function OptionJS() {
	  }
	  protoOf(OptionJS).orNull = function () {
	    var tmp;
	    if (this instanceof None) {
	      tmp = null;
	    } else {
	      if (this instanceof Some) {
	        tmp = this.value;
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).contains = function (value) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = false;
	    } else {
	      if (this instanceof Some) {
	        tmp = equals(this.value, value);
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).map = function (f) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = new None();
	    } else {
	      if (this instanceof Some) {
	        tmp = new Some(f(this.value));
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).mapOr = function (default_0, f) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = default_0;
	    } else {
	      if (this instanceof Some) {
	        tmp = f(this.value);
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).mapOrElse = function (default_0, f) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = default_0();
	    } else {
	      if (this instanceof Some) {
	        tmp = f(this.value);
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).mapNotNull = function (f) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = new None();
	    } else {
	      if (this instanceof Some) {
	        var tmp1_safe_receiver = this.value;
	        var tmp_0;
	        if (tmp1_safe_receiver == null) {
	          tmp_0 = null;
	        } else {
	          // Inline function 'kotlin.let' call
	          // Inline function 'kotlin.contracts.contract' call
	          // Inline function 'vonage.utils.OptionJS.mapNotNull.<anonymous>' call
	          tmp_0 = new Some(f(tmp1_safe_receiver));
	        }
	        var tmp2_elvis_lhs = tmp_0;
	        tmp = tmp2_elvis_lhs == null ? some_0(null) : tmp2_elvis_lhs;
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).unwrapOr = function (default_0) {
	    var tmp;
	    if (this instanceof None) {
	      tmp = default_0;
	    } else {
	      if (this instanceof Some) {
	        tmp = this.value;
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).equals = function (other) {
	    var tmp;
	    if (other instanceof None) {
	      tmp = this instanceof None;
	    } else {
	      if (other instanceof Some) {
	        var tmp_0;
	        if (this instanceof Some) {
	          tmp_0 = equals(this.value, other.value);
	        } else {
	          tmp_0 = false;
	        }
	        tmp = tmp_0;
	      } else {
	        tmp = false;
	      }
	    }
	    return tmp;
	  };
	  protoOf(OptionJS).hashCode = function () {
	    var tmp;
	    if (this instanceof None) {
	      tmp = 0;
	    } else {
	      if (this instanceof Some) {
	        // Inline function 'kotlin.hashCode' call
	        var tmp0_safe_receiver = this.value;
	        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
	        tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
	      } else {
	        noWhenBranchMatchedException();
	      }
	    }
	    return tmp;
	  };
	  function some_0(value) {
	    return new Some(value);
	  }
	  //region block: post-declaration
	  protoOf(CombinedClientJS).createConversation = createConversation;
	  protoOf(CombinedClientJS).joinConversation = joinConversation;
	  protoOf(CombinedClientJS).inviteToConversation = inviteToConversation;
	  protoOf(CombinedClientJS).leaveConversation = leaveConversation;
	  protoOf(CombinedClientJS).deleteConversation = deleteConversation;
	  protoOf(CombinedClientJS).getConversations = getConversations;
	  protoOf(CombinedClientJS).getConversationMembers = getConversationMembers;
	  protoOf(CombinedClientJS).getConversationEvents = getConversationEvents;
	  protoOf(CombinedClientJS).getConversationMember = getConversationMember;
	  protoOf(CombinedClientJS).sendMessageTextEvent = sendMessageTextEvent;
	  protoOf(CombinedClientJS).sendMessageCustomEvent = sendMessageCustomEvent;
	  protoOf(CombinedClientJS).sendMessageImageEvent = sendMessageImageEvent;
	  protoOf(CombinedClientJS).sendMessageVideoEvent = sendMessageVideoEvent;
	  protoOf(CombinedClientJS).sendMessageFileEvent = sendMessageFileEvent;
	  protoOf(CombinedClientJS).sendMessageAudioEvent = sendMessageAudioEvent;
	  protoOf(CombinedClientJS).sendMessageVCardEvent = sendMessageVCardEvent;
	  protoOf(CombinedClientJS).sendMessageLocationEvent = sendMessageLocationEvent;
	  protoOf(CombinedClientJS).sendMessageTemplateEvent = sendMessageTemplateEvent;
	  protoOf(CombinedClientJS).sendEphemeralEvent = sendEphemeralEvent;
	  protoOf(CombinedClientJS).sendCustomEvent = sendCustomEvent;
	  protoOf(CombinedClientJS).deleteEvent = deleteEvent;
	  protoOf(CombinedClientJS).sendMessageSeenEvent = sendMessageSeenEvent;
	  protoOf(CombinedClientJS).updateConversation = updateConversation;
	  protoOf(CombinedClientJS).setConfig = setConfig;
	  protoOf(CombinedClientJS).createSession = createSession;
	  protoOf(CombinedClientJS).deleteSession = deleteSession;
	  protoOf(CombinedClientJS).refreshSession = refreshSession;
	  protoOf(CombinedClientJS).getConversation = getConversation;
	  protoOf(CombinedClientJS).getUser = getUser;
	  protoOf(CombinedClientJS).getPeerConnection = getPeerConnection;
	  protoOf(CombinedClientJS).getAudioOutputElement = getAudioOutputElement;
	  protoOf(CombinedClientJS).serverCall = serverCall;
	  protoOf(CombinedClientJS).reconnectCall = reconnectCall;
	  protoOf(CombinedClientJS).getLeg = getLeg;
	  protoOf(CombinedClientJS).getCallLegs = getCallLegs;
	  protoOf(CombinedClientJS).answer = answer;
	  protoOf(CombinedClientJS).reject = reject;
	  protoOf(CombinedClientJS).hangup = hangup;
	  protoOf(CombinedClientJS).say = say;
	  protoOf(CombinedClientJS).mute = mute;
	  protoOf(CombinedClientJS).unmute = unmute;
	  protoOf(CombinedClientJS).enableEarmuff = enableEarmuff;
	  protoOf(CombinedClientJS).disableEarmuff = disableEarmuff;
	  protoOf(CombinedClientJS).sendDTMF = sendDTMF;
	  defineProp(protoOf(CombinedClientJS), 'media', function () {
	    return this.g3o();
	  });
	  defineProp(protoOf(CombinedClientJS), 'core', function () {
	    return this.h3o();
	  });
	  defineProp(protoOf(EventStateTypeJS), 'name', protoOf(EventStateTypeJS).f2);
	  defineProp(protoOf(EventStateTypeJS), 'ordinal', protoOf(EventStateTypeJS).g2);
	  defineProp(protoOf(PresentingOrderJS), 'name', protoOf(PresentingOrderJS).f2);
	  defineProp(protoOf(PresentingOrderJS), 'ordinal', protoOf(PresentingOrderJS).g2);
	  defineProp(protoOf(OrderByJS), 'name', protoOf(OrderByJS).f2);
	  defineProp(protoOf(OrderByJS), 'ordinal', protoOf(OrderByJS).g2);
	  defineProp(protoOf(CoreClientConfigRegionJS), 'name', protoOf(CoreClientConfigRegionJS).f2);
	  defineProp(protoOf(CoreClientConfigRegionJS), 'ordinal', protoOf(CoreClientConfigRegionJS).g2);
	  defineProp(protoOf(CoreClientConfigJS), 'apiUrl', function () {
	    return this.x3t();
	  }, function (value) {
	    this.w3t(value);
	  });
	  defineProp(protoOf(CoreClientConfigJS), 'websocketUrl', function () {
	    return this.z3t();
	  }, function (value) {
	    this.y3t(value);
	  });
	  defineProp(protoOf(CoreClientConfigJS), 'websocketPath', function () {
	    return this.b3u();
	  }, function (value) {
	    this.a3u(value);
	  });
	  defineProp(protoOf(CoreClientConfigJS), 'rtcStatsTelemetry', function () {
	    return this.d3u();
	  }, function (value) {
	    this.c3u(value);
	  });
	  defineProp(protoOf(CoreClientConfigJS), 'autoReconnectMedia', function () {
	    return this.f3u();
	  }, function (value) {
	    this.e3u(value);
	  });
	  defineProp(protoOf(CoreClientConfigJS), 'noiseSuppression', function () {
	    return this.g3u();
	  });
	  defineProp(protoOf(Topics), 'name', protoOf(Topics).f2);
	  defineProp(protoOf(Topics), 'ordinal', protoOf(Topics).g2);
	  defineProp(protoOf(LoggingLevelJS), 'name', protoOf(LoggingLevelJS).f2);
	  defineProp(protoOf(LoggingLevelJS), 'ordinal', protoOf(LoggingLevelJS).g2);
	  defineProp(protoOf(createVonageLoggerJS$1), 'name', function () {
	    return this.f2();
	  });
	  defineProp(protoOf(createVonageLoggerJS$1), 'minLogLevel', function () {
	    return this.x3c();
	  });
	  defineProp(protoOf(createVonageLoggerJS$1), 'topics', function () {
	    return this.p3c();
	  });
	  defineProp(protoOf(HttpClientErrorJS), 'message', function () {
	    return this.k8();
	  });
	  defineProp(protoOf(HttpClientErrorJS), 'cause', function () {
	    return this.l8();
	  });
	  defineProp(protoOf(HttpClientErrorJS), 'coreError', protoOf(HttpClientErrorJS).f3v);
	  protoOf(HttpClientJSAdapter$1).p3e = clear;
	  //endregion
	  //region block: init
	  VoiceChannelTypeObject_instance = new VoiceChannelTypeObject();
	  SystemJS_instance = new SystemJS();
	  ConversationStateJS_instance = new ConversationStateJS();
	  MemberStateJSObj_instance = new MemberStateJSObj();
	  ChannelTypeObj_instance = new ChannelTypeObj();
	  CSErrorCodesJS_instance = new CSErrorCodesJS();
	  SessionErrorCodesJS_instance = new SessionErrorCodesJS();
	  VonageErrorTypeJsObject_instance = new VonageErrorTypeJsObject();
	  SessionErrorReasonJsObject_instance = new SessionErrorReasonJsObject();
	  LegStatusJSObject_instance = new LegStatusJSObject();
	  CallDisconnectReasonJSObject_instance = new CallDisconnectReasonJSObject();
	  HangupReasonJSObject_instance = new HangupReasonJSObject();
	  SOCKET_CONNECTED = 'NXMCORE_SOCKET_CONNECTED';
	  SOCKET_RECONNECTING = 'NXMCORE_SOCKET_RECONNECTING';
	  SOCKET_DISCONNECTED = 'NXMCORE_SOCKET_DISCONNECTED';
	  REASON_SERVER_DISCONNECTED = 'NXMCORE_REASON_SERVER_DISCONNECTED';
	  REASON_CLIENT_DISCONNECTED = 'NXMCORE_REASON_CLIENT_DISCONNECTED';
	  REASON_CLIENT_NETWORK_ERROR = 'NXMCORE_CLIENT_NETWORK_ERROR';
	  REASON_PING_TIMEOUT = 'NXMCORE_REASON_PING_TIMEOUT';
	  CancelReasonJSObject_instance = new CancelReasonJSObject();
	  Companion_instance_0 = new Companion();
	  Companion_instance_1 = new Companion_0();
	  //endregion
	  //region block: exports
	  function $jsExportAll$(_) {
	    var $vonage = _.vonage || (_.vonage = {});
	    defineProp($vonage, 'VoiceChannelTypeObject', VoiceChannelTypeObject_getInstance);
	    $vonage.CombinedClientJS = CombinedClientJS;
	    var $vonage = _.vonage || (_.vonage = {});
	    $vonage.EventStateTypeJS = EventStateTypeJS;
	    $vonage.EventStateTypeJS.values = values;
	    $vonage.EventStateTypeJS.valueOf = valueOf_0;
	    defineProp($vonage.EventStateTypeJS, 'SEEN', EventStateTypeJS_SEEN_getInstance);
	    defineProp($vonage.EventStateTypeJS, 'DELIVERED', EventStateTypeJS_DELIVERED_getInstance);
	    defineProp($vonage.EventStateTypeJS, 'SUBMITTED', EventStateTypeJS_SUBMITTED_getInstance);
	    defineProp($vonage.EventStateTypeJS, 'REJECTED', EventStateTypeJS_REJECTED_getInstance);
	    defineProp($vonage.EventStateTypeJS, 'UNDELIVERABLE', EventStateTypeJS_UNDELIVERABLE_getInstance);
	    defineProp($vonage.EventStateTypeJS, 'NONE', EventStateTypeJS_NONE_getInstance);
	    $vonage.EventStateJS = EventStateJS;
	    $vonage.EventsPageJS = EventsPageJS;
	    $vonage.EmbeddedInfoJS = EmbeddedInfoJS;
	    defineProp($vonage, 'SystemJS', SystemJS_getInstance);
	    $vonage.MemberEventBodyJS = MemberEventBodyJS;
	    $vonage.MemberInvitedEventJS = MemberInvitedEventJS;
	    $vonage.MemberJoinedEventJS = MemberJoinedEventJS;
	    $vonage.MemberLeftEventJS = MemberLeftEventJS;
	    $vonage.CustomConversationEventJS = CustomConversationEventJS;
	    $vonage.EphemeralConversationEventJS = EphemeralConversationEventJS;
	    $vonage.EventStateBodyJS = EventStateBodyJS;
	    $vonage.EventDeleteConversationEventJS = EventDeleteConversationEventJS;
	    $vonage.MessageDeliveredEventJS = MessageDeliveredEventJS;
	    $vonage.MessageRejectedEventJS = MessageRejectedEventJS;
	    $vonage.MessageUndeliverableEventJS = MessageUndeliverableEventJS;
	    $vonage.MessageSubmittedEventJS = MessageSubmittedEventJS;
	    $vonage.MessageSeenEventJS = MessageSeenEventJS;
	    var $vonage = _.vonage || (_.vonage = {});
	    $vonage.MessageTextEventJS = MessageTextEventJS;
	    $vonage.MessageTextEventJS.MessageTextEventBody = MessageTextEventBody;
	    $vonage.MessageCustomEventJS = MessageCustomEventJS;
	    $vonage.MessageCustomEventJS.MessageCustomEventBody = MessageCustomEventBody;
	    $vonage.MessageAudioEventJS = MessageAudioEventJS;
	    $vonage.MessageAudioEventJS.MessageAudioEventBody = MessageAudioEventBody;
	    $vonage.MessageVideoEventJS = MessageVideoEventJS;
	    $vonage.MessageVideoEventJS.MessageVideoEventBody = MessageVideoEventBody;
	    $vonage.MessageImageEventJS = MessageImageEventJS;
	    $vonage.MessageImageEventJS.MessageImageEventBody = MessageImageEventBody;
	    $vonage.MessageFileEventJS = MessageFileEventJS;
	    $vonage.MessageFileEventJS.MessageFileEventBody = MessageFileEventBody;
	    $vonage.MessageVCardEventJS = MessageVCardEventJS;
	    $vonage.MessageVCardEventJS.MessageVCardEventBody = MessageVCardEventBody;
	    $vonage.MessageLocationEventJS = MessageLocationEventJS;
	    $vonage.MessageLocationEventJS.MessageLocationEventBody = MessageLocationEventBody;
	    $vonage.MessageLocationEventJS.Location = Location_0;
	    $vonage.MessageTemplateEventJS = MessageTemplateEventJS;
	    $vonage.MessageTemplateEventJS.MessageTemplateEventBody = MessageTemplateEventBody;
	    $vonage.MessageTemplateEventJS.TemplateObject = TemplateObject_0;
	    $vonage.MessageTemplateEventJS.WhatsappObject = WhatsappObject_0;
	    var $vonage = _.vonage || (_.vonage = {});
	    $vonage.PresentingOrderJS = PresentingOrderJS;
	    $vonage.PresentingOrderJS.values = values_0;
	    $vonage.PresentingOrderJS.valueOf = valueOf_1;
	    defineProp($vonage.PresentingOrderJS, 'ASC', PresentingOrderJS_ASC_getInstance);
	    defineProp($vonage.PresentingOrderJS, 'DESC', PresentingOrderJS_DESC_getInstance);
	    $vonage.OrderByJS = OrderByJS;
	    $vonage.OrderByJS.values = values_1;
	    $vonage.OrderByJS.valueOf = valueOf_2;
	    defineProp($vonage.OrderByJS, 'CREATED', OrderByJS_CREATED_getInstance);
	    defineProp($vonage.OrderByJS, 'CUSTOM_SORT_KEY', OrderByJS_CUSTOM_SORT_KEY_getInstance);
	    $vonage.ConversationJS = ConversationJS;
	    $vonage.ConversationJS.Properties = Properties;
	    defineProp($vonage, 'ConversationStateJS', ConversationStateJS_getInstance);
	    $vonage.ConversationTimestampJS = ConversationTimestampJS;
	    $vonage.ConversationsPageJS = ConversationsPageJS;
	    $vonage.MemberJS = MemberJS;
	    defineProp($vonage, 'MemberStateJSObj', MemberStateJSObj_getInstance);
	    $vonage.MemberTimestampJS = MemberTimestampJS;
	    $vonage.MembersPageJS = MembersPageJS;
	    $vonage.UserJS = UserJS;
	    $vonage.UserTimestampJS = UserTimestampJS;
	    $vonage.UserChannelsJS = UserChannelsJS;
	    $vonage.MemberChannelJS = MemberChannelJS;
	    $vonage.ChannelJS = ChannelJS;
	    $vonage.LegChannelJS = LegChannelJS;
	    $vonage.MediaStateJS = MediaStateJS;
	    $vonage.LegJS = LegJS;
	    $vonage.LegsPageJS = LegsPageJS;
	    defineProp($vonage, 'ChannelTypeObj', ChannelTypeObj_getInstance);
	    var $vonage = _.vonage || (_.vonage = {});
	    defineProp($vonage, 'CSErrorCodesJS', CSErrorCodesJS_getInstance);
	    defineProp($vonage, 'SessionErrorCodesJS', SessionErrorCodesJS_getInstance);
	    var $vonage = _.vonage || (_.vonage = {});
	    $vonage.VonageErrorJS = VonageErrorJS;
	    defineProp($vonage, 'VonageErrorTypeJsObject', VonageErrorTypeJsObject_getInstance);
	    $vonage.MediaClientErrorJS = MediaClientErrorJS;
	    $vonage.PeerConnectionNotFoundJS = PeerConnectionNotFoundJS;
	    $vonage.TrackNotFoundJS = TrackNotFoundJS;
	    $vonage.ProcessAnswerErrorJS = ProcessAnswerErrorJS;
	    $vonage.CreateAnswerErrorJS = CreateAnswerErrorJS;
	    $vonage.CreateOfferErrorJS = CreateOfferErrorJS;
	    var $vonage = _.vonage || (_.vonage = {});
	    var $vonage = _.vonage || (_.vonage = {});
	    defineProp($vonage, 'DEFAULT_REGION', get_DEFAULT_REGION);
	    defineProp($vonage, 'DEFAULT_LOGGING_LEVEL', get_DEFAULT_LOGGING_LEVEL);
	    $vonage.CoreClientConfigRegionJS = CoreClientConfigRegionJS;
	    $vonage.CoreClientConfigRegionJS.values = values_2;
	    $vonage.CoreClientConfigRegionJS.valueOf = valueOf_3;
	    defineProp($vonage.CoreClientConfigRegionJS, 'AP', CoreClientConfigRegionJS_AP_getInstance);
	    defineProp($vonage.CoreClientConfigRegionJS, 'EU', CoreClientConfigRegionJS_EU_getInstance);
	    defineProp($vonage.CoreClientConfigRegionJS, 'US', CoreClientConfigRegionJS_US_getInstance);
	    $vonage.CoreClientConfigJS = CoreClientConfigJS;
	    $vonage.TopicJS = TopicJS;
	    $vonage.Topics = Topics;
	    $vonage.Topics.values = values_3;
	    $vonage.Topics.valueOf = valueOf_4;
	    defineProp($vonage.Topics, 'HTTP', Topics_HTTP_getInstance);
	    defineProp($vonage.Topics, 'WS', Topics_WS_getInstance);
	    defineProp($vonage.Topics, 'MEDIA', Topics_MEDIA_getInstance);
	    defineProp($vonage.Topics, 'API', Topics_API_getInstance);
	    defineProp($vonage.Topics, 'STORE', Topics_STORE_getInstance);
	    defineProp($vonage.Topics, 'REDUCER', Topics_REDUCER_getInstance);
	    defineProp($vonage.Topics, 'DEFAULT', Topics_DEFAULT_getInstance);
	    $vonage.createVonageLoggerJS = createVonageLoggerJS;
	    $vonage.LoggingLevelJS = LoggingLevelJS;
	    $vonage.LoggingLevelJS.values = values_4;
	    $vonage.LoggingLevelJS.valueOf = valueOf_5;
	    defineProp($vonage.LoggingLevelJS, 'Verbose', LoggingLevelJS_Verbose_getInstance);
	    defineProp($vonage.LoggingLevelJS, 'Debug', LoggingLevelJS_Debug_getInstance);
	    defineProp($vonage.LoggingLevelJS, 'Info', LoggingLevelJS_Info_getInstance);
	    defineProp($vonage.LoggingLevelJS, 'Warn', LoggingLevelJS_Warn_getInstance);
	    defineProp($vonage.LoggingLevelJS, 'Error', LoggingLevelJS_Error_getInstance);
	    defineProp($vonage.LoggingLevelJS, 'Assert', LoggingLevelJS_Assert_getInstance);
	    defineProp($vonage, 'SessionErrorReasonJsObject', SessionErrorReasonJsObject_getInstance);
	    var $vonage = _.vonage || (_.vonage = {});
	    defineProp($vonage, 'LegStatusJSObject', LegStatusJSObject_getInstance);
	    defineProp($vonage, 'CallDisconnectReasonJSObject', CallDisconnectReasonJSObject_getInstance);
	    defineProp($vonage, 'HangupReasonJSObject', HangupReasonJSObject_getInstance);
	    $vonage.VoiceInviteFromInfoJS = VoiceInviteFromInfoJS;
	    var $vonage = _.vonage || (_.vonage = {});
	    $vonage.HttpClientErrorJS = HttpClientErrorJS;
	    $vonage.HttpClientResponseJS = HttpClientResponseJS;
	    defineProp($vonage, 'SOCKET_CONNECTED', get_SOCKET_CONNECTED);
	    defineProp($vonage, 'SOCKET_RECONNECTING', get_SOCKET_RECONNECTING);
	    defineProp($vonage, 'SOCKET_DISCONNECTED', get_SOCKET_DISCONNECTED);
	    defineProp($vonage, 'REASON_SERVER_DISCONNECTED', get_REASON_SERVER_DISCONNECTED);
	    defineProp($vonage, 'REASON_CLIENT_DISCONNECTED', get_REASON_CLIENT_DISCONNECTED);
	    defineProp($vonage, 'REASON_CLIENT_NETWORK_ERROR', get_REASON_CLIENT_NETWORK_ERROR);
	    defineProp($vonage, 'REASON_PING_TIMEOUT', get_REASON_PING_TIMEOUT);
	    defineProp($vonage, 'CancelReasonJSObject', CancelReasonJSObject_getInstance);
	    $vonage.RTCQualityJS = RTCQualityJS;
	    $vonage.RTCStatsJS = RTCStatsJS;
	    defineProp($vonage.RTCStatsJS, 'Companion', Companion_getInstance_0);
	    var $vonage = _.vonage || (_.vonage = {});
	    var $vonage = _.vonage || (_.vonage = {});
	    var $vonage$utils = $vonage.utils || ($vonage.utils = {});
	    $vonage$utils.OptionJS = OptionJS;
	    $vonage$utils.OptionJS.None = None;
	    $vonage$utils.OptionJS.Some = Some;
	    defineProp($vonage$utils.OptionJS, 'Companion', Companion_getInstance_1);
	  }
	  $jsExportAll$(_);
	  //endregion
	  return _;
	}));

	
} (clientsdkClientcore_js));

class HttpClient {
    request(verb, url, headers, body, callback) {
        return __awaiter(this, void 0, void 0, function* () {
            const options = {
                method: verb.toUpperCase(),
                headers: Object.entries(headers).reduce((acc, [key, value]) => {
                    acc.append(key, value.toString());
                    return acc;
                }, new Headers()),
                body: body == '' || body == null ? undefined : body
            };
            try {
                const response = yield fetch(url, options);
                const coreResponse = new clientsdkClientcore_jsExports.vonage.HttpClientResponseJS(response.status, yield response.text());
                // no need to check for status ok, as we pipe all responses through to core
                callback(null, coreResponse);
            }
            catch (error) {
                if (error instanceof Error) {
                    const httpClientError = new clientsdkClientcore_jsExports.vonage.HttpClientErrorJS(error.message, error);
                    callback(httpClientError, null);
                    return;
                }
                const httpClientError = new clientsdkClientcore_jsExports.vonage.HttpClientErrorJS('Unknown Error', null);
                callback(httpClientError, null);
            }
        });
    }
}

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

let logDisabled_ = true;
let deprecationWarnings_ = true;

/**
 * Extract browser version out of the provided user agent string.
 *
 * @param {!string} uastring userAgent string.
 * @param {!string} expr Regular expression used as match criteria.
 * @param {!number} pos position in the version string to be returned.
 * @return {!number} browser version.
 */
function extractVersion(uastring, expr, pos) {
  const match = uastring.match(expr);
  return match && match.length >= pos && parseInt(match[pos], 10);
}

// Wraps the peerconnection event eventNameToWrap in a function
// which returns the modified event object (or false to prevent
// the event).
function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {
  if (!window.RTCPeerConnection) {
    return;
  }
  const proto = window.RTCPeerConnection.prototype;
  const nativeAddEventListener = proto.addEventListener;
  proto.addEventListener = function(nativeEventName, cb) {
    if (nativeEventName !== eventNameToWrap) {
      return nativeAddEventListener.apply(this, arguments);
    }
    const wrappedCallback = (e) => {
      const modifiedEvent = wrapper(e);
      if (modifiedEvent) {
        if (cb.handleEvent) {
          cb.handleEvent(modifiedEvent);
        } else {
          cb(modifiedEvent);
        }
      }
    };
    this._eventMap = this._eventMap || {};
    if (!this._eventMap[eventNameToWrap]) {
      this._eventMap[eventNameToWrap] = new Map();
    }
    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);
    return nativeAddEventListener.apply(this, [nativeEventName,
      wrappedCallback]);
  };

  const nativeRemoveEventListener = proto.removeEventListener;
  proto.removeEventListener = function(nativeEventName, cb) {
    if (nativeEventName !== eventNameToWrap || !this._eventMap
        || !this._eventMap[eventNameToWrap]) {
      return nativeRemoveEventListener.apply(this, arguments);
    }
    if (!this._eventMap[eventNameToWrap].has(cb)) {
      return nativeRemoveEventListener.apply(this, arguments);
    }
    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);
    this._eventMap[eventNameToWrap].delete(cb);
    if (this._eventMap[eventNameToWrap].size === 0) {
      delete this._eventMap[eventNameToWrap];
    }
    if (Object.keys(this._eventMap).length === 0) {
      delete this._eventMap;
    }
    return nativeRemoveEventListener.apply(this, [nativeEventName,
      unwrappedCb]);
  };

  Object.defineProperty(proto, 'on' + eventNameToWrap, {
    get() {
      return this['_on' + eventNameToWrap];
    },
    set(cb) {
      if (this['_on' + eventNameToWrap]) {
        this.removeEventListener(eventNameToWrap,
          this['_on' + eventNameToWrap]);
        delete this['_on' + eventNameToWrap];
      }
      if (cb) {
        this.addEventListener(eventNameToWrap,
          this['_on' + eventNameToWrap] = cb);
      }
    },
    enumerable: true,
    configurable: true
  });
}

function disableLog(bool) {
  if (typeof bool !== 'boolean') {
    return new Error('Argument type: ' + typeof bool +
        '. Please use a boolean.');
  }
  logDisabled_ = bool;
  return (bool) ? 'adapter.js logging disabled' :
    'adapter.js logging enabled';
}

/**
 * Disable or enable deprecation warnings
 * @param {!boolean} bool set to true to disable warnings.
 */
function disableWarnings(bool) {
  if (typeof bool !== 'boolean') {
    return new Error('Argument type: ' + typeof bool +
        '. Please use a boolean.');
  }
  deprecationWarnings_ = !bool;
  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');
}

function log() {
  if (typeof window === 'object') {
    if (logDisabled_) {
      return;
    }
    if (typeof console !== 'undefined' && typeof console.log === 'function') {
      console.log.apply(console, arguments);
    }
  }
}

/**
 * Shows a deprecation warning suggesting the modern and spec-compatible API.
 */
function deprecated(oldMethod, newMethod) {
  if (!deprecationWarnings_) {
    return;
  }
  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +
      ' instead.');
}

/**
 * Browser detector.
 *
 * @return {object} result containing browser and version
 *     properties.
 */
function detectBrowser(window) {
  // Returned result object.
  const result = {browser: null, version: null};

  // Fail early if it's not a browser
  if (typeof window === 'undefined' || !window.navigator ||
      !window.navigator.userAgent) {
    result.browser = 'Not a browser.';
    return result;
  }

  const {navigator} = window;

  if (navigator.mozGetUserMedia) { // Firefox.
    result.browser = 'firefox';
    result.version = extractVersion(navigator.userAgent,
      /Firefox\/(\d+)\./, 1);
  } else if (navigator.webkitGetUserMedia ||
      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {
    // Chrome, Chromium, Webview, Opera.
    // Version matches Chrome/WebRTC version.
    // Chrome 74 removed webkitGetUserMedia on http as well so we need the
    // more complicated fallback to webkitRTCPeerConnection.
    result.browser = 'chrome';
    result.version = extractVersion(navigator.userAgent,
      /Chrom(e|ium)\/(\d+)\./, 2);
  } else if (window.RTCPeerConnection &&
      navigator.userAgent.match(/AppleWebKit\/(\d+)\./)) { // Safari.
    result.browser = 'safari';
    result.version = extractVersion(navigator.userAgent,
      /AppleWebKit\/(\d+)\./, 1);
    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&
        'currentDirection' in window.RTCRtpTransceiver.prototype;
  } else { // Default fallthrough: not supported.
    result.browser = 'Not a supported browser.';
    return result;
  }

  return result;
}

/**
 * Checks if something is an object.
 *
 * @param {*} val The something you want to check.
 * @return true if val is an object, false otherwise.
 */
function isObject$1(val) {
  return Object.prototype.toString.call(val) === '[object Object]';
}

/**
 * Remove all empty objects and undefined values
 * from a nested object -- an enhanced and vanilla version
 * of Lodash's `compact`.
 */
function compactObject(data) {
  if (!isObject$1(data)) {
    return data;
  }

  return Object.keys(data).reduce(function(accumulator, key) {
    const isObj = isObject$1(data[key]);
    const value = isObj ? compactObject(data[key]) : data[key];
    const isEmptyObject = isObj && !Object.keys(value).length;
    if (value === undefined || isEmptyObject) {
      return accumulator;
    }
    return Object.assign(accumulator, {[key]: value});
  }, {});
}

/* iterates the stats graph recursively. */
function walkStats(stats, base, resultSet) {
  if (!base || resultSet.has(base.id)) {
    return;
  }
  resultSet.set(base.id, base);
  Object.keys(base).forEach(name => {
    if (name.endsWith('Id')) {
      walkStats(stats, stats.get(base[name]), resultSet);
    } else if (name.endsWith('Ids')) {
      base[name].forEach(id => {
        walkStats(stats, stats.get(id), resultSet);
      });
    }
  });
}

/* filter getStats for a sender/receiver track. */
function filterStats(result, track, outbound) {
  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';
  const filteredResult = new Map();
  if (track === null) {
    return filteredResult;
  }
  const trackStats = [];
  result.forEach(value => {
    if (value.type === 'track' &&
        value.trackIdentifier === track.id) {
      trackStats.push(value);
    }
  });
  trackStats.forEach(trackStat => {
    result.forEach(stats => {
      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {
        walkStats(result, stats, filteredResult);
      }
    });
  });
  return filteredResult;
}

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
const logging = log;

function shimGetUserMedia$2(window, browserDetails) {
  const navigator = window && window.navigator;

  if (!navigator.mediaDevices) {
    return;
  }

  const constraintsToChrome_ = function(c) {
    if (typeof c !== 'object' || c.mandatory || c.optional) {
      return c;
    }
    const cc = {};
    Object.keys(c).forEach(key => {
      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {
        return;
      }
      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};
      if (r.exact !== undefined && typeof r.exact === 'number') {
        r.min = r.max = r.exact;
      }
      const oldname_ = function(prefix, name) {
        if (prefix) {
          return prefix + name.charAt(0).toUpperCase() + name.slice(1);
        }
        return (name === 'deviceId') ? 'sourceId' : name;
      };
      if (r.ideal !== undefined) {
        cc.optional = cc.optional || [];
        let oc = {};
        if (typeof r.ideal === 'number') {
          oc[oldname_('min', key)] = r.ideal;
          cc.optional.push(oc);
          oc = {};
          oc[oldname_('max', key)] = r.ideal;
          cc.optional.push(oc);
        } else {
          oc[oldname_('', key)] = r.ideal;
          cc.optional.push(oc);
        }
      }
      if (r.exact !== undefined && typeof r.exact !== 'number') {
        cc.mandatory = cc.mandatory || {};
        cc.mandatory[oldname_('', key)] = r.exact;
      } else {
        ['min', 'max'].forEach(mix => {
          if (r[mix] !== undefined) {
            cc.mandatory = cc.mandatory || {};
            cc.mandatory[oldname_(mix, key)] = r[mix];
          }
        });
      }
    });
    if (c.advanced) {
      cc.optional = (cc.optional || []).concat(c.advanced);
    }
    return cc;
  };

  const shimConstraints_ = function(constraints, func) {
    if (browserDetails.version >= 61) {
      return func(constraints);
    }
    constraints = JSON.parse(JSON.stringify(constraints));
    if (constraints && typeof constraints.audio === 'object') {
      const remap = function(obj, a, b) {
        if (a in obj && !(b in obj)) {
          obj[b] = obj[a];
          delete obj[a];
        }
      };
      constraints = JSON.parse(JSON.stringify(constraints));
      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');
      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');
      constraints.audio = constraintsToChrome_(constraints.audio);
    }
    if (constraints && typeof constraints.video === 'object') {
      // Shim facingMode for mobile & surface pro.
      let face = constraints.video.facingMode;
      face = face && ((typeof face === 'object') ? face : {ideal: face});
      const getSupportedFacingModeLies = browserDetails.version < 66;

      if ((face && (face.exact === 'user' || face.exact === 'environment' ||
                    face.ideal === 'user' || face.ideal === 'environment')) &&
          !(navigator.mediaDevices.getSupportedConstraints &&
            navigator.mediaDevices.getSupportedConstraints().facingMode &&
            !getSupportedFacingModeLies)) {
        delete constraints.video.facingMode;
        let matches;
        if (face.exact === 'environment' || face.ideal === 'environment') {
          matches = ['back', 'rear'];
        } else if (face.exact === 'user' || face.ideal === 'user') {
          matches = ['front'];
        }
        if (matches) {
          // Look for matches in label, or use last cam for back (typical).
          return navigator.mediaDevices.enumerateDevices()
            .then(devices => {
              devices = devices.filter(d => d.kind === 'videoinput');
              let dev = devices.find(d => matches.some(match =>
                d.label.toLowerCase().includes(match)));
              if (!dev && devices.length && matches.includes('back')) {
                dev = devices[devices.length - 1]; // more likely the back cam
              }
              if (dev) {
                constraints.video.deviceId = face.exact
                  ? {exact: dev.deviceId}
                  : {ideal: dev.deviceId};
              }
              constraints.video = constraintsToChrome_(constraints.video);
              logging('chrome: ' + JSON.stringify(constraints));
              return func(constraints);
            });
        }
      }
      constraints.video = constraintsToChrome_(constraints.video);
    }
    logging('chrome: ' + JSON.stringify(constraints));
    return func(constraints);
  };

  const shimError_ = function(e) {
    if (browserDetails.version >= 64) {
      return e;
    }
    return {
      name: {
        PermissionDeniedError: 'NotAllowedError',
        PermissionDismissedError: 'NotAllowedError',
        InvalidStateError: 'NotAllowedError',
        DevicesNotFoundError: 'NotFoundError',
        ConstraintNotSatisfiedError: 'OverconstrainedError',
        TrackStartError: 'NotReadableError',
        MediaDeviceFailedDueToShutdown: 'NotAllowedError',
        MediaDeviceKillSwitchOn: 'NotAllowedError',
        TabCaptureError: 'AbortError',
        ScreenCaptureError: 'AbortError',
        DeviceCaptureError: 'AbortError'
      }[e.name] || e.name,
      message: e.message,
      constraint: e.constraint || e.constraintName,
      toString() {
        return this.name + (this.message && ': ') + this.message;
      }
    };
  };

  const getUserMedia_ = function(constraints, onSuccess, onError) {
    shimConstraints_(constraints, c => {
      navigator.webkitGetUserMedia(c, onSuccess, e => {
        if (onError) {
          onError(shimError_(e));
        }
      });
    });
  };
  navigator.getUserMedia = getUserMedia_.bind(navigator);

  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia
  // function which returns a Promise, it does not accept spec-style
  // constraints.
  if (navigator.mediaDevices.getUserMedia) {
    const origGetUserMedia = navigator.mediaDevices.getUserMedia.
      bind(navigator.mediaDevices);
    navigator.mediaDevices.getUserMedia = function(cs) {
      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {
        if (c.audio && !stream.getAudioTracks().length ||
            c.video && !stream.getVideoTracks().length) {
          stream.getTracks().forEach(track => {
            track.stop();
          });
          throw new DOMException('', 'NotFoundError');
        }
        return stream;
      }, e => Promise.reject(shimError_(e))));
    };
  }
}

/*
 *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
function shimGetDisplayMedia$1(window, getSourceId) {
  if (window.navigator.mediaDevices &&
    'getDisplayMedia' in window.navigator.mediaDevices) {
    return;
  }
  if (!(window.navigator.mediaDevices)) {
    return;
  }
  // getSourceId is a function that returns a promise resolving with
  // the sourceId of the screen/window/tab to be shared.
  if (typeof getSourceId !== 'function') {
    console.error('shimGetDisplayMedia: getSourceId argument is not ' +
        'a function');
    return;
  }
  window.navigator.mediaDevices.getDisplayMedia =
    function getDisplayMedia(constraints) {
      return getSourceId(constraints)
        .then(sourceId => {
          const widthSpecified = constraints.video && constraints.video.width;
          const heightSpecified = constraints.video &&
            constraints.video.height;
          const frameRateSpecified = constraints.video &&
            constraints.video.frameRate;
          constraints.video = {
            mandatory: {
              chromeMediaSource: 'desktop',
              chromeMediaSourceId: sourceId,
              maxFrameRate: frameRateSpecified || 3
            }
          };
          if (widthSpecified) {
            constraints.video.mandatory.maxWidth = widthSpecified;
          }
          if (heightSpecified) {
            constraints.video.mandatory.maxHeight = heightSpecified;
          }
          return window.navigator.mediaDevices.getUserMedia(constraints);
        });
    };
}

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimMediaStream(window) {
  window.MediaStream = window.MediaStream || window.webkitMediaStream;
}

function shimOnTrack$1(window) {
  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in
      window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {
      get() {
        return this._ontrack;
      },
      set(f) {
        if (this._ontrack) {
          this.removeEventListener('track', this._ontrack);
        }
        this.addEventListener('track', this._ontrack = f);
      },
      enumerable: true,
      configurable: true
    });
    const origSetRemoteDescription =
        window.RTCPeerConnection.prototype.setRemoteDescription;
    window.RTCPeerConnection.prototype.setRemoteDescription =
      function setRemoteDescription() {
        if (!this._ontrackpoly) {
          this._ontrackpoly = (e) => {
            // onaddstream does not fire when a track is added to an existing
            // stream. But stream.onaddtrack is implemented so we use that.
            e.stream.addEventListener('addtrack', te => {
              let receiver;
              if (window.RTCPeerConnection.prototype.getReceivers) {
                receiver = this.getReceivers()
                  .find(r => r.track && r.track.id === te.track.id);
              } else {
                receiver = {track: te.track};
              }

              const event = new Event('track');
              event.track = te.track;
              event.receiver = receiver;
              event.transceiver = {receiver};
              event.streams = [e.stream];
              this.dispatchEvent(event);
            });
            e.stream.getTracks().forEach(track => {
              let receiver;
              if (window.RTCPeerConnection.prototype.getReceivers) {
                receiver = this.getReceivers()
                  .find(r => r.track && r.track.id === track.id);
              } else {
                receiver = {track};
              }
              const event = new Event('track');
              event.track = track;
              event.receiver = receiver;
              event.transceiver = {receiver};
              event.streams = [e.stream];
              this.dispatchEvent(event);
            });
          };
          this.addEventListener('addstream', this._ontrackpoly);
        }
        return origSetRemoteDescription.apply(this, arguments);
      };
  } else {
    // even if RTCRtpTransceiver is in window, it is only used and
    // emitted in unified-plan. Unfortunately this means we need
    // to unconditionally wrap the event.
    wrapPeerConnectionEvent(window, 'track', e => {
      if (!e.transceiver) {
        Object.defineProperty(e, 'transceiver',
          {value: {receiver: e.receiver}});
      }
      return e;
    });
  }
}

function shimGetSendersWithDtmf(window) {
  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.
  if (typeof window === 'object' && window.RTCPeerConnection &&
      !('getSenders' in window.RTCPeerConnection.prototype) &&
      'createDTMFSender' in window.RTCPeerConnection.prototype) {
    const shimSenderWithDtmf = function(pc, track) {
      return {
        track,
        get dtmf() {
          if (this._dtmf === undefined) {
            if (track.kind === 'audio') {
              this._dtmf = pc.createDTMFSender(track);
            } else {
              this._dtmf = null;
            }
          }
          return this._dtmf;
        },
        _pc: pc
      };
    };

    // augment addTrack when getSenders is not available.
    if (!window.RTCPeerConnection.prototype.getSenders) {
      window.RTCPeerConnection.prototype.getSenders = function getSenders() {
        this._senders = this._senders || [];
        return this._senders.slice(); // return a copy of the internal state.
      };
      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
      window.RTCPeerConnection.prototype.addTrack =
        function addTrack(track, stream) {
          let sender = origAddTrack.apply(this, arguments);
          if (!sender) {
            sender = shimSenderWithDtmf(this, track);
            this._senders.push(sender);
          }
          return sender;
        };

      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;
      window.RTCPeerConnection.prototype.removeTrack =
        function removeTrack(sender) {
          origRemoveTrack.apply(this, arguments);
          const idx = this._senders.indexOf(sender);
          if (idx !== -1) {
            this._senders.splice(idx, 1);
          }
        };
    }
    const origAddStream = window.RTCPeerConnection.prototype.addStream;
    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {
      this._senders = this._senders || [];
      origAddStream.apply(this, [stream]);
      stream.getTracks().forEach(track => {
        this._senders.push(shimSenderWithDtmf(this, track));
      });
    };

    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
    window.RTCPeerConnection.prototype.removeStream =
      function removeStream(stream) {
        this._senders = this._senders || [];
        origRemoveStream.apply(this, [stream]);

        stream.getTracks().forEach(track => {
          const sender = this._senders.find(s => s.track === track);
          if (sender) { // remove sender
            this._senders.splice(this._senders.indexOf(sender), 1);
          }
        });
      };
  } else if (typeof window === 'object' && window.RTCPeerConnection &&
             'getSenders' in window.RTCPeerConnection.prototype &&
             'createDTMFSender' in window.RTCPeerConnection.prototype &&
             window.RTCRtpSender &&
             !('dtmf' in window.RTCRtpSender.prototype)) {
    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
    window.RTCPeerConnection.prototype.getSenders = function getSenders() {
      const senders = origGetSenders.apply(this, []);
      senders.forEach(sender => sender._pc = this);
      return senders;
    };

    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {
      get() {
        if (this._dtmf === undefined) {
          if (this.track.kind === 'audio') {
            this._dtmf = this._pc.createDTMFSender(this.track);
          } else {
            this._dtmf = null;
          }
        }
        return this._dtmf;
      }
    });
  }
}

function shimGetStats(window) {
  if (!window.RTCPeerConnection) {
    return;
  }

  const origGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function getStats() {
    const [selector, onSucc, onErr] = arguments;

    // If selector is a function then we are in the old style stats so just
    // pass back the original getStats format to avoid breaking old users.
    if (arguments.length > 0 && typeof selector === 'function') {
      return origGetStats.apply(this, arguments);
    }

    // When spec-style getStats is supported, return those when called with
    // either no arguments or the selector argument is null.
    if (origGetStats.length === 0 && (arguments.length === 0 ||
        typeof selector !== 'function')) {
      return origGetStats.apply(this, []);
    }

    const fixChromeStats_ = function(response) {
      const standardReport = {};
      const reports = response.result();
      reports.forEach(report => {
        const standardStats = {
          id: report.id,
          timestamp: report.timestamp,
          type: {
            localcandidate: 'local-candidate',
            remotecandidate: 'remote-candidate'
          }[report.type] || report.type
        };
        report.names().forEach(name => {
          standardStats[name] = report.stat(name);
        });
        standardReport[standardStats.id] = standardStats;
      });

      return standardReport;
    };

    // shim getStats with maplike support
    const makeMapStats = function(stats) {
      return new Map(Object.keys(stats).map(key => [key, stats[key]]));
    };

    if (arguments.length >= 2) {
      const successCallbackWrapper_ = function(response) {
        onSucc(makeMapStats(fixChromeStats_(response)));
      };

      return origGetStats.apply(this, [successCallbackWrapper_,
        selector]);
    }

    // promise-support
    return new Promise((resolve, reject) => {
      origGetStats.apply(this, [
        function(response) {
          resolve(makeMapStats(fixChromeStats_(response)));
        }, reject]);
    }).then(onSucc, onErr);
  };
}

function shimSenderReceiverGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender && window.RTCRtpReceiver)) {
    return;
  }

  // shim sender stats.
  if (!('getStats' in window.RTCRtpSender.prototype)) {
    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
    if (origGetSenders) {
      window.RTCPeerConnection.prototype.getSenders = function getSenders() {
        const senders = origGetSenders.apply(this, []);
        senders.forEach(sender => sender._pc = this);
        return senders;
      };
    }

    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
    if (origAddTrack) {
      window.RTCPeerConnection.prototype.addTrack = function addTrack() {
        const sender = origAddTrack.apply(this, arguments);
        sender._pc = this;
        return sender;
      };
    }
    window.RTCRtpSender.prototype.getStats = function getStats() {
      const sender = this;
      return this._pc.getStats().then(result =>
        /* Note: this will include stats of all senders that
         *   send a track with the same id as sender.track as
         *   it is not possible to identify the RTCRtpSender.
         */
        filterStats(result, sender.track, true));
    };
  }

  // shim receiver stats.
  if (!('getStats' in window.RTCRtpReceiver.prototype)) {
    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;
    if (origGetReceivers) {
      window.RTCPeerConnection.prototype.getReceivers =
        function getReceivers() {
          const receivers = origGetReceivers.apply(this, []);
          receivers.forEach(receiver => receiver._pc = this);
          return receivers;
        };
    }
    wrapPeerConnectionEvent(window, 'track', e => {
      e.receiver._pc = e.srcElement;
      return e;
    });
    window.RTCRtpReceiver.prototype.getStats = function getStats() {
      const receiver = this;
      return this._pc.getStats().then(result =>
        filterStats(result, receiver.track, false));
    };
  }

  if (!('getStats' in window.RTCRtpSender.prototype &&
      'getStats' in window.RTCRtpReceiver.prototype)) {
    return;
  }

  // shim RTCPeerConnection.getStats(track).
  const origGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function getStats() {
    if (arguments.length > 0 &&
        arguments[0] instanceof window.MediaStreamTrack) {
      const track = arguments[0];
      let sender;
      let receiver;
      let err;
      this.getSenders().forEach(s => {
        if (s.track === track) {
          if (sender) {
            err = true;
          } else {
            sender = s;
          }
        }
      });
      this.getReceivers().forEach(r => {
        if (r.track === track) {
          if (receiver) {
            err = true;
          } else {
            receiver = r;
          }
        }
        return r.track === track;
      });
      if (err || (sender && receiver)) {
        return Promise.reject(new DOMException(
          'There are more than one sender or receiver for the track.',
          'InvalidAccessError'));
      } else if (sender) {
        return sender.getStats();
      } else if (receiver) {
        return receiver.getStats();
      }
      return Promise.reject(new DOMException(
        'There is no sender or receiver for the track.',
        'InvalidAccessError'));
    }
    return origGetStats.apply(this, arguments);
  };
}

function shimAddTrackRemoveTrackWithNative(window) {
  // shim addTrack/removeTrack with native variants in order to make
  // the interactions with legacy getLocalStreams behave as in other browsers.
  // Keeps a mapping stream.id => [stream, rtpsenders...]
  window.RTCPeerConnection.prototype.getLocalStreams =
    function getLocalStreams() {
      this._shimmedLocalStreams = this._shimmedLocalStreams || {};
      return Object.keys(this._shimmedLocalStreams)
        .map(streamId => this._shimmedLocalStreams[streamId][0]);
    };

  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
  window.RTCPeerConnection.prototype.addTrack =
    function addTrack(track, stream) {
      if (!stream) {
        return origAddTrack.apply(this, arguments);
      }
      this._shimmedLocalStreams = this._shimmedLocalStreams || {};

      const sender = origAddTrack.apply(this, arguments);
      if (!this._shimmedLocalStreams[stream.id]) {
        this._shimmedLocalStreams[stream.id] = [stream, sender];
      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {
        this._shimmedLocalStreams[stream.id].push(sender);
      }
      return sender;
    };

  const origAddStream = window.RTCPeerConnection.prototype.addStream;
  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};

    stream.getTracks().forEach(track => {
      const alreadyExists = this.getSenders().find(s => s.track === track);
      if (alreadyExists) {
        throw new DOMException('Track already exists.',
          'InvalidAccessError');
      }
    });
    const existingSenders = this.getSenders();
    origAddStream.apply(this, arguments);
    const newSenders = this.getSenders()
      .filter(newSender => existingSenders.indexOf(newSender) === -1);
    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);
  };

  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
  window.RTCPeerConnection.prototype.removeStream =
    function removeStream(stream) {
      this._shimmedLocalStreams = this._shimmedLocalStreams || {};
      delete this._shimmedLocalStreams[stream.id];
      return origRemoveStream.apply(this, arguments);
    };

  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;
  window.RTCPeerConnection.prototype.removeTrack =
    function removeTrack(sender) {
      this._shimmedLocalStreams = this._shimmedLocalStreams || {};
      if (sender) {
        Object.keys(this._shimmedLocalStreams).forEach(streamId => {
          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);
          if (idx !== -1) {
            this._shimmedLocalStreams[streamId].splice(idx, 1);
          }
          if (this._shimmedLocalStreams[streamId].length === 1) {
            delete this._shimmedLocalStreams[streamId];
          }
        });
      }
      return origRemoveTrack.apply(this, arguments);
    };
}

function shimAddTrackRemoveTrack(window, browserDetails) {
  if (!window.RTCPeerConnection) {
    return;
  }
  // shim addTrack and removeTrack.
  if (window.RTCPeerConnection.prototype.addTrack &&
      browserDetails.version >= 65) {
    return shimAddTrackRemoveTrackWithNative(window);
  }

  // also shim pc.getLocalStreams when addTrack is shimmed
  // to return the original streams.
  const origGetLocalStreams = window.RTCPeerConnection.prototype
    .getLocalStreams;
  window.RTCPeerConnection.prototype.getLocalStreams =
    function getLocalStreams() {
      const nativeStreams = origGetLocalStreams.apply(this);
      this._reverseStreams = this._reverseStreams || {};
      return nativeStreams.map(stream => this._reverseStreams[stream.id]);
    };

  const origAddStream = window.RTCPeerConnection.prototype.addStream;
  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {
    this._streams = this._streams || {};
    this._reverseStreams = this._reverseStreams || {};

    stream.getTracks().forEach(track => {
      const alreadyExists = this.getSenders().find(s => s.track === track);
      if (alreadyExists) {
        throw new DOMException('Track already exists.',
          'InvalidAccessError');
      }
    });
    // Add identity mapping for consistency with addTrack.
    // Unless this is being used with a stream from addTrack.
    if (!this._reverseStreams[stream.id]) {
      const newStream = new window.MediaStream(stream.getTracks());
      this._streams[stream.id] = newStream;
      this._reverseStreams[newStream.id] = stream;
      stream = newStream;
    }
    origAddStream.apply(this, [stream]);
  };

  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
  window.RTCPeerConnection.prototype.removeStream =
    function removeStream(stream) {
      this._streams = this._streams || {};
      this._reverseStreams = this._reverseStreams || {};

      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);
      delete this._reverseStreams[(this._streams[stream.id] ?
        this._streams[stream.id].id : stream.id)];
      delete this._streams[stream.id];
    };

  window.RTCPeerConnection.prototype.addTrack =
    function addTrack(track, stream) {
      if (this.signalingState === 'closed') {
        throw new DOMException(
          'The RTCPeerConnection\'s signalingState is \'closed\'.',
          'InvalidStateError');
      }
      const streams = [].slice.call(arguments, 1);
      if (streams.length !== 1 ||
          !streams[0].getTracks().find(t => t === track)) {
        // this is not fully correct but all we can manage without
        // [[associated MediaStreams]] internal slot.
        throw new DOMException(
          'The adapter.js addTrack polyfill only supports a single ' +
          ' stream which is associated with the specified track.',
          'NotSupportedError');
      }

      const alreadyExists = this.getSenders().find(s => s.track === track);
      if (alreadyExists) {
        throw new DOMException('Track already exists.',
          'InvalidAccessError');
      }

      this._streams = this._streams || {};
      this._reverseStreams = this._reverseStreams || {};
      const oldStream = this._streams[stream.id];
      if (oldStream) {
        // this is using odd Chrome behaviour, use with caution:
        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815
        // Note: we rely on the high-level addTrack/dtmf shim to
        // create the sender with a dtmf sender.
        oldStream.addTrack(track);

        // Trigger ONN async.
        Promise.resolve().then(() => {
          this.dispatchEvent(new Event('negotiationneeded'));
        });
      } else {
        const newStream = new window.MediaStream([track]);
        this._streams[stream.id] = newStream;
        this._reverseStreams[newStream.id] = stream;
        this.addStream(newStream);
      }
      return this.getSenders().find(s => s.track === track);
    };

  // replace the internal stream id with the external one and
  // vice versa.
  function replaceInternalStreamId(pc, description) {
    let sdp = description.sdp;
    Object.keys(pc._reverseStreams || []).forEach(internalId => {
      const externalStream = pc._reverseStreams[internalId];
      const internalStream = pc._streams[externalStream.id];
      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),
        externalStream.id);
    });
    return new RTCSessionDescription({
      type: description.type,
      sdp
    });
  }
  function replaceExternalStreamId(pc, description) {
    let sdp = description.sdp;
    Object.keys(pc._reverseStreams || []).forEach(internalId => {
      const externalStream = pc._reverseStreams[internalId];
      const internalStream = pc._streams[externalStream.id];
      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),
        internalStream.id);
    });
    return new RTCSessionDescription({
      type: description.type,
      sdp
    });
  }
  ['createOffer', 'createAnswer'].forEach(function(method) {
    const nativeMethod = window.RTCPeerConnection.prototype[method];
    const methodObj = {[method]() {
      const args = arguments;
      const isLegacyCall = arguments.length &&
          typeof arguments[0] === 'function';
      if (isLegacyCall) {
        return nativeMethod.apply(this, [
          (description) => {
            const desc = replaceInternalStreamId(this, description);
            args[0].apply(null, [desc]);
          },
          (err) => {
            if (args[1]) {
              args[1].apply(null, err);
            }
          }, arguments[2]
        ]);
      }
      return nativeMethod.apply(this, arguments)
        .then(description => replaceInternalStreamId(this, description));
    }};
    window.RTCPeerConnection.prototype[method] = methodObj[method];
  });

  const origSetLocalDescription =
      window.RTCPeerConnection.prototype.setLocalDescription;
  window.RTCPeerConnection.prototype.setLocalDescription =
    function setLocalDescription() {
      if (!arguments.length || !arguments[0].type) {
        return origSetLocalDescription.apply(this, arguments);
      }
      arguments[0] = replaceExternalStreamId(this, arguments[0]);
      return origSetLocalDescription.apply(this, arguments);
    };

  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier

  const origLocalDescription = Object.getOwnPropertyDescriptor(
    window.RTCPeerConnection.prototype, 'localDescription');
  Object.defineProperty(window.RTCPeerConnection.prototype,
    'localDescription', {
      get() {
        const description = origLocalDescription.get.apply(this);
        if (description.type === '') {
          return description;
        }
        return replaceInternalStreamId(this, description);
      }
    });

  window.RTCPeerConnection.prototype.removeTrack =
    function removeTrack(sender) {
      if (this.signalingState === 'closed') {
        throw new DOMException(
          'The RTCPeerConnection\'s signalingState is \'closed\'.',
          'InvalidStateError');
      }
      // We can not yet check for sender instanceof RTCRtpSender
      // since we shim RTPSender. So we check if sender._pc is set.
      if (!sender._pc) {
        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +
            'does not implement interface RTCRtpSender.', 'TypeError');
      }
      const isLocal = sender._pc === this;
      if (!isLocal) {
        throw new DOMException('Sender was not created by this connection.',
          'InvalidAccessError');
      }

      // Search for the native stream the senders track belongs to.
      this._streams = this._streams || {};
      let stream;
      Object.keys(this._streams).forEach(streamid => {
        const hasTrack = this._streams[streamid].getTracks()
          .find(track => sender.track === track);
        if (hasTrack) {
          stream = this._streams[streamid];
        }
      });

      if (stream) {
        if (stream.getTracks().length === 1) {
          // if this is the last track of the stream, remove the stream. This
          // takes care of any shimmed _senders.
          this.removeStream(this._reverseStreams[stream.id]);
        } else {
          // relying on the same odd chrome behaviour as above.
          stream.removeTrack(sender.track);
        }
        this.dispatchEvent(new Event('negotiationneeded'));
      }
    };
}

function shimPeerConnection$1(window, browserDetails) {
  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {
    // very basic support for old versions.
    window.RTCPeerConnection = window.webkitRTCPeerConnection;
  }
  if (!window.RTCPeerConnection) {
    return;
  }

  // shim implicit creation of RTCSessionDescription/RTCIceCandidate
  if (browserDetails.version < 53) {
    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']
      .forEach(function(method) {
        const nativeMethod = window.RTCPeerConnection.prototype[method];
        const methodObj = {[method]() {
          arguments[0] = new ((method === 'addIceCandidate') ?
            window.RTCIceCandidate :
            window.RTCSessionDescription)(arguments[0]);
          return nativeMethod.apply(this, arguments);
        }};
        window.RTCPeerConnection.prototype[method] = methodObj[method];
      });
  }
}

// Attempt to fix ONN in plan-b mode.
function fixNegotiationNeeded(window, browserDetails) {
  wrapPeerConnectionEvent(window, 'negotiationneeded', e => {
    const pc = e.target;
    if (browserDetails.version < 72 || (pc.getConfiguration &&
        pc.getConfiguration().sdpSemantics === 'plan-b')) {
      if (pc.signalingState !== 'stable') {
        return;
      }
    }
    return e;
  });
}

var chromeShim = /*#__PURE__*/Object.freeze({
    __proto__: null,
    shimMediaStream: shimMediaStream,
    shimOnTrack: shimOnTrack$1,
    shimGetSendersWithDtmf: shimGetSendersWithDtmf,
    shimGetStats: shimGetStats,
    shimSenderReceiverGetStats: shimSenderReceiverGetStats,
    shimAddTrackRemoveTrackWithNative: shimAddTrackRemoveTrackWithNative,
    shimAddTrackRemoveTrack: shimAddTrackRemoveTrack,
    shimPeerConnection: shimPeerConnection$1,
    fixNegotiationNeeded: fixNegotiationNeeded,
    shimGetUserMedia: shimGetUserMedia$2,
    shimGetDisplayMedia: shimGetDisplayMedia$1
});

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimGetUserMedia$1(window, browserDetails) {
  const navigator = window && window.navigator;
  const MediaStreamTrack = window && window.MediaStreamTrack;

  navigator.getUserMedia = function(constraints, onSuccess, onError) {
    // Replace Firefox 44+'s deprecation warning with unprefixed version.
    deprecated('navigator.getUserMedia',
      'navigator.mediaDevices.getUserMedia');
    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);
  };

  if (!(browserDetails.version > 55 &&
      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {
    const remap = function(obj, a, b) {
      if (a in obj && !(b in obj)) {
        obj[b] = obj[a];
        delete obj[a];
      }
    };

    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.
      bind(navigator.mediaDevices);
    navigator.mediaDevices.getUserMedia = function(c) {
      if (typeof c === 'object' && typeof c.audio === 'object') {
        c = JSON.parse(JSON.stringify(c));
        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');
        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');
      }
      return nativeGetUserMedia(c);
    };

    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {
      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;
      MediaStreamTrack.prototype.getSettings = function() {
        const obj = nativeGetSettings.apply(this, arguments);
        remap(obj, 'mozAutoGainControl', 'autoGainControl');
        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');
        return obj;
      };
    }

    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {
      const nativeApplyConstraints =
        MediaStreamTrack.prototype.applyConstraints;
      MediaStreamTrack.prototype.applyConstraints = function(c) {
        if (this.kind === 'audio' && typeof c === 'object') {
          c = JSON.parse(JSON.stringify(c));
          remap(c, 'autoGainControl', 'mozAutoGainControl');
          remap(c, 'noiseSuppression', 'mozNoiseSuppression');
        }
        return nativeApplyConstraints.apply(this, [c]);
      };
    }
  }
}

/*
 *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimGetDisplayMedia(window, preferredMediaSource) {
  if (window.navigator.mediaDevices &&
    'getDisplayMedia' in window.navigator.mediaDevices) {
    return;
  }
  if (!(window.navigator.mediaDevices)) {
    return;
  }
  window.navigator.mediaDevices.getDisplayMedia =
    function getDisplayMedia(constraints) {
      if (!(constraints && constraints.video)) {
        const err = new DOMException('getDisplayMedia without video ' +
            'constraints is undefined');
        err.name = 'NotFoundError';
        // from https://heycam.github.io/webidl/#idl-DOMException-error-names
        err.code = 8;
        return Promise.reject(err);
      }
      if (constraints.video === true) {
        constraints.video = {mediaSource: preferredMediaSource};
      } else {
        constraints.video.mediaSource = preferredMediaSource;
      }
      return window.navigator.mediaDevices.getUserMedia(constraints);
    };
}

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimOnTrack(window) {
  if (typeof window === 'object' && window.RTCTrackEvent &&
      ('receiver' in window.RTCTrackEvent.prototype) &&
      !('transceiver' in window.RTCTrackEvent.prototype)) {
    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {
      get() {
        return {receiver: this.receiver};
      }
    });
  }
}

function shimPeerConnection(window, browserDetails) {
  if (typeof window !== 'object' ||
      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {
    return; // probably media.peerconnection.enabled=false in about:config
  }
  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {
    // very basic support for old versions.
    window.RTCPeerConnection = window.mozRTCPeerConnection;
  }

  if (browserDetails.version < 53) {
    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.
    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']
      .forEach(function(method) {
        const nativeMethod = window.RTCPeerConnection.prototype[method];
        const methodObj = {[method]() {
          arguments[0] = new ((method === 'addIceCandidate') ?
            window.RTCIceCandidate :
            window.RTCSessionDescription)(arguments[0]);
          return nativeMethod.apply(this, arguments);
        }};
        window.RTCPeerConnection.prototype[method] = methodObj[method];
      });
  }

  const modernStatsTypes = {
    inboundrtp: 'inbound-rtp',
    outboundrtp: 'outbound-rtp',
    candidatepair: 'candidate-pair',
    localcandidate: 'local-candidate',
    remotecandidate: 'remote-candidate'
  };

  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function getStats() {
    const [selector, onSucc, onErr] = arguments;
    return nativeGetStats.apply(this, [selector || null])
      .then(stats => {
        if (browserDetails.version < 53 && !onSucc) {
          // Shim only promise getStats with spec-hyphens in type names
          // Leave callback version alone; misc old uses of forEach before Map
          try {
            stats.forEach(stat => {
              stat.type = modernStatsTypes[stat.type] || stat.type;
            });
          } catch (e) {
            if (e.name !== 'TypeError') {
              throw e;
            }
            // Avoid TypeError: "type" is read-only, in old versions. 34-43ish
            stats.forEach((stat, i) => {
              stats.set(i, Object.assign({}, stat, {
                type: modernStatsTypes[stat.type] || stat.type
              }));
            });
          }
        }
        return stats;
      })
      .then(onSucc, onErr);
  };
}

function shimSenderGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender)) {
    return;
  }
  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {
    return;
  }
  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
  if (origGetSenders) {
    window.RTCPeerConnection.prototype.getSenders = function getSenders() {
      const senders = origGetSenders.apply(this, []);
      senders.forEach(sender => sender._pc = this);
      return senders;
    };
  }

  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
  if (origAddTrack) {
    window.RTCPeerConnection.prototype.addTrack = function addTrack() {
      const sender = origAddTrack.apply(this, arguments);
      sender._pc = this;
      return sender;
    };
  }
  window.RTCRtpSender.prototype.getStats = function getStats() {
    return this.track ? this._pc.getStats(this.track) :
      Promise.resolve(new Map());
  };
}

function shimReceiverGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender)) {
    return;
  }
  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {
    return;
  }
  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;
  if (origGetReceivers) {
    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {
      const receivers = origGetReceivers.apply(this, []);
      receivers.forEach(receiver => receiver._pc = this);
      return receivers;
    };
  }
  wrapPeerConnectionEvent(window, 'track', e => {
    e.receiver._pc = e.srcElement;
    return e;
  });
  window.RTCRtpReceiver.prototype.getStats = function getStats() {
    return this._pc.getStats(this.track);
  };
}

function shimRemoveStream(window) {
  if (!window.RTCPeerConnection ||
      'removeStream' in window.RTCPeerConnection.prototype) {
    return;
  }
  window.RTCPeerConnection.prototype.removeStream =
    function removeStream(stream) {
      deprecated('removeStream', 'removeTrack');
      this.getSenders().forEach(sender => {
        if (sender.track && stream.getTracks().includes(sender.track)) {
          this.removeTrack(sender);
        }
      });
    };
}

function shimRTCDataChannel(window) {
  // rename DataChannel to RTCDataChannel (native fix in FF60):
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851
  if (window.DataChannel && !window.RTCDataChannel) {
    window.RTCDataChannel = window.DataChannel;
  }
}

function shimAddTransceiver(window) {
  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647
  // Firefox ignores the init sendEncodings options passed to addTransceiver
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918
  if (!(typeof window === 'object' && window.RTCPeerConnection)) {
    return;
  }
  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;
  if (origAddTransceiver) {
    window.RTCPeerConnection.prototype.addTransceiver =
      function addTransceiver() {
        this.setParametersPromises = [];
        // WebIDL input coercion and validation
        let sendEncodings = arguments[1] && arguments[1].sendEncodings;
        if (sendEncodings === undefined) {
          sendEncodings = [];
        }
        sendEncodings = [...sendEncodings];
        const shouldPerformCheck = sendEncodings.length > 0;
        if (shouldPerformCheck) {
          // If sendEncodings params are provided, validate grammar
          sendEncodings.forEach((encodingParam) => {
            if ('rid' in encodingParam) {
              const ridRegex = /^[a-z0-9]{0,16}$/i;
              if (!ridRegex.test(encodingParam.rid)) {
                throw new TypeError('Invalid RID value provided.');
              }
            }
            if ('scaleResolutionDownBy' in encodingParam) {
              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {
                throw new RangeError('scale_resolution_down_by must be >= 1.0');
              }
            }
            if ('maxFramerate' in encodingParam) {
              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {
                throw new RangeError('max_framerate must be >= 0.0');
              }
            }
          });
        }
        const transceiver = origAddTransceiver.apply(this, arguments);
        if (shouldPerformCheck) {
          // Check if the init options were applied. If not we do this in an
          // asynchronous way and save the promise reference in a global object.
          // This is an ugly hack, but at the same time is way more robust than
          // checking the sender parameters before and after the createOffer
          // Also note that after the createoffer we are not 100% sure that
          // the params were asynchronously applied so we might miss the
          // opportunity to recreate offer.
          const {sender} = transceiver;
          const params = sender.getParameters();
          if (!('encodings' in params) ||
              // Avoid being fooled by patched getParameters() below.
              (params.encodings.length === 1 &&
               Object.keys(params.encodings[0]).length === 0)) {
            params.encodings = sendEncodings;
            sender.sendEncodings = sendEncodings;
            this.setParametersPromises.push(sender.setParameters(params)
              .then(() => {
                delete sender.sendEncodings;
              }).catch(() => {
                delete sender.sendEncodings;
              })
            );
          }
        }
        return transceiver;
      };
  }
}

function shimGetParameters(window) {
  if (!(typeof window === 'object' && window.RTCRtpSender)) {
    return;
  }
  const origGetParameters = window.RTCRtpSender.prototype.getParameters;
  if (origGetParameters) {
    window.RTCRtpSender.prototype.getParameters =
      function getParameters() {
        const params = origGetParameters.apply(this, arguments);
        if (!('encodings' in params)) {
          params.encodings = [].concat(this.sendEncodings || [{}]);
        }
        return params;
      };
  }
}

function shimCreateOffer(window) {
  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647
  // Firefox ignores the init sendEncodings options passed to addTransceiver
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918
  if (!(typeof window === 'object' && window.RTCPeerConnection)) {
    return;
  }
  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;
  window.RTCPeerConnection.prototype.createOffer = function createOffer() {
    if (this.setParametersPromises && this.setParametersPromises.length) {
      return Promise.all(this.setParametersPromises)
        .then(() => {
          return origCreateOffer.apply(this, arguments);
        })
        .finally(() => {
          this.setParametersPromises = [];
        });
    }
    return origCreateOffer.apply(this, arguments);
  };
}

function shimCreateAnswer(window) {
  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647
  // Firefox ignores the init sendEncodings options passed to addTransceiver
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918
  if (!(typeof window === 'object' && window.RTCPeerConnection)) {
    return;
  }
  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;
  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {
    if (this.setParametersPromises && this.setParametersPromises.length) {
      return Promise.all(this.setParametersPromises)
        .then(() => {
          return origCreateAnswer.apply(this, arguments);
        })
        .finally(() => {
          this.setParametersPromises = [];
        });
    }
    return origCreateAnswer.apply(this, arguments);
  };
}

var firefoxShim = /*#__PURE__*/Object.freeze({
    __proto__: null,
    shimOnTrack: shimOnTrack,
    shimPeerConnection: shimPeerConnection,
    shimSenderGetStats: shimSenderGetStats,
    shimReceiverGetStats: shimReceiverGetStats,
    shimRemoveStream: shimRemoveStream,
    shimRTCDataChannel: shimRTCDataChannel,
    shimAddTransceiver: shimAddTransceiver,
    shimGetParameters: shimGetParameters,
    shimCreateOffer: shimCreateOffer,
    shimCreateAnswer: shimCreateAnswer,
    shimGetUserMedia: shimGetUserMedia$1,
    shimGetDisplayMedia: shimGetDisplayMedia
});

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimLocalStreamsAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.getLocalStreams =
      function getLocalStreams() {
        if (!this._localStreams) {
          this._localStreams = [];
        }
        return this._localStreams;
      };
  }
  if (!('addStream' in window.RTCPeerConnection.prototype)) {
    const _addTrack = window.RTCPeerConnection.prototype.addTrack;
    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {
      if (!this._localStreams) {
        this._localStreams = [];
      }
      if (!this._localStreams.includes(stream)) {
        this._localStreams.push(stream);
      }
      // Try to emulate Chrome's behaviour of adding in audio-video order.
      // Safari orders by track id.
      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,
        stream));
      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,
        stream));
    };

    window.RTCPeerConnection.prototype.addTrack =
      function addTrack(track, ...streams) {
        if (streams) {
          streams.forEach((stream) => {
            if (!this._localStreams) {
              this._localStreams = [stream];
            } else if (!this._localStreams.includes(stream)) {
              this._localStreams.push(stream);
            }
          });
        }
        return _addTrack.apply(this, arguments);
      };
  }
  if (!('removeStream' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.removeStream =
      function removeStream(stream) {
        if (!this._localStreams) {
          this._localStreams = [];
        }
        const index = this._localStreams.indexOf(stream);
        if (index === -1) {
          return;
        }
        this._localStreams.splice(index, 1);
        const tracks = stream.getTracks();
        this.getSenders().forEach(sender => {
          if (tracks.includes(sender.track)) {
            this.removeTrack(sender);
          }
        });
      };
  }
}

function shimRemoteStreamsAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.getRemoteStreams =
      function getRemoteStreams() {
        return this._remoteStreams ? this._remoteStreams : [];
      };
  }
  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {
      get() {
        return this._onaddstream;
      },
      set(f) {
        if (this._onaddstream) {
          this.removeEventListener('addstream', this._onaddstream);
          this.removeEventListener('track', this._onaddstreampoly);
        }
        this.addEventListener('addstream', this._onaddstream = f);
        this.addEventListener('track', this._onaddstreampoly = (e) => {
          e.streams.forEach(stream => {
            if (!this._remoteStreams) {
              this._remoteStreams = [];
            }
            if (this._remoteStreams.includes(stream)) {
              return;
            }
            this._remoteStreams.push(stream);
            const event = new Event('addstream');
            event.stream = stream;
            this.dispatchEvent(event);
          });
        });
      }
    });
    const origSetRemoteDescription =
      window.RTCPeerConnection.prototype.setRemoteDescription;
    window.RTCPeerConnection.prototype.setRemoteDescription =
      function setRemoteDescription() {
        const pc = this;
        if (!this._onaddstreampoly) {
          this.addEventListener('track', this._onaddstreampoly = function(e) {
            e.streams.forEach(stream => {
              if (!pc._remoteStreams) {
                pc._remoteStreams = [];
              }
              if (pc._remoteStreams.indexOf(stream) >= 0) {
                return;
              }
              pc._remoteStreams.push(stream);
              const event = new Event('addstream');
              event.stream = stream;
              pc.dispatchEvent(event);
            });
          });
        }
        return origSetRemoteDescription.apply(pc, arguments);
      };
  }
}

function shimCallbacksAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  const prototype = window.RTCPeerConnection.prototype;
  const origCreateOffer = prototype.createOffer;
  const origCreateAnswer = prototype.createAnswer;
  const setLocalDescription = prototype.setLocalDescription;
  const setRemoteDescription = prototype.setRemoteDescription;
  const addIceCandidate = prototype.addIceCandidate;

  prototype.createOffer =
    function createOffer(successCallback, failureCallback) {
      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];
      const promise = origCreateOffer.apply(this, [options]);
      if (!failureCallback) {
        return promise;
      }
      promise.then(successCallback, failureCallback);
      return Promise.resolve();
    };

  prototype.createAnswer =
    function createAnswer(successCallback, failureCallback) {
      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];
      const promise = origCreateAnswer.apply(this, [options]);
      if (!failureCallback) {
        return promise;
      }
      promise.then(successCallback, failureCallback);
      return Promise.resolve();
    };

  let withCallback = function(description, successCallback, failureCallback) {
    const promise = setLocalDescription.apply(this, [description]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.setLocalDescription = withCallback;

  withCallback = function(description, successCallback, failureCallback) {
    const promise = setRemoteDescription.apply(this, [description]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.setRemoteDescription = withCallback;

  withCallback = function(candidate, successCallback, failureCallback) {
    const promise = addIceCandidate.apply(this, [candidate]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.addIceCandidate = withCallback;
}

function shimGetUserMedia(window) {
  const navigator = window && window.navigator;

  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
    // shim not needed in Safari 12.1
    const mediaDevices = navigator.mediaDevices;
    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);
    navigator.mediaDevices.getUserMedia = (constraints) => {
      return _getUserMedia(shimConstraints(constraints));
    };
  }

  if (!navigator.getUserMedia && navigator.mediaDevices &&
    navigator.mediaDevices.getUserMedia) {
    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {
      navigator.mediaDevices.getUserMedia(constraints)
        .then(cb, errcb);
    }.bind(navigator);
  }
}

function shimConstraints(constraints) {
  if (constraints && constraints.video !== undefined) {
    return Object.assign({},
      constraints,
      {video: compactObject(constraints.video)}
    );
  }

  return constraints;
}

function shimRTCIceServerUrls(window) {
  if (!window.RTCPeerConnection) {
    return;
  }
  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls
  const OrigPeerConnection = window.RTCPeerConnection;
  window.RTCPeerConnection =
    function RTCPeerConnection(pcConfig, pcConstraints) {
      if (pcConfig && pcConfig.iceServers) {
        const newIceServers = [];
        for (let i = 0; i < pcConfig.iceServers.length; i++) {
          let server = pcConfig.iceServers[i];
          if (server.urls === undefined && server.url) {
            deprecated('RTCIceServer.url', 'RTCIceServer.urls');
            server = JSON.parse(JSON.stringify(server));
            server.urls = server.url;
            delete server.url;
            newIceServers.push(server);
          } else {
            newIceServers.push(pcConfig.iceServers[i]);
          }
        }
        pcConfig.iceServers = newIceServers;
      }
      return new OrigPeerConnection(pcConfig, pcConstraints);
    };
  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;
  // wrap static methods. Currently just generateCertificate.
  if ('generateCertificate' in OrigPeerConnection) {
    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {
      get() {
        return OrigPeerConnection.generateCertificate;
      }
    });
  }
}

function shimTrackEventTransceiver(window) {
  // Add event.transceiver member over deprecated event.receiver
  if (typeof window === 'object' && window.RTCTrackEvent &&
      'receiver' in window.RTCTrackEvent.prototype &&
      !('transceiver' in window.RTCTrackEvent.prototype)) {
    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {
      get() {
        return {receiver: this.receiver};
      }
    });
  }
}

function shimCreateOfferLegacy(window) {
  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;
  window.RTCPeerConnection.prototype.createOffer =
    function createOffer(offerOptions) {
      if (offerOptions) {
        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {
          // support bit values
          offerOptions.offerToReceiveAudio =
            !!offerOptions.offerToReceiveAudio;
        }
        const audioTransceiver = this.getTransceivers().find(transceiver =>
          transceiver.receiver.track.kind === 'audio');
        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {
          if (audioTransceiver.direction === 'sendrecv') {
            if (audioTransceiver.setDirection) {
              audioTransceiver.setDirection('sendonly');
            } else {
              audioTransceiver.direction = 'sendonly';
            }
          } else if (audioTransceiver.direction === 'recvonly') {
            if (audioTransceiver.setDirection) {
              audioTransceiver.setDirection('inactive');
            } else {
              audioTransceiver.direction = 'inactive';
            }
          }
        } else if (offerOptions.offerToReceiveAudio === true &&
            !audioTransceiver) {
          this.addTransceiver('audio', {direction: 'recvonly'});
        }

        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {
          // support bit values
          offerOptions.offerToReceiveVideo =
            !!offerOptions.offerToReceiveVideo;
        }
        const videoTransceiver = this.getTransceivers().find(transceiver =>
          transceiver.receiver.track.kind === 'video');
        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {
          if (videoTransceiver.direction === 'sendrecv') {
            if (videoTransceiver.setDirection) {
              videoTransceiver.setDirection('sendonly');
            } else {
              videoTransceiver.direction = 'sendonly';
            }
          } else if (videoTransceiver.direction === 'recvonly') {
            if (videoTransceiver.setDirection) {
              videoTransceiver.setDirection('inactive');
            } else {
              videoTransceiver.direction = 'inactive';
            }
          }
        } else if (offerOptions.offerToReceiveVideo === true &&
            !videoTransceiver) {
          this.addTransceiver('video', {direction: 'recvonly'});
        }
      }
      return origCreateOffer.apply(this, arguments);
    };
}

function shimAudioContext(window) {
  if (typeof window !== 'object' || window.AudioContext) {
    return;
  }
  window.AudioContext = window.webkitAudioContext;
}

var safariShim = /*#__PURE__*/Object.freeze({
    __proto__: null,
    shimLocalStreamsAPI: shimLocalStreamsAPI,
    shimRemoteStreamsAPI: shimRemoteStreamsAPI,
    shimCallbacksAPI: shimCallbacksAPI,
    shimGetUserMedia: shimGetUserMedia,
    shimConstraints: shimConstraints,
    shimRTCIceServerUrls: shimRTCIceServerUrls,
    shimTrackEventTransceiver: shimTrackEventTransceiver,
    shimCreateOfferLegacy: shimCreateOfferLegacy,
    shimAudioContext: shimAudioContext
});

var sdpExports = {};
var sdp$1 = {
  get exports(){ return sdpExports; },
  set exports(v){ sdpExports = v; },
};

/* eslint-env node */

(function (module) {

	// SDP helpers.
	const SDPUtils = {};

	// Generate an alphanumeric identifier for cname or mids.
	// TODO: use UUIDs instead? https://gist.github.com/jed/982883
	SDPUtils.generateIdentifier = function() {
	  return Math.random().toString(36).substring(2, 12);
	};

	// The RTCP CNAME used by all peerconnections from the same JS.
	SDPUtils.localCName = SDPUtils.generateIdentifier();

	// Splits SDP into lines, dealing with both CRLF and LF.
	SDPUtils.splitLines = function(blob) {
	  return blob.trim().split('\n').map(line => line.trim());
	};
	// Splits SDP into sessionpart and mediasections. Ensures CRLF.
	SDPUtils.splitSections = function(blob) {
	  const parts = blob.split('\nm=');
	  return parts.map((part, index) => (index > 0 ?
	    'm=' + part : part).trim() + '\r\n');
	};

	// Returns the session description.
	SDPUtils.getDescription = function(blob) {
	  const sections = SDPUtils.splitSections(blob);
	  return sections && sections[0];
	};

	// Returns the individual media sections.
	SDPUtils.getMediaSections = function(blob) {
	  const sections = SDPUtils.splitSections(blob);
	  sections.shift();
	  return sections;
	};

	// Returns lines that start with a certain prefix.
	SDPUtils.matchPrefix = function(blob, prefix) {
	  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);
	};

	// Parses an ICE candidate line. Sample input:
	// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8
	// rport 55996"
	// Input can be prefixed with a=.
	SDPUtils.parseCandidate = function(line) {
	  let parts;
	  // Parse both variants.
	  if (line.indexOf('a=candidate:') === 0) {
	    parts = line.substring(12).split(' ');
	  } else {
	    parts = line.substring(10).split(' ');
	  }

	  const candidate = {
	    foundation: parts[0],
	    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],
	    protocol: parts[2].toLowerCase(),
	    priority: parseInt(parts[3], 10),
	    ip: parts[4],
	    address: parts[4], // address is an alias for ip.
	    port: parseInt(parts[5], 10),
	    // skip parts[6] == 'typ'
	    type: parts[7],
	  };

	  for (let i = 8; i < parts.length; i += 2) {
	    switch (parts[i]) {
	      case 'raddr':
	        candidate.relatedAddress = parts[i + 1];
	        break;
	      case 'rport':
	        candidate.relatedPort = parseInt(parts[i + 1], 10);
	        break;
	      case 'tcptype':
	        candidate.tcpType = parts[i + 1];
	        break;
	      case 'ufrag':
	        candidate.ufrag = parts[i + 1]; // for backward compatibility.
	        candidate.usernameFragment = parts[i + 1];
	        break;
	      default: // extension handling, in particular ufrag. Don't overwrite.
	        if (candidate[parts[i]] === undefined) {
	          candidate[parts[i]] = parts[i + 1];
	        }
	        break;
	    }
	  }
	  return candidate;
	};

	// Translates a candidate object into SDP candidate attribute.
	// This does not include the a= prefix!
	SDPUtils.writeCandidate = function(candidate) {
	  const sdp = [];
	  sdp.push(candidate.foundation);

	  const component = candidate.component;
	  if (component === 'rtp') {
	    sdp.push(1);
	  } else if (component === 'rtcp') {
	    sdp.push(2);
	  } else {
	    sdp.push(component);
	  }
	  sdp.push(candidate.protocol.toUpperCase());
	  sdp.push(candidate.priority);
	  sdp.push(candidate.address || candidate.ip);
	  sdp.push(candidate.port);

	  const type = candidate.type;
	  sdp.push('typ');
	  sdp.push(type);
	  if (type !== 'host' && candidate.relatedAddress &&
	      candidate.relatedPort) {
	    sdp.push('raddr');
	    sdp.push(candidate.relatedAddress);
	    sdp.push('rport');
	    sdp.push(candidate.relatedPort);
	  }
	  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {
	    sdp.push('tcptype');
	    sdp.push(candidate.tcpType);
	  }
	  if (candidate.usernameFragment || candidate.ufrag) {
	    sdp.push('ufrag');
	    sdp.push(candidate.usernameFragment || candidate.ufrag);
	  }
	  return 'candidate:' + sdp.join(' ');
	};

	// Parses an ice-options line, returns an array of option tags.
	// Sample input:
	// a=ice-options:foo bar
	SDPUtils.parseIceOptions = function(line) {
	  return line.substring(14).split(' ');
	};

	// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:
	// a=rtpmap:111 opus/48000/2
	SDPUtils.parseRtpMap = function(line) {
	  let parts = line.substring(9).split(' ');
	  const parsed = {
	    payloadType: parseInt(parts.shift(), 10), // was: id
	  };

	  parts = parts[0].split('/');

	  parsed.name = parts[0];
	  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate
	  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;
	  // legacy alias, got renamed back to channels in ORTC.
	  parsed.numChannels = parsed.channels;
	  return parsed;
	};

	// Generates a rtpmap line from RTCRtpCodecCapability or
	// RTCRtpCodecParameters.
	SDPUtils.writeRtpMap = function(codec) {
	  let pt = codec.payloadType;
	  if (codec.preferredPayloadType !== undefined) {
	    pt = codec.preferredPayloadType;
	  }
	  const channels = codec.channels || codec.numChannels || 1;
	  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +
	      (channels !== 1 ? '/' + channels : '') + '\r\n';
	};

	// Parses a extmap line (headerextension from RFC 5285). Sample input:
	// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset
	// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset
	SDPUtils.parseExtmap = function(line) {
	  const parts = line.substring(9).split(' ');
	  return {
	    id: parseInt(parts[0], 10),
	    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',
	    uri: parts[1],
	    attributes: parts.slice(2).join(' '),
	  };
	};

	// Generates an extmap line from RTCRtpHeaderExtensionParameters or
	// RTCRtpHeaderExtension.
	SDPUtils.writeExtmap = function(headerExtension) {
	  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +
	      (headerExtension.direction && headerExtension.direction !== 'sendrecv'
	        ? '/' + headerExtension.direction
	        : '') +
	      ' ' + headerExtension.uri +
	      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +
	      '\r\n';
	};

	// Parses a fmtp line, returns dictionary. Sample input:
	// a=fmtp:96 vbr=on;cng=on
	// Also deals with vbr=on; cng=on
	SDPUtils.parseFmtp = function(line) {
	  const parsed = {};
	  let kv;
	  const parts = line.substring(line.indexOf(' ') + 1).split(';');
	  for (let j = 0; j < parts.length; j++) {
	    kv = parts[j].trim().split('=');
	    parsed[kv[0].trim()] = kv[1];
	  }
	  return parsed;
	};

	// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.
	SDPUtils.writeFmtp = function(codec) {
	  let line = '';
	  let pt = codec.payloadType;
	  if (codec.preferredPayloadType !== undefined) {
	    pt = codec.preferredPayloadType;
	  }
	  if (codec.parameters && Object.keys(codec.parameters).length) {
	    const params = [];
	    Object.keys(codec.parameters).forEach(param => {
	      if (codec.parameters[param] !== undefined) {
	        params.push(param + '=' + codec.parameters[param]);
	      } else {
	        params.push(param);
	      }
	    });
	    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\r\n';
	  }
	  return line;
	};

	// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:
	// a=rtcp-fb:98 nack rpsi
	SDPUtils.parseRtcpFb = function(line) {
	  const parts = line.substring(line.indexOf(' ') + 1).split(' ');
	  return {
	    type: parts.shift(),
	    parameter: parts.join(' '),
	  };
	};

	// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.
	SDPUtils.writeRtcpFb = function(codec) {
	  let lines = '';
	  let pt = codec.payloadType;
	  if (codec.preferredPayloadType !== undefined) {
	    pt = codec.preferredPayloadType;
	  }
	  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {
	    // FIXME: special handling for trr-int?
	    codec.rtcpFeedback.forEach(fb => {
	      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +
	      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +
	          '\r\n';
	    });
	  }
	  return lines;
	};

	// Parses a RFC 5576 ssrc media attribute. Sample input:
	// a=ssrc:3735928559 cname:something
	SDPUtils.parseSsrcMedia = function(line) {
	  const sp = line.indexOf(' ');
	  const parts = {
	    ssrc: parseInt(line.substring(7, sp), 10),
	  };
	  const colon = line.indexOf(':', sp);
	  if (colon > -1) {
	    parts.attribute = line.substring(sp + 1, colon);
	    parts.value = line.substring(colon + 1);
	  } else {
	    parts.attribute = line.substring(sp + 1);
	  }
	  return parts;
	};

	// Parse a ssrc-group line (see RFC 5576). Sample input:
	// a=ssrc-group:semantics 12 34
	SDPUtils.parseSsrcGroup = function(line) {
	  const parts = line.substring(13).split(' ');
	  return {
	    semantics: parts.shift(),
	    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),
	  };
	};

	// Extracts the MID (RFC 5888) from a media section.
	// Returns the MID or undefined if no mid line was found.
	SDPUtils.getMid = function(mediaSection) {
	  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];
	  if (mid) {
	    return mid.substring(6);
	  }
	};

	// Parses a fingerprint line for DTLS-SRTP.
	SDPUtils.parseFingerprint = function(line) {
	  const parts = line.substring(14).split(' ');
	  return {
	    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.
	    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.
	  };
	};

	// Extracts DTLS parameters from SDP media section or sessionpart.
	// FIXME: for consistency with other functions this should only
	//   get the fingerprint line as input. See also getIceParameters.
	SDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {
	  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,
	    'a=fingerprint:');
	  // Note: a=setup line is ignored since we use the 'auto' role in Edge.
	  return {
	    role: 'auto',
	    fingerprints: lines.map(SDPUtils.parseFingerprint),
	  };
	};

	// Serializes DTLS parameters to SDP.
	SDPUtils.writeDtlsParameters = function(params, setupType) {
	  let sdp = 'a=setup:' + setupType + '\r\n';
	  params.fingerprints.forEach(fp => {
	    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\r\n';
	  });
	  return sdp;
	};

	// Parses a=crypto lines into
	//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members
	SDPUtils.parseCryptoLine = function(line) {
	  const parts = line.substring(9).split(' ');
	  return {
	    tag: parseInt(parts[0], 10),
	    cryptoSuite: parts[1],
	    keyParams: parts[2],
	    sessionParams: parts.slice(3),
	  };
	};

	SDPUtils.writeCryptoLine = function(parameters) {
	  return 'a=crypto:' + parameters.tag + ' ' +
	    parameters.cryptoSuite + ' ' +
	    (typeof parameters.keyParams === 'object'
	      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)
	      : parameters.keyParams) +
	    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +
	    '\r\n';
	};

	// Parses the crypto key parameters into
	//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*
	SDPUtils.parseCryptoKeyParams = function(keyParams) {
	  if (keyParams.indexOf('inline:') !== 0) {
	    return null;
	  }
	  const parts = keyParams.substring(7).split('|');
	  return {
	    keyMethod: 'inline',
	    keySalt: parts[0],
	    lifeTime: parts[1],
	    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,
	    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,
	  };
	};

	SDPUtils.writeCryptoKeyParams = function(keyParams) {
	  return keyParams.keyMethod + ':'
	    + keyParams.keySalt +
	    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +
	    (keyParams.mkiValue && keyParams.mkiLength
	      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength
	      : '');
	};

	// Extracts all SDES parameters.
	SDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {
	  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,
	    'a=crypto:');
	  return lines.map(SDPUtils.parseCryptoLine);
	};

	// Parses ICE information from SDP media section or sessionpart.
	// FIXME: for consistency with other functions this should only
	//   get the ice-ufrag and ice-pwd lines as input.
	SDPUtils.getIceParameters = function(mediaSection, sessionpart) {
	  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,
	    'a=ice-ufrag:')[0];
	  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,
	    'a=ice-pwd:')[0];
	  if (!(ufrag && pwd)) {
	    return null;
	  }
	  return {
	    usernameFragment: ufrag.substring(12),
	    password: pwd.substring(10),
	  };
	};

	// Serializes ICE parameters to SDP.
	SDPUtils.writeIceParameters = function(params) {
	  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\r\n' +
	      'a=ice-pwd:' + params.password + '\r\n';
	  if (params.iceLite) {
	    sdp += 'a=ice-lite\r\n';
	  }
	  return sdp;
	};

	// Parses the SDP media section and returns RTCRtpParameters.
	SDPUtils.parseRtpParameters = function(mediaSection) {
	  const description = {
	    codecs: [],
	    headerExtensions: [],
	    fecMechanisms: [],
	    rtcp: [],
	  };
	  const lines = SDPUtils.splitLines(mediaSection);
	  const mline = lines[0].split(' ');
	  description.profile = mline[2];
	  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]
	    const pt = mline[i];
	    const rtpmapline = SDPUtils.matchPrefix(
	      mediaSection, 'a=rtpmap:' + pt + ' ')[0];
	    if (rtpmapline) {
	      const codec = SDPUtils.parseRtpMap(rtpmapline);
	      const fmtps = SDPUtils.matchPrefix(
	        mediaSection, 'a=fmtp:' + pt + ' ');
	      // Only the first a=fmtp:<pt> is considered.
	      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};
	      codec.rtcpFeedback = SDPUtils.matchPrefix(
	        mediaSection, 'a=rtcp-fb:' + pt + ' ')
	        .map(SDPUtils.parseRtcpFb);
	      description.codecs.push(codec);
	      // parse FEC mechanisms from rtpmap lines.
	      switch (codec.name.toUpperCase()) {
	        case 'RED':
	        case 'ULPFEC':
	          description.fecMechanisms.push(codec.name.toUpperCase());
	          break;
	      }
	    }
	  }
	  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {
	    description.headerExtensions.push(SDPUtils.parseExtmap(line));
	  });
	  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')
	    .map(SDPUtils.parseRtcpFb);
	  description.codecs.forEach(codec => {
	    wildcardRtcpFb.forEach(fb=> {
	      const duplicate = codec.rtcpFeedback.find(existingFeedback => {
	        return existingFeedback.type === fb.type &&
	          existingFeedback.parameter === fb.parameter;
	      });
	      if (!duplicate) {
	        codec.rtcpFeedback.push(fb);
	      }
	    });
	  });
	  // FIXME: parse rtcp.
	  return description;
	};

	// Generates parts of the SDP media section describing the capabilities /
	// parameters.
	SDPUtils.writeRtpDescription = function(kind, caps) {
	  let sdp = '';

	  // Build the mline.
	  sdp += 'm=' + kind + ' ';
	  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.
	  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';
	  sdp += caps.codecs.map(codec => {
	    if (codec.preferredPayloadType !== undefined) {
	      return codec.preferredPayloadType;
	    }
	    return codec.payloadType;
	  }).join(' ') + '\r\n';

	  sdp += 'c=IN IP4 0.0.0.0\r\n';
	  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\r\n';

	  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.
	  caps.codecs.forEach(codec => {
	    sdp += SDPUtils.writeRtpMap(codec);
	    sdp += SDPUtils.writeFmtp(codec);
	    sdp += SDPUtils.writeRtcpFb(codec);
	  });
	  let maxptime = 0;
	  caps.codecs.forEach(codec => {
	    if (codec.maxptime > maxptime) {
	      maxptime = codec.maxptime;
	    }
	  });
	  if (maxptime > 0) {
	    sdp += 'a=maxptime:' + maxptime + '\r\n';
	  }

	  if (caps.headerExtensions) {
	    caps.headerExtensions.forEach(extension => {
	      sdp += SDPUtils.writeExtmap(extension);
	    });
	  }
	  // FIXME: write fecMechanisms.
	  return sdp;
	};

	// Parses the SDP media section and returns an array of
	// RTCRtpEncodingParameters.
	SDPUtils.parseRtpEncodingParameters = function(mediaSection) {
	  const encodingParameters = [];
	  const description = SDPUtils.parseRtpParameters(mediaSection);
	  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;
	  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;

	  // filter a=ssrc:... cname:, ignore PlanB-msid
	  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
	    .map(line => SDPUtils.parseSsrcMedia(line))
	    .filter(parts => parts.attribute === 'cname');
	  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;
	  let secondarySsrc;

	  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')
	    .map(line => {
	      const parts = line.substring(17).split(' ');
	      return parts.map(part => parseInt(part, 10));
	    });
	  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {
	    secondarySsrc = flows[0][1];
	  }

	  description.codecs.forEach(codec => {
	    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {
	      let encParam = {
	        ssrc: primarySsrc,
	        codecPayloadType: parseInt(codec.parameters.apt, 10),
	      };
	      if (primarySsrc && secondarySsrc) {
	        encParam.rtx = {ssrc: secondarySsrc};
	      }
	      encodingParameters.push(encParam);
	      if (hasRed) {
	        encParam = JSON.parse(JSON.stringify(encParam));
	        encParam.fec = {
	          ssrc: primarySsrc,
	          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',
	        };
	        encodingParameters.push(encParam);
	      }
	    }
	  });
	  if (encodingParameters.length === 0 && primarySsrc) {
	    encodingParameters.push({
	      ssrc: primarySsrc,
	    });
	  }

	  // we support both b=AS and b=TIAS but interpret AS as TIAS.
	  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');
	  if (bandwidth.length) {
	    if (bandwidth[0].indexOf('b=TIAS:') === 0) {
	      bandwidth = parseInt(bandwidth[0].substring(7), 10);
	    } else if (bandwidth[0].indexOf('b=AS:') === 0) {
	      // use formula from JSEP to convert b=AS to TIAS value.
	      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95
	          - (50 * 40 * 8);
	    } else {
	      bandwidth = undefined;
	    }
	    encodingParameters.forEach(params => {
	      params.maxBitrate = bandwidth;
	    });
	  }
	  return encodingParameters;
	};

	// parses http://draft.ortc.org/#rtcrtcpparameters*
	SDPUtils.parseRtcpParameters = function(mediaSection) {
	  const rtcpParameters = {};

	  // Gets the first SSRC. Note that with RTX there might be multiple
	  // SSRCs.
	  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
	    .map(line => SDPUtils.parseSsrcMedia(line))
	    .filter(obj => obj.attribute === 'cname')[0];
	  if (remoteSsrc) {
	    rtcpParameters.cname = remoteSsrc.value;
	    rtcpParameters.ssrc = remoteSsrc.ssrc;
	  }

	  // Edge uses the compound attribute instead of reducedSize
	  // compound is !reducedSize
	  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');
	  rtcpParameters.reducedSize = rsize.length > 0;
	  rtcpParameters.compound = rsize.length === 0;

	  // parses the rtcp-mux attrіbute.
	  // Note that Edge does not support unmuxed RTCP.
	  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');
	  rtcpParameters.mux = mux.length > 0;

	  return rtcpParameters;
	};

	SDPUtils.writeRtcpParameters = function(rtcpParameters) {
	  let sdp = '';
	  if (rtcpParameters.reducedSize) {
	    sdp += 'a=rtcp-rsize\r\n';
	  }
	  if (rtcpParameters.mux) {
	    sdp += 'a=rtcp-mux\r\n';
	  }
	  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {
	    sdp += 'a=ssrc:' + rtcpParameters.ssrc +
	      ' cname:' + rtcpParameters.cname + '\r\n';
	  }
	  return sdp;
	};


	// parses either a=msid: or a=ssrc:... msid lines and returns
	// the id of the MediaStream and MediaStreamTrack.
	SDPUtils.parseMsid = function(mediaSection) {
	  let parts;
	  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');
	  if (spec.length === 1) {
	    parts = spec[0].substring(7).split(' ');
	    return {stream: parts[0], track: parts[1]};
	  }
	  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
	    .map(line => SDPUtils.parseSsrcMedia(line))
	    .filter(msidParts => msidParts.attribute === 'msid');
	  if (planB.length > 0) {
	    parts = planB[0].value.split(' ');
	    return {stream: parts[0], track: parts[1]};
	  }
	};

	// SCTP
	// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back
	// to draft-ietf-mmusic-sctp-sdp-05
	SDPUtils.parseSctpDescription = function(mediaSection) {
	  const mline = SDPUtils.parseMLine(mediaSection);
	  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');
	  let maxMessageSize;
	  if (maxSizeLine.length > 0) {
	    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);
	  }
	  if (isNaN(maxMessageSize)) {
	    maxMessageSize = 65536;
	  }
	  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');
	  if (sctpPort.length > 0) {
	    return {
	      port: parseInt(sctpPort[0].substring(12), 10),
	      protocol: mline.fmt,
	      maxMessageSize,
	    };
	  }
	  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');
	  if (sctpMapLines.length > 0) {
	    const parts = sctpMapLines[0]
	      .substring(10)
	      .split(' ');
	    return {
	      port: parseInt(parts[0], 10),
	      protocol: parts[1],
	      maxMessageSize,
	    };
	  }
	};

	// SCTP
	// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers
	// support by now receiving in this format, unless we originally parsed
	// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line
	// protocol of DTLS/SCTP -- without UDP/ or TCP/)
	SDPUtils.writeSctpDescription = function(media, sctp) {
	  let output = [];
	  if (media.protocol !== 'DTLS/SCTP') {
	    output = [
	      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\r\n',
	      'c=IN IP4 0.0.0.0\r\n',
	      'a=sctp-port:' + sctp.port + '\r\n',
	    ];
	  } else {
	    output = [
	      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\r\n',
	      'c=IN IP4 0.0.0.0\r\n',
	      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\r\n',
	    ];
	  }
	  if (sctp.maxMessageSize !== undefined) {
	    output.push('a=max-message-size:' + sctp.maxMessageSize + '\r\n');
	  }
	  return output.join('');
	};

	// Generate a session ID for SDP.
	// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1
	// recommends using a cryptographically random +ve 64-bit value
	// but right now this should be acceptable and within the right range
	SDPUtils.generateSessionId = function() {
	  return Math.random().toString().substr(2, 22);
	};

	// Write boiler plate for start of SDP
	// sessId argument is optional - if not supplied it will
	// be generated randomly
	// sessVersion is optional and defaults to 2
	// sessUser is optional and defaults to 'thisisadapterortc'
	SDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {
	  let sessionId;
	  const version = sessVer !== undefined ? sessVer : 2;
	  if (sessId) {
	    sessionId = sessId;
	  } else {
	    sessionId = SDPUtils.generateSessionId();
	  }
	  const user = sessUser || 'thisisadapterortc';
	  // FIXME: sess-id should be an NTP timestamp.
	  return 'v=0\r\n' +
	      'o=' + user + ' ' + sessionId + ' ' + version +
	        ' IN IP4 127.0.0.1\r\n' +
	      's=-\r\n' +
	      't=0 0\r\n';
	};

	// Gets the direction from the mediaSection or the sessionpart.
	SDPUtils.getDirection = function(mediaSection, sessionpart) {
	  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.
	  const lines = SDPUtils.splitLines(mediaSection);
	  for (let i = 0; i < lines.length; i++) {
	    switch (lines[i]) {
	      case 'a=sendrecv':
	      case 'a=sendonly':
	      case 'a=recvonly':
	      case 'a=inactive':
	        return lines[i].substring(2);
	        // FIXME: What should happen here?
	    }
	  }
	  if (sessionpart) {
	    return SDPUtils.getDirection(sessionpart);
	  }
	  return 'sendrecv';
	};

	SDPUtils.getKind = function(mediaSection) {
	  const lines = SDPUtils.splitLines(mediaSection);
	  const mline = lines[0].split(' ');
	  return mline[0].substring(2);
	};

	SDPUtils.isRejected = function(mediaSection) {
	  return mediaSection.split(' ', 2)[1] === '0';
	};

	SDPUtils.parseMLine = function(mediaSection) {
	  const lines = SDPUtils.splitLines(mediaSection);
	  const parts = lines[0].substring(2).split(' ');
	  return {
	    kind: parts[0],
	    port: parseInt(parts[1], 10),
	    protocol: parts[2],
	    fmt: parts.slice(3).join(' '),
	  };
	};

	SDPUtils.parseOLine = function(mediaSection) {
	  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];
	  const parts = line.substring(2).split(' ');
	  return {
	    username: parts[0],
	    sessionId: parts[1],
	    sessionVersion: parseInt(parts[2], 10),
	    netType: parts[3],
	    addressType: parts[4],
	    address: parts[5],
	  };
	};

	// a very naive interpretation of a valid SDP.
	SDPUtils.isValidSDP = function(blob) {
	  if (typeof blob !== 'string' || blob.length === 0) {
	    return false;
	  }
	  const lines = SDPUtils.splitLines(blob);
	  for (let i = 0; i < lines.length; i++) {
	    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {
	      return false;
	    }
	    // TODO: check the modifier a bit more.
	  }
	  return true;
	};

	// Expose public methods.
	{
	  module.exports = SDPUtils;
	}
} (sdp$1));

var SDPUtils = sdpExports;

var sdp = /*#__PURE__*/_mergeNamespaces({
    __proto__: null,
    default: SDPUtils
}, [sdpExports]);

/*
 *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

function shimRTCIceCandidate(window) {
  // foundation is arbitrarily chosen as an indicator for full support for
  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface
  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in
      window.RTCIceCandidate.prototype)) {
    return;
  }

  const NativeRTCIceCandidate = window.RTCIceCandidate;
  window.RTCIceCandidate = function RTCIceCandidate(args) {
    // Remove the a= which shouldn't be part of the candidate string.
    if (typeof args === 'object' && args.candidate &&
        args.candidate.indexOf('a=') === 0) {
      args = JSON.parse(JSON.stringify(args));
      args.candidate = args.candidate.substring(2);
    }

    if (args.candidate && args.candidate.length) {
      // Augment the native candidate with the parsed fields.
      const nativeCandidate = new NativeRTCIceCandidate(args);
      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);
      for (const key in parsedCandidate) {
        if (!(key in nativeCandidate)) {
          Object.defineProperty(nativeCandidate, key,
            {value: parsedCandidate[key]});
        }
      }

      // Override serializer to not serialize the extra attributes.
      nativeCandidate.toJSON = function toJSON() {
        return {
          candidate: nativeCandidate.candidate,
          sdpMid: nativeCandidate.sdpMid,
          sdpMLineIndex: nativeCandidate.sdpMLineIndex,
          usernameFragment: nativeCandidate.usernameFragment,
        };
      };
      return nativeCandidate;
    }
    return new NativeRTCIceCandidate(args);
  };
  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;

  // Hook up the augmented candidate in onicecandidate and
  // addEventListener('icecandidate', ...)
  wrapPeerConnectionEvent(window, 'icecandidate', e => {
    if (e.candidate) {
      Object.defineProperty(e, 'candidate', {
        value: new window.RTCIceCandidate(e.candidate),
        writable: 'false'
      });
    }
    return e;
  });
}

function shimRTCIceCandidateRelayProtocol(window) {
  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in
      window.RTCIceCandidate.prototype)) {
    return;
  }

  // Hook up the augmented candidate in onicecandidate and
  // addEventListener('icecandidate', ...)
  wrapPeerConnectionEvent(window, 'icecandidate', e => {
    if (e.candidate) {
      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);
      if (parsedCandidate.type === 'relay') {
        // This is a libwebrtc-specific mapping of local type preference
        // to relayProtocol.
        e.candidate.relayProtocol = {
          0: 'tls',
          1: 'tcp',
          2: 'udp',
        }[parsedCandidate.priority >> 24];
      }
    }
    return e;
  });
}

function shimMaxMessageSize(window, browserDetails) {
  if (!window.RTCPeerConnection) {
    return;
  }

  if (!('sctp' in window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {
      get() {
        return typeof this._sctp === 'undefined' ? null : this._sctp;
      }
    });
  }

  const sctpInDescription = function(description) {
    if (!description || !description.sdp) {
      return false;
    }
    const sections = SDPUtils.splitSections(description.sdp);
    sections.shift();
    return sections.some(mediaSection => {
      const mLine = SDPUtils.parseMLine(mediaSection);
      return mLine && mLine.kind === 'application'
          && mLine.protocol.indexOf('SCTP') !== -1;
    });
  };

  const getRemoteFirefoxVersion = function(description) {
    // TODO: Is there a better solution for detecting Firefox?
    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);
    if (match === null || match.length < 2) {
      return -1;
    }
    const version = parseInt(match[1], 10);
    // Test for NaN (yes, this is ugly)
    return version !== version ? -1 : version;
  };

  const getCanSendMaxMessageSize = function(remoteIsFirefox) {
    // Every implementation we know can send at least 64 KiB.
    // Note: Although Chrome is technically able to send up to 256 KiB, the
    //       data does not reach the other peer reliably.
    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419
    let canSendMaxMessageSize = 65536;
    if (browserDetails.browser === 'firefox') {
      if (browserDetails.version < 57) {
        if (remoteIsFirefox === -1) {
          // FF < 57 will send in 16 KiB chunks using the deprecated PPID
          // fragmentation.
          canSendMaxMessageSize = 16384;
        } else {
          // However, other FF (and RAWRTC) can reassemble PPID-fragmented
          // messages. Thus, supporting ~2 GiB when sending.
          canSendMaxMessageSize = 2147483637;
        }
      } else if (browserDetails.version < 60) {
        // Currently, all FF >= 57 will reset the remote maximum message size
        // to the default value when a data channel is created at a later
        // stage. :(
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831
        canSendMaxMessageSize =
          browserDetails.version === 57 ? 65535 : 65536;
      } else {
        // FF >= 60 supports sending ~2 GiB
        canSendMaxMessageSize = 2147483637;
      }
    }
    return canSendMaxMessageSize;
  };

  const getMaxMessageSize = function(description, remoteIsFirefox) {
    // Note: 65536 bytes is the default value from the SDP spec. Also,
    //       every implementation we know supports receiving 65536 bytes.
    let maxMessageSize = 65536;

    // FF 57 has a slightly incorrect default remote max message size, so
    // we need to adjust it here to avoid a failure when sending.
    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697
    if (browserDetails.browser === 'firefox'
         && browserDetails.version === 57) {
      maxMessageSize = 65535;
    }

    const match = SDPUtils.matchPrefix(description.sdp,
      'a=max-message-size:');
    if (match.length > 0) {
      maxMessageSize = parseInt(match[0].substring(19), 10);
    } else if (browserDetails.browser === 'firefox' &&
                remoteIsFirefox !== -1) {
      // If the maximum message size is not present in the remote SDP and
      // both local and remote are Firefox, the remote peer can receive
      // ~2 GiB.
      maxMessageSize = 2147483637;
    }
    return maxMessageSize;
  };

  const origSetRemoteDescription =
      window.RTCPeerConnection.prototype.setRemoteDescription;
  window.RTCPeerConnection.prototype.setRemoteDescription =
    function setRemoteDescription() {
      this._sctp = null;
      // Chrome decided to not expose .sctp in plan-b mode.
      // As usual, adapter.js has to do an 'ugly worakaround'
      // to cover up the mess.
      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {
        const {sdpSemantics} = this.getConfiguration();
        if (sdpSemantics === 'plan-b') {
          Object.defineProperty(this, 'sctp', {
            get() {
              return typeof this._sctp === 'undefined' ? null : this._sctp;
            },
            enumerable: true,
            configurable: true,
          });
        }
      }

      if (sctpInDescription(arguments[0])) {
        // Check if the remote is FF.
        const isFirefox = getRemoteFirefoxVersion(arguments[0]);

        // Get the maximum message size the local peer is capable of sending
        const canSendMMS = getCanSendMaxMessageSize(isFirefox);

        // Get the maximum message size of the remote peer.
        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);

        // Determine final maximum message size
        let maxMessageSize;
        if (canSendMMS === 0 && remoteMMS === 0) {
          maxMessageSize = Number.POSITIVE_INFINITY;
        } else if (canSendMMS === 0 || remoteMMS === 0) {
          maxMessageSize = Math.max(canSendMMS, remoteMMS);
        } else {
          maxMessageSize = Math.min(canSendMMS, remoteMMS);
        }

        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'
        // attribute.
        const sctp = {};
        Object.defineProperty(sctp, 'maxMessageSize', {
          get() {
            return maxMessageSize;
          }
        });
        this._sctp = sctp;
      }

      return origSetRemoteDescription.apply(this, arguments);
    };
}

function shimSendThrowTypeError(window) {
  if (!(window.RTCPeerConnection &&
      'createDataChannel' in window.RTCPeerConnection.prototype)) {
    return;
  }

  // Note: Although Firefox >= 57 has a native implementation, the maximum
  //       message size can be reset for all data channels at a later stage.
  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831

  function wrapDcSend(dc, pc) {
    const origDataChannelSend = dc.send;
    dc.send = function send() {
      const data = arguments[0];
      const length = data.length || data.size || data.byteLength;
      if (dc.readyState === 'open' &&
          pc.sctp && length > pc.sctp.maxMessageSize) {
        throw new TypeError('Message too large (can send a maximum of ' +
          pc.sctp.maxMessageSize + ' bytes)');
      }
      return origDataChannelSend.apply(dc, arguments);
    };
  }
  const origCreateDataChannel =
    window.RTCPeerConnection.prototype.createDataChannel;
  window.RTCPeerConnection.prototype.createDataChannel =
    function createDataChannel() {
      const dataChannel = origCreateDataChannel.apply(this, arguments);
      wrapDcSend(dataChannel, this);
      return dataChannel;
    };
  wrapPeerConnectionEvent(window, 'datachannel', e => {
    wrapDcSend(e.channel, e.target);
    return e;
  });
}


/* shims RTCConnectionState by pretending it is the same as iceConnectionState.
 * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12
 * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect
 * since DTLS failures would be hidden. See
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827
 * for the Firefox tracking bug.
 */
function shimConnectionState(window) {
  if (!window.RTCPeerConnection ||
      'connectionState' in window.RTCPeerConnection.prototype) {
    return;
  }
  const proto = window.RTCPeerConnection.prototype;
  Object.defineProperty(proto, 'connectionState', {
    get() {
      return {
        completed: 'connected',
        checking: 'connecting'
      }[this.iceConnectionState] || this.iceConnectionState;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(proto, 'onconnectionstatechange', {
    get() {
      return this._onconnectionstatechange || null;
    },
    set(cb) {
      if (this._onconnectionstatechange) {
        this.removeEventListener('connectionstatechange',
          this._onconnectionstatechange);
        delete this._onconnectionstatechange;
      }
      if (cb) {
        this.addEventListener('connectionstatechange',
          this._onconnectionstatechange = cb);
      }
    },
    enumerable: true,
    configurable: true
  });

  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {
    const origMethod = proto[method];
    proto[method] = function() {
      if (!this._connectionstatechangepoly) {
        this._connectionstatechangepoly = e => {
          const pc = e.target;
          if (pc._lastConnectionState !== pc.connectionState) {
            pc._lastConnectionState = pc.connectionState;
            const newEvent = new Event('connectionstatechange', e);
            pc.dispatchEvent(newEvent);
          }
          return e;
        };
        this.addEventListener('iceconnectionstatechange',
          this._connectionstatechangepoly);
      }
      return origMethod.apply(this, arguments);
    };
  });
}

function removeExtmapAllowMixed(window, browserDetails) {
  /* remove a=extmap-allow-mixed for webrtc.org < M71 */
  if (!window.RTCPeerConnection) {
    return;
  }
  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {
    return;
  }
  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {
    return;
  }
  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;
  window.RTCPeerConnection.prototype.setRemoteDescription =
  function setRemoteDescription(desc) {
    if (desc && desc.sdp && desc.sdp.indexOf('\na=extmap-allow-mixed') !== -1) {
      const sdp = desc.sdp.split('\n').filter((line) => {
        return line.trim() !== 'a=extmap-allow-mixed';
      }).join('\n');
      // Safari enforces read-only-ness of RTCSessionDescription fields.
      if (window.RTCSessionDescription &&
          desc instanceof window.RTCSessionDescription) {
        arguments[0] = new window.RTCSessionDescription({
          type: desc.type,
          sdp,
        });
      } else {
        desc.sdp = sdp;
      }
    }
    return nativeSRD.apply(this, arguments);
  };
}

function shimAddIceCandidateNullOrEmpty(window, browserDetails) {
  // Support for addIceCandidate(null or undefined)
  // as well as addIceCandidate({candidate: "", ...})
  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582
  // Note: must be called before other polyfills which change the signature.
  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {
    return;
  }
  const nativeAddIceCandidate =
      window.RTCPeerConnection.prototype.addIceCandidate;
  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {
    return;
  }
  window.RTCPeerConnection.prototype.addIceCandidate =
    function addIceCandidate() {
      if (!arguments[0]) {
        if (arguments[1]) {
          arguments[1].apply(null);
        }
        return Promise.resolve();
      }
      // Firefox 68+ emits and processes {candidate: "", ...}, ignore
      // in older versions.
      // Native support for ignoring exists for Chrome M77+.
      // Safari ignores as well, exact version unknown but works in the same
      // version that also ignores addIceCandidate(null).
      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)
           || (browserDetails.browser === 'firefox'
               && browserDetails.version < 68)
           || (browserDetails.browser === 'safari'))
          && arguments[0] && arguments[0].candidate === '') {
        return Promise.resolve();
      }
      return nativeAddIceCandidate.apply(this, arguments);
    };
}

// Note: Make sure to call this ahead of APIs that modify
// setLocalDescription.length
function shimParameterlessSetLocalDescription(window, browserDetails) {
  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {
    return;
  }
  const nativeSetLocalDescription =
      window.RTCPeerConnection.prototype.setLocalDescription;
  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {
    return;
  }
  window.RTCPeerConnection.prototype.setLocalDescription =
    function setLocalDescription() {
      let desc = arguments[0] || {};
      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {
        return nativeSetLocalDescription.apply(this, arguments);
      }
      // The remaining steps should technically happen when SLD comes off the
      // RTCPeerConnection's operations chain (not ahead of going on it), but
      // this is too difficult to shim. Instead, this shim only covers the
      // common case where the operations chain is empty. This is imperfect, but
      // should cover many cases. Rationale: Even if we can't reduce the glare
      // window to zero on imperfect implementations, there's value in tapping
      // into the perfect negotiation pattern that several browsers support.
      desc = {type: desc.type, sdp: desc.sdp};
      if (!desc.type) {
        switch (this.signalingState) {
          case 'stable':
          case 'have-local-offer':
          case 'have-remote-pranswer':
            desc.type = 'offer';
            break;
          default:
            desc.type = 'answer';
            break;
        }
      }
      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {
        return nativeSetLocalDescription.apply(this, [desc]);
      }
      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;
      return func.apply(this)
        .then(d => nativeSetLocalDescription.apply(this, [d]));
    };
}

var commonShim = /*#__PURE__*/Object.freeze({
    __proto__: null,
    shimRTCIceCandidate: shimRTCIceCandidate,
    shimRTCIceCandidateRelayProtocol: shimRTCIceCandidateRelayProtocol,
    shimMaxMessageSize: shimMaxMessageSize,
    shimSendThrowTypeError: shimSendThrowTypeError,
    shimConnectionState: shimConnectionState,
    removeExtmapAllowMixed: removeExtmapAllowMixed,
    shimAddIceCandidateNullOrEmpty: shimAddIceCandidateNullOrEmpty,
    shimParameterlessSetLocalDescription: shimParameterlessSetLocalDescription
});

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

// Shimming starts here.
function adapterFactory({window} = {}, options = {
  shimChrome: true,
  shimFirefox: true,
  shimSafari: true,
}) {
  // Utils.
  const logging = log;
  const browserDetails = detectBrowser(window);

  const adapter = {
    browserDetails,
    commonShim,
    extractVersion: extractVersion,
    disableLog: disableLog,
    disableWarnings: disableWarnings,
    // Expose sdp as a convenience. For production apps include directly.
    sdp,
  };

  // Shim browser if found.
  switch (browserDetails.browser) {
    case 'chrome':
      if (!chromeShim || !shimPeerConnection$1 ||
          !options.shimChrome) {
        logging('Chrome shim is not included in this adapter release.');
        return adapter;
      }
      if (browserDetails.version === null) {
        logging('Chrome shim can not determine version, not shimming.');
        return adapter;
      }
      logging('adapter.js shimming chrome.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = chromeShim;

      // Must be called before shimPeerConnection.
      shimAddIceCandidateNullOrEmpty(window, browserDetails);
      shimParameterlessSetLocalDescription(window);

      shimGetUserMedia$2(window, browserDetails);
      shimMediaStream(window);
      shimPeerConnection$1(window, browserDetails);
      shimOnTrack$1(window);
      shimAddTrackRemoveTrack(window, browserDetails);
      shimGetSendersWithDtmf(window);
      shimGetStats(window);
      shimSenderReceiverGetStats(window);
      fixNegotiationNeeded(window, browserDetails);

      shimRTCIceCandidate(window);
      shimRTCIceCandidateRelayProtocol(window);
      shimConnectionState(window);
      shimMaxMessageSize(window, browserDetails);
      shimSendThrowTypeError(window);
      removeExtmapAllowMixed(window, browserDetails);
      break;
    case 'firefox':
      if (!firefoxShim || !shimPeerConnection ||
          !options.shimFirefox) {
        logging('Firefox shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming firefox.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = firefoxShim;

      // Must be called before shimPeerConnection.
      shimAddIceCandidateNullOrEmpty(window, browserDetails);
      shimParameterlessSetLocalDescription(window);

      shimGetUserMedia$1(window, browserDetails);
      shimPeerConnection(window, browserDetails);
      shimOnTrack(window);
      shimRemoveStream(window);
      shimSenderGetStats(window);
      shimReceiverGetStats(window);
      shimRTCDataChannel(window);
      shimAddTransceiver(window);
      shimGetParameters(window);
      shimCreateOffer(window);
      shimCreateAnswer(window);

      shimRTCIceCandidate(window);
      shimConnectionState(window);
      shimMaxMessageSize(window, browserDetails);
      shimSendThrowTypeError(window);
      break;
    case 'safari':
      if (!safariShim || !options.shimSafari) {
        logging('Safari shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming safari.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = safariShim;

      // Must be called before shimCallbackAPI.
      shimAddIceCandidateNullOrEmpty(window, browserDetails);
      shimParameterlessSetLocalDescription(window);

      shimRTCIceServerUrls(window);
      shimCreateOfferLegacy(window);
      shimCallbacksAPI(window);
      shimLocalStreamsAPI(window);
      shimRemoteStreamsAPI(window);
      shimTrackEventTransceiver(window);
      shimGetUserMedia(window);
      shimAudioContext(window);

      shimRTCIceCandidate(window);
      shimRTCIceCandidateRelayProtocol(window);
      shimMaxMessageSize(window, browserDetails);
      shimSendThrowTypeError(window);
      removeExtmapAllowMixed(window, browserDetails);
      break;
    default:
      logging('Unsupported browser!');
      break;
  }

  return adapter;
}

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

adapterFactory({window: typeof window === 'undefined' ? undefined : window});

var parser$2 = {};

var grammarExports = {};
var grammar$2 = {
  get exports(){ return grammarExports; },
  set exports(v){ grammarExports = v; },
};

var grammar$1 = grammar$2.exports = {
  v: [{
    name: 'version',
    reg: /^(\d*)$/
  }],
  o: [{
    // o=- 20518 0 IN IP4 203.0.113.1
    // NB: sessionId will be a String in most cases because it is huge
    name: 'origin',
    reg: /^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,
    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],
    format: '%s %s %d %s IP%d %s'
  }],
  // default parsing of these only (though some of these feel outdated)
  s: [{ name: 'name' }],
  i: [{ name: 'description' }],
  u: [{ name: 'uri' }],
  e: [{ name: 'email' }],
  p: [{ name: 'phone' }],
  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...
  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly
  // k: [{}], // outdated thing ignored
  t: [{
    // t=0 0
    name: 'timing',
    reg: /^(\d*) (\d*)/,
    names: ['start', 'stop'],
    format: '%d %d'
  }],
  c: [{
    // c=IN IP4 10.47.197.26
    name: 'connection',
    reg: /^IN IP(\d) (\S*)/,
    names: ['version', 'ip'],
    format: 'IN IP%d %s'
  }],
  b: [{
    // b=AS:4000
    push: 'bandwidth',
    reg: /^(TIAS|AS|CT|RR|RS):(\d*)/,
    names: ['type', 'limit'],
    format: '%s:%s'
  }],
  m: [{
    // m=video 51744 RTP/AVP 126 97 98 34 31
    // NB: special - pushes to session
    // TODO: rtp/fmtp should be filtered by the payloads found here?
    reg: /^(\w*) (\d*) ([\w/]*)(?: (.*))?/,
    names: ['type', 'port', 'protocol', 'payloads'],
    format: '%s %d %s %s'
  }],
  a: [
    {
      // a=rtpmap:110 opus/48000/2
      push: 'rtp',
      reg: /^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,
      names: ['payload', 'codec', 'rate', 'encoding'],
      format: function (o) {
        return (o.encoding)
          ? 'rtpmap:%d %s/%s/%s'
          : o.rate
            ? 'rtpmap:%d %s/%s'
            : 'rtpmap:%d %s';
      }
    },
    {
      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000
      // a=fmtp:111 minptime=10; useinbandfec=1
      push: 'fmtp',
      reg: /^fmtp:(\d*) ([\S| ]*)/,
      names: ['payload', 'config'],
      format: 'fmtp:%d %s'
    },
    {
      // a=control:streamid=0
      name: 'control',
      reg: /^control:(.*)/,
      format: 'control:%s'
    },
    {
      // a=rtcp:65179 IN IP4 193.84.77.194
      name: 'rtcp',
      reg: /^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,
      names: ['port', 'netType', 'ipVer', 'address'],
      format: function (o) {
        return (o.address != null)
          ? 'rtcp:%d %s IP%d %s'
          : 'rtcp:%d';
      }
    },
    {
      // a=rtcp-fb:98 trr-int 100
      push: 'rtcpFbTrrInt',
      reg: /^rtcp-fb:(\*|\d*) trr-int (\d*)/,
      names: ['payload', 'value'],
      format: 'rtcp-fb:%s trr-int %d'
    },
    {
      // a=rtcp-fb:98 nack rpsi
      push: 'rtcpFb',
      reg: /^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,
      names: ['payload', 'type', 'subtype'],
      format: function (o) {
        return (o.subtype != null)
          ? 'rtcp-fb:%s %s %s'
          : 'rtcp-fb:%s %s';
      }
    },
    {
      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset
      // a=extmap:1/recvonly URI-gps-string
      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24
      push: 'ext',
      reg: /^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,
      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],
      format: function (o) {
        return (
          'extmap:%d' +
          (o.direction ? '/%s' : '%v') +
          (o['encrypt-uri'] ? ' %s' : '%v') +
          ' %s' +
          (o.config ? ' %s' : '')
        );
      }
    },
    {
      // a=extmap-allow-mixed
      name: 'extmapAllowMixed',
      reg: /^(extmap-allow-mixed)/
    },
    {
      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32
      push: 'crypto',
      reg: /^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,
      names: ['id', 'suite', 'config', 'sessionConfig'],
      format: function (o) {
        return (o.sessionConfig != null)
          ? 'crypto:%d %s %s %s'
          : 'crypto:%d %s %s';
      }
    },
    {
      // a=setup:actpass
      name: 'setup',
      reg: /^setup:(\w*)/,
      format: 'setup:%s'
    },
    {
      // a=connection:new
      name: 'connectionType',
      reg: /^connection:(new|existing)/,
      format: 'connection:%s'
    },
    {
      // a=mid:1
      name: 'mid',
      reg: /^mid:([^\s]*)/,
      format: 'mid:%s'
    },
    {
      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a
      name: 'msid',
      reg: /^msid:(.*)/,
      format: 'msid:%s'
    },
    {
      // a=ptime:20
      name: 'ptime',
      reg: /^ptime:(\d*(?:\.\d*)*)/,
      format: 'ptime:%d'
    },
    {
      // a=maxptime:60
      name: 'maxptime',
      reg: /^maxptime:(\d*(?:\.\d*)*)/,
      format: 'maxptime:%d'
    },
    {
      // a=sendrecv
      name: 'direction',
      reg: /^(sendrecv|recvonly|sendonly|inactive)/
    },
    {
      // a=ice-lite
      name: 'icelite',
      reg: /^(ice-lite)/
    },
    {
      // a=ice-ufrag:F7gI
      name: 'iceUfrag',
      reg: /^ice-ufrag:(\S*)/,
      format: 'ice-ufrag:%s'
    },
    {
      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g
      name: 'icePwd',
      reg: /^ice-pwd:(\S*)/,
      format: 'ice-pwd:%s'
    },
    {
      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33
      name: 'fingerprint',
      reg: /^fingerprint:(\S*) (\S*)/,
      names: ['type', 'hash'],
      format: 'fingerprint:%s %s'
    },
    {
      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host
      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10
      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10
      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10
      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10
      push:'candidates',
      reg: /^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,
      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],
      format: function (o) {
        var str = 'candidate:%s %d %s %d %s %d typ %s';

        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';

        // NB: candidate has three optional chunks, so %void middles one if it's missing
        str += (o.tcptype != null) ? ' tcptype %s' : '%v';

        if (o.generation != null) {
          str += ' generation %d';
        }

        str += (o['network-id'] != null) ? ' network-id %d' : '%v';
        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';
        return str;
      }
    },
    {
      // a=end-of-candidates (keep after the candidates line for readability)
      name: 'endOfCandidates',
      reg: /^(end-of-candidates)/
    },
    {
      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...
      name: 'remoteCandidates',
      reg: /^remote-candidates:(.*)/,
      format: 'remote-candidates:%s'
    },
    {
      // a=ice-options:google-ice
      name: 'iceOptions',
      reg: /^ice-options:(\S*)/,
      format: 'ice-options:%s'
    },
    {
      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1
      push: 'ssrcs',
      reg: /^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,
      names: ['id', 'attribute', 'value'],
      format: function (o) {
        var str = 'ssrc:%d';
        if (o.attribute != null) {
          str += ' %s';
          if (o.value != null) {
            str += ':%s';
          }
        }
        return str;
      }
    },
    {
      // a=ssrc-group:FEC 1 2
      // a=ssrc-group:FEC-FR 3004364195 1080772241
      push: 'ssrcGroups',
      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E
      reg: /^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,
      names: ['semantics', 'ssrcs'],
      format: 'ssrc-group:%s %s'
    },
    {
      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV
      name: 'msidSemantic',
      reg: /^msid-semantic:\s?(\w*) (\S*)/,
      names: ['semantic', 'token'],
      format: 'msid-semantic: %s %s' // space after ':' is not accidental
    },
    {
      // a=group:BUNDLE audio video
      push: 'groups',
      reg: /^group:(\w*) (.*)/,
      names: ['type', 'mids'],
      format: 'group:%s %s'
    },
    {
      // a=rtcp-mux
      name: 'rtcpMux',
      reg: /^(rtcp-mux)/
    },
    {
      // a=rtcp-rsize
      name: 'rtcpRsize',
      reg: /^(rtcp-rsize)/
    },
    {
      // a=sctpmap:5000 webrtc-datachannel 1024
      name: 'sctpmap',
      reg: /^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,
      names: ['sctpmapNumber', 'app', 'maxMessageSize'],
      format: function (o) {
        return (o.maxMessageSize != null)
          ? 'sctpmap:%s %s %s'
          : 'sctpmap:%s %s';
      }
    },
    {
      // a=x-google-flag:conference
      name: 'xGoogleFlag',
      reg: /^x-google-flag:([^\s]*)/,
      format: 'x-google-flag:%s'
    },
    {
      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0
      push: 'rids',
      reg: /^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,
      names: ['id', 'direction', 'params'],
      format: function (o) {
        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';
      }
    },
    {
      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]
      // a=imageattr:* send [x=800,y=640] recv *
      // a=imageattr:100 recv [x=320,y=240]
      push: 'imageattrs',
      reg: new RegExp(
        // a=imageattr:97
        '^imageattr:(\\d+|\\*)' +
        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]
        '[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)' +
        // recv [x=330,y=250]
        '(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?'
      ),
      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],
      format: function (o) {
        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');
      }
    },
    {
      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8
      // a=simulcast:recv 1;4,5 send 6;7
      name: 'simulcast',
      reg: new RegExp(
        // a=simulcast:
        '^simulcast:' +
        // send 1,2,3;~4,~5
        '(send|recv) ([a-zA-Z0-9\\-_~;,]+)' +
        // space + recv 6;~7,~8
        '(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?' +
        // end
        '$'
      ),
      names: ['dir1', 'list1', 'dir2', 'list2'],
      format: function (o) {
        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');
      }
    },
    {
      // old simulcast draft 03 (implemented by Firefox)
      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03
      // a=simulcast: recv pt=97;98 send pt=97
      // a=simulcast: send rid=5;6;7 paused=6,7
      name: 'simulcast_03',
      reg: /^simulcast:[\s\t]+([\S+\s\t]+)$/,
      names: ['value'],
      format: 'simulcast: %s'
    },
    {
      // a=framerate:25
      // a=framerate:29.97
      name: 'framerate',
      reg: /^framerate:(\d+(?:$|\.\d+))/,
      format: 'framerate:%s'
    },
    {
      // RFC4570
      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5
      name: 'sourceFilter',
      reg: /^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,
      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],
      format: 'source-filter: %s %s %s %s %s'
    },
    {
      // a=bundle-only
      name: 'bundleOnly',
      reg: /^(bundle-only)/
    },
    {
      // a=label:1
      name: 'label',
      reg: /^label:(.+)/,
      format: 'label:%s'
    },
    {
      // RFC version 26 for SCTP over DTLS
      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5
      name: 'sctpPort',
      reg: /^sctp-port:(\d+)$/,
      format: 'sctp-port:%s'
    },
    {
      // RFC version 26 for SCTP over DTLS
      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6
      name: 'maxMessageSize',
      reg: /^max-message-size:(\d+)$/,
      format: 'max-message-size:%s'
    },
    {
      // RFC7273
      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37
      push:'tsRefClocks',
      reg: /^ts-refclk:([^\s=]*)(?:=(\S*))?/,
      names: ['clksrc', 'clksrcExt'],
      format: function (o) {
        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');
      }
    },
    {
      // RFC7273
      // a=mediaclk:direct=963214424
      name:'mediaClk',
      reg: /^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,
      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],
      format: function (o) {
        var str = 'mediaclk:';
        str += (o.id != null ? 'id=%s %s' : '%v%s');
        str += (o.mediaClockValue != null ? '=%s' : '');
        str += (o.rateNumerator != null ? ' rate=%s' : '');
        str += (o.rateDenominator != null ? '/%s' : '');
        return str;
      }
    },
    {
      // a=keywds:keywords
      name: 'keywords',
      reg: /^keywds:(.+)$/,
      format: 'keywds:%s'
    },
    {
      // a=content:main
      name: 'content',
      reg: /^content:(.+)/,
      format: 'content:%s'
    },
    // BFCP https://tools.ietf.org/html/rfc4583
    {
      // a=floorctrl:c-s
      name: 'bfcpFloorCtrl',
      reg: /^floorctrl:(c-only|s-only|c-s)/,
      format: 'floorctrl:%s'
    },
    {
      // a=confid:1
      name: 'bfcpConfId',
      reg: /^confid:(\d+)/,
      format: 'confid:%s'
    },
    {
      // a=userid:1
      name: 'bfcpUserId',
      reg: /^userid:(\d+)/,
      format: 'userid:%s'
    },
    {
      // a=floorid:1
      name: 'bfcpFloorId',
      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,
      names: ['id', 'mStream'],
      format: 'floorid:%s mstrm:%s'
    },
    {
      // any a= that we don't understand is kept verbatim on media.invalid
      push: 'invalid',
      names: ['value']
    }
  ]
};

// set sensible defaults to avoid polluting the grammar with boring details
Object.keys(grammar$1).forEach(function (key) {
  var objs = grammar$1[key];
  objs.forEach(function (obj) {
    if (!obj.reg) {
      obj.reg = /(.*)/;
    }
    if (!obj.format) {
      obj.format = '%s';
    }
  });
});

(function (exports) {
	var toIntIfInt = function (v) {
	  return String(Number(v)) === v ? Number(v) : v;
	};

	var attachProperties = function (match, location, names, rawName) {
	  if (rawName && !names) {
	    location[rawName] = toIntIfInt(match[1]);
	  }
	  else {
	    for (var i = 0; i < names.length; i += 1) {
	      if (match[i+1] != null) {
	        location[names[i]] = toIntIfInt(match[i+1]);
	      }
	    }
	  }
	};

	var parseReg = function (obj, location, content) {
	  var needsBlank = obj.name && obj.names;
	  if (obj.push && !location[obj.push]) {
	    location[obj.push] = [];
	  }
	  else if (needsBlank && !location[obj.name]) {
	    location[obj.name] = {};
	  }
	  var keyLocation = obj.push ?
	    {} :  // blank object that will be pushed
	    needsBlank ? location[obj.name] : location; // otherwise, named location or root

	  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);

	  if (obj.push) {
	    location[obj.push].push(keyLocation);
	  }
	};

	var grammar = grammarExports;
	var validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);

	exports.parse = function (sdp) {
	  var session = {}
	    , media = []
	    , location = session; // points at where properties go under (one of the above)

	  // parse lines we understand
	  sdp.split(/(\r\n|\r|\n)/).filter(validLine).forEach(function (l) {
	    var type = l[0];
	    var content = l.slice(2);
	    if (type === 'm') {
	      media.push({rtp: [], fmtp: []});
	      location = media[media.length-1]; // point at latest media line
	    }

	    for (var j = 0; j < (grammar[type] || []).length; j += 1) {
	      var obj = grammar[type][j];
	      if (obj.reg.test(content)) {
	        return parseReg(obj, location, content);
	      }
	    }
	  });

	  session.media = media; // link it up
	  return session;
	};

	var paramReducer = function (acc, expr) {
	  var s = expr.split(/=(.+)/, 2);
	  if (s.length === 2) {
	    acc[s[0]] = toIntIfInt(s[1]);
	  } else if (s.length === 1 && expr.length > 1) {
	    acc[s[0]] = undefined;
	  }
	  return acc;
	};

	exports.parseParams = function (str) {
	  return str.split(/;\s?/).reduce(paramReducer, {});
	};

	// For backward compatibility - alias will be removed in 3.0.0
	exports.parseFmtpConfig = exports.parseParams;

	exports.parsePayloads = function (str) {
	  return str.toString().split(' ').map(Number);
	};

	exports.parseRemoteCandidates = function (str) {
	  var candidates = [];
	  var parts = str.split(' ').map(toIntIfInt);
	  for (var i = 0; i < parts.length; i += 3) {
	    candidates.push({
	      component: parts[i],
	      ip: parts[i + 1],
	      port: parts[i + 2]
	    });
	  }
	  return candidates;
	};

	exports.parseImageAttributes = function (str) {
	  return str.split(' ').map(function (item) {
	    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});
	  });
	};

	exports.parseSimulcastStreamList = function (str) {
	  return str.split(';').map(function (stream) {
	    return stream.split(',').map(function (format) {
	      var scid, paused = false;

	      if (format[0] !== '~') {
	        scid = toIntIfInt(format);
	      } else {
	        scid = toIntIfInt(format.substring(1, format.length));
	        paused = true;
	      }

	      return {
	        scid: scid,
	        paused: paused
	      };
	    });
	  });
	};
} (parser$2));

var grammar = grammarExports;

// customized util.format - discards excess arguments and can void middle ones
var formatRegExp = /%[sdv%]/g;
var format = function (formatStr) {
  var i = 1;
  var args = arguments;
  var len = args.length;
  return formatStr.replace(formatRegExp, function (x) {
    if (i >= len) {
      return x; // missing argument
    }
    var arg = args[i];
    i += 1;
    switch (x) {
    case '%%':
      return '%';
    case '%s':
      return String(arg);
    case '%d':
      return Number(arg);
    case '%v':
      return '';
    }
  });
  // NB: we discard excess arguments - they are typically undefined from makeLine
};

var makeLine = function (type, obj, location) {
  var str = obj.format instanceof Function ?
    (obj.format(obj.push ? location : location[obj.name])) :
    obj.format;

  var args = [type + '=' + str];
  if (obj.names) {
    for (var i = 0; i < obj.names.length; i += 1) {
      var n = obj.names[i];
      if (obj.name) {
        args.push(location[obj.name][n]);
      }
      else { // for mLine and push attributes
        args.push(location[obj.names[i]]);
      }
    }
  }
  else {
    args.push(location[obj.name]);
  }
  return format.apply(null, args);
};

// RFC specified order
// TODO: extend this with all the rest
var defaultOuterOrder = [
  'v', 'o', 's', 'i',
  'u', 'e', 'p', 'c',
  'b', 't', 'r', 'z', 'a'
];
var defaultInnerOrder = ['i', 'c', 'b', 'a'];


var writer$1 = function (session, opts) {
  opts = opts || {};
  // ensure certain properties exist
  if (session.version == null) {
    session.version = 0; // 'v=0' must be there (only defined version atm)
  }
  if (session.name == null) {
    session.name = ' '; // 's= ' must be there if no meaningful name set
  }
  session.media.forEach(function (mLine) {
    if (mLine.payloads == null) {
      mLine.payloads = '';
    }
  });

  var outerOrder = opts.outerOrder || defaultOuterOrder;
  var innerOrder = opts.innerOrder || defaultInnerOrder;
  var sdp = [];

  // loop through outerOrder for matching properties on session
  outerOrder.forEach(function (type) {
    grammar[type].forEach(function (obj) {
      if (obj.name in session && session[obj.name] != null) {
        sdp.push(makeLine(type, obj, session));
      }
      else if (obj.push in session && session[obj.push] != null) {
        session[obj.push].forEach(function (el) {
          sdp.push(makeLine(type, obj, el));
        });
      }
    });
  });

  // then for each media line, follow the innerOrder
  session.media.forEach(function (mLine) {
    sdp.push(makeLine('m', grammar.m[0], mLine));

    innerOrder.forEach(function (type) {
      grammar[type].forEach(function (obj) {
        if (obj.name in mLine && mLine[obj.name] != null) {
          sdp.push(makeLine(type, obj, mLine));
        }
        else if (obj.push in mLine && mLine[obj.push] != null) {
          mLine[obj.push].forEach(function (el) {
            sdp.push(makeLine(type, obj, el));
          });
        }
      });
    });
  });

  return sdp.join('\r\n') + '\r\n';
};

var parser$1 = parser$2;
var writer = writer$1;

var write = writer;
var parse$2 = parser$1.parse;
parser$1.parseParams;
parser$1.parseFmtpConfig; // Alias of parseParams().
parser$1.parsePayloads;
parser$1.parseRemoteCandidates;
parser$1.parseImageAttributes;
parser$1.parseSimulcastStreamList;

const waitFirstICEGatheringComplete = (peerConnection) => __awaiter(void 0, void 0, void 0, function* () {
    let offer_sent = false;
    return new Promise((resolve) => {
        peerConnection.onicecandidate = (event) => {
            if (event.candidate && !offer_sent) {
                offer_sent = true;
                resolve();
            }
        };
    });
});
function createDummyCandidateSDP(pc) {
    const candidates = [
        {
            foundation: '1176891032',
            component: 1,
            transport: 'udp',
            priority: 2122260223,
            ip: '0.0.0.0',
            port: 9,
            type: 'host',
            generation: 0,
            'network-id': 1,
            'network-cost': 50
        }
    ];
    if (pc instanceof RTCPeerConnection &&
        pc.localDescription instanceof RTCSessionDescription) {
        const sdpNewObj = parse$2(pc.localDescription.sdp);
        sdpNewObj.media[0].candidates = candidates;
        return write(sdpNewObj);
    }
    else {
        throw Error('(PC || localDescription) == Undefined');
    }
}
// [RTCPeerConnection, RTCSessionDescription['sdp']]
const createRtcAudioConnection = () => __awaiter(void 0, void 0, void 0, function* () {
    const localStream = yield navigator.mediaDevices.getUserMedia({
        video: false,
        audio: true
    });
    const peerConnection = new RTCPeerConnection({
        // iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],
        iceTransportPolicy: 'all',
        bundlePolicy: 'balanced',
        rtcpMuxPolicy: 'require',
        iceCandidatePoolSize: 0
    });
    localStream.getTracks().forEach((track) => {
        peerConnection.addTrack(track, localStream);
    });
    return peerConnection;
});
const createOffer = (peerConnection) => __awaiter(void 0, void 0, void 0, function* () {
    const offer = yield peerConnection.createOffer();
    peerConnection.setLocalDescription(offer);
    yield waitFirstICEGatheringComplete(peerConnection);
    return createDummyCandidateSDP(peerConnection);
});
const createAnswer = (peerConnection, sdp) => __awaiter(void 0, void 0, void 0, function* () {
    yield peerConnection.setRemoteDescription(new RTCSessionDescription({ type: 'offer', sdp }));
    const sessionDescription = yield peerConnection.createAnswer();
    peerConnection.setLocalDescription(sessionDescription);
    yield waitFirstICEGatheringComplete(peerConnection);
    return createDummyCandidateSDP(peerConnection);
});

function iterateReports$2(stats, fn) {
  if (typeof stats[Symbol.iterator] === "function") {
    for (const el of stats) {
      const report = Array.isArray(el) ? el[1] : el;
      fn(report);
    }
  } else {
    for (const key in stats) {
      if (stats.hasOwnProperty(key)) {
        const report = stats[key];
        fn(report);
      }
    }
  }
}

var utils = {
    iterateReports: iterateReports$2
};

/**
 * Rules to map different types of reports combined by report name
 * On the left - name of the field in a report
 * On the rirgh - new name
 */

const rules = {
  "outbound-rtp": {
    packetsSent: "audioSentPackets",
    bytesSent: "audioSentBytes",
  },
  "inbound-rtp": {
    packetsReceived: "audioRecvPackets",
    packetsLost: "audioRecvPacketsLost",
    bytesReceived: "audioRecvBytes",
    jitter: "audioRecvJitter"
  },
  "remote-inbound-rtp": {
    packetsLost: "audioSentPacketsLost",
    roundTripTime: "audioRtt",
    jitter: "audioSentJitter"
  },
};

// Additional logic to parse values can be done here
const parsers$1 = {
  "remote-candidate": function (report) {
    return mapKeys(report);
  },
  "inbound-rtp": function (report) {
    return mapKeys(report);
  },
  "outbound-rtp": function (report) {
    return mapKeys(report);
  },
  "remote-inbound-rtp": function (report) {
    return mapKeys(report);
  },
};

const mapKeys = (report) => {
  const { type } = report;
  const mapping = rules[type];
  const result = {};

  for (let field in mapping) {
    if (field in report) {
      let mappedName;

      if (typeof mapping[field] === "function") {
        mappedName = mapping[field](report);
      } else {
        mappedName = mapping[field];
      }
      result[mappedName] = report[field];
    } else {
      result[mapping[field]] = null;
    }
  }

  return result;
};

var newApi = {
  rules,
  parsers: parsers$1,
};

const { iterateReports: iterateReports$1 } = utils;

function calculateMos$1(reports) {
  let jitter_time = 0;
  let recv_pkts = 0;
  let lost_pkts = 0;
  let average = 100.0;
  let packet_loss = 0.0;
  let effective_latency;
  let r_value;
  let mos;

  iterateReports$1(reports, (report) => {
    if (report.type === "inbound-rtp") {
      jitter_time = report.jitter;
      lost_pkts = report.packetsLost;
      recv_pkts = report.packetsReceived;
    }
  });

  if (recv_pkts + lost_pkts > 0) {
    packet_loss = 100.0 * (lost_pkts / (recv_pkts + lost_pkts));
  }
  effective_latency = average + jitter_time * 2 + 10;
  if (effective_latency < 160) {
    r_value = 93.2 - effective_latency / 40;
  } else {
    r_value = 93.2 - (effective_latency - 120) / 10;
  }
  r_value = r_value - packet_loss * 2.5;

  if (r_value < 1) {
    r_value = 1;
  }
  mos =
    1 + 0.035 * r_value + 0.000007 * r_value * (r_value - 60) * (100 - r_value);

  return parseFloat(mos).toFixed(6);
}

var calculateMos_1 = calculateMos$1;

const { iterateReports } = utils;
const { parsers } = newApi;
const calculateMos = calculateMos_1;

function parse$1(reports) {
  const result = {};

  iterateReports(reports, (report) => {
    if (report.type in parsers) {
      const mappedReport = parsers[report.type](report);

      Object.assign(result, mappedReport);
    }
  });

  result.networkMos = parseFloat(calculateMos(reports));

  return result;
}

var rtcStatsAdapter = parse$1;

var RTCStatsJS = clientsdkClientcore_jsExports.vonage.RTCStatsJS;
class MediaClient {
    constructor() {
        this.pcs = new Map();
        this.audio = undefined;
    }
    enableRtcStatsCollection(id, interval, closure) {
        const pc = this.pcs.get(id);
        if (!pc) {
            return closure(new clientsdkClientcore_jsExports.vonage.PeerConnectionNotFoundJS(id));
        }
        this.intervalId = setInterval(() => {
            if (pc.connectionState != 'connected') {
                clearTimeout(this.intervalId);
                return;
            }
            pc.getStats().then((result) => {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
                const stats = rtcStatsAdapter(result);
                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onRtcStats(id, 
                // Default values to 0 because Kotlin maps numbers to any,
                // hence undefined are allowed in this context
                new RTCStatsJS((_b = stats.audioRecvPackets) !== null && _b !== void 0 ? _b : 0, (_c = stats.audioRecvPacketsLost) !== null && _c !== void 0 ? _c : 0, (_d = stats.audioRecvBytes) !== null && _d !== void 0 ? _d : 0, (_e = stats.audioRecvJitter) !== null && _e !== void 0 ? _e : 0, (_f = stats.audioSentPackets) !== null && _f !== void 0 ? _f : 0, (_g = stats.audioSentBytes) !== null && _g !== void 0 ? _g : 0, (_h = stats.audioSentPacketsLost) !== null && _h !== void 0 ? _h : 0, (_j = stats.audioRtt) !== null && _j !== void 0 ? _j : 0, (_k = stats.audioSentJitter) !== null && _k !== void 0 ? _k : 0));
            });
        }, interval);
        closure(null);
    }
    enableMediaInbound(rtcId, offerSDP, closure) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const pc = yield this.getNewPC();
                pc.onconnectionstatechange = () => {
                    var _a;
                    (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onConnectionChange(rtcId, pc.connectionState);
                };
                this.pcs.set(rtcId, pc);
                const sdp = yield createAnswer(pc, offerSDP);
                closure(null, sdp);
            }
            catch (err) {
                const message = err instanceof Error ? err.message : null;
                closure(new clientsdkClientcore_jsExports.vonage.CreateAnswerErrorJS(message), null);
            }
        });
    }
    enableMediaOutbound(closure) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const pc = yield this.getNewPC();
                const sdp = yield createOffer(pc);
                closure(null, sdp, (legId) => {
                    this.pcs.set(legId, pc);
                    pc.onconnectionstatechange = () => {
                        var _a;
                        (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onConnectionChange(legId, pc.connectionState);
                    };
                });
            }
            catch (err) {
                const message = err instanceof Error ? err.message : null;
                closure(new clientsdkClientcore_jsExports.vonage.CreateOfferErrorJS(message), null, () => {
                    throw new Error('Callback not implemented, and should never get called');
                });
            }
        });
    }
    getNewPC() {
        return __awaiter(this, void 0, void 0, function* () {
            const pc = yield createRtcAudioConnection();
            pc.ontrack = (evt) => {
                const stream = evt.streams[0];
                if (stream) {
                    const audio = new Audio();
                    audio.srcObject = stream;
                    audio.autoplay = true;
                    this.audio = audio;
                }
            };
            return pc;
        });
    }
    mute(id, closure) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                this.setMediaTracksEnabled(id, false);
                closure(null);
            }
            catch (err) {
                closure(new clientsdkClientcore_jsExports.vonage.TrackNotFoundJS(id));
            }
        });
    }
    unmute(id, closure) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                this.setMediaTracksEnabled(id, true);
                closure(null);
            }
            catch (err) {
                closure(new clientsdkClientcore_jsExports.vonage.TrackNotFoundJS(id));
            }
        });
    }
    getAudioOutputElement() {
        return this.audio;
    }
    getPeerConnection(id) {
        const pc = this.pcs.get(id);
        return pc;
    }
    getMediaConnectionState(id) {
        var _a;
        const pc = this.pcs.get(id);
        return (_a = pc === null || pc === void 0 ? void 0 : pc.connectionState) !== null && _a !== void 0 ? _a : 'unknown';
    }
    // async getLocalStream(): Promise<MediaStream> {
    //   return await navigator.mediaDevices.getUserMedia({
    //     video: false,
    //     audio: true
    //   });
    // }
    processAnswer(id, sdp, closure) {
        const remoteDescription = new RTCSessionDescription({
            type: 'answer',
            sdp
        });
        const pc = this.pcs.get(id);
        if (!pc) {
            return closure(new clientsdkClientcore_jsExports.vonage.PeerConnectionNotFoundJS(id));
        }
        try {
            pc.setRemoteDescription(remoteDescription);
            closure(null);
        }
        catch (err) {
            const message = err instanceof Error ? err.message : null;
            closure(new clientsdkClientcore_jsExports.vonage.ProcessAnswerErrorJS(id, message));
        }
    }
    disableMedia(id, closure) {
        var _a, _b;
        const pc = this.pcs.get(id);
        if (!pc) {
            // Media Already Disabled
            return closure(null);
        }
        pc.close();
        // trigger state change manually
        (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onConnectionChange(id, 'closed');
        this.pcs.delete(id);
        pc.getSenders().forEach((sender) => {
            var _a;
            (_a = sender.track) === null || _a === void 0 ? void 0 : _a.stop();
        });
        pc.getReceivers().forEach((receiver) => {
            var _a;
            (_a = receiver.track) === null || _a === void 0 ? void 0 : _a.stop();
        });
        if (this.pcs.size == 0) {
            (_b = this.audio) === null || _b === void 0 ? void 0 : _b.pause();
            this.audio = undefined;
        }
        closure(null);
    }
    disableNoiseSuppression(id, closure) {
        console.log(id);
        // TODO: Not yet implemented
        closure(null);
    }
    enableNoiseSuppression(id, closure) {
        console.log(id);
        // TODO: Not yet implemented
        closure(null);
    }
    // Private Methods
    setMediaTracksEnabled(id, value) {
        const pc = this.pcs.get(id);
        const transceiver = pc === null || pc === void 0 ? void 0 : pc.getTransceivers();
        const tracks = transceiver === null || transceiver === void 0 ? void 0 : transceiver.map((t) => t.sender.track);
        tracks === null || tracks === void 0 ? void 0 : tracks.forEach((t) => {
            if (t) {
                t.enabled = value;
            }
        });
    }
}

const PACKET_TYPES = Object.create(null); // no Map = no polyfill
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";
const PACKET_TYPES_REVERSE = Object.create(null);
Object.keys(PACKET_TYPES).forEach(key => {
    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});
const ERROR_PACKET = { type: "error", data: "parser error" };

const withNativeBlob$1 = typeof Blob === "function" ||
    (typeof Blob !== "undefined" &&
        Object.prototype.toString.call(Blob) === "[object BlobConstructor]");
const withNativeArrayBuffer$2 = typeof ArrayBuffer === "function";
// ArrayBuffer.isView method is not defined in IE10
const isView$1 = obj => {
    return typeof ArrayBuffer.isView === "function"
        ? ArrayBuffer.isView(obj)
        : obj && obj.buffer instanceof ArrayBuffer;
};
const encodePacket = ({ type, data }, supportsBinary, callback) => {
    if (withNativeBlob$1 && data instanceof Blob) {
        if (supportsBinary) {
            return callback(data);
        }
        else {
            return encodeBlobAsBase64(data, callback);
        }
    }
    else if (withNativeArrayBuffer$2 &&
        (data instanceof ArrayBuffer || isView$1(data))) {
        if (supportsBinary) {
            return callback(data);
        }
        else {
            return encodeBlobAsBase64(new Blob([data]), callback);
        }
    }
    // plain string
    return callback(PACKET_TYPES[type] + (data || ""));
};
const encodeBlobAsBase64 = (data, callback) => {
    const fileReader = new FileReader();
    fileReader.onload = function () {
        const content = fileReader.result.split(",")[1];
        callback("b" + (content || ""));
    };
    return fileReader.readAsDataURL(data);
};
function toArray(data) {
    if (data instanceof Uint8Array) {
        return data;
    }
    else if (data instanceof ArrayBuffer) {
        return new Uint8Array(data);
    }
    else {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);
    }
}
let TEXT_ENCODER;
function encodePacketToBinary(packet, callback) {
    if (withNativeBlob$1 && packet.data instanceof Blob) {
        return packet.data
            .arrayBuffer()
            .then(toArray)
            .then(callback);
    }
    else if (withNativeArrayBuffer$2 &&
        (packet.data instanceof ArrayBuffer || isView$1(packet.data))) {
        return callback(toArray(packet.data));
    }
    encodePacket(packet, false, encoded => {
        if (!TEXT_ENCODER) {
            TEXT_ENCODER = new TextEncoder();
        }
        callback(TEXT_ENCODER.encode(encoded));
    });
}

// imported from https://github.com/socketio/base64-arraybuffer
const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
// Use a lookup table to find the index.
const lookup$1 = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);
for (let i = 0; i < chars.length; i++) {
    lookup$1[chars.charCodeAt(i)] = i;
}
const decode$1 = (base64) => {
    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;
    if (base64[base64.length - 1] === '=') {
        bufferLength--;
        if (base64[base64.length - 2] === '=') {
            bufferLength--;
        }
    }
    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);
    for (i = 0; i < len; i += 4) {
        encoded1 = lookup$1[base64.charCodeAt(i)];
        encoded2 = lookup$1[base64.charCodeAt(i + 1)];
        encoded3 = lookup$1[base64.charCodeAt(i + 2)];
        encoded4 = lookup$1[base64.charCodeAt(i + 3)];
        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }
    return arraybuffer;
};

const withNativeArrayBuffer$1 = typeof ArrayBuffer === "function";
const decodePacket = (encodedPacket, binaryType) => {
    if (typeof encodedPacket !== "string") {
        return {
            type: "message",
            data: mapBinary(encodedPacket, binaryType)
        };
    }
    const type = encodedPacket.charAt(0);
    if (type === "b") {
        return {
            type: "message",
            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)
        };
    }
    const packetType = PACKET_TYPES_REVERSE[type];
    if (!packetType) {
        return ERROR_PACKET;
    }
    return encodedPacket.length > 1
        ? {
            type: PACKET_TYPES_REVERSE[type],
            data: encodedPacket.substring(1)
        }
        : {
            type: PACKET_TYPES_REVERSE[type]
        };
};
const decodeBase64Packet = (data, binaryType) => {
    if (withNativeArrayBuffer$1) {
        const decoded = decode$1(data);
        return mapBinary(decoded, binaryType);
    }
    else {
        return { base64: true, data }; // fallback for old browsers
    }
};
const mapBinary = (data, binaryType) => {
    switch (binaryType) {
        case "blob":
            if (data instanceof Blob) {
                // from WebSocket + binaryType "blob"
                return data;
            }
            else {
                // from HTTP long-polling or WebTransport
                return new Blob([data]);
            }
        case "arraybuffer":
        default:
            if (data instanceof ArrayBuffer) {
                // from HTTP long-polling (base64) or WebSocket + binaryType "arraybuffer"
                return data;
            }
            else {
                // from WebTransport (Uint8Array)
                return data.buffer;
            }
    }
};

const SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text
const encodePayload = (packets, callback) => {
    // some packets may be added to the array while encoding, so the initial length must be saved
    const length = packets.length;
    const encodedPackets = new Array(length);
    let count = 0;
    packets.forEach((packet, i) => {
        // force base64 encoding for binary packets
        encodePacket(packet, false, encodedPacket => {
            encodedPackets[i] = encodedPacket;
            if (++count === length) {
                callback(encodedPackets.join(SEPARATOR));
            }
        });
    });
};
const decodePayload = (encodedPayload, binaryType) => {
    const encodedPackets = encodedPayload.split(SEPARATOR);
    const packets = [];
    for (let i = 0; i < encodedPackets.length; i++) {
        const decodedPacket = decodePacket(encodedPackets[i], binaryType);
        packets.push(decodedPacket);
        if (decodedPacket.type === "error") {
            break;
        }
    }
    return packets;
};
function createPacketEncoderStream() {
    return new TransformStream({
        transform(packet, controller) {
            encodePacketToBinary(packet, encodedPacket => {
                const payloadLength = encodedPacket.length;
                let header;
                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length
                if (payloadLength < 126) {
                    header = new Uint8Array(1);
                    new DataView(header.buffer).setUint8(0, payloadLength);
                }
                else if (payloadLength < 65536) {
                    header = new Uint8Array(3);
                    const view = new DataView(header.buffer);
                    view.setUint8(0, 126);
                    view.setUint16(1, payloadLength);
                }
                else {
                    header = new Uint8Array(9);
                    const view = new DataView(header.buffer);
                    view.setUint8(0, 127);
                    view.setBigUint64(1, BigInt(payloadLength));
                }
                // first bit indicates whether the payload is plain text (0) or binary (1)
                if (packet.data && typeof packet.data !== "string") {
                    header[0] |= 0x80;
                }
                controller.enqueue(header);
                controller.enqueue(encodedPacket);
            });
        }
    });
}
let TEXT_DECODER;
function totalLength(chunks) {
    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);
}
function concatChunks(chunks, size) {
    if (chunks[0].length === size) {
        return chunks.shift();
    }
    const buffer = new Uint8Array(size);
    let j = 0;
    for (let i = 0; i < size; i++) {
        buffer[i] = chunks[0][j++];
        if (j === chunks[0].length) {
            chunks.shift();
            j = 0;
        }
    }
    if (chunks.length && j < chunks[0].length) {
        chunks[0] = chunks[0].slice(j);
    }
    return buffer;
}
function createPacketDecoderStream(maxPayload, binaryType) {
    if (!TEXT_DECODER) {
        TEXT_DECODER = new TextDecoder();
    }
    const chunks = [];
    let state = 0 /* READ_HEADER */;
    let expectedLength = -1;
    let isBinary = false;
    return new TransformStream({
        transform(chunk, controller) {
            chunks.push(chunk);
            while (true) {
                if (state === 0 /* READ_HEADER */) {
                    if (totalLength(chunks) < 1) {
                        break;
                    }
                    const header = concatChunks(chunks, 1);
                    isBinary = (header[0] & 0x80) === 0x80;
                    expectedLength = header[0] & 0x7f;
                    if (expectedLength < 126) {
                        state = 3 /* READ_PAYLOAD */;
                    }
                    else if (expectedLength === 126) {
                        state = 1 /* READ_EXTENDED_LENGTH_16 */;
                    }
                    else {
                        state = 2 /* READ_EXTENDED_LENGTH_64 */;
                    }
                }
                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {
                    if (totalLength(chunks) < 2) {
                        break;
                    }
                    const headerArray = concatChunks(chunks, 2);
                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);
                    state = 3 /* READ_PAYLOAD */;
                }
                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {
                    if (totalLength(chunks) < 8) {
                        break;
                    }
                    const headerArray = concatChunks(chunks, 8);
                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);
                    const n = view.getUint32(0);
                    if (n > Math.pow(2, 53 - 32) - 1) {
                        // the maximum safe integer in JavaScript is 2^53 - 1
                        controller.enqueue(ERROR_PACKET);
                        break;
                    }
                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);
                    state = 3 /* READ_PAYLOAD */;
                }
                else {
                    if (totalLength(chunks) < expectedLength) {
                        break;
                    }
                    const data = concatChunks(chunks, expectedLength);
                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));
                    state = 0 /* READ_HEADER */;
                }
                if (expectedLength === 0 || expectedLength > maxPayload) {
                    controller.enqueue(ERROR_PACKET);
                    break;
                }
            }
        }
    });
}
const protocol$1 = 4;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
}

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  // Remove event specific arrays for event types that no
  // one is subscribed for to avoid memory leak.
  if (callbacks.length === 0) {
    delete this._callbacks['$' + event];
  }

  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};

  var args = new Array(arguments.length - 1)
    , callbacks = this._callbacks['$' + event];

  for (var i = 1; i < arguments.length; i++) {
    args[i - 1] = arguments[i];
  }

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

// alias used for reserved events (protected method)
Emitter.prototype.emitReserved = Emitter.prototype.emit;

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

const globalThisShim = (() => {
    if (typeof self !== "undefined") {
        return self;
    }
    else if (typeof window !== "undefined") {
        return window;
    }
    else {
        return Function("return this")();
    }
})();

function pick(obj, ...attr) {
    return attr.reduce((acc, k) => {
        if (obj.hasOwnProperty(k)) {
            acc[k] = obj[k];
        }
        return acc;
    }, {});
}
// Keep a reference to the real timeout functions so they can be used when overridden
const NATIVE_SET_TIMEOUT = globalThisShim.setTimeout;
const NATIVE_CLEAR_TIMEOUT = globalThisShim.clearTimeout;
function installTimerFunctions(obj, opts) {
    if (opts.useNativeTimers) {
        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThisShim);
        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThisShim);
    }
    else {
        obj.setTimeoutFn = globalThisShim.setTimeout.bind(globalThisShim);
        obj.clearTimeoutFn = globalThisShim.clearTimeout.bind(globalThisShim);
    }
}
// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)
const BASE64_OVERHEAD = 1.33;
// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9
function byteLength(obj) {
    if (typeof obj === "string") {
        return utf8Length(obj);
    }
    // arraybuffer or blob
    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);
}
function utf8Length(str) {
    let c = 0, length = 0;
    for (let i = 0, l = str.length; i < l; i++) {
        c = str.charCodeAt(i);
        if (c < 0x80) {
            length += 1;
        }
        else if (c < 0x800) {
            length += 2;
        }
        else if (c < 0xd800 || c >= 0xe000) {
            length += 3;
        }
        else {
            i++;
            length += 4;
        }
    }
    return length;
}

// imported from https://github.com/galkn/querystring
/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */
function encode$1(obj) {
    let str = '';
    for (let i in obj) {
        if (obj.hasOwnProperty(i)) {
            if (str.length)
                str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
        }
    }
    return str;
}
/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */
function decode(qs) {
    let qry = {};
    let pairs = qs.split('&');
    for (let i = 0, l = pairs.length; i < l; i++) {
        let pair = pairs[i].split('=');
        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
    }
    return qry;
}

class TransportError extends Error {
    constructor(reason, description, context) {
        super(reason);
        this.description = description;
        this.context = context;
        this.type = "TransportError";
    }
}
class Transport extends Emitter {
    /**
     * Transport abstract constructor.
     *
     * @param {Object} opts - options
     * @protected
     */
    constructor(opts) {
        super();
        this.writable = false;
        installTimerFunctions(this, opts);
        this.opts = opts;
        this.query = opts.query;
        this.socket = opts.socket;
    }
    /**
     * Emits an error.
     *
     * @param {String} reason
     * @param description
     * @param context - the error context
     * @return {Transport} for chaining
     * @protected
     */
    onError(reason, description, context) {
        super.emitReserved("error", new TransportError(reason, description, context));
        return this;
    }
    /**
     * Opens the transport.
     */
    open() {
        this.readyState = "opening";
        this.doOpen();
        return this;
    }
    /**
     * Closes the transport.
     */
    close() {
        if (this.readyState === "opening" || this.readyState === "open") {
            this.doClose();
            this.onClose();
        }
        return this;
    }
    /**
     * Sends multiple packets.
     *
     * @param {Array} packets
     */
    send(packets) {
        if (this.readyState === "open") {
            this.write(packets);
        }
    }
    /**
     * Called upon open
     *
     * @protected
     */
    onOpen() {
        this.readyState = "open";
        this.writable = true;
        super.emitReserved("open");
    }
    /**
     * Called with data.
     *
     * @param {String} data
     * @protected
     */
    onData(data) {
        const packet = decodePacket(data, this.socket.binaryType);
        this.onPacket(packet);
    }
    /**
     * Called with a decoded packet.
     *
     * @protected
     */
    onPacket(packet) {
        super.emitReserved("packet", packet);
    }
    /**
     * Called upon close.
     *
     * @protected
     */
    onClose(details) {
        this.readyState = "closed";
        super.emitReserved("close", details);
    }
    /**
     * Pauses the transport, in order not to lose packets during an upgrade.
     *
     * @param onPause
     */
    pause(onPause) { }
    createUri(schema, query = {}) {
        return (schema +
            "://" +
            this._hostname() +
            this._port() +
            this.opts.path +
            this._query(query));
    }
    _hostname() {
        const hostname = this.opts.hostname;
        return hostname.indexOf(":") === -1 ? hostname : "[" + hostname + "]";
    }
    _port() {
        if (this.opts.port &&
            ((this.opts.secure && Number(this.opts.port !== 443)) ||
                (!this.opts.secure && Number(this.opts.port) !== 80))) {
            return ":" + this.opts.port;
        }
        else {
            return "";
        }
    }
    _query(query) {
        const encodedQuery = encode$1(query);
        return encodedQuery.length ? "?" + encodedQuery : "";
    }
}

// imported from https://github.com/unshiftio/yeast
const alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};
let seed = 0, i = 0, prev;
/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
    let encoded = '';
    do {
        encoded = alphabet[num % length] + encoded;
        num = Math.floor(num / length);
    } while (num > 0);
    return encoded;
}
/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
    const now = encode(+new Date());
    if (now !== prev)
        return seed = 0, prev = now;
    return now + '.' + encode(seed++);
}
//
// Map each character to its index.
//
for (; i < length; i++)
    map[alphabet[i]] = i;

// imported from https://github.com/component/has-cors
let value = false;
try {
    value = typeof XMLHttpRequest !== 'undefined' &&
        'withCredentials' in new XMLHttpRequest();
}
catch (err) {
    // if XMLHttp support is disabled in IE then it will throw
    // when trying to create
}
const hasCORS = value;

// browser shim for xmlhttprequest module
function XHR(opts) {
    const xdomain = opts.xdomain;
    // XMLHttpRequest can be disabled on IE
    try {
        if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
            return new XMLHttpRequest();
        }
    }
    catch (e) { }
    if (!xdomain) {
        try {
            return new globalThisShim[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
        }
        catch (e) { }
    }
}
function createCookieJar() { }

function empty() { }
const hasXHR2 = (function () {
    const xhr = new XHR({
        xdomain: false,
    });
    return null != xhr.responseType;
})();
class Polling extends Transport {
    /**
     * XHR Polling constructor.
     *
     * @param {Object} opts
     * @package
     */
    constructor(opts) {
        super(opts);
        this.polling = false;
        if (typeof location !== "undefined") {
            const isSSL = "https:" === location.protocol;
            let port = location.port;
            // some user agents have empty `location.port`
            if (!port) {
                port = isSSL ? "443" : "80";
            }
            this.xd =
                (typeof location !== "undefined" &&
                    opts.hostname !== location.hostname) ||
                    port !== opts.port;
        }
        /**
         * XHR supports binary
         */
        const forceBase64 = opts && opts.forceBase64;
        this.supportsBinary = hasXHR2 && !forceBase64;
        if (this.opts.withCredentials) {
            this.cookieJar = createCookieJar();
        }
    }
    get name() {
        return "polling";
    }
    /**
     * Opens the socket (triggers polling). We write a PING message to determine
     * when the transport is open.
     *
     * @protected
     */
    doOpen() {
        this.poll();
    }
    /**
     * Pauses polling.
     *
     * @param {Function} onPause - callback upon buffers are flushed and transport is paused
     * @package
     */
    pause(onPause) {
        this.readyState = "pausing";
        const pause = () => {
            this.readyState = "paused";
            onPause();
        };
        if (this.polling || !this.writable) {
            let total = 0;
            if (this.polling) {
                total++;
                this.once("pollComplete", function () {
                    --total || pause();
                });
            }
            if (!this.writable) {
                total++;
                this.once("drain", function () {
                    --total || pause();
                });
            }
        }
        else {
            pause();
        }
    }
    /**
     * Starts polling cycle.
     *
     * @private
     */
    poll() {
        this.polling = true;
        this.doPoll();
        this.emitReserved("poll");
    }
    /**
     * Overloads onData to detect payloads.
     *
     * @protected
     */
    onData(data) {
        const callback = (packet) => {
            // if its the first message we consider the transport open
            if ("opening" === this.readyState && packet.type === "open") {
                this.onOpen();
            }
            // if its a close packet, we close the ongoing requests
            if ("close" === packet.type) {
                this.onClose({ description: "transport closed by the server" });
                return false;
            }
            // otherwise bypass onData and handle the message
            this.onPacket(packet);
        };
        // decode payload
        decodePayload(data, this.socket.binaryType).forEach(callback);
        // if an event did not trigger closing
        if ("closed" !== this.readyState) {
            // if we got data we're not polling
            this.polling = false;
            this.emitReserved("pollComplete");
            if ("open" === this.readyState) {
                this.poll();
            }
        }
    }
    /**
     * For polling, send a close packet.
     *
     * @protected
     */
    doClose() {
        const close = () => {
            this.write([{ type: "close" }]);
        };
        if ("open" === this.readyState) {
            close();
        }
        else {
            // in case we're trying to close while
            // handshaking is in progress (GH-164)
            this.once("open", close);
        }
    }
    /**
     * Writes a packets payload.
     *
     * @param {Array} packets - data packets
     * @protected
     */
    write(packets) {
        this.writable = false;
        encodePayload(packets, (data) => {
            this.doWrite(data, () => {
                this.writable = true;
                this.emitReserved("drain");
            });
        });
    }
    /**
     * Generates uri for connection.
     *
     * @private
     */
    uri() {
        const schema = this.opts.secure ? "https" : "http";
        const query = this.query || {};
        // cache busting is forced
        if (false !== this.opts.timestampRequests) {
            query[this.opts.timestampParam] = yeast();
        }
        if (!this.supportsBinary && !query.sid) {
            query.b64 = 1;
        }
        return this.createUri(schema, query);
    }
    /**
     * Creates a request.
     *
     * @param {String} method
     * @private
     */
    request(opts = {}) {
        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);
        return new Request(this.uri(), opts);
    }
    /**
     * Sends data.
     *
     * @param {String} data to send.
     * @param {Function} called upon flush.
     * @private
     */
    doWrite(data, fn) {
        const req = this.request({
            method: "POST",
            data: data,
        });
        req.on("success", fn);
        req.on("error", (xhrStatus, context) => {
            this.onError("xhr post error", xhrStatus, context);
        });
    }
    /**
     * Starts a poll cycle.
     *
     * @private
     */
    doPoll() {
        const req = this.request();
        req.on("data", this.onData.bind(this));
        req.on("error", (xhrStatus, context) => {
            this.onError("xhr poll error", xhrStatus, context);
        });
        this.pollXhr = req;
    }
}
class Request extends Emitter {
    /**
     * Request constructor
     *
     * @param {Object} options
     * @package
     */
    constructor(uri, opts) {
        super();
        installTimerFunctions(this, opts);
        this.opts = opts;
        this.method = opts.method || "GET";
        this.uri = uri;
        this.data = undefined !== opts.data ? opts.data : null;
        this.create();
    }
    /**
     * Creates the XHR object and sends the request.
     *
     * @private
     */
    create() {
        var _a;
        const opts = pick(this.opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
        opts.xdomain = !!this.opts.xd;
        const xhr = (this.xhr = new XHR(opts));
        try {
            xhr.open(this.method, this.uri, true);
            try {
                if (this.opts.extraHeaders) {
                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
                    for (let i in this.opts.extraHeaders) {
                        if (this.opts.extraHeaders.hasOwnProperty(i)) {
                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);
                        }
                    }
                }
            }
            catch (e) { }
            if ("POST" === this.method) {
                try {
                    xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                }
                catch (e) { }
            }
            try {
                xhr.setRequestHeader("Accept", "*/*");
            }
            catch (e) { }
            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);
            // ie6 check
            if ("withCredentials" in xhr) {
                xhr.withCredentials = this.opts.withCredentials;
            }
            if (this.opts.requestTimeout) {
                xhr.timeout = this.opts.requestTimeout;
            }
            xhr.onreadystatechange = () => {
                var _a;
                if (xhr.readyState === 3) {
                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);
                }
                if (4 !== xhr.readyState)
                    return;
                if (200 === xhr.status || 1223 === xhr.status) {
                    this.onLoad();
                }
                else {
                    // make sure the `error` event handler that's user-set
                    // does not throw in the same tick and gets caught here
                    this.setTimeoutFn(() => {
                        this.onError(typeof xhr.status === "number" ? xhr.status : 0);
                    }, 0);
                }
            };
            xhr.send(this.data);
        }
        catch (e) {
            // Need to defer since .create() is called directly from the constructor
            // and thus the 'error' event can only be only bound *after* this exception
            // occurs.  Therefore, also, we cannot throw here at all.
            this.setTimeoutFn(() => {
                this.onError(e);
            }, 0);
            return;
        }
        if (typeof document !== "undefined") {
            this.index = Request.requestsCount++;
            Request.requests[this.index] = this;
        }
    }
    /**
     * Called upon error.
     *
     * @private
     */
    onError(err) {
        this.emitReserved("error", err, this.xhr);
        this.cleanup(true);
    }
    /**
     * Cleans up house.
     *
     * @private
     */
    cleanup(fromError) {
        if ("undefined" === typeof this.xhr || null === this.xhr) {
            return;
        }
        this.xhr.onreadystatechange = empty;
        if (fromError) {
            try {
                this.xhr.abort();
            }
            catch (e) { }
        }
        if (typeof document !== "undefined") {
            delete Request.requests[this.index];
        }
        this.xhr = null;
    }
    /**
     * Called upon load.
     *
     * @private
     */
    onLoad() {
        const data = this.xhr.responseText;
        if (data !== null) {
            this.emitReserved("data", data);
            this.emitReserved("success");
            this.cleanup();
        }
    }
    /**
     * Aborts the request.
     *
     * @package
     */
    abort() {
        this.cleanup();
    }
}
Request.requestsCount = 0;
Request.requests = {};
/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */
if (typeof document !== "undefined") {
    // @ts-ignore
    if (typeof attachEvent === "function") {
        // @ts-ignore
        attachEvent("onunload", unloadHandler);
    }
    else if (typeof addEventListener === "function") {
        const terminationEvent = "onpagehide" in globalThisShim ? "pagehide" : "unload";
        addEventListener(terminationEvent, unloadHandler, false);
    }
}
function unloadHandler() {
    for (let i in Request.requests) {
        if (Request.requests.hasOwnProperty(i)) {
            Request.requests[i].abort();
        }
    }
}

const nextTick = (() => {
    const isPromiseAvailable = typeof Promise === "function" && typeof Promise.resolve === "function";
    if (isPromiseAvailable) {
        return (cb) => Promise.resolve().then(cb);
    }
    else {
        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);
    }
})();
const WebSocket = globalThisShim.WebSocket || globalThisShim.MozWebSocket;
const usingBrowserWebSocket = true;
const defaultBinaryType = "arraybuffer";

// detect ReactNative environment
const isReactNative = typeof navigator !== "undefined" &&
    typeof navigator.product === "string" &&
    navigator.product.toLowerCase() === "reactnative";
class WS extends Transport {
    /**
     * WebSocket transport constructor.
     *
     * @param {Object} opts - connection options
     * @protected
     */
    constructor(opts) {
        super(opts);
        this.supportsBinary = !opts.forceBase64;
    }
    get name() {
        return "websocket";
    }
    doOpen() {
        if (!this.check()) {
            // let probe timeout
            return;
        }
        const uri = this.uri();
        const protocols = this.opts.protocols;
        // React Native only supports the 'headers' option, and will print a warning if anything else is passed
        const opts = isReactNative
            ? {}
            : pick(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
        if (this.opts.extraHeaders) {
            opts.headers = this.opts.extraHeaders;
        }
        try {
            this.ws =
                usingBrowserWebSocket && !isReactNative
                    ? protocols
                        ? new WebSocket(uri, protocols)
                        : new WebSocket(uri)
                    : new WebSocket(uri, protocols, opts);
        }
        catch (err) {
            return this.emitReserved("error", err);
        }
        this.ws.binaryType = this.socket.binaryType;
        this.addEventListeners();
    }
    /**
     * Adds event listeners to the socket
     *
     * @private
     */
    addEventListeners() {
        this.ws.onopen = () => {
            if (this.opts.autoUnref) {
                this.ws._socket.unref();
            }
            this.onOpen();
        };
        this.ws.onclose = (closeEvent) => this.onClose({
            description: "websocket connection closed",
            context: closeEvent,
        });
        this.ws.onmessage = (ev) => this.onData(ev.data);
        this.ws.onerror = (e) => this.onError("websocket error", e);
    }
    write(packets) {
        this.writable = false;
        // encodePacket efficient as it uses WS framing
        // no need for encodePayload
        for (let i = 0; i < packets.length; i++) {
            const packet = packets[i];
            const lastPacket = i === packets.length - 1;
            encodePacket(packet, this.supportsBinary, (data) => {
                // always create a new object (GH-437)
                const opts = {};
                // Sometimes the websocket has already been closed but the browser didn't
                // have a chance of informing us about it yet, in that case send will
                // throw an error
                try {
                    if (usingBrowserWebSocket) {
                        // TypeError is thrown when passing the second argument on Safari
                        this.ws.send(data);
                    }
                }
                catch (e) {
                }
                if (lastPacket) {
                    // fake drain
                    // defer to next tick to allow Socket to clear writeBuffer
                    nextTick(() => {
                        this.writable = true;
                        this.emitReserved("drain");
                    }, this.setTimeoutFn);
                }
            });
        }
    }
    doClose() {
        if (typeof this.ws !== "undefined") {
            this.ws.close();
            this.ws = null;
        }
    }
    /**
     * Generates uri for connection.
     *
     * @private
     */
    uri() {
        const schema = this.opts.secure ? "wss" : "ws";
        const query = this.query || {};
        // append timestamp to URI
        if (this.opts.timestampRequests) {
            query[this.opts.timestampParam] = yeast();
        }
        // communicate binary support capabilities
        if (!this.supportsBinary) {
            query.b64 = 1;
        }
        return this.createUri(schema, query);
    }
    /**
     * Feature detection for WebSocket.
     *
     * @return {Boolean} whether this transport is available.
     * @private
     */
    check() {
        return !!WebSocket;
    }
}

class WT extends Transport {
    get name() {
        return "webtransport";
    }
    doOpen() {
        // @ts-ignore
        if (typeof WebTransport !== "function") {
            return;
        }
        // @ts-ignore
        this.transport = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
        this.transport.closed
            .then(() => {
            this.onClose();
        })
            .catch((err) => {
            this.onError("webtransport error", err);
        });
        // note: we could have used async/await, but that would require some additional polyfills
        this.transport.ready.then(() => {
            this.transport.createBidirectionalStream().then((stream) => {
                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);
                const reader = stream.readable.pipeThrough(decoderStream).getReader();
                const encoderStream = createPacketEncoderStream();
                encoderStream.readable.pipeTo(stream.writable);
                this.writer = encoderStream.writable.getWriter();
                const read = () => {
                    reader
                        .read()
                        .then(({ done, value }) => {
                        if (done) {
                            return;
                        }
                        this.onPacket(value);
                        read();
                    })
                        .catch((err) => {
                    });
                };
                read();
                const packet = { type: "open" };
                if (this.query.sid) {
                    packet.data = `{"sid":"${this.query.sid}"}`;
                }
                this.writer.write(packet).then(() => this.onOpen());
            });
        });
    }
    write(packets) {
        this.writable = false;
        for (let i = 0; i < packets.length; i++) {
            const packet = packets[i];
            const lastPacket = i === packets.length - 1;
            this.writer.write(packet).then(() => {
                if (lastPacket) {
                    nextTick(() => {
                        this.writable = true;
                        this.emitReserved("drain");
                    }, this.setTimeoutFn);
                }
            });
        }
    }
    doClose() {
        var _a;
        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();
    }
}

const transports = {
    websocket: WS,
    webtransport: WT,
    polling: Polling,
};

// imported from https://github.com/galkn/parseuri
/**
 * Parses a URI
 *
 * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.
 *
 * See:
 * - https://developer.mozilla.org/en-US/docs/Web/API/URL
 * - https://caniuse.com/url
 * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B
 *
 * History of the parse() method:
 * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c
 * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3
 * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */
const re = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
const parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];
function parse(str) {
    const src = str, b = str.indexOf('['), e = str.indexOf(']');
    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }
    let m = re.exec(str || ''), uri = {}, i = 14;
    while (i--) {
        uri[parts[i]] = m[i] || '';
    }
    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }
    uri.pathNames = pathNames(uri, uri['path']);
    uri.queryKey = queryKey(uri, uri['query']);
    return uri;
}
function pathNames(obj, path) {
    const regx = /\/{2,9}/g, names = path.replace(regx, "/").split("/");
    if (path.slice(0, 1) == '/' || path.length === 0) {
        names.splice(0, 1);
    }
    if (path.slice(-1) == '/') {
        names.splice(names.length - 1, 1);
    }
    return names;
}
function queryKey(uri, query) {
    const data = {};
    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
        if ($1) {
            data[$1] = $2;
        }
    });
    return data;
}

let Socket$1 = class Socket extends Emitter {
    /**
     * Socket constructor.
     *
     * @param {String|Object} uri - uri or options
     * @param {Object} opts - options
     */
    constructor(uri, opts = {}) {
        super();
        this.binaryType = defaultBinaryType;
        this.writeBuffer = [];
        if (uri && "object" === typeof uri) {
            opts = uri;
            uri = null;
        }
        if (uri) {
            uri = parse(uri);
            opts.hostname = uri.host;
            opts.secure = uri.protocol === "https" || uri.protocol === "wss";
            opts.port = uri.port;
            if (uri.query)
                opts.query = uri.query;
        }
        else if (opts.host) {
            opts.hostname = parse(opts.host).host;
        }
        installTimerFunctions(this, opts);
        this.secure =
            null != opts.secure
                ? opts.secure
                : typeof location !== "undefined" && "https:" === location.protocol;
        if (opts.hostname && !opts.port) {
            // if no port is specified manually, use the protocol default
            opts.port = this.secure ? "443" : "80";
        }
        this.hostname =
            opts.hostname ||
                (typeof location !== "undefined" ? location.hostname : "localhost");
        this.port =
            opts.port ||
                (typeof location !== "undefined" && location.port
                    ? location.port
                    : this.secure
                        ? "443"
                        : "80");
        this.transports = opts.transports || [
            "polling",
            "websocket",
            "webtransport",
        ];
        this.writeBuffer = [];
        this.prevBufferLen = 0;
        this.opts = Object.assign({
            path: "/engine.io",
            agent: false,
            withCredentials: false,
            upgrade: true,
            timestampParam: "t",
            rememberUpgrade: false,
            addTrailingSlash: true,
            rejectUnauthorized: true,
            perMessageDeflate: {
                threshold: 1024,
            },
            transportOptions: {},
            closeOnBeforeunload: false,
        }, opts);
        this.opts.path =
            this.opts.path.replace(/\/$/, "") +
                (this.opts.addTrailingSlash ? "/" : "");
        if (typeof this.opts.query === "string") {
            this.opts.query = decode(this.opts.query);
        }
        // set on handshake
        this.id = null;
        this.upgrades = null;
        this.pingInterval = null;
        this.pingTimeout = null;
        // set on heartbeat
        this.pingTimeoutTimer = null;
        if (typeof addEventListener === "function") {
            if (this.opts.closeOnBeforeunload) {
                // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener
                // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is
                // closed/reloaded)
                this.beforeunloadEventListener = () => {
                    if (this.transport) {
                        // silently close the transport
                        this.transport.removeAllListeners();
                        this.transport.close();
                    }
                };
                addEventListener("beforeunload", this.beforeunloadEventListener, false);
            }
            if (this.hostname !== "localhost") {
                this.offlineEventListener = () => {
                    this.onClose("transport close", {
                        description: "network connection lost",
                    });
                };
                addEventListener("offline", this.offlineEventListener, false);
            }
        }
        this.open();
    }
    /**
     * Creates transport of the given type.
     *
     * @param {String} name - transport name
     * @return {Transport}
     * @private
     */
    createTransport(name) {
        const query = Object.assign({}, this.opts.query);
        // append engine.io protocol identifier
        query.EIO = protocol$1;
        // transport name
        query.transport = name;
        // session id if we already have one
        if (this.id)
            query.sid = this.id;
        const opts = Object.assign({}, this.opts, {
            query,
            socket: this,
            hostname: this.hostname,
            secure: this.secure,
            port: this.port,
        }, this.opts.transportOptions[name]);
        return new transports[name](opts);
    }
    /**
     * Initializes transport to use and starts probe.
     *
     * @private
     */
    open() {
        let transport;
        if (this.opts.rememberUpgrade &&
            Socket$1.priorWebsocketSuccess &&
            this.transports.indexOf("websocket") !== -1) {
            transport = "websocket";
        }
        else if (0 === this.transports.length) {
            // Emit error on next tick so it can be listened to
            this.setTimeoutFn(() => {
                this.emitReserved("error", "No transports available");
            }, 0);
            return;
        }
        else {
            transport = this.transports[0];
        }
        this.readyState = "opening";
        // Retry with the next transport if the transport is disabled (jsonp: false)
        try {
            transport = this.createTransport(transport);
        }
        catch (e) {
            this.transports.shift();
            this.open();
            return;
        }
        transport.open();
        this.setTransport(transport);
    }
    /**
     * Sets the current transport. Disables the existing one (if any).
     *
     * @private
     */
    setTransport(transport) {
        if (this.transport) {
            this.transport.removeAllListeners();
        }
        // set up transport
        this.transport = transport;
        // set up transport listeners
        transport
            .on("drain", this.onDrain.bind(this))
            .on("packet", this.onPacket.bind(this))
            .on("error", this.onError.bind(this))
            .on("close", (reason) => this.onClose("transport close", reason));
    }
    /**
     * Probes a transport.
     *
     * @param {String} name - transport name
     * @private
     */
    probe(name) {
        let transport = this.createTransport(name);
        let failed = false;
        Socket$1.priorWebsocketSuccess = false;
        const onTransportOpen = () => {
            if (failed)
                return;
            transport.send([{ type: "ping", data: "probe" }]);
            transport.once("packet", (msg) => {
                if (failed)
                    return;
                if ("pong" === msg.type && "probe" === msg.data) {
                    this.upgrading = true;
                    this.emitReserved("upgrading", transport);
                    if (!transport)
                        return;
                    Socket$1.priorWebsocketSuccess = "websocket" === transport.name;
                    this.transport.pause(() => {
                        if (failed)
                            return;
                        if ("closed" === this.readyState)
                            return;
                        cleanup();
                        this.setTransport(transport);
                        transport.send([{ type: "upgrade" }]);
                        this.emitReserved("upgrade", transport);
                        transport = null;
                        this.upgrading = false;
                        this.flush();
                    });
                }
                else {
                    const err = new Error("probe error");
                    // @ts-ignore
                    err.transport = transport.name;
                    this.emitReserved("upgradeError", err);
                }
            });
        };
        function freezeTransport() {
            if (failed)
                return;
            // Any callback called by transport should be ignored since now
            failed = true;
            cleanup();
            transport.close();
            transport = null;
        }
        // Handle any error that happens while probing
        const onerror = (err) => {
            const error = new Error("probe error: " + err);
            // @ts-ignore
            error.transport = transport.name;
            freezeTransport();
            this.emitReserved("upgradeError", error);
        };
        function onTransportClose() {
            onerror("transport closed");
        }
        // When the socket is closed while we're probing
        function onclose() {
            onerror("socket closed");
        }
        // When the socket is upgraded while we're probing
        function onupgrade(to) {
            if (transport && to.name !== transport.name) {
                freezeTransport();
            }
        }
        // Remove all listeners on the transport and on self
        const cleanup = () => {
            transport.removeListener("open", onTransportOpen);
            transport.removeListener("error", onerror);
            transport.removeListener("close", onTransportClose);
            this.off("close", onclose);
            this.off("upgrading", onupgrade);
        };
        transport.once("open", onTransportOpen);
        transport.once("error", onerror);
        transport.once("close", onTransportClose);
        this.once("close", onclose);
        this.once("upgrading", onupgrade);
        if (this.upgrades.indexOf("webtransport") !== -1 &&
            name !== "webtransport") {
            // favor WebTransport
            this.setTimeoutFn(() => {
                if (!failed) {
                    transport.open();
                }
            }, 200);
        }
        else {
            transport.open();
        }
    }
    /**
     * Called when connection is deemed open.
     *
     * @private
     */
    onOpen() {
        this.readyState = "open";
        Socket$1.priorWebsocketSuccess = "websocket" === this.transport.name;
        this.emitReserved("open");
        this.flush();
        // we check for `readyState` in case an `open`
        // listener already closed the socket
        if ("open" === this.readyState && this.opts.upgrade) {
            let i = 0;
            const l = this.upgrades.length;
            for (; i < l; i++) {
                this.probe(this.upgrades[i]);
            }
        }
    }
    /**
     * Handles a packet.
     *
     * @private
     */
    onPacket(packet) {
        if ("opening" === this.readyState ||
            "open" === this.readyState ||
            "closing" === this.readyState) {
            this.emitReserved("packet", packet);
            // Socket is live - any packet counts
            this.emitReserved("heartbeat");
            this.resetPingTimeout();
            switch (packet.type) {
                case "open":
                    this.onHandshake(JSON.parse(packet.data));
                    break;
                case "ping":
                    this.sendPacket("pong");
                    this.emitReserved("ping");
                    this.emitReserved("pong");
                    break;
                case "error":
                    const err = new Error("server error");
                    // @ts-ignore
                    err.code = packet.data;
                    this.onError(err);
                    break;
                case "message":
                    this.emitReserved("data", packet.data);
                    this.emitReserved("message", packet.data);
                    break;
            }
        }
    }
    /**
     * Called upon handshake completion.
     *
     * @param {Object} data - handshake obj
     * @private
     */
    onHandshake(data) {
        this.emitReserved("handshake", data);
        this.id = data.sid;
        this.transport.query.sid = data.sid;
        this.upgrades = this.filterUpgrades(data.upgrades);
        this.pingInterval = data.pingInterval;
        this.pingTimeout = data.pingTimeout;
        this.maxPayload = data.maxPayload;
        this.onOpen();
        // In case open handler closes socket
        if ("closed" === this.readyState)
            return;
        this.resetPingTimeout();
    }
    /**
     * Sets and resets ping timeout timer based on server pings.
     *
     * @private
     */
    resetPingTimeout() {
        this.clearTimeoutFn(this.pingTimeoutTimer);
        this.pingTimeoutTimer = this.setTimeoutFn(() => {
            this.onClose("ping timeout");
        }, this.pingInterval + this.pingTimeout);
        if (this.opts.autoUnref) {
            this.pingTimeoutTimer.unref();
        }
    }
    /**
     * Called on `drain` event
     *
     * @private
     */
    onDrain() {
        this.writeBuffer.splice(0, this.prevBufferLen);
        // setting prevBufferLen = 0 is very important
        // for example, when upgrading, upgrade packet is sent over,
        // and a nonzero prevBufferLen could cause problems on `drain`
        this.prevBufferLen = 0;
        if (0 === this.writeBuffer.length) {
            this.emitReserved("drain");
        }
        else {
            this.flush();
        }
    }
    /**
     * Flush write buffers.
     *
     * @private
     */
    flush() {
        if ("closed" !== this.readyState &&
            this.transport.writable &&
            !this.upgrading &&
            this.writeBuffer.length) {
            const packets = this.getWritablePackets();
            this.transport.send(packets);
            // keep track of current length of writeBuffer
            // splice writeBuffer and callbackBuffer on `drain`
            this.prevBufferLen = packets.length;
            this.emitReserved("flush");
        }
    }
    /**
     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP
     * long-polling)
     *
     * @private
     */
    getWritablePackets() {
        const shouldCheckPayloadSize = this.maxPayload &&
            this.transport.name === "polling" &&
            this.writeBuffer.length > 1;
        if (!shouldCheckPayloadSize) {
            return this.writeBuffer;
        }
        let payloadSize = 1; // first packet type
        for (let i = 0; i < this.writeBuffer.length; i++) {
            const data = this.writeBuffer[i].data;
            if (data) {
                payloadSize += byteLength(data);
            }
            if (i > 0 && payloadSize > this.maxPayload) {
                return this.writeBuffer.slice(0, i);
            }
            payloadSize += 2; // separator + packet type
        }
        return this.writeBuffer;
    }
    /**
     * Sends a message.
     *
     * @param {String} msg - message.
     * @param {Object} options.
     * @param {Function} callback function.
     * @return {Socket} for chaining.
     */
    write(msg, options, fn) {
        this.sendPacket("message", msg, options, fn);
        return this;
    }
    send(msg, options, fn) {
        this.sendPacket("message", msg, options, fn);
        return this;
    }
    /**
     * Sends a packet.
     *
     * @param {String} type: packet type.
     * @param {String} data.
     * @param {Object} options.
     * @param {Function} fn - callback function.
     * @private
     */
    sendPacket(type, data, options, fn) {
        if ("function" === typeof data) {
            fn = data;
            data = undefined;
        }
        if ("function" === typeof options) {
            fn = options;
            options = null;
        }
        if ("closing" === this.readyState || "closed" === this.readyState) {
            return;
        }
        options = options || {};
        options.compress = false !== options.compress;
        const packet = {
            type: type,
            data: data,
            options: options,
        };
        this.emitReserved("packetCreate", packet);
        this.writeBuffer.push(packet);
        if (fn)
            this.once("flush", fn);
        this.flush();
    }
    /**
     * Closes the connection.
     */
    close() {
        const close = () => {
            this.onClose("forced close");
            this.transport.close();
        };
        const cleanupAndClose = () => {
            this.off("upgrade", cleanupAndClose);
            this.off("upgradeError", cleanupAndClose);
            close();
        };
        const waitForUpgrade = () => {
            // wait for upgrade to finish since we can't send packets while pausing a transport
            this.once("upgrade", cleanupAndClose);
            this.once("upgradeError", cleanupAndClose);
        };
        if ("opening" === this.readyState || "open" === this.readyState) {
            this.readyState = "closing";
            if (this.writeBuffer.length) {
                this.once("drain", () => {
                    if (this.upgrading) {
                        waitForUpgrade();
                    }
                    else {
                        close();
                    }
                });
            }
            else if (this.upgrading) {
                waitForUpgrade();
            }
            else {
                close();
            }
        }
        return this;
    }
    /**
     * Called upon transport error
     *
     * @private
     */
    onError(err) {
        Socket$1.priorWebsocketSuccess = false;
        this.emitReserved("error", err);
        this.onClose("transport error", err);
    }
    /**
     * Called upon transport close.
     *
     * @private
     */
    onClose(reason, description) {
        if ("opening" === this.readyState ||
            "open" === this.readyState ||
            "closing" === this.readyState) {
            // clear timers
            this.clearTimeoutFn(this.pingTimeoutTimer);
            // stop event from firing again for transport
            this.transport.removeAllListeners("close");
            // ensure transport won't stay open
            this.transport.close();
            // ignore further transport communication
            this.transport.removeAllListeners();
            if (typeof removeEventListener === "function") {
                removeEventListener("beforeunload", this.beforeunloadEventListener, false);
                removeEventListener("offline", this.offlineEventListener, false);
            }
            // set ready state
            this.readyState = "closed";
            // clear session id
            this.id = null;
            // emit close event
            this.emitReserved("close", reason, description);
            // clean buffers after, so users can still
            // grab the buffers on `close` event
            this.writeBuffer = [];
            this.prevBufferLen = 0;
        }
    }
    /**
     * Filters upgrades, returning only those matching client transports.
     *
     * @param {Array} upgrades - server upgrades
     * @private
     */
    filterUpgrades(upgrades) {
        const filteredUpgrades = [];
        let i = 0;
        const j = upgrades.length;
        for (; i < j; i++) {
            if (~this.transports.indexOf(upgrades[i]))
                filteredUpgrades.push(upgrades[i]);
        }
        return filteredUpgrades;
    }
};
Socket$1.protocol = protocol$1;

/**
 * URL parser.
 *
 * @param uri - url
 * @param path - the request path of the connection
 * @param loc - An object meant to mimic window.location.
 *        Defaults to window.location.
 * @public
 */
function url(uri, path = "", loc) {
    let obj = uri;
    // default to window.location
    loc = loc || (typeof location !== "undefined" && location);
    if (null == uri)
        uri = loc.protocol + "//" + loc.host;
    // relative path support
    if (typeof uri === "string") {
        if ("/" === uri.charAt(0)) {
            if ("/" === uri.charAt(1)) {
                uri = loc.protocol + uri;
            }
            else {
                uri = loc.host + uri;
            }
        }
        if (!/^(https?|wss?):\/\//.test(uri)) {
            if ("undefined" !== typeof loc) {
                uri = loc.protocol + "//" + uri;
            }
            else {
                uri = "https://" + uri;
            }
        }
        // parse
        obj = parse(uri);
    }
    // make sure we treat `localhost:80` and `localhost` equally
    if (!obj.port) {
        if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = "80";
        }
        else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = "443";
        }
    }
    obj.path = obj.path || "/";
    const ipv6 = obj.host.indexOf(":") !== -1;
    const host = ipv6 ? "[" + obj.host + "]" : obj.host;
    // define unique id
    obj.id = obj.protocol + "://" + host + ":" + obj.port + path;
    // define href
    obj.href =
        obj.protocol +
            "://" +
            host +
            (loc && loc.port === obj.port ? "" : ":" + obj.port);
    return obj;
}

const withNativeArrayBuffer = typeof ArrayBuffer === "function";
const isView = (obj) => {
    return typeof ArrayBuffer.isView === "function"
        ? ArrayBuffer.isView(obj)
        : obj.buffer instanceof ArrayBuffer;
};
const toString = Object.prototype.toString;
const withNativeBlob = typeof Blob === "function" ||
    (typeof Blob !== "undefined" &&
        toString.call(Blob) === "[object BlobConstructor]");
const withNativeFile = typeof File === "function" ||
    (typeof File !== "undefined" &&
        toString.call(File) === "[object FileConstructor]");
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
function isBinary(obj) {
    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||
        (withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File));
}
function hasBinary(obj, toJSON) {
    if (!obj || typeof obj !== "object") {
        return false;
    }
    if (Array.isArray(obj)) {
        for (let i = 0, l = obj.length; i < l; i++) {
            if (hasBinary(obj[i])) {
                return true;
            }
        }
        return false;
    }
    if (isBinary(obj)) {
        return true;
    }
    if (obj.toJSON &&
        typeof obj.toJSON === "function" &&
        arguments.length === 1) {
        return hasBinary(obj.toJSON(), true);
    }
    for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
            return true;
        }
    }
    return false;
}

/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
function deconstructPacket(packet) {
    const buffers = [];
    const packetData = packet.data;
    const pack = packet;
    pack.data = _deconstructPacket(packetData, buffers);
    pack.attachments = buffers.length; // number of binary 'attachments'
    return { packet: pack, buffers: buffers };
}
function _deconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (isBinary(data)) {
        const placeholder = { _placeholder: true, num: buffers.length };
        buffers.push(data);
        return placeholder;
    }
    else if (Array.isArray(data)) {
        const newData = new Array(data.length);
        for (let i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
        }
        return newData;
    }
    else if (typeof data === "object" && !(data instanceof Date)) {
        const newData = {};
        for (const key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
                newData[key] = _deconstructPacket(data[key], buffers);
            }
        }
        return newData;
    }
    return data;
}
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
function reconstructPacket(packet, buffers) {
    packet.data = _reconstructPacket(packet.data, buffers);
    delete packet.attachments; // no longer useful
    return packet;
}
function _reconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (data && data._placeholder === true) {
        const isIndexValid = typeof data.num === "number" &&
            data.num >= 0 &&
            data.num < buffers.length;
        if (isIndexValid) {
            return buffers[data.num]; // appropriate buffer (should be natural order anyway)
        }
        else {
            throw new Error("illegal attachments");
        }
    }
    else if (Array.isArray(data)) {
        for (let i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
        }
    }
    else if (typeof data === "object") {
        for (const key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
                data[key] = _reconstructPacket(data[key], buffers);
            }
        }
    }
    return data;
}

/**
 * These strings must not be used as event names, as they have a special meaning.
 */
const RESERVED_EVENTS$1 = [
    "connect",
    "connect_error",
    "disconnect",
    "disconnecting",
    "newListener",
    "removeListener", // used by the Node.js EventEmitter
];
/**
 * Protocol version.
 *
 * @public
 */
const protocol = 5;
var PacketType;
(function (PacketType) {
    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";
    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";
    PacketType[PacketType["EVENT"] = 2] = "EVENT";
    PacketType[PacketType["ACK"] = 3] = "ACK";
    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";
    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";
})(PacketType || (PacketType = {}));
/**
 * A socket.io Encoder instance
 */
class Encoder {
    /**
     * Encoder constructor
     *
     * @param {function} replacer - custom replacer to pass down to JSON.parse
     */
    constructor(replacer) {
        this.replacer = replacer;
    }
    /**
     * Encode a packet as a single string if non-binary, or as a
     * buffer sequence, depending on packet type.
     *
     * @param {Object} obj - packet object
     */
    encode(obj) {
        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {
            if (hasBinary(obj)) {
                return this.encodeAsBinary({
                    type: obj.type === PacketType.EVENT
                        ? PacketType.BINARY_EVENT
                        : PacketType.BINARY_ACK,
                    nsp: obj.nsp,
                    data: obj.data,
                    id: obj.id,
                });
            }
        }
        return [this.encodeAsString(obj)];
    }
    /**
     * Encode packet as string.
     */
    encodeAsString(obj) {
        // first is type
        let str = "" + obj.type;
        // attachments if we have them
        if (obj.type === PacketType.BINARY_EVENT ||
            obj.type === PacketType.BINARY_ACK) {
            str += obj.attachments + "-";
        }
        // if we have a namespace other than `/`
        // we append it followed by a comma `,`
        if (obj.nsp && "/" !== obj.nsp) {
            str += obj.nsp + ",";
        }
        // immediately followed by the id
        if (null != obj.id) {
            str += obj.id;
        }
        // json data
        if (null != obj.data) {
            str += JSON.stringify(obj.data, this.replacer);
        }
        return str;
    }
    /**
     * Encode packet as 'buffer sequence' by removing blobs, and
     * deconstructing packet into object with placeholders and
     * a list of buffers.
     */
    encodeAsBinary(obj) {
        const deconstruction = deconstructPacket(obj);
        const pack = this.encodeAsString(deconstruction.packet);
        const buffers = deconstruction.buffers;
        buffers.unshift(pack); // add packet info to beginning of data list
        return buffers; // write all the buffers
    }
}
// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript
function isObject(value) {
    return Object.prototype.toString.call(value) === "[object Object]";
}
/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 */
class Decoder extends Emitter {
    /**
     * Decoder constructor
     *
     * @param {function} reviver - custom reviver to pass down to JSON.stringify
     */
    constructor(reviver) {
        super();
        this.reviver = reviver;
    }
    /**
     * Decodes an encoded packet string into packet JSON.
     *
     * @param {String} obj - encoded packet
     */
    add(obj) {
        let packet;
        if (typeof obj === "string") {
            if (this.reconstructor) {
                throw new Error("got plaintext data when reconstructing a packet");
            }
            packet = this.decodeString(obj);
            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;
            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {
                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;
                // binary packet's json
                this.reconstructor = new BinaryReconstructor(packet);
                // no attachments, labeled binary but no binary data to follow
                if (packet.attachments === 0) {
                    super.emitReserved("decoded", packet);
                }
            }
            else {
                // non-binary full packet
                super.emitReserved("decoded", packet);
            }
        }
        else if (isBinary(obj) || obj.base64) {
            // raw binary data
            if (!this.reconstructor) {
                throw new Error("got binary data when not reconstructing a packet");
            }
            else {
                packet = this.reconstructor.takeBinaryData(obj);
                if (packet) {
                    // received final buffer
                    this.reconstructor = null;
                    super.emitReserved("decoded", packet);
                }
            }
        }
        else {
            throw new Error("Unknown type: " + obj);
        }
    }
    /**
     * Decode a packet String (JSON data)
     *
     * @param {String} str
     * @return {Object} packet
     */
    decodeString(str) {
        let i = 0;
        // look up type
        const p = {
            type: Number(str.charAt(0)),
        };
        if (PacketType[p.type] === undefined) {
            throw new Error("unknown packet type " + p.type);
        }
        // look up attachments if type binary
        if (p.type === PacketType.BINARY_EVENT ||
            p.type === PacketType.BINARY_ACK) {
            const start = i + 1;
            while (str.charAt(++i) !== "-" && i != str.length) { }
            const buf = str.substring(start, i);
            if (buf != Number(buf) || str.charAt(i) !== "-") {
                throw new Error("Illegal attachments");
            }
            p.attachments = Number(buf);
        }
        // look up namespace (if any)
        if ("/" === str.charAt(i + 1)) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if ("," === c)
                    break;
                if (i === str.length)
                    break;
            }
            p.nsp = str.substring(start, i);
        }
        else {
            p.nsp = "/";
        }
        // look up id
        const next = str.charAt(i + 1);
        if ("" !== next && Number(next) == next) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if (null == c || Number(c) != c) {
                    --i;
                    break;
                }
                if (i === str.length)
                    break;
            }
            p.id = Number(str.substring(start, i + 1));
        }
        // look up json data
        if (str.charAt(++i)) {
            const payload = this.tryParse(str.substr(i));
            if (Decoder.isPayloadValid(p.type, payload)) {
                p.data = payload;
            }
            else {
                throw new Error("invalid payload");
            }
        }
        return p;
    }
    tryParse(str) {
        try {
            return JSON.parse(str, this.reviver);
        }
        catch (e) {
            return false;
        }
    }
    static isPayloadValid(type, payload) {
        switch (type) {
            case PacketType.CONNECT:
                return isObject(payload);
            case PacketType.DISCONNECT:
                return payload === undefined;
            case PacketType.CONNECT_ERROR:
                return typeof payload === "string" || isObject(payload);
            case PacketType.EVENT:
            case PacketType.BINARY_EVENT:
                return (Array.isArray(payload) &&
                    (typeof payload[0] === "number" ||
                        (typeof payload[0] === "string" &&
                            RESERVED_EVENTS$1.indexOf(payload[0]) === -1)));
            case PacketType.ACK:
            case PacketType.BINARY_ACK:
                return Array.isArray(payload);
        }
    }
    /**
     * Deallocates a parser's resources
     */
    destroy() {
        if (this.reconstructor) {
            this.reconstructor.finishedReconstruction();
            this.reconstructor = null;
        }
    }
}
/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 */
class BinaryReconstructor {
    constructor(packet) {
        this.packet = packet;
        this.buffers = [];
        this.reconPack = packet;
    }
    /**
     * Method to be called when binary data received from connection
     * after a BINARY_EVENT packet.
     *
     * @param {Buffer | ArrayBuffer} binData - the raw binary data received
     * @return {null | Object} returns null if more binary data is expected or
     *   a reconstructed packet object if all buffers have been received.
     */
    takeBinaryData(binData) {
        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {
            // done with buffer list
            const packet = reconstructPacket(this.reconPack, this.buffers);
            this.finishedReconstruction();
            return packet;
        }
        return null;
    }
    /**
     * Cleans up binary packet reconstruction variables.
     */
    finishedReconstruction() {
        this.reconPack = null;
        this.buffers = [];
    }
}

var parser = /*#__PURE__*/Object.freeze({
    __proto__: null,
    protocol: protocol,
    get PacketType () { return PacketType; },
    Encoder: Encoder,
    Decoder: Decoder
});

function on(obj, ev, fn) {
    obj.on(ev, fn);
    return function subDestroy() {
        obj.off(ev, fn);
    };
}

/**
 * Internal events.
 * These events can't be emitted by the user.
 */
const RESERVED_EVENTS = Object.freeze({
    connect: 1,
    connect_error: 1,
    disconnect: 1,
    disconnecting: 1,
    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
    newListener: 1,
    removeListener: 1,
});
/**
 * A Socket is the fundamental class for interacting with the server.
 *
 * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.
 *
 * @example
 * const socket = io();
 *
 * socket.on("connect", () => {
 *   console.log("connected");
 * });
 *
 * // send an event to the server
 * socket.emit("foo", "bar");
 *
 * socket.on("foobar", () => {
 *   // an event was received from the server
 * });
 *
 * // upon disconnection
 * socket.on("disconnect", (reason) => {
 *   console.log(`disconnected due to ${reason}`);
 * });
 */
class Socket extends Emitter {
    /**
     * `Socket` constructor.
     */
    constructor(io, nsp, opts) {
        super();
        /**
         * Whether the socket is currently connected to the server.
         *
         * @example
         * const socket = io();
         *
         * socket.on("connect", () => {
         *   console.log(socket.connected); // true
         * });
         *
         * socket.on("disconnect", () => {
         *   console.log(socket.connected); // false
         * });
         */
        this.connected = false;
        /**
         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will
         * be transmitted by the server.
         */
        this.recovered = false;
        /**
         * Buffer for packets received before the CONNECT packet
         */
        this.receiveBuffer = [];
        /**
         * Buffer for packets that will be sent once the socket is connected
         */
        this.sendBuffer = [];
        /**
         * The queue of packets to be sent with retry in case of failure.
         *
         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.
         * @private
         */
        this._queue = [];
        /**
         * A sequence to generate the ID of the {@link QueuedPacket}.
         * @private
         */
        this._queueSeq = 0;
        this.ids = 0;
        this.acks = {};
        this.flags = {};
        this.io = io;
        this.nsp = nsp;
        if (opts && opts.auth) {
            this.auth = opts.auth;
        }
        this._opts = Object.assign({}, opts);
        if (this.io._autoConnect)
            this.open();
    }
    /**
     * Whether the socket is currently disconnected
     *
     * @example
     * const socket = io();
     *
     * socket.on("connect", () => {
     *   console.log(socket.disconnected); // false
     * });
     *
     * socket.on("disconnect", () => {
     *   console.log(socket.disconnected); // true
     * });
     */
    get disconnected() {
        return !this.connected;
    }
    /**
     * Subscribe to open, close and packet events
     *
     * @private
     */
    subEvents() {
        if (this.subs)
            return;
        const io = this.io;
        this.subs = [
            on(io, "open", this.onopen.bind(this)),
            on(io, "packet", this.onpacket.bind(this)),
            on(io, "error", this.onerror.bind(this)),
            on(io, "close", this.onclose.bind(this)),
        ];
    }
    /**
     * Whether the Socket will try to reconnect when its Manager connects or reconnects.
     *
     * @example
     * const socket = io();
     *
     * console.log(socket.active); // true
     *
     * socket.on("disconnect", (reason) => {
     *   if (reason === "io server disconnect") {
     *     // the disconnection was initiated by the server, you need to manually reconnect
     *     console.log(socket.active); // false
     *   }
     *   // else the socket will automatically try to reconnect
     *   console.log(socket.active); // true
     * });
     */
    get active() {
        return !!this.subs;
    }
    /**
     * "Opens" the socket.
     *
     * @example
     * const socket = io({
     *   autoConnect: false
     * });
     *
     * socket.connect();
     */
    connect() {
        if (this.connected)
            return this;
        this.subEvents();
        if (!this.io["_reconnecting"])
            this.io.open(); // ensure open
        if ("open" === this.io._readyState)
            this.onopen();
        return this;
    }
    /**
     * Alias for {@link connect()}.
     */
    open() {
        return this.connect();
    }
    /**
     * Sends a `message` event.
     *
     * This method mimics the WebSocket.send() method.
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send
     *
     * @example
     * socket.send("hello");
     *
     * // this is equivalent to
     * socket.emit("message", "hello");
     *
     * @return self
     */
    send(...args) {
        args.unshift("message");
        this.emit.apply(this, args);
        return this;
    }
    /**
     * Override `emit`.
     * If the event is in `events`, it's emitted normally.
     *
     * @example
     * socket.emit("hello", "world");
     *
     * // all serializable datastructures are supported (no need to call JSON.stringify)
     * socket.emit("hello", 1, "2", { 3: ["4"], 5: Uint8Array.from([6]) });
     *
     * // with an acknowledgement from the server
     * socket.emit("hello", "world", (val) => {
     *   // ...
     * });
     *
     * @return self
     */
    emit(ev, ...args) {
        if (RESERVED_EVENTS.hasOwnProperty(ev)) {
            throw new Error('"' + ev.toString() + '" is a reserved event name');
        }
        args.unshift(ev);
        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {
            this._addToQueue(args);
            return this;
        }
        const packet = {
            type: PacketType.EVENT,
            data: args,
        };
        packet.options = {};
        packet.options.compress = this.flags.compress !== false;
        // event ack callback
        if ("function" === typeof args[args.length - 1]) {
            const id = this.ids++;
            const ack = args.pop();
            this._registerAckCallback(id, ack);
            packet.id = id;
        }
        const isTransportWritable = this.io.engine &&
            this.io.engine.transport &&
            this.io.engine.transport.writable;
        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);
        if (discardPacket) ;
        else if (this.connected) {
            this.notifyOutgoingListeners(packet);
            this.packet(packet);
        }
        else {
            this.sendBuffer.push(packet);
        }
        this.flags = {};
        return this;
    }
    /**
     * @private
     */
    _registerAckCallback(id, ack) {
        var _a;
        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;
        if (timeout === undefined) {
            this.acks[id] = ack;
            return;
        }
        // @ts-ignore
        const timer = this.io.setTimeoutFn(() => {
            delete this.acks[id];
            for (let i = 0; i < this.sendBuffer.length; i++) {
                if (this.sendBuffer[i].id === id) {
                    this.sendBuffer.splice(i, 1);
                }
            }
            ack.call(this, new Error("operation has timed out"));
        }, timeout);
        this.acks[id] = (...args) => {
            // @ts-ignore
            this.io.clearTimeoutFn(timer);
            ack.apply(this, [null, ...args]);
        };
    }
    /**
     * Emits an event and waits for an acknowledgement
     *
     * @example
     * // without timeout
     * const response = await socket.emitWithAck("hello", "world");
     *
     * // with a specific timeout
     * try {
     *   const response = await socket.timeout(1000).emitWithAck("hello", "world");
     * } catch (err) {
     *   // the server did not acknowledge the event in the given delay
     * }
     *
     * @return a Promise that will be fulfilled when the server acknowledges the event
     */
    emitWithAck(ev, ...args) {
        // the timeout flag is optional
        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;
        return new Promise((resolve, reject) => {
            args.push((arg1, arg2) => {
                if (withErr) {
                    return arg1 ? reject(arg1) : resolve(arg2);
                }
                else {
                    return resolve(arg1);
                }
            });
            this.emit(ev, ...args);
        });
    }
    /**
     * Add the packet to the queue.
     * @param args
     * @private
     */
    _addToQueue(args) {
        let ack;
        if (typeof args[args.length - 1] === "function") {
            ack = args.pop();
        }
        const packet = {
            id: this._queueSeq++,
            tryCount: 0,
            pending: false,
            args,
            flags: Object.assign({ fromQueue: true }, this.flags),
        };
        args.push((err, ...responseArgs) => {
            if (packet !== this._queue[0]) {
                // the packet has already been acknowledged
                return;
            }
            const hasError = err !== null;
            if (hasError) {
                if (packet.tryCount > this._opts.retries) {
                    this._queue.shift();
                    if (ack) {
                        ack(err);
                    }
                }
            }
            else {
                this._queue.shift();
                if (ack) {
                    ack(null, ...responseArgs);
                }
            }
            packet.pending = false;
            return this._drainQueue();
        });
        this._queue.push(packet);
        this._drainQueue();
    }
    /**
     * Send the first packet of the queue, and wait for an acknowledgement from the server.
     * @param force - whether to resend a packet that has not been acknowledged yet
     *
     * @private
     */
    _drainQueue(force = false) {
        if (!this.connected || this._queue.length === 0) {
            return;
        }
        const packet = this._queue[0];
        if (packet.pending && !force) {
            return;
        }
        packet.pending = true;
        packet.tryCount++;
        this.flags = packet.flags;
        this.emit.apply(this, packet.args);
    }
    /**
     * Sends a packet.
     *
     * @param packet
     * @private
     */
    packet(packet) {
        packet.nsp = this.nsp;
        this.io._packet(packet);
    }
    /**
     * Called upon engine `open`.
     *
     * @private
     */
    onopen() {
        if (typeof this.auth == "function") {
            this.auth((data) => {
                this._sendConnectPacket(data);
            });
        }
        else {
            this._sendConnectPacket(this.auth);
        }
    }
    /**
     * Sends a CONNECT packet to initiate the Socket.IO session.
     *
     * @param data
     * @private
     */
    _sendConnectPacket(data) {
        this.packet({
            type: PacketType.CONNECT,
            data: this._pid
                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)
                : data,
        });
    }
    /**
     * Called upon engine or manager `error`.
     *
     * @param err
     * @private
     */
    onerror(err) {
        if (!this.connected) {
            this.emitReserved("connect_error", err);
        }
    }
    /**
     * Called upon engine `close`.
     *
     * @param reason
     * @param description
     * @private
     */
    onclose(reason, description) {
        this.connected = false;
        delete this.id;
        this.emitReserved("disconnect", reason, description);
    }
    /**
     * Called with socket packet.
     *
     * @param packet
     * @private
     */
    onpacket(packet) {
        const sameNamespace = packet.nsp === this.nsp;
        if (!sameNamespace)
            return;
        switch (packet.type) {
            case PacketType.CONNECT:
                if (packet.data && packet.data.sid) {
                    this.onconnect(packet.data.sid, packet.data.pid);
                }
                else {
                    this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
                }
                break;
            case PacketType.EVENT:
            case PacketType.BINARY_EVENT:
                this.onevent(packet);
                break;
            case PacketType.ACK:
            case PacketType.BINARY_ACK:
                this.onack(packet);
                break;
            case PacketType.DISCONNECT:
                this.ondisconnect();
                break;
            case PacketType.CONNECT_ERROR:
                this.destroy();
                const err = new Error(packet.data.message);
                // @ts-ignore
                err.data = packet.data.data;
                this.emitReserved("connect_error", err);
                break;
        }
    }
    /**
     * Called upon a server event.
     *
     * @param packet
     * @private
     */
    onevent(packet) {
        const args = packet.data || [];
        if (null != packet.id) {
            args.push(this.ack(packet.id));
        }
        if (this.connected) {
            this.emitEvent(args);
        }
        else {
            this.receiveBuffer.push(Object.freeze(args));
        }
    }
    emitEvent(args) {
        if (this._anyListeners && this._anyListeners.length) {
            const listeners = this._anyListeners.slice();
            for (const listener of listeners) {
                listener.apply(this, args);
            }
        }
        super.emit.apply(this, args);
        if (this._pid && args.length && typeof args[args.length - 1] === "string") {
            this._lastOffset = args[args.length - 1];
        }
    }
    /**
     * Produces an ack callback to emit with an event.
     *
     * @private
     */
    ack(id) {
        const self = this;
        let sent = false;
        return function (...args) {
            // prevent double callbacks
            if (sent)
                return;
            sent = true;
            self.packet({
                type: PacketType.ACK,
                id: id,
                data: args,
            });
        };
    }
    /**
     * Called upon a server acknowlegement.
     *
     * @param packet
     * @private
     */
    onack(packet) {
        const ack = this.acks[packet.id];
        if ("function" === typeof ack) {
            ack.apply(this, packet.data);
            delete this.acks[packet.id];
        }
    }
    /**
     * Called upon server connect.
     *
     * @private
     */
    onconnect(id, pid) {
        this.id = id;
        this.recovered = pid && this._pid === pid;
        this._pid = pid; // defined only if connection state recovery is enabled
        this.connected = true;
        this.emitBuffered();
        this.emitReserved("connect");
        this._drainQueue(true);
    }
    /**
     * Emit buffered events (received and emitted).
     *
     * @private
     */
    emitBuffered() {
        this.receiveBuffer.forEach((args) => this.emitEvent(args));
        this.receiveBuffer = [];
        this.sendBuffer.forEach((packet) => {
            this.notifyOutgoingListeners(packet);
            this.packet(packet);
        });
        this.sendBuffer = [];
    }
    /**
     * Called upon server disconnect.
     *
     * @private
     */
    ondisconnect() {
        this.destroy();
        this.onclose("io server disconnect");
    }
    /**
     * Called upon forced client/server side disconnections,
     * this method ensures the manager stops tracking us and
     * that reconnections don't get triggered for this.
     *
     * @private
     */
    destroy() {
        if (this.subs) {
            // clean subscriptions to avoid reconnections
            this.subs.forEach((subDestroy) => subDestroy());
            this.subs = undefined;
        }
        this.io["_destroy"](this);
    }
    /**
     * Disconnects the socket manually. In that case, the socket will not try to reconnect.
     *
     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.
     *
     * @example
     * const socket = io();
     *
     * socket.on("disconnect", (reason) => {
     *   // console.log(reason); prints "io client disconnect"
     * });
     *
     * socket.disconnect();
     *
     * @return self
     */
    disconnect() {
        if (this.connected) {
            this.packet({ type: PacketType.DISCONNECT });
        }
        // remove socket from pool
        this.destroy();
        if (this.connected) {
            // fire events
            this.onclose("io client disconnect");
        }
        return this;
    }
    /**
     * Alias for {@link disconnect()}.
     *
     * @return self
     */
    close() {
        return this.disconnect();
    }
    /**
     * Sets the compress flag.
     *
     * @example
     * socket.compress(false).emit("hello");
     *
     * @param compress - if `true`, compresses the sending data
     * @return self
     */
    compress(compress) {
        this.flags.compress = compress;
        return this;
    }
    /**
     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
     * ready to send messages.
     *
     * @example
     * socket.volatile.emit("hello"); // the server may or may not receive it
     *
     * @returns self
     */
    get volatile() {
        this.flags.volatile = true;
        return this;
    }
    /**
     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the
     * given number of milliseconds have elapsed without an acknowledgement from the server:
     *
     * @example
     * socket.timeout(5000).emit("my-event", (err) => {
     *   if (err) {
     *     // the server did not acknowledge the event in the given delay
     *   }
     * });
     *
     * @returns self
     */
    timeout(timeout) {
        this.flags.timeout = timeout;
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback.
     *
     * @example
     * socket.onAny((event, ...args) => {
     *   console.log(`got ${event}`);
     * });
     *
     * @param listener
     */
    onAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.push(listener);
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback. The listener is added to the beginning of the listeners array.
     *
     * @example
     * socket.prependAny((event, ...args) => {
     *   console.log(`got event ${event}`);
     * });
     *
     * @param listener
     */
    prependAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.unshift(listener);
        return this;
    }
    /**
     * Removes the listener that will be fired when any event is emitted.
     *
     * @example
     * const catchAllListener = (event, ...args) => {
     *   console.log(`got event ${event}`);
     * }
     *
     * socket.onAny(catchAllListener);
     *
     * // remove a specific listener
     * socket.offAny(catchAllListener);
     *
     * // or remove all listeners
     * socket.offAny();
     *
     * @param listener
     */
    offAny(listener) {
        if (!this._anyListeners) {
            return this;
        }
        if (listener) {
            const listeners = this._anyListeners;
            for (let i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                    listeners.splice(i, 1);
                    return this;
                }
            }
        }
        else {
            this._anyListeners = [];
        }
        return this;
    }
    /**
     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
     * e.g. to remove listeners.
     */
    listenersAny() {
        return this._anyListeners || [];
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback.
     *
     * Note: acknowledgements sent to the server are not included.
     *
     * @example
     * socket.onAnyOutgoing((event, ...args) => {
     *   console.log(`sent event ${event}`);
     * });
     *
     * @param listener
     */
    onAnyOutgoing(listener) {
        this._anyOutgoingListeners = this._anyOutgoingListeners || [];
        this._anyOutgoingListeners.push(listener);
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback. The listener is added to the beginning of the listeners array.
     *
     * Note: acknowledgements sent to the server are not included.
     *
     * @example
     * socket.prependAnyOutgoing((event, ...args) => {
     *   console.log(`sent event ${event}`);
     * });
     *
     * @param listener
     */
    prependAnyOutgoing(listener) {
        this._anyOutgoingListeners = this._anyOutgoingListeners || [];
        this._anyOutgoingListeners.unshift(listener);
        return this;
    }
    /**
     * Removes the listener that will be fired when any event is emitted.
     *
     * @example
     * const catchAllListener = (event, ...args) => {
     *   console.log(`sent event ${event}`);
     * }
     *
     * socket.onAnyOutgoing(catchAllListener);
     *
     * // remove a specific listener
     * socket.offAnyOutgoing(catchAllListener);
     *
     * // or remove all listeners
     * socket.offAnyOutgoing();
     *
     * @param [listener] - the catch-all listener (optional)
     */
    offAnyOutgoing(listener) {
        if (!this._anyOutgoingListeners) {
            return this;
        }
        if (listener) {
            const listeners = this._anyOutgoingListeners;
            for (let i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                    listeners.splice(i, 1);
                    return this;
                }
            }
        }
        else {
            this._anyOutgoingListeners = [];
        }
        return this;
    }
    /**
     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
     * e.g. to remove listeners.
     */
    listenersAnyOutgoing() {
        return this._anyOutgoingListeners || [];
    }
    /**
     * Notify the listeners for each packet sent
     *
     * @param packet
     *
     * @private
     */
    notifyOutgoingListeners(packet) {
        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
            const listeners = this._anyOutgoingListeners.slice();
            for (const listener of listeners) {
                listener.apply(this, packet.data);
            }
        }
    }
}

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */
function Backoff(opts) {
    opts = opts || {};
    this.ms = opts.min || 100;
    this.max = opts.max || 10000;
    this.factor = opts.factor || 2;
    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
    this.attempts = 0;
}
/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */
Backoff.prototype.duration = function () {
    var ms = this.ms * Math.pow(this.factor, this.attempts++);
    if (this.jitter) {
        var rand = Math.random();
        var deviation = Math.floor(rand * this.jitter * ms);
        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
    }
    return Math.min(ms, this.max) | 0;
};
/**
 * Reset the number of attempts.
 *
 * @api public
 */
Backoff.prototype.reset = function () {
    this.attempts = 0;
};
/**
 * Set the minimum duration
 *
 * @api public
 */
Backoff.prototype.setMin = function (min) {
    this.ms = min;
};
/**
 * Set the maximum duration
 *
 * @api public
 */
Backoff.prototype.setMax = function (max) {
    this.max = max;
};
/**
 * Set the jitter
 *
 * @api public
 */
Backoff.prototype.setJitter = function (jitter) {
    this.jitter = jitter;
};

class Manager extends Emitter {
    constructor(uri, opts) {
        var _a;
        super();
        this.nsps = {};
        this.subs = [];
        if (uri && "object" === typeof uri) {
            opts = uri;
            uri = undefined;
        }
        opts = opts || {};
        opts.path = opts.path || "/socket.io";
        this.opts = opts;
        installTimerFunctions(this, opts);
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);
        this.backoff = new Backoff({
            min: this.reconnectionDelay(),
            max: this.reconnectionDelayMax(),
            jitter: this.randomizationFactor(),
        });
        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this._readyState = "closed";
        this.uri = uri;
        const _parser = opts.parser || parser;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this._autoConnect = opts.autoConnect !== false;
        if (this._autoConnect)
            this.open();
    }
    reconnection(v) {
        if (!arguments.length)
            return this._reconnection;
        this._reconnection = !!v;
        return this;
    }
    reconnectionAttempts(v) {
        if (v === undefined)
            return this._reconnectionAttempts;
        this._reconnectionAttempts = v;
        return this;
    }
    reconnectionDelay(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelay;
        this._reconnectionDelay = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);
        return this;
    }
    randomizationFactor(v) {
        var _a;
        if (v === undefined)
            return this._randomizationFactor;
        this._randomizationFactor = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);
        return this;
    }
    reconnectionDelayMax(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelayMax;
        this._reconnectionDelayMax = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);
        return this;
    }
    timeout(v) {
        if (!arguments.length)
            return this._timeout;
        this._timeout = v;
        return this;
    }
    /**
     * Starts trying to reconnect if reconnection is enabled and we have not
     * started reconnecting yet
     *
     * @private
     */
    maybeReconnectOnOpen() {
        // Only try to reconnect if it's the first time we're connecting
        if (!this._reconnecting &&
            this._reconnection &&
            this.backoff.attempts === 0) {
            // keeps reconnection from firing twice for the same reconnection loop
            this.reconnect();
        }
    }
    /**
     * Sets the current transport `socket`.
     *
     * @param {Function} fn - optional, callback
     * @return self
     * @public
     */
    open(fn) {
        if (~this._readyState.indexOf("open"))
            return this;
        this.engine = new Socket$1(this.uri, this.opts);
        const socket = this.engine;
        const self = this;
        this._readyState = "opening";
        this.skipReconnect = false;
        // emit `open`
        const openSubDestroy = on(socket, "open", function () {
            self.onopen();
            fn && fn();
        });
        const onError = (err) => {
            this.cleanup();
            this._readyState = "closed";
            this.emitReserved("error", err);
            if (fn) {
                fn(err);
            }
            else {
                // Only do this if there is no fn to handle the error
                this.maybeReconnectOnOpen();
            }
        };
        // emit `error`
        const errorSub = on(socket, "error", onError);
        if (false !== this._timeout) {
            const timeout = this._timeout;
            // set timer
            const timer = this.setTimeoutFn(() => {
                openSubDestroy();
                onError(new Error("timeout"));
                socket.close();
            }, timeout);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(() => {
                this.clearTimeoutFn(timer);
            });
        }
        this.subs.push(openSubDestroy);
        this.subs.push(errorSub);
        return this;
    }
    /**
     * Alias for open()
     *
     * @return self
     * @public
     */
    connect(fn) {
        return this.open(fn);
    }
    /**
     * Called upon transport open.
     *
     * @private
     */
    onopen() {
        // clear old subs
        this.cleanup();
        // mark as open
        this._readyState = "open";
        this.emitReserved("open");
        // add new subs
        const socket = this.engine;
        this.subs.push(on(socket, "ping", this.onping.bind(this)), on(socket, "data", this.ondata.bind(this)), on(socket, "error", this.onerror.bind(this)), on(socket, "close", this.onclose.bind(this)), on(this.decoder, "decoded", this.ondecoded.bind(this)));
    }
    /**
     * Called upon a ping.
     *
     * @private
     */
    onping() {
        this.emitReserved("ping");
    }
    /**
     * Called with data.
     *
     * @private
     */
    ondata(data) {
        try {
            this.decoder.add(data);
        }
        catch (e) {
            this.onclose("parse error", e);
        }
    }
    /**
     * Called when parser fully decodes a packet.
     *
     * @private
     */
    ondecoded(packet) {
        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a "parse error"
        nextTick(() => {
            this.emitReserved("packet", packet);
        }, this.setTimeoutFn);
    }
    /**
     * Called upon socket error.
     *
     * @private
     */
    onerror(err) {
        this.emitReserved("error", err);
    }
    /**
     * Creates a new socket for the given `nsp`.
     *
     * @return {Socket}
     * @public
     */
    socket(nsp, opts) {
        let socket = this.nsps[nsp];
        if (!socket) {
            socket = new Socket(this, nsp, opts);
            this.nsps[nsp] = socket;
        }
        else if (this._autoConnect && !socket.active) {
            socket.connect();
        }
        return socket;
    }
    /**
     * Called upon a socket close.
     *
     * @param socket
     * @private
     */
    _destroy(socket) {
        const nsps = Object.keys(this.nsps);
        for (const nsp of nsps) {
            const socket = this.nsps[nsp];
            if (socket.active) {
                return;
            }
        }
        this._close();
    }
    /**
     * Writes a packet.
     *
     * @param packet
     * @private
     */
    _packet(packet) {
        const encodedPackets = this.encoder.encode(packet);
        for (let i = 0; i < encodedPackets.length; i++) {
            this.engine.write(encodedPackets[i], packet.options);
        }
    }
    /**
     * Clean up transport subscriptions and packet buffer.
     *
     * @private
     */
    cleanup() {
        this.subs.forEach((subDestroy) => subDestroy());
        this.subs.length = 0;
        this.decoder.destroy();
    }
    /**
     * Close the current socket.
     *
     * @private
     */
    _close() {
        this.skipReconnect = true;
        this._reconnecting = false;
        this.onclose("forced close");
        if (this.engine)
            this.engine.close();
    }
    /**
     * Alias for close()
     *
     * @private
     */
    disconnect() {
        return this._close();
    }
    /**
     * Called upon engine close.
     *
     * @private
     */
    onclose(reason, description) {
        this.cleanup();
        this.backoff.reset();
        this._readyState = "closed";
        this.emitReserved("close", reason, description);
        if (this._reconnection && !this.skipReconnect) {
            this.reconnect();
        }
    }
    /**
     * Attempt a reconnection.
     *
     * @private
     */
    reconnect() {
        if (this._reconnecting || this.skipReconnect)
            return this;
        const self = this;
        if (this.backoff.attempts >= this._reconnectionAttempts) {
            this.backoff.reset();
            this.emitReserved("reconnect_failed");
            this._reconnecting = false;
        }
        else {
            const delay = this.backoff.duration();
            this._reconnecting = true;
            const timer = this.setTimeoutFn(() => {
                if (self.skipReconnect)
                    return;
                this.emitReserved("reconnect_attempt", self.backoff.attempts);
                // check again for the case socket closed in above events
                if (self.skipReconnect)
                    return;
                self.open((err) => {
                    if (err) {
                        self._reconnecting = false;
                        self.reconnect();
                        this.emitReserved("reconnect_error", err);
                    }
                    else {
                        self.onreconnect();
                    }
                });
            }, delay);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(() => {
                this.clearTimeoutFn(timer);
            });
        }
    }
    /**
     * Called upon successful reconnect.
     *
     * @private
     */
    onreconnect() {
        const attempt = this.backoff.attempts;
        this._reconnecting = false;
        this.backoff.reset();
        this.emitReserved("reconnect", attempt);
    }
}

/**
 * Managers cache.
 */
const cache = {};
function lookup(uri, opts) {
    if (typeof uri === "object") {
        opts = uri;
        uri = undefined;
    }
    opts = opts || {};
    const parsed = url(uri, opts.path || "/socket.io");
    const source = parsed.source;
    const id = parsed.id;
    const path = parsed.path;
    const sameNamespace = cache[id] && path in cache[id]["nsps"];
    const newConnection = opts.forceNew ||
        opts["force new connection"] ||
        false === opts.multiplex ||
        sameNamespace;
    let io;
    if (newConnection) {
        io = new Manager(source, opts);
    }
    else {
        if (!cache[id]) {
            cache[id] = new Manager(source, opts);
        }
        io = cache[id];
    }
    if (parsed.query && !opts.query) {
        opts.query = parsed.queryKey;
    }
    return io.socket(parsed.path, opts);
}
// so that "lookup" can be used both as a function (e.g. `io(...)`) and as a
// namespace (e.g. `io.connect(...)`), for backward compatibility
Object.assign(lookup, {
    Manager,
    Socket,
    io: lookup,
    connect: lookup,
});

// import { SocketConfig } from './NexmoClient';
class SocketClient {
    setQuery(sessionId, token) {
        if (this.socket != null) {
            this.socket.io.opts.query = {
                token: token,
                session_id: sessionId
            };
        }
    }
    emit(type, msg, _callback) {
        var _a;
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.emit(type, msg);
        _callback(null, ''); // WHAT DO I NEED TODO HERE?
    }
    connect(host, path, reconnectionAttempts, reconnectionDelay, randomizationFactor, token, sessionId, query) {
        const config = {
            transports: ['websocket'],
            autoConnect: true,
            reconnection: true,
            forceNew: true,
            path,
            reconnectionAttempts,
            reconnectionDelay: reconnectionDelay * 1000,
            randomizationFactor,
            query
        };
        this.socket = lookup(host, config);
        this.token = token;
        this.sessionId = sessionId;
        this.socket.on('connect', () => {
            var _a;
            (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.didReceiveNewSocketConnectionStatusEvent(clientsdkClientcore_jsExports.vonage.SOCKET_CONNECTED, null, Date.now(), null);
        });
        this.socket.io.on('reconnect_attempt', (retry_number) => {
            var _a;
            (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.didReceiveNewSocketConnectionStatusEvent(clientsdkClientcore_jsExports.vonage.SOCKET_RECONNECTING, null, Date.now(), retry_number);
        });
        this.socket.io.on('reconnect_failed', () => {
            var _a;
            (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.didReceiveNewSocketConnectionStatusEvent(clientsdkClientcore_jsExports.vonage.SOCKET_DISCONNECTED, clientsdkClientcore_jsExports.vonage.REASON_CLIENT_NETWORK_ERROR, Date.now(), null);
        });
        this.socket.on('disconnect', (reason) => {
            var _a, _b;
            if (reason === 'io client disconnect') {
                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.didReceiveNewSocketConnectionStatusEvent(clientsdkClientcore_jsExports.vonage.SOCKET_DISCONNECTED, clientsdkClientcore_jsExports.vonage.REASON_CLIENT_DISCONNECTED, Date.now(), null);
            }
            else if (reason === 'io server disconnect') {
                (_b = this.delegate) === null || _b === void 0 ? void 0 : _b.didReceiveNewSocketConnectionStatusEvent(clientsdkClientcore_jsExports.vonage.SOCKET_DISCONNECTED, clientsdkClientcore_jsExports.vonage.REASON_SERVER_DISCONNECTED, Date.now(), null);
            }
        });
        this.socket.io.on('packet', (packet) => {
            var _a;
            if (packet.type !== 2)
                return;
            if (packet.data[0] === 'echo')
                return; // ignore echo event
            const [type, body] = packet.data;
            // Invoke ackCallback if present
            const ackCallback = packet.data[2];
            if (ackCallback && ackCallback instanceof Function) {
                ackCallback();
            }
            if (typeof type == 'string' && body instanceof Object) {
                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.didReceiveNewSocketEvent(JSON.stringify(Object.assign(body, { type })));
            }
        });
    }
    disconnect() {
        var _a;
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.disconnect();
    }
    startVerifyResponseTimer(milliseconds, callback) {
        setTimeout(() => {
            callback();
        }, milliseconds);
    }
    setConnectParamsSocketConfig(sessionId, token) {
        if (this.socket != null) {
            this.sessionId = sessionId;
            this.token = token;
            this.setQuery(this.sessionId, this.token);
        }
    }
    setSocketSessionId(sessionId) {
        if (this.socket != null) {
            this.sessionId = sessionId;
            this.setQuery(this.sessionId, this.token);
        }
    }
    setSocketToken(token) {
        if (this.socket != null) {
            this.token = token;
            this.setQuery(this.sessionId, this.token);
        }
    }
}

/**
 * A group of Topics that a {@link VonageLogger} can subscribe to
 */
const Topics = clientsdkClientcore_jsExports.vonage.Topics;
clientsdkClientcore_jsExports.vonage.TopicJS;
/**
 * The Client Logging Level.
 *
 * It can be set for the internal logger via {@link ClientInitConfigObject.loggingLevel}
 * as well as for a custom logger via {@link VonageLogger.minLogLevel}.
 *
 * @enum
 */
const LoggingLevel = {
    Verbose: 'Verbose',
    Debug: 'Debug',
    Info: 'Info',
    Warn: 'Warn',
    Error: 'Error',
    Assert: 'Assert'
};
const convertLogger = (logger) => {
    var _a;
    if (logger.minLogLevel instanceof clientsdkClientcore_jsExports.vonage.LoggingLevelJS)
        return logger;
    return Object.assign(Object.assign({}, logger), { minLogLevel: logger.minLogLevel
            ? clientsdkClientcore_jsExports.vonage.LoggingLevelJS[logger.minLogLevel]
            : undefined, topics: (_a = logger.topics) === null || _a === void 0 ? void 0 : _a.map((topic) => topic instanceof Topics ? topic : Topics[topic]) });
};
const createVonageLogger = (name, onLog, minLogLevel, topics) => clientsdkClientcore_jsExports.vonage.createVonageLoggerJS(name, minLogLevel instanceof clientsdkClientcore_jsExports.vonage.LoggingLevelJS
    ? minLogLevel
    : minLogLevel
        ? clientsdkClientcore_jsExports.vonage.LoggingLevelJS[minLogLevel]
        : undefined, topics === null || topics === void 0 ? void 0 : topics.map((topic) => (topic instanceof Topics ? topic : Topics[topic])), (level, topic, message) => onLog(level, topic, message));

const ConfigRegion = clientsdkClientcore_jsExports.vonage.CoreClientConfigRegionJS;
class ClientConfig extends clientsdkClientcore_jsExports.vonage.CoreClientConfigJS {
    /**
     * Constructs a new instance of the class.
     *
     * @param region The region where the API and WebSocket URLs should be configured.
     *                        Valid values are "EU" (Europe), "US" (United States), or "AP" (Asia Pacific).
     *                        The URLs will be automatically set based on the selected region.
     *                        Defaults to "US" if no region is specified.
     */
    constructor(region = clientsdkClientcore_jsExports.vonage.DEFAULT_REGION) {
        super(region instanceof ConfigRegion ? region : ConfigRegion[region]);
    }
}
class ClientInitConfig {
    /**
     * Constructs a new instance of the class.
     */
    constructor(loggingLevel = clientsdkClientcore_jsExports.vonage.DEFAULT_LOGGING_LEVEL, region = clientsdkClientcore_jsExports.vonage.DEFAULT_REGION, customLoggers) {
        this.customLoggers = [];
        this.disableInternalLogger = false;
        this.loggingLevel =
            loggingLevel instanceof clientsdkClientcore_jsExports.vonage.LoggingLevelJS
                ? loggingLevel
                : clientsdkClientcore_jsExports.vonage.LoggingLevelJS[loggingLevel];
        this.region =
            region instanceof ConfigRegion ? region : ConfigRegion[region];
        if (customLoggers) {
            this.customLoggers = customLoggers.map(convertLogger);
        }
    }
}
const convertInitConfig = (config) => {
    if (config instanceof ClientInitConfig)
        return config;
    return Object.assign(Object.assign({}, config), { loggingLevel: config.loggingLevel instanceof clientsdkClientcore_jsExports.vonage.LoggingLevelJS
            ? config.loggingLevel
            : config.loggingLevel
                ? clientsdkClientcore_jsExports.vonage.LoggingLevelJS[config.loggingLevel]
                : null, region: config.region instanceof ConfigRegion
            ? config.region
            : config.region
                ? ConfigRegion[config.region]
                : null, customLoggers: config.customLoggers
            ? config.customLoggers.map(convertLogger)
            : null });
};

/**
 * The type of a {@link MemberChannel}
 *
 * @enum
 */
const MemberChannelType = {
    App: 'APP',
    Phone: 'PHONE',
    Pstn: 'PSTN',
    Sip: 'sip',
    Vbc: 'VBC',
    Websocket: 'WEBSOCKET',
    Sms: 'SMS',
    Mms: 'MMS',
    Whatsapp: 'WHATSAPP',
    Viber: 'VIBER',
    Messenger: 'MESSENGER'
};

/**
 * Vonage Error
 *
 * @implements {@link VonageError}
 */
const VonageError = clientsdkClientcore_jsExports.vonage.VonageErrorJS;

/**
 * The order in which paginated objects are presented.
 * @group Chat
 * @enum
 * @property ASC Ascending order
 * @property DESC Descending order
 */
const PresentingOrder = {
    ASC: 'asc',
    DESC: 'desc'
};
/**
 * The sorting strategy used for paginated objects.
 * @group Chat
 * @enum
 */
const OrderBy = {
    CREATED: 'created',
    CUSTOM_SORT_KEY: 'custom_sort_key'
};

const Option = clientsdkClientcore_jsExports.vonage.utils.OptionJS;
const mapOption = (value) => {
    if (value == null)
        return new Option.Some(null);
    if (value == undefined)
        return new Option.None();
    return new Option.Some(value);
};
/**
 * @param value The wrapped value
 * @returns An {@link Option.Some}
 */
const some = (value) => new Option.Some(value);
/**
 *
 * @returns An {@link Option.None}
 */
const none = () => new Option.None();

/**
 * Hangup reasons for a call
 * @enum
 */
const HangupReason = {
    RemoteHangup: 'REMOTE_HANGUP',
    RemoteReject: 'REMOTE_REJECT',
    RemoteNoAnswerTimeout: 'REMOTE_NO_ANSWER_TIMEOUT',
    LocalHangup: 'LOCAL_HANGUP',
    MediaTimeout: 'MEDIA_TIMEOUT'
};
/**
 * Leg status for a call
 * @enum
 */
const LegStatus = {
    Ringing: 'RINGING',
    Answered: 'ANSWERED',
    Completed: 'COMPLETED'
};
/**
 * Call disconnect reasons
 * @enum
 */
const CallDisconnectReason = {
    NetworkChange: 'networkChange'
};
/**
 * Call Invite cancel reasons
 * @enum
 */
const CancelReason = {
    RemoteCancel: 'RemoteCancel',
    RejectedElsewhere: 'RejectedElsewhere',
    RemoteTimeout: 'RemoteTimeout',
    AnsweredElsewhere: 'AnsweredElsewhere'
};
/**
 * Voice Channel Types
 * @enum
 */
const VoiceChannelType = {
    App: 'app',
    Phone: 'phone',
    Sip: 'sip',
    Websocket: 'websocket'
};
/**
 * Session Error Reasons
 * @enum
 */
const SessionErrorReason = {
    TransportClosed: 'TRANSPORT_CLOSED',
    PingTimeout: 'PING_TIMEOUT',
    ExpiredToken: 'EXPIRED_TOKEN'
};
/**
 * Vonage Error Types
 * @enum
 */
const VonageErrorType = {
    CsError: 'CS_ERROR',
    SessionError: 'SESSION_ERROR',
    NetworkError: 'NETWORK_ERROR',
    InternalError: 'INTERNAL_ERROR',
    UnknownError: 'UNKNOWN_ERROR'
};
const CSErrorCodes = {
    ConversationDuplicateName: 'CONVERSATION_DUPLICATE_NAME',
    MemberAlreadyJoined: 'MEMBER_ALREADY_JOINED',
    MemberAlreadyInvited: 'MEMBER_ALREADY_INVITED',
    ConversationNotFound: 'CONVERSATION_NOT_FOUND',
    MemberNotFound: 'MEMBER_NOT_FOUND',
    UserNotFound: 'USER_NOT_FOUND',
    InvalidCursor: 'INVALID_CURSOR',
    ValidationFail: 'VALIDATION_FAIL',
    ConversationMaxNumberOfMembers: 'CONVERSATION_MAX_NUMBER_OF_MEMBERS',
    CustomDataOverallLimitExceeded: 'CUSTOM_DATA_OVERALL_LIMIT_EXCEEDED'
};
const SessionErrorCodes = {
    Timeout: 'TIMEOUT',
    ExpiredToken: 'EXPIRED_TOKEN',
    EmptyToken: 'EMPTY_TOKEN',
    ForcedDisconnect: 'FORCED_DISCONNECT',
    InternalFailure: 'INTERNAL_FAILURE',
    NoActiveSession: 'NO_ACTIVE_SESSION',
    AlreadyActiveSession: 'ALREADY_ACTIVE_SESSION',
    InvalidToken: 'INVALID_TOKEN',
    InvalidUser: 'INVALID_USER',
    AuthorizationError: 'AUTHORIZATION_ERROR',
    InvalidSession: 'INVALID_SESSION',
    MaxOpenSessions: 'MAX_OPEN_SESSIONS',
    InvalidSocketTransport: 'INVALID_SOCKET_TRANSPORT',
    ClientDisconnect: 'CLIENT_DISCONNECT',
    PingTimeoutDisconnect: 'PING_TIMEOUT_DISCONNECT',
    TransportClosedDisconnect: 'TRANSPORT_CLOSED_DISCONNECT'
};

const isKotlinType = (type, value) => value instanceof type;
// converts a js enum value to a kotlin enum value
// e.g. jsEnumToVonageObject(vonage.PresentingOrderJS, 'asc') => vonage.PresentingOrderJS.Asc
const jsEnumToVonageObject = (kotlinType, value) => {
    if (value == null)
        return null;
    if (value == undefined)
        return undefined;
    if (isKotlinType(kotlinType, value))
        return value;
    const enumVal = kotlinType[value.toUpperCase()];
    if (!enumVal) {
        console.warn(`Invalid parameter ${value}`);
    }
    return enumVal;
};

/**
 * VonageClient is the main entry point for the Vonage Client SDK.
 *
 * @privateRemarks
 * This class is a wrapper around the KMP `CombinedClientJS` class.
 * It provides a more JS-like API, and also provides a proxy object
 * to allow for registering callbacks via `on()`.
 *
 * Minimal Interface built on top of KMP export
 * DO NOT ADD CODE HERE UNLESS REALLY NEEDEED!!111!
 */
class VonageClient extends clientsdkClientcore_jsExports.vonage.CombinedClientJS {
    /**
     * @internal
     */
    get core() {
        return super.core;
    }
    /**
     * @internal
     */
    get media() {
        return super.media;
    }
    /**
     * @internal
     */
    get emitter() {
        return super.emitter;
    }
    /**
     * @internal
     */
    set emitter(value) {
        super.emitter = value;
    }
    constructor(config = new ClientInitConfig()) {
        super(convertInitConfig(config), new HttpClient(), new SocketClient(), new MediaClient());
        /**
         * Proxy object to allow for registering callbacks via `on()`
         * @internal
         */
        this.callbacks = new Map();
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const _this = this;
        this.emitter = new Proxy(Object(), {
            get(_, prop) {
                // NOTE: with great power comes great responsiblity ...
                // We skip ts checks here, but enforce safety via on() generic type constraints.
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                // eslint-disable-next-line @typescript-eslint/no-empty-function
                const callbacks = _this.callbacks.get(prop) || [];
                return (...args) => {
                    // check if the event is a conversation event
                    callbacks.forEach((callback) => {
                        try {
                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                            // @ts-ignore
                            callback(...args);
                        }
                        catch (e) {
                            console.error(e);
                        }
                    });
                };
            }
        });
        this.setConfig(config);
    }
    /**
     * Set a configuration for the client SDK
     *
     * @example
     * [[include: snippet_SetClientConfig.txt]]
     *
     * @param config - A configuration object
     * @returns void
     */
    setConfig(config) {
        if (config instanceof ClientInitConfig || config instanceof ClientConfig) {
            super.setConfig(config);
            return;
        }
        const { region } = config, rest = __rest(config, ["region"]);
        const configRegion = region instanceof ConfigRegion
            ? region
            : region
                ? ConfigRegion[region]
                : clientsdkClientcore_jsExports.vonage.DEFAULT_REGION;
        super.setConfig(Object.assign({ region: configRegion }, rest));
    }
    /**
     * Register a callback for an event.
     *
     * @example
     * [[include: snippet_OnConversationEventListener.txt]]
     *
     * @param event - the event to register for (e.g. 'legStatusUpdate')
     * @param callback - the callback to register for the event
     * @returns a symbol that can be used to unregister the callback
     * @remarks
     * Be sure to store the symbol returned by this method so you can unregister the callback later.
     * We recommend unregistering callbacks when you no longer need them. See {@link off}.
     */
    on(event, callback) {
        const callbackSymbol = Symbol(event);
        const callbacks = this.callbacks.get(event) || new Map();
        callbacks.set(callbackSymbol, callback);
        this.callbacks.set(event, callbacks);
        return callbackSymbol;
    }
    /**
     * Unregister a callback for an event.
     *
     * @example
     * [[include: snippet_UnregisterListener.txt]]
     *
     * @param event - the event to register for (e.g. 'legStatusUpdate')
     * @param callbackSymbol - the callback symbol to unregister
     * @returns true if the callback was unregistered, false otherwise
     * @remarks
     * We recommend deregistering callbacks when you no longer need them.
     */
    off(event, callbackSymbol) {
        const callbacks = this.callbacks.get(event);
        if (!callbacks)
            return false;
        return callbacks.delete(callbackSymbol);
    }
    /**
     * Clear all callbacks for an event.
     *
     * @example
     * [[include: snippet_ClearCallbacks.txt]]
     *
     * @param event - the event to unregister from (e.g. 'legStatusUpdate')
     * @returns void
     *
     * @remarks
     * This is useful for cleaning up callbacks when you no longer need them.
     *
     */
    clearCallbacks(event) {
        const callbacks = this.callbacks.get(event);
        if (!callbacks)
            return;
        callbacks.clear();
    }
    /**
     * Create a session with a token and optional sessionId
     * If no sessionId is provided, a new one will be generated
     * and returned. If a sessionId is provided, it will be used
     * to resume an existing session.
     *
     * @example
     * [[include: snippet_SessionCreate.txt]]
     *
     * @param token
     * @param sessionId - optional sessionId to use
     * @returns the `sessionId` of the session
     */
    createSession(token, sessionId) {
        const _super = Object.create(null, {
            createSession: { get: () => super.createSession }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.createSession.call(this, token, sessionId || null);
        });
    }
    /**
     * Get the Peer Connection for a call
     *
     * @experimental
     * @group Voice
     * @param id - The Call Id
     */
    getPeerConnection(id) {
        return super.getPeerConnection(id);
    }
    /**
     * Get the HTML Audio Element for the SDK.
     * It can be used to route output to other devices.
     *
     * @experimental
     * @group Voice
     */
    getAudioOutputElement() {
        return super.getAudioOutputElement();
    }
    /**
     * Get the Leg for a call
     *
     * @group Voice
     * @param legId - The Leg Id
     */
    getLeg(legId) {
        const _super = Object.create(null, {
            getLeg: { get: () => super.getLeg }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.getLeg.call(this, legId);
        });
    }
    /**
     * Get a Call's Legs
     *
     * @example
     * [[include: snippet_GetCallLegs.txt]]
     *
     * @group Voice
     * @param id - the Call's id
     * @param parameters - A {@link GetCallLegsParameters} object containing the parameters for the request.
     * @returns a `LegsPage` containing the legs
     */
    getCallLegs(callId, parameters) {
        const _super = Object.create(null, {
            getCallLegs: { get: () => super.getCallLegs }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return (yield _super.getCallLegs.call(this, callId, Object.assign(Object.assign({}, parameters), { order: jsEnumToVonageObject(clientsdkClientcore_jsExports.vonage.PresentingOrderJS, parameters === null || parameters === void 0 ? void 0 : parameters.order) })));
        });
    }
    /**
     * Make a server call to the Vonage API.
     * This is used to initiate a call using the Voice API and NCCO.
     *
     * @example
     * [[include: snippet_OutboundCall.txt]]
     *
     * @group Voice
     * @param context - the context to send to the server passed as Custom data to the voice answer webhook
     * @returns the `callId` of the call
     */
    serverCall(context) {
        const _super = Object.create(null, {
            serverCall: { get: () => super.serverCall }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.serverCall.call(this, context || null);
        });
    }
    /**
     * Hangup a call.
     *
     * @example
     * [[include: snippet_CallHangup.txt]]
     *
     * @group Voice
     * @param callId - the `callId` of the call to hangup
     * @param reasonText - optional reason text to send to the other party
     * @param reasonCode - optional reason code to send to the other party
     * @returns void
     */
    hangup(callId, reasonText, reasonCode) {
        const _super = Object.create(null, {
            hangup: { get: () => super.hangup }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.hangup.call(this, callId, reasonText || null, reasonCode || null);
        });
    }
    say(callId, params) {
        const _super = Object.create(null, {
            say: { get: () => super.say }
        });
        return __awaiter(this, void 0, void 0, function* () {
            const defaultParams = {
                voiceName: null,
                loop: null,
                level: null,
                ssml: null,
                queue: null
            };
            return _super.say.call(this, callId, Object.assign(Object.assign({}, defaultParams), (typeof params === 'string' ? { text: params } : params)));
        });
    }
    // Chat API
    /**
     * Get a list of Conversations for the user.
     *
     * @example
     * [[include: snippet_GetConversations.txt]]
     *
     * @group Chat
     * @param parameters - A {@link GetConversationsParameters} object containing the parameters for the request.
     * @returns a `ConversationsPage` containing the conversations
     */
    getConversations(parameters) {
        const _super = Object.create(null, {
            getConversations: { get: () => super.getConversations }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return (yield _super.getConversations.call(this, Object.assign(Object.assign({}, parameters), { order: jsEnumToVonageObject(clientsdkClientcore_jsExports.vonage.PresentingOrderJS, parameters === null || parameters === void 0 ? void 0 : parameters.order), orderBy: jsEnumToVonageObject(clientsdkClientcore_jsExports.vonage.OrderByJS, parameters === null || parameters === void 0 ? void 0 : parameters.orderBy) })));
        });
    }
    /**
     * Get a Conversation's Events
     *
     * @example
     * [[include: snippet_GetConversationEvents.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param parameters - A {@link GetConversationEventsParameters} object containing the parameters for the request.
     * @returns a {@link EventsPage} containing the events
     */
    getConversationEvents(id, parameters) {
        const _super = Object.create(null, {
            getConversationEvents: { get: () => super.getConversationEvents }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return (yield _super.getConversationEvents.call(this, id, Object.assign(Object.assign({}, parameters), { order: jsEnumToVonageObject(clientsdkClientcore_jsExports.vonage.PresentingOrderJS, parameters === null || parameters === void 0 ? void 0 : parameters.order) })));
        });
    }
    /**
     * Get a Conversation's Members
     *
     * @example
     * [[include: snippet_GetConversationMembers.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param parameters - A {@link GetConversationMembersParameters} object containing the parameters for the request.
     * @returns a `MembersPage` containing the members
     */
    getConversationMembers(id, parameters) {
        const _super = Object.create(null, {
            getConversationMembers: { get: () => super.getConversationMembers }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return (yield _super.getConversationMembers.call(this, id, Object.assign(Object.assign({}, parameters), { order: jsEnumToVonageObject(clientsdkClientcore_jsExports.vonage.PresentingOrderJS, parameters === null || parameters === void 0 ? void 0 : parameters.order) })));
        });
    }
    /**
     * Create a conversation
     *
     * @example
     * [[include: snippet_CreateConversation.txt]]
     *
     * @group Chat
     * @param parameters - A {@link CreateConversationParameters} object containing the parameters for the creation request.
     * @returns the `cid` of the conversation
     */
    createConversation(parameters) {
        const _super = Object.create(null, {
            createConversation: { get: () => super.createConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            const _a = parameters !== null && parameters !== void 0 ? parameters : {}, { customData = undefined } = _a, rest = __rest(_a, ["customData"]);
            return _super.createConversation.call(this, Object.assign(Object.assign({}, rest), { customData: customData
                    ? typeof customData === 'string'
                        ? customData
                        : JSON.stringify(customData)
                    : undefined }));
        });
    }
    /**
     * Get a Conversation
     *
     * @example
     * [[include: snippet_GetConversation.txt]]
     *
     * @param conversationIdOrName - the Conversation's id or conversation name
     * @returns the `Conversation`
     */
    getConversation(conversationIdOrName) {
        const _super = Object.create(null, {
            getConversation: { get: () => super.getConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return (yield _super.getConversation.call(this, conversationIdOrName));
        });
    }
    /**
     * Updates a conversation object identified by its unique conversation ID.
     *
     * This method overrides the conversation properties to the provided parameters and rest remains as it is.
     *
     * @example
     * [[include: snippet_UpdateConversation.txt]]
     *
     * @param conversationId - the Conversation's id.
     * @param parameters - The properties of the conversation. These will replace existing values to the provided ones, rest will remain as they are.
     * @returns `conversation`, this object will contain the updated conversation properties if the update is successful.
     */
    updateConversation(conversationId, parameters) {
        const _super = Object.create(null, {
            updateConversation: { get: () => super.updateConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            const mappedParams = Object.entries(parameters).reduce((acc, [key, value]) => {
                if (key == 'customData' && value instanceof Option) {
                    acc[key] = value.mapNotNull((v) => typeof v == 'string' ? v : JSON.stringify(v));
                }
                else if (key == 'customData' && typeof value != 'string' && value) {
                    acc[key] = mapOption(JSON.stringify(value));
                }
                else if (value instanceof Option) {
                    acc[key] = value;
                }
                else {
                    acc[key] = mapOption(value);
                }
                return acc;
            }, {
                name: new Option.None(),
                displayName: new Option.None(),
                imageUrl: new Option.None(),
                ttl: new Option.None(),
                customSortKey: new Option.None(),
                customData: new Option.None()
            });
            return (yield _super.updateConversation.call(this, conversationId, mappedParams));
        });
    }
    /**
     * Leave a Conversation
     *
     * @example
     * [[include: snippet_LeaveConversation.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @returns void
     */
    leaveConversation(id) {
        const _super = Object.create(null, {
            leaveConversation: { get: () => super.leaveConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.leaveConversation.call(this, id);
        });
    }
    /**
     * Join a Conversation
     *
     * @example
     * [[include: snippet_JoinConversation.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @returns the `memberId` of the member
     */
    joinConversation(id) {
        const _super = Object.create(null, {
            joinConversation: { get: () => super.joinConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.joinConversation.call(this, id);
        });
    }
    /**
     * Delete a Conversation
     *
     * @example
     * [[include: snippet_DeleteConversation.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @returns void
     */
    deleteConversation(id) {
        const _super = Object.create(null, {
            deleteConversation: { get: () => super.deleteConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.deleteConversation.call(this, id);
        });
    }
    /**
     * Invite a user to a Conversation by user's `name`
     *
     * @example
     * [[include: snippet_InviteToConversation.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param name - the name of the user to invite
     * @returns the `memberId` of the member
     */
    inviteToConversation(id, name) {
        const _super = Object.create(null, {
            inviteToConversation: { get: () => super.inviteToConversation }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.inviteToConversation.call(this, id, name);
        });
    }
    /**
     * Send a text message to a Conversation
     *
     * @example
     * [[include: snippet_SendTextMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param text - the Body of the message
     * @returns the `timestamp` of the message
     */
    sendMessageTextEvent(id, text) {
        const _super = Object.create(null, {
            sendMessageTextEvent: { get: () => super.sendMessageTextEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageTextEvent.call(this, id, text);
        });
    }
    /**
     * Send a custom message to a Conversation
     *
     * @example
     * [[include: snippet_SendCustomMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param customData - the body of the message
     * @returns the `timestamp` of the message
     */
    sendMessageCustomEvent(id, customData) {
        const _super = Object.create(null, {
            sendMessageCustomEvent: { get: () => super.sendMessageCustomEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            if (typeof customData === 'string') {
                return yield _super.sendMessageCustomEvent.call(this, id, customData);
            }
            return yield _super.sendMessageCustomEvent.call(this, id, JSON.stringify(customData));
        });
    }
    /**
     * Send a Image message to a Conversation.
     *
     * @example
     * [[include: snippet_SendImageMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param imageUrl - the url of the image resource.
     * @returns the `timestamp` of the message
     */
    sendMessageImageEvent(id, imageUrl) {
        const _super = Object.create(null, {
            sendMessageImageEvent: { get: () => super.sendMessageImageEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageImageEvent.call(this, id, imageUrl);
        });
    }
    /**
     * Send a Vidoe message to a Conversation.
     *
     * @example
     * [[include: snippet_SendVideoMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param videoUrl - the url of the video resource.
     * @returns the `timestamp` of the message
     */
    sendMessageVideoEvent(id, videoUrl) {
        const _super = Object.create(null, {
            sendMessageVideoEvent: { get: () => super.sendMessageVideoEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageVideoEvent.call(this, id, videoUrl);
        });
    }
    /**
     * Send a file message to a Conversation.
     *
     * @example
     * [[include: snippet_SendFileMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param fileUrl - the url of the file resource.
     * @returns the `timestamp` of the message
     */
    sendMessageFileEvent(id, fileUrl) {
        const _super = Object.create(null, {
            sendMessageFileEvent: { get: () => super.sendMessageFileEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageFileEvent.call(this, id, fileUrl);
        });
    }
    /**
     * Send a audio message to a Conversation.
     *
     * @example
     * [[include: snippet_SendAudioMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param audioUrl - the url of the audio resource.
     * @returns the `timestamp` of the message
     */
    sendMessageAudioEvent(id, audioUrl) {
        const _super = Object.create(null, {
            sendMessageAudioEvent: { get: () => super.sendMessageAudioEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageAudioEvent.call(this, id, audioUrl);
        });
    }
    /**
     * Send a vcard message to a Conversation.
     *
     * @example
     * [[include: snippet_SendVcardMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param vCardUrl - the url of the vCardUrl resource.
     * @returns the `timestamp` of the message
     */
    sendMessageVCardEvent(id, vCardUrl) {
        const _super = Object.create(null, {
            sendMessageVCardEvent: { get: () => super.sendMessageVCardEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageVCardEvent.call(this, id, vCardUrl);
        });
    }
    /**
     * Send a Location message to a Conversation.
     *
     * @example
     * [[include: snippet_SendLocationMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param location - the description of the location.
     * @returns the `timestamp` of the message
     */
    sendMessageLocationEvent(id, location) {
        const _super = Object.create(null, {
            sendMessageLocationEvent: { get: () => super.sendMessageLocationEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageLocationEvent.call(this, id, location);
        });
    }
    /**
     * Send a template message to a Conversation.
     *
     * @example
     * [[include: snippet_SendTemplateMessage.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param whatsappObject - the description(locale and policies of business account) of the location.
     * @param templateObject - the description(name and paramters) of the template.
     * @returns the `timestamp` of the message
     */
    sendMessageTemplateEvent(id, templateObject, whatsappObject) {
        const _super = Object.create(null, {
            sendMessageTemplateEvent: { get: () => super.sendMessageTemplateEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageTemplateEvent.call(this, id, templateObject, whatsappObject);
        });
    }
    /**
     * Send an ephemeral event to a Conversation
     *
     * @example
     * [[include: snippet_SendEphemeralEvent.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param customData - the body of the event
     * @returns the `timestamp` of the message
     */
    sendEphemeralEvent(id, customData) {
        const _super = Object.create(null, {
            sendEphemeralEvent: { get: () => super.sendEphemeralEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            if (typeof customData === 'string') {
                return yield _super.sendEphemeralEvent.call(this, id, customData);
            }
            return yield _super.sendEphemeralEvent.call(this, id, JSON.stringify(customData));
        });
    }
    /**
     * Send a Custom event to a Conversation
     *
     * @example
     * [[include: snippet_SendCustomEvent.txt]]
     *
     * @group Chat
     * @param id - the Conversation's id
     * @param evenType - the type of the custom event. Type must start with `custom:<...>`
     * @param customData - the body of the event
     * @returns the `timestamp` of the message
     */
    sendCustomEvent(id, eventType, customData) {
        const _super = Object.create(null, {
            sendCustomEvent: { get: () => super.sendCustomEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            if (typeof customData === 'string') {
                return yield _super.sendCustomEvent.call(this, id, eventType, customData);
            }
            return yield _super.sendCustomEvent.call(this, id, eventType, JSON.stringify(customData));
        });
    }
    /**
     * Delete an Event in a Conversation
     *
     * @example
     * [[include:snippet_DeleteEvent.txt]]
     *
     * @group Chat
     * @param id - the id for the Event to be deleted
     * @param conversationId - the id for the conversation, the event belongs to.
     * @returns void
     */
    deleteEvent(id, conversationId) {
        const _super = Object.create(null, {
            deleteEvent: { get: () => super.deleteEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.deleteEvent.call(this, id, conversationId);
        });
    }
    /**
     * Send a message seen event to a Conversation
     *
     * @example
     * [[include: snippet_SendMessageSeenEvent.txt]]
     *
     * @group Chat
     * @param id - the event id
     * @param conversationId - the conversation id
     * @returns the `timestamp` of the message
     */
    sendMessageSeenEvent(id, conversationId) {
        const _super = Object.create(null, {
            sendMessageSeenEvent: { get: () => super.sendMessageSeenEvent }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return yield _super.sendMessageSeenEvent.call(this, id, conversationId);
        });
    }
}

export { CSErrorCodes, CallDisconnectReason, CancelReason, ClientConfig, ClientInitConfig, ConfigRegion, HangupReason, LegStatus, LoggingLevel, MemberChannelType, Option, OrderBy, PresentingOrder, SessionErrorCodes, SessionErrorReason, Topics, VoiceChannelType, VonageClient, VonageError, VonageErrorType, convertInitConfig, createVonageLogger, VonageClient as default, mapOption, none, some };
